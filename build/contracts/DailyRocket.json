{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        },
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "contract IMoonSquares",
          "name": "_moonsqr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_placer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "Predicted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AcceptedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "activeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "addAssetAndAgg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyAssetWinners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetNoOfWinners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPredictors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dayAssetUserPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "prediction",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isWinner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dayCount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_aggindex",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "checked",
          "type": "address"
        }
      ],
      "name": "isAwinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moonSquare",
      "outputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "predictClosePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presentCharities",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "name",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "link",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "10": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "14": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "15": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "16": "contracts/DailyRocket.sol",
    "19": "interfaces/IERC20.sol",
    "21": "interfaces/ILendingPool.sol",
    "22": "interfaces/ILendingPoolAddressesProvider.sol",
    "23": "interfaces/IMoonSquares.sol",
    "25": "interfaces/ISwapRouter.sol",
    "27": "interfaces/TransferHelper.sol"
  },
  "ast": {
    "absolutePath": "contracts/DailyRocket.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        2823
      ],
      "Context": [
        5868
      ],
      "DailyRocket": [
        971
      ],
      "DataTypes": [
        2883
      ],
      "IERC20": [
        5960
      ],
      "ILendingPool": [
        3261
      ],
      "ILendingPoolAddressesProvider": [
        3412
      ],
      "IMoonSquares": [
        3420
      ],
      "ISwapRouter": [
        3520
      ],
      "IUniswapV3SwapCallback": [
        5882
      ],
      "KeeperCompatibleInterface": [
        2842
      ],
      "Ownable": [
        2777
      ],
      "TransferHelper": [
        3691
      ]
    },
    "id": 972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:16"
      },
      {
        "absolutePath": "interfaces/DataTypes.sol",
        "file": "../interfaces/DataTypes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 2884,
        "src": "56:37:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 3413,
        "src": "94:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 3262,
        "src": "152:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/TransferHelper.sol",
        "file": "../interfaces/TransferHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 3692,
        "src": "193:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISwapRouter.sol",
        "file": "../interfaces/ISwapRouter.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 3521,
        "src": "236:39:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoonSquares.sol",
        "file": "../interfaces/IMoonSquares.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 3421,
        "src": "276:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 2843,
        "src": "318:80:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 2824,
        "src": "399:76:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 972,
        "sourceUnit": 2778,
        "src": "535:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2777,
              "src": "615:7:16"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "615:7:16"
          },
          {
            "baseName": {
              "id": 13,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2842,
              "src": "624:25:16"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "624:25:16"
          }
        ],
        "canonicalName": "DailyRocket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 971,
        "linearizedBaseContracts": [
          971,
          2842,
          2777,
          5868
        ],
        "name": "DailyRocket",
        "nameLocation": "600:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "944:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "914:137:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3412",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3412,
                "src": "914:29:16"
              },
              "referencedDeclaration": 3412,
              "src": "914:29:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3412",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:42:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "994:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 18,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:16",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 21,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "994:51:16",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 17,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3412,
                "src": "955:29:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$3412_$",
                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                }
              },
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "955:96:16",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3412",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "1072:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1059:66:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$3261",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "ILendingPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3261,
                "src": "1059:12:16"
              },
              "referencedDeclaration": 3261,
              "src": "1059:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$3261",
                "typeString": "contract ILendingPool"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [],
                  "expression": {
                    "argumentTypes": [],
                    "expression": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1099:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3412",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "getLendingPool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3346,
                    "src": "1099:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                      "typeString": "function () view external returns (address)"
                    }
                  },
                  "id": 29,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1099:25:16",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 26,
                "name": "ILendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3261,
                "src": "1086:12:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$3261_$",
                  "typeString": "type(contract ILendingPool)"
                }
              },
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1086:39:16",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$3261",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd2faa68",
            "id": 34,
            "mutability": "mutable",
            "name": "moonSquare",
            "nameLocation": "1156:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1136:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMoonSquares_$3420",
              "typeString": "contract IMoonSquares"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "IMoonSquares",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3420,
                "src": "1136:12:16"
              },
              "referencedDeclaration": 3420,
              "src": "1136:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                "typeString": "contract IMoonSquares"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 37,
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "1201:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1172:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$3520",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3520,
                "src": "1172:11:16"
              },
              "referencedDeclaration": 3520,
              "src": "1172:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 40,
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "1240:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1217:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 38,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1217:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1250:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "266e2a56",
            "id": 42,
            "mutability": "mutable",
            "name": "dayCount",
            "nameLocation": "1276:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1261:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 41,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1261:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "predictableAssets",
            "nameLocation": "1325:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1316:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1316:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1316:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "assetPriceAggregators",
            "nameLocation": "1394:21:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1384:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1384:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1384:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ec6f4f41",
            "id": 52,
            "mutability": "mutable",
            "name": "activeAsset",
            "nameLocation": "1453:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1422:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1430:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1422:23:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 50,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1440:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "dayAssetClosePrice",
            "nameLocation": "1517:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1471:64:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256))"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1479:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1471:45:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256))"
              },
              "valueType": {
                "id": 56,
                "keyType": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1490:25:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                  "typeString": "mapping(string => int256)"
                },
                "valueType": {
                  "id": 55,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1508:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "dayCloseTime",
            "nameLocation": "1597:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1569:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1577:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1569:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1588:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "Dai",
            "nameLocation": "1653:3:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1645:56:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 63,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1659:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0c3d5157",
            "id": 67,
            "mutability": "mutable",
            "name": "contractStartTime",
            "nameLocation": "1723:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1708:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80f79702",
            "id": 73,
            "mutability": "mutable",
            "name": "dayAssetTotalAmount",
            "nameLocation": "1846:19:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1792:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1800:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1792:46:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 71,
                "keyType": {
                  "id": 69,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1819:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1811:26:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 70,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1829:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63168475",
            "id": 79,
            "mutability": "mutable",
            "name": "dayAssetNoOfWinners",
            "nameLocation": "1926:19:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1872:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1880:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1872:46:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 77,
                "keyType": {
                  "id": 75,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1891:26:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1909:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afa3a617",
            "id": 86,
            "mutability": "mutable",
            "name": "dayAssetPrediction",
            "nameLocation": "2011:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "1956:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256[]))"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1964:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1956:47:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256[]))"
              },
              "valueType": {
                "id": 84,
                "keyType": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1983:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1975:27:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                  "typeString": "mapping(string => int256[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 82,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ArrayTypeName",
                  "src": "1993:8:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                    "typeString": "int256[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f90f0b7",
            "id": 93,
            "mutability": "mutable",
            "name": "dayAssetPredictors",
            "nameLocation": "2092:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "2036:74:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 92,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2044:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2036:48:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 91,
                "keyType": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2063:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2055:28:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ArrayTypeName",
                  "src": "2073:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 99,
            "name": "Predicted",
            "nameLocation": "2123:9:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_placer",
                  "nameLocation": "2149:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2133:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "2165:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2158:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2132:45:16"
            },
            "src": "2117:61:16"
          },
          {
            "canonicalName": "DailyRocket.Charity",
            "id": 104,
            "members": [
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "2220:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2213:11:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 100,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2213:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "2242:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2234:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 102,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2234:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Charity",
            "nameLocation": "2195:7:16",
            "nodeType": "StructDefinition",
            "scope": 971,
            "src": "2188:111:16",
            "visibility": "public"
          },
          {
            "canonicalName": "DailyRocket.Prediction",
            "id": 111,
            "members": [
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "prediction",
                "nameLocation": "2339:10:16",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "2332:17:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 105,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2332:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 108,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "2367:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "2359:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 107,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2359:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 110,
                "mutability": "mutable",
                "name": "isWinner",
                "nameLocation": "2386:8:16",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "2381:13:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 109,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2381:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prediction",
            "nameLocation": "2311:10:16",
            "nodeType": "StructDefinition",
            "scope": 971,
            "src": "2304:97:16",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "126df02b",
            "id": 116,
            "mutability": "mutable",
            "name": "presentCharities",
            "nameLocation": "2447:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "2411:52:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
              "typeString": "mapping(address => struct DailyRocket.Charity)"
            },
            "typeName": {
              "id": 115,
              "keyType": {
                "id": 112,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2420:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2411:28:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
                "typeString": "mapping(address => struct DailyRocket.Charity)"
              },
              "valueType": {
                "id": 114,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 113,
                  "name": "Charity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "2431:7:16"
                },
                "referencedDeclaration": 104,
                "src": "2431:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Charity_$104_storage_ptr",
                  "typeString": "struct DailyRocket.Charity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a128671",
            "id": 119,
            "mutability": "mutable",
            "name": "AcceptedTokens",
            "nameLocation": "2487:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "2470:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2470:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 118,
              "nodeType": "ArrayTypeName",
              "src": "2470:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ce529a",
            "id": 126,
            "mutability": "mutable",
            "name": "dailyAssetWinners",
            "nameLocation": "2564:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "2508:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint128 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 125,
              "keyType": {
                "id": 120,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2516:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2508:48:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint128 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 124,
                "keyType": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2535:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2527:28:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 123,
                  "nodeType": "ArrayTypeName",
                  "src": "2545:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2aba3f0",
            "id": 135,
            "mutability": "mutable",
            "name": "dayAssetUserPrediction",
            "nameLocation": "2697:22:16",
            "nodeType": "VariableDeclaration",
            "scope": 971,
            "src": "2620:99:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
              "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
            },
            "typeName": {
              "id": 134,
              "keyType": {
                "id": 127,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2628:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2620:69:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
                "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
              },
              "valueType": {
                "id": 133,
                "keyType": {
                  "id": 128,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2647:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2639:49:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$",
                  "typeString": "mapping(string => mapping(address => struct DailyRocket.Prediction))"
                },
                "valueType": {
                  "id": 132,
                  "keyType": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2665:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2657:30:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$",
                    "typeString": "mapping(address => struct DailyRocket.Prediction)"
                  },
                  "valueType": {
                    "id": 131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130,
                      "name": "Prediction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 111,
                      "src": "2676:10:16"
                    },
                    "referencedDeclaration": 111,
                    "src": "2676:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$111_storage_ptr",
                      "typeString": "struct DailyRocket.Prediction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2883:302:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 149,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2913:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 146,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2893:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2893:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2893:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2893:25:16"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2928:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2941:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "2928:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2928:24:16"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "moonSquare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2962:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "_moonsqr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2975:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "src": "2962:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:21:16"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "contractStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2993:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3013:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3013:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2993:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:35:16"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3038:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3049:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3038:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:12:16"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 169,
                        "name": "dayCloseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3060:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 171,
                      "indexExpression": {
                        "id": 170,
                        "name": "dayCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3073:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 172,
                        "name": "contractStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3085:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3105:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "3085:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3060:58:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:58:16"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_dai",
                  "nameLocation": "2755:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2747:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "2781:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2769:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138,
                      "name": "ISwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3520,
                      "src": "2769:11:16"
                    },
                    "referencedDeclaration": 3520,
                    "src": "2769:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_moonsqr",
                  "nameLocation": "2860:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2847:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                    "typeString": "contract IMoonSquares"
                  },
                  "typeName": {
                    "id": 142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 141,
                      "name": "IMoonSquares",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3420,
                      "src": "2847:12:16"
                    },
                    "referencedDeclaration": 3420,
                    "src": "2847:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:141:16"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2883:0:16"
            },
            "scope": 971,
            "src": "2726:459:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "3280:163:16",
              "statements": [
                {
                  "body": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "3348:89:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 192,
                                "name": "dayAssetClosePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "3362:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                  "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "id": 193,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3381:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3362:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                "typeString": "mapping(string memory => int256)"
                              }
                            },
                            "id": 198,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 194,
                                "name": "predictableAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "3391:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 196,
                              "indexExpression": {
                                "id": 195,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "3409:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3391:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3362:50:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 200,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "3424:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 199,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "3415:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3415:11:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3362:64:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "3362:64:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 185,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3310:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 186,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3314:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3314:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3310:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 205,
                  "initializationExpression": {
                    "assignments": [
                      182
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3303:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "3295:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3295:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 184,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3307:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3295:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3344:3:16",
                      "subExpression": {
                        "id": 189,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3344:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 191,
                    "nodeType": "ExpressionStatement",
                    "src": "3344:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3290:147:16"
                }
              ]
            },
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewClosingPrice",
            "nameLocation": "3250:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3268:2:16"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3280:0:16"
            },
            "scope": 971,
            "src": "3241:202:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3509:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "3539:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 214,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "3519:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3519:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:29:16"
                }
              ]
            },
            "functionSelector": "4a7dc8e0",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 211,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2720,
                  "src": "3499:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3499:9:16"
              }
            ],
            "name": "addPaymentToken",
            "nameLocation": "3458:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3482:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "3474:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:18:16"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3509:0:16"
            },
            "scope": 971,
            "src": "3449:106:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3649:132:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 233,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3682:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 230,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3659:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3659:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "_aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3726:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 236,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3699:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3699:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:39:16"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 242,
                        "name": "activeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3748:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "id": 243,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3760:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3748:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3770:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3748:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:26:16"
                }
              ]
            },
            "functionSelector": "81688c64",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 227,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2720,
                  "src": "3639:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3639:9:16"
              }
            ],
            "name": "addAssetAndAgg",
            "nameLocation": "3574:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3603:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3589:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "3619:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3611:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3588:43:16"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3649:0:16"
            },
            "scope": 971,
            "src": "3565:216:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "3930:2624:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 262,
                            "name": "activeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3951:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 264,
                          "indexExpression": {
                            "id": 263,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3963:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3951:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3974:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3951:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3943:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3943:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3943:36:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 269,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3993:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4004:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3993:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 286,
                  "nodeType": "IfStatement",
                  "src": "3989:135:16",
                  "trueBody": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "4007:117:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 273,
                                  "name": "getTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "4029:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4029:9:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 275,
                                    "name": "dayCloseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "4042:12:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 279,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 276,
                                      "name": "dayCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "4055:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 277,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4065:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4055:11:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4042:25:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3634383030",
                                  "id": 280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4070:13:16",
                                  "subdenomination": "seconds",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64800_by_1",
                                    "typeString": "int_const 64800"
                                  },
                                  "value": "64800"
                                },
                                "src": "4042:41:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4029:54:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 272,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4021:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4021:63:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "4021:63:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 288,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4141:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "4133:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4133:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "hexValue": "3130303030303030303030303030303030303030",
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4150:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4133:37:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 291,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "4223:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 292,
                      "name": "Dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4232:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4223:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "5847:183:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 402,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5892:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5892:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 406,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5912:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$971",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$971",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 405,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5904:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 404,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5904:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5904:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 399,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "5877:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 398,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5960,
                                      "src": "5870:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5960_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5870:11:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5960",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5919,
                                  "src": "5870:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5870:48:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 411,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 288,
                                    "src": "5927:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5922:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 409,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5922:4:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5922:12:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5870:64:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 397,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5862:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5862:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 415,
                        "nodeType": "ExpressionStatement",
                        "src": "5862:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 420,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5970:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5970:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 424,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5990:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5982:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 422,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5982:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5982:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 428,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "6002:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5997:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 426,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5997:4:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5997:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 417,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "5952:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 416,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5960,
                                "src": "5945:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5960_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5945:11:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5960",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5941,
                            "src": "5945:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5945:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "5945:65:16"
                      }
                    ]
                  },
                  "id": 433,
                  "nodeType": "IfStatement",
                  "src": "4219:1811:16",
                  "trueBody": {
                    "id": 396,
                    "nodeType": "Block",
                    "src": "4237:1604:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 299,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4281:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4281:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 303,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4301:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$971",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$971",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 302,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4293:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 301,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4293:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4293:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 296,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "4266:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 295,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5960,
                                      "src": "4259:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5960_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4259:11:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5960",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5919,
                                  "src": "4259:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4259:48:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 308,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 288,
                                    "src": "4316:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4311:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 306,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4311:4:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4311:12:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4259:64:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 294,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4251:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4251:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 312,
                        "nodeType": "ExpressionStatement",
                        "src": "4251:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 316,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "4453:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 317,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4460:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4460:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 321,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4480:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4472:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 319,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4472:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4472:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 323,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "4487:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 313,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3691,
                              "src": "4421:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3691_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3572,
                            "src": "4421:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4421:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "4421:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 329,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "4618:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 332,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "4633:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4625:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 330,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4625:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4625:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 334,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "4646:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 326,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3691,
                              "src": "4591:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3691_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3664,
                            "src": "4591:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4591:62:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 336,
                        "nodeType": "ExpressionStatement",
                        "src": "4591:62:16"
                      },
                      {
                        "assignments": [
                          338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 338,
                            "mutability": "mutable",
                            "name": "amountInMaximum",
                            "nameLocation": "4672:15:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 396,
                            "src": "4667:20:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 337,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4667:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 340,
                        "initialValue": {
                          "hexValue": "3135303030303030303030303030303030303030",
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4690:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15000000000000000000_by_1",
                            "typeString": "int_const 15000000000000000000"
                          },
                          "value": "15000000000000000000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4667:43:16"
                      },
                      {
                        "assignments": [
                          345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 345,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "4767:6:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 396,
                            "src": "4724:49:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3490_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                            },
                            "typeName": {
                              "id": 344,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 343,
                                "name": "ISwapRouter.ExactOutputSingleParams",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3490,
                                "src": "4724:35:16"
                              },
                              "referencedDeclaration": 3490,
                              "src": "4724:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3490_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 361,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 348,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "4859:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 349,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4896:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 350,
                              "name": "poolFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4926:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 353,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4974:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$971",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4966:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4966:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4966:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 355,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5011:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5011:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 357,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "5059:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 358,
                              "name": "amountInMaximum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 338,
                              "src": "5104:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5160:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 346,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3520,
                              "src": "4792:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$3520_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ExactOutputSingleParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3490,
                            "src": "4792:35:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$3490_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountOut",
                            "amountInMaximum",
                            "sqrtPriceLimitX96"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4792:388:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3490_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4724:456:16"
                      },
                      {
                        "assignments": [
                          363
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 363,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "5306:8:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 396,
                            "src": "5301:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 362,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5301:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 368,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 366,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "5346:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3490_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3490_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            ],
                            "expression": {
                              "id": 364,
                              "name": "swapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "5317:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                                "typeString": "contract ISwapRouter"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exactOutputSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3499,
                            "src": "5317:28:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$3490_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5317:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5301:52:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 369,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "5625:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 370,
                            "name": "amountInMaximum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "5636:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5625:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 395,
                        "nodeType": "IfStatement",
                        "src": "5621:210:16",
                        "trueBody": {
                          "id": 394,
                          "nodeType": "Block",
                          "src": "5653:178:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 375,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5698:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 378,
                                        "name": "swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "5711:10:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$3520",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      ],
                                      "id": 377,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5703:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 376,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5703:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5703:19:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5724:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 372,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3691,
                                    "src": "5671:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3691_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeApprove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3664,
                                  "src": "5671:26:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5671:55:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 382,
                              "nodeType": "ExpressionStatement",
                              "src": "5671:55:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 386,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5772:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 387,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5777:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5777:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 389,
                                      "name": "amountInMaximum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 338,
                                      "src": "5789:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 390,
                                      "name": "amountIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "5807:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5789:26:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 383,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3691,
                                    "src": "5744:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3691_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3618,
                                  "src": "5744:27:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5744:72:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 393,
                              "nodeType": "ExpressionStatement",
                              "src": "5744:72:16"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 434,
                          "name": "dayAssetTotalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6039:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                          }
                        },
                        "id": 437,
                        "indexExpression": {
                          "id": 435,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6059:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6039:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "id": 436,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "6069:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6039:37:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 439,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "6080:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6039:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "6039:47:16"
                },
                {
                  "expression": {
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 442,
                            "name": "dayAssetUserPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "6137:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
                              "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                            }
                          },
                          "id": 447,
                          "indexExpression": {
                            "id": 443,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6160:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6137:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$",
                            "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "id": 444,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "6170:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6137:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$",
                          "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "expression": {
                          "id": 445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6178:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6178:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6137:52:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$111_storage",
                        "typeString": "struct DailyRocket.Prediction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 451,
                          "name": "_prediction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "6216:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 452,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "6241:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6241:9:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6264:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 450,
                        "name": "Prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "6192:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prediction_$111_storage_ptr_$",
                          "typeString": "type(struct DailyRocket.Prediction storage pointer)"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6192:87:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$111_memory_ptr",
                        "typeString": "struct DailyRocket.Prediction memory"
                      }
                    },
                    "src": "6137:142:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$111_storage",
                      "typeString": "struct DailyRocket.Prediction storage ref"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:142:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "6373:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 458,
                            "name": "dayAssetPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "6331:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 459,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6350:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6331:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                            "typeString": "mapping(string memory => int256[] storage ref)"
                          }
                        },
                        "id": 462,
                        "indexExpression": {
                          "id": 460,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "6360:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6331:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                          "typeString": "int256[] storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6331:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_int256_$dyn_storage_ptr_$_t_int256_$returns$__$bound_to$_t_array$_t_int256_$dyn_storage_ptr_$",
                        "typeString": "function (int256[] storage pointer,int256)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6331:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:54:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6486:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6486:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 467,
                            "name": "dayAssetPredictors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "6444:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                            }
                          },
                          "id": 470,
                          "indexExpression": {
                            "id": 468,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6463:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6444:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 471,
                        "indexExpression": {
                          "id": 469,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "6473:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6444:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6444:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:53:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 478,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6523:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6523:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 480,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "6535:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 477,
                      "name": "Predicted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "6513:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6513:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "EmitStatement",
                  "src": "6508:39:16"
                }
              ]
            },
            "functionSelector": "be331a64",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 258,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "3919:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 257,
                  "name": "allowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 686,
                  "src": "3906:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3906:19:16"
              }
            ],
            "name": "predictClosePrice",
            "nameLocation": "3796:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3837:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "3823:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "3858:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "3854:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3887:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "3879:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3879:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3813:85:16"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3930:0:16"
            },
            "scope": 971,
            "src": "3787:2767:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "6598:815:16",
              "statements": [
                {
                  "assignments": [
                    488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "6616:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "6608:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6608:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 490,
                  "initialValue": {
                    "id": 489,
                    "name": "dayCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "6622:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6608:22:16"
                },
                {
                  "body": {
                    "id": 604,
                    "nodeType": "Block",
                    "src": "6693:714:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 503,
                                      "name": "dayAssetPrediction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86,
                                      "src": "6732:18:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                      }
                                    },
                                    "id": 505,
                                    "indexExpression": {
                                      "id": 504,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 488,
                                      "src": "6751:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6732:23:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                      "typeString": "mapping(string memory => int256[] storage ref)"
                                    }
                                  },
                                  "id": 509,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 506,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6756:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 508,
                                    "indexExpression": {
                                      "id": 507,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 492,
                                      "src": "6774:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6756:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6732:45:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                    "typeString": "int256[] storage ref"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6732:52:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 511,
                                      "name": "dayAssetPredictors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 93,
                                      "src": "6820:18:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                      }
                                    },
                                    "id": 513,
                                    "indexExpression": {
                                      "id": 512,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 488,
                                      "src": "6839:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6820:23:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(string memory => address[] storage ref)"
                                    }
                                  },
                                  "id": 517,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 514,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6844:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 516,
                                    "indexExpression": {
                                      "id": 515,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 492,
                                      "src": "6862:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6844:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6820:45:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6820:52:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6732:140:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 502,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6707:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6707:179:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "6707:179:16"
                      },
                      {
                        "body": {
                          "id": 602,
                          "nodeType": "Block",
                          "src": "6981:416:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 540,
                                            "name": "dayAssetPrediction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "7007:18:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                            }
                                          },
                                          "id": 542,
                                          "indexExpression": {
                                            "id": 541,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 488,
                                            "src": "7026:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7007:23:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                            "typeString": "mapping(string memory => int256[] storage ref)"
                                          }
                                        },
                                        "id": 546,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 543,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45,
                                            "src": "7031:17:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 545,
                                          "indexExpression": {
                                            "id": 544,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 492,
                                            "src": "7049:1:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7031:20:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7007:45:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                          "typeString": "int256[] storage ref"
                                        }
                                      },
                                      "id": 548,
                                      "indexExpression": {
                                        "id": 547,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 523,
                                        "src": "7053:1:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7007:48:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 549,
                                          "name": "dayAssetClosePrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58,
                                          "src": "7059:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                          }
                                        },
                                        "id": 551,
                                        "indexExpression": {
                                          "id": 550,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 488,
                                          "src": "7078:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7059:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                          "typeString": "mapping(string memory => int256)"
                                        }
                                      },
                                      "id": 555,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 552,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7083:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 554,
                                        "indexExpression": {
                                          "id": 553,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 492,
                                          "src": "7101:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7083:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7059:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "7007:97:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 539,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6999:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6999:106:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 558,
                              "nodeType": "ExpressionStatement",
                              "src": "6999:106:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 567,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7173:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 569,
                                        "indexExpression": {
                                          "id": 568,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 488,
                                          "src": "7192:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7173:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 573,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 570,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7197:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 572,
                                        "indexExpression": {
                                          "id": 571,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 492,
                                          "src": "7215:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7197:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7173:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 575,
                                    "indexExpression": {
                                      "id": 574,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "7219:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7173:48:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 559,
                                        "name": "dailyAssetWinners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 126,
                                        "src": "7123:17:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => address[] storage ref))"
                                        }
                                      },
                                      "id": 564,
                                      "indexExpression": {
                                        "id": 560,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 488,
                                        "src": "7141:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7123:22:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(string memory => address[] storage ref)"
                                      }
                                    },
                                    "id": 565,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 561,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "7146:17:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 563,
                                      "indexExpression": {
                                        "id": 562,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 492,
                                        "src": "7164:1:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7146:20:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7123:44:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7123:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7123:99:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 577,
                              "nodeType": "ExpressionStatement",
                              "src": "7123:99:16"
                            },
                            {
                              "expression": {
                                "id": 586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 578,
                                      "name": "dayAssetNoOfWinners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "7240:19:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                      }
                                    },
                                    "id": 583,
                                    "indexExpression": {
                                      "id": 579,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 488,
                                      "src": "7260:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7240:24:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 584,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 580,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "7265:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 582,
                                    "indexExpression": {
                                      "id": 581,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 492,
                                      "src": "7283:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7265:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7240:46:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 585,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7289:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7240:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 587,
                              "nodeType": "ExpressionStatement",
                              "src": "7240:50:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 591,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7333:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 593,
                                        "indexExpression": {
                                          "id": 592,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 488,
                                          "src": "7352:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7333:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 597,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 594,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7357:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 596,
                                        "indexExpression": {
                                          "id": 595,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 492,
                                          "src": "7375:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7357:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7333:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 599,
                                    "indexExpression": {
                                      "id": 598,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 523,
                                      "src": "7379:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7333:48:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 588,
                                    "name": "moonSquare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "7309:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                                      "typeString": "contract IMoonSquares"
                                    }
                                  },
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addToWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3419,
                                  "src": "7309:23:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7309:73:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 601,
                              "nodeType": "ExpressionStatement",
                              "src": "7309:73:16"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 526,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 523,
                            "src": "6918:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 527,
                                  "name": "dayAssetPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "6922:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                  }
                                },
                                "id": 529,
                                "indexExpression": {
                                  "id": 528,
                                  "name": "day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "6941:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6922:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                  "typeString": "mapping(string memory => int256[] storage ref)"
                                }
                              },
                              "id": 533,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 530,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "6946:17:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 532,
                                "indexExpression": {
                                  "id": 531,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "6964:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6946:20:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6922:45:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                "typeString": "int256[] storage ref"
                              }
                            },
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6922:52:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6918:56:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 603,
                        "initializationExpression": {
                          "assignments": [
                            523
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 523,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "6911:1:16",
                              "nodeType": "VariableDeclaration",
                              "scope": 603,
                              "src": "6905:7:16",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 522,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6905:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 525,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6915:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6905:11:16"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6976:3:16",
                            "subExpression": {
                              "id": 536,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "6976:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 538,
                          "nodeType": "ExpressionStatement",
                          "src": "6976:3:16"
                        },
                        "nodeType": "ForStatement",
                        "src": "6900:497:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 495,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "6658:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 496,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6662:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6662:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6658:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 605,
                  "initializationExpression": {
                    "assignments": [
                      492
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6651:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "6645:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6645:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 494,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6655:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6645:11:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6688:3:16",
                      "subExpression": {
                        "id": 499,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "6688:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 501,
                    "nodeType": "ExpressionStatement",
                    "src": "6688:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "6640:767:16"
                }
              ]
            },
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberOfWinners",
            "nameLocation": "6569:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6587:2:16"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6598:0:16"
            },
            "scope": 971,
            "src": "6560:853:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "7464:203:16",
              "statements": [
                {
                  "assignments": [
                    614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 614,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7496:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "7474:31:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 612,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2823,
                          "src": "7474:21:16"
                        },
                        "referencedDeclaration": 2823,
                        "src": "7474:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7530:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 615,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "7508:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2823_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7474:99:16"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    620,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7592:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "7587:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7587:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 624,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 621,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "7603:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2822,
                      "src": "7603:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7583:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "7653:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7648:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7648:4:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 611,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "7641:19:16"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "7429:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7436:2:16"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7459:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7459:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7458:6:16"
            },
            "scope": 971,
            "src": "7420:247:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "7734:191:16",
              "statements": [
                {
                  "assignments": [
                    640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 640,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7766:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7744:31:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 639,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 638,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2823,
                          "src": "7744:21:16"
                        },
                        "referencedDeclaration": 2823,
                        "src": "7744:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 642,
                          "name": "assetPriceAggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "7800:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 644,
                        "indexExpression": {
                          "id": 643,
                          "name": "_aggindex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "7822:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7800:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 641,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "7778:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2823_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7778:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7744:89:16"
                },
                {
                  "assignments": [
                    null,
                    648,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7849:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7845:10:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7845:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 652,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 649,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "7862:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2823",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2822,
                      "src": "7862:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7862:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7843:46:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 655,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "7911:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7907:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 653,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7907:3:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7907:11:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 637,
                  "id": 657,
                  "nodeType": "Return",
                  "src": "7900:18:16"
                }
              ]
            },
            "functionSelector": "e7572230",
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "7682:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "_aggindex",
                  "nameLocation": "7699:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7691:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7691:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7690:19:16"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7730:3:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "7730:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7729:5:16"
            },
            "scope": 971,
            "src": "7673:252:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "7969:138:16",
              "statements": [
                {
                  "body": {
                    "id": 682,
                    "nodeType": "Block",
                    "src": "8029:61:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 675,
                                  "name": "AcceptedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "8051:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 677,
                                "indexExpression": {
                                  "id": 676,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 664,
                                  "src": "8066:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8051:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 678,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 661,
                                "src": "8072:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8051:27:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 674,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8043:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8043:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "8043:36:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 667,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "7994:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 668,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "7998:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7998:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7994:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 683,
                  "initializationExpression": {
                    "assignments": [
                      664
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7988:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "7983:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7983:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 666,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7991:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7983:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8024:3:16",
                      "subExpression": {
                        "id": 671,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "8024:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 673,
                    "nodeType": "ExpressionStatement",
                    "src": "8024:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "7979:111:16"
                },
                {
                  "id": 684,
                  "nodeType": "PlaceholderStatement",
                  "src": "8099:1:16"
                }
              ]
            },
            "id": 686,
            "name": "allowedToken",
            "nameLocation": "7940:12:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7961:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "7953:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7953:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7952:16:16"
            },
            "src": "7931:176:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "8179:460:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 694,
                                  "name": "dayAssetUserPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "8259:22:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
                                    "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                  }
                                },
                                "id": 696,
                                "indexExpression": {
                                  "id": 695,
                                  "name": "_day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 688,
                                  "src": "8282:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8259:28:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                }
                              },
                              "id": 698,
                              "indexExpression": {
                                "id": 697,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "8288:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8259:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$",
                                "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                              }
                            },
                            "id": 701,
                            "indexExpression": {
                              "expression": {
                                "id": 699,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8296:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8296:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8259:48:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prediction_$111_storage",
                              "typeString": "struct DailyRocket.Prediction storage ref"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prediction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "8259:59:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 703,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8322:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 705,
                            "indexExpression": {
                              "id": 704,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "8341:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8322:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 707,
                          "indexExpression": {
                            "id": 706,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "8347:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8322:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8259:95:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8251:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8251:104:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "8251:104:16"
                },
                {
                  "assignments": [
                    712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 712,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "8373:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 752,
                      "src": "8365:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8365:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 713,
                        "name": "dayAssetNoOfWinners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "8383:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                        }
                      },
                      "id": 715,
                      "indexExpression": {
                        "id": 714,
                        "name": "_day",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "8403:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8383:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 717,
                    "indexExpression": {
                      "id": 716,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "8409:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8383:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8365:51:16"
                },
                {
                  "expression": {
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 719,
                              "name": "dayAssetUserPrediction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "8426:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
                                "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                              }
                            },
                            "id": 724,
                            "indexExpression": {
                              "id": 720,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "8449:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8426:28:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$",
                              "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                            }
                          },
                          "id": 725,
                          "indexExpression": {
                            "id": 721,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "8455:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8426:36:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$",
                            "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                          }
                        },
                        "id": 726,
                        "indexExpression": {
                          "expression": {
                            "id": 722,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8463:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8463:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8426:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prediction_$111_storage",
                          "typeString": "struct DailyRocket.Prediction storage ref"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 110,
                      "src": "8426:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8486:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8426:64:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "8426:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 735,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8534:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8534:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 737,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "8561:19:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 739,
                                        "indexExpression": {
                                          "id": 738,
                                          "name": "_day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 688,
                                          "src": "8581:4:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8561:25:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 741,
                                      "indexExpression": {
                                        "id": 740,
                                        "name": "_asset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 690,
                                        "src": "8587:6:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8561:33:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 742,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8560:35:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3930",
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8598:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_90_by_1",
                                    "typeString": "int_const 90"
                                  },
                                  "value": "90"
                                },
                                "src": "8560:40:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8601:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8560:44:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 747,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8559:46:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 748,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "8606:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8559:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 732,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "8507:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 731,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5960,
                          "src": "8500:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5960_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8500:11:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5960",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5909,
                      "src": "8500:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8500:123:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "8500:123:16"
                }
              ]
            },
            "functionSelector": "1cc87d88",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWinnings",
            "nameLocation": "8122:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "8144:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "8136:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8164:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "8150:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:36:16"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8179:0:16"
            },
            "scope": 971,
            "src": "8113:526:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "8772:195:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 765,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8790:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 767,
                            "indexExpression": {
                              "id": 766,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "8809:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8790:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 769,
                          "indexExpression": {
                            "id": 768,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "8815:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8790:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8826:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8790:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8782:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8782:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "8782:46:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 775,
                                  "name": "dayAssetUserPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "8846:22:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$_$",
                                    "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                  }
                                },
                                "id": 777,
                                "indexExpression": {
                                  "id": 776,
                                  "name": "_day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 755,
                                  "src": "8869:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8846:28:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                }
                              },
                              "id": 779,
                              "indexExpression": {
                                "id": 778,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 757,
                                "src": "8875:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8846:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$111_storage_$",
                                "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                              }
                            },
                            "id": 781,
                            "indexExpression": {
                              "id": 780,
                              "name": "checked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "8883:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8846:45:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prediction_$111_storage",
                              "typeString": "struct DailyRocket.Prediction storage ref"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prediction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "8846:56:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 783,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8906:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 785,
                            "indexExpression": {
                              "id": 784,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "8925:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8906:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 787,
                          "indexExpression": {
                            "id": 786,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "8931:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8906:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8846:92:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8838:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8838:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "8838:101:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8956:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 763,
                  "id": 792,
                  "nodeType": "Return",
                  "src": "8949:11:16"
                }
              ]
            },
            "functionSelector": "85afa270",
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAwinner",
            "nameLocation": "8654:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "8681:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8673:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8673:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8709:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8695:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "checked",
                  "nameLocation": "8733:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8725:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8725:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8663:83:16"
            },
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8767:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8767:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8766:6:16"
            },
            "scope": 971,
            "src": "8645:322:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2835
            ],
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "9101:381:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 804,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "9115:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 806,
                        "indexExpression": {
                          "id": 805,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "9128:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9115:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9140:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "9115:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 809,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "9157:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9157:9:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9115:51:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "nodeType": "IfStatement",
                  "src": "9111:157:16",
                  "trueBody": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "9167:101:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 812,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "9181:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9196:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9181:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 815,
                        "nodeType": "ExpressionStatement",
                        "src": "9181:19:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9222:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 821,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9253:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9245:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 819,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9245:7:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9245:10:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 817,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9228:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9228:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9228:28:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 824,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9221:36:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 803,
                        "id": 825,
                        "nodeType": "Return",
                        "src": "9214:43:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 828,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "9281:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9281:9:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 830,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "9293:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 834,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 831,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "9306:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9316:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9306:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9293:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3634383030",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9321:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64800_by_1",
                          "typeString": "int_const 64800"
                        },
                        "value": "64800"
                      },
                      "src": "9293:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9281:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 853,
                  "nodeType": "IfStatement",
                  "src": "9277:157:16",
                  "trueBody": {
                    "id": 852,
                    "nodeType": "Block",
                    "src": "9336:98:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 838,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "9350:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9365:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9350:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 841,
                        "nodeType": "ExpressionStatement",
                        "src": "9350:19:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9391:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 847,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9419:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9414:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 845,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9414:4:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9414:7:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 843,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9397:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9397:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9397:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 850,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9390:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 803,
                        "id": 851,
                        "nodeType": "Return",
                        "src": "9383:40:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 854,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "9443:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 855,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "9457:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "9443:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:23:16"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "8986:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 798,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9038:8:16"
            },
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "9013:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "8998:24:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8997:26:16"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "9061:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "9056:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9056:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "9088:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "9075:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9075:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9055:45:16"
            },
            "scope": 971,
            "src": "8977:505:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2841
            ],
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "9561:278:16",
              "statements": [
                {
                  "assignments": [
                    866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 866,
                      "mutability": "mutable",
                      "name": "decodedValue",
                      "nameLocation": "9580:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 897,
                      "src": "9572:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 865,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9572:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "9606:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9620:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9620:7:16",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 872,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9619:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 867,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9595:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "9595:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9572:57:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 875,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "9643:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9659:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9643:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 888,
                  "nodeType": "IfStatement",
                  "src": "9639:126:16",
                  "trueBody": {
                    "id": 887,
                    "nodeType": "Block",
                    "src": "9662:103:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 878,
                            "name": "setNewClosingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "9676:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9676:20:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "9676:20:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 881,
                            "name": "setNumberOfWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "9710:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9710:20:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 883,
                        "nodeType": "ExpressionStatement",
                        "src": "9710:20:16"
                      },
                      {
                        "expression": {
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9744:10:16",
                          "subExpression": {
                            "id": 884,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "9744:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "9744:10:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 889,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "9778:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9794:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9778:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 896,
                  "nodeType": "IfStatement",
                  "src": "9774:59:16",
                  "trueBody": {
                    "id": 895,
                    "nodeType": "Block",
                    "src": "9797:36:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 892,
                            "name": "sendToIba",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 970,
                            "src": "9811:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9811:11:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 894,
                        "nodeType": "ExpressionStatement",
                        "src": "9811:11:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "9501:13:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 863,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9552:8:16"
            },
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "9530:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "9515:26:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9515:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9514:28:16"
            },
            "returnParameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9561:0:16"
            },
            "scope": 971,
            "src": "9492:347:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 969,
              "nodeType": "Block",
              "src": "9935:511:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 902,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "9953:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9953:9:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 904,
                              "name": "dayCloseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "9965:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 905,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "9978:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9988:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9978:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9965:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3634383030",
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9993:13:16",
                            "subdenomination": "seconds",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64800_by_1",
                              "typeString": "int_const 64800"
                            },
                            "value": "64800"
                          },
                          "src": "9965:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9953:53:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9945:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9945:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:62:16"
                },
                {
                  "body": {
                    "id": 967,
                    "nodeType": "Block",
                    "src": "10072:368:16",
                    "statements": [
                      {
                        "assignments": [
                          926
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 926,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "10091:6:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 967,
                            "src": "10086:11:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 925,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10086:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 940,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 927,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "10102:19:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 929,
                                        "indexExpression": {
                                          "id": 928,
                                          "name": "dayCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 42,
                                          "src": "10122:8:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10102:29:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 933,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 930,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "10132:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 932,
                                        "indexExpression": {
                                          "id": 931,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 915,
                                          "src": "10150:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10132:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10102:51:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 934,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10101:53:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10157:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "10101:58:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10160:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "10101:62:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 939,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10100:64:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10086:78:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 947,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "10254:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$3261",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$3261",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10246:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 945,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10246:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10246:20:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 949,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10268:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 942,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "10233:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 941,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5960,
                                "src": "10226:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5960_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10226:11:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5960",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5929,
                            "src": "10226:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10226:49:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 951,
                        "nodeType": "ExpressionStatement",
                        "src": "10226:49:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 955,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "10326:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 958,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 926,
                                  "src": "10352:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10347:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 956,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10347:4:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10347:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 962,
                                  "name": "moonSquare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "10385:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                                    "typeString": "contract IMoonSquares"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$3420",
                                    "typeString": "contract IMoonSquares"
                                  }
                                ],
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10377:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 960,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10377:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10377:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10414:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 952,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "10289:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$3261",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3036,
                            "src": "10289:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10289:140:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 966,
                        "nodeType": "ExpressionStatement",
                        "src": "10289:140:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 918,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "10037:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 919,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "10041:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10041:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10037:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 968,
                  "initializationExpression": {
                    "assignments": [
                      915
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10030:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 968,
                        "src": "10022:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "10022:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 917,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10034:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10022:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10067:3:16",
                      "subExpression": {
                        "id": 922,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "10067:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 924,
                    "nodeType": "ExpressionStatement",
                    "src": "10067:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "10017:423:16"
                }
              ]
            },
            "id": 970,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToIba",
            "nameLocation": "9915:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9924:2:16"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9935:0:16"
            },
            "scope": 971,
            "src": "9906:540:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 972,
        "src": "591:9864:16",
        "usedErrors": []
      }
    ],
    "src": "31:10424:16"
  },
  "bytecode": "",
  "bytecodeSha1": "8fbd8480f6ca3394429b358f0b229bd5d6f42c1c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "DailyRocket",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "73": [
            1934,
            1956,
            true
          ]
        }
      },
      "10": {},
      "14": {},
      "15": {},
      "16": {
        "DailyRocket.checkUpkeep": {
          "59": [
            9115,
            9166,
            false
          ],
          "60": [
            9281,
            9334,
            false
          ]
        },
        "DailyRocket.claimWinnings": {
          "56": [
            8259,
            8354,
            true
          ]
        },
        "DailyRocket.isAwinner": {
          "61": [
            8790,
            8827,
            true
          ],
          "62": [
            8846,
            8938,
            true
          ]
        },
        "DailyRocket.performUpkeep": {
          "57": [
            9643,
            9660,
            false
          ],
          "58": [
            9778,
            9795,
            false
          ]
        },
        "DailyRocket.predictClosePrice": {
          "63": [
            3951,
            3978,
            true
          ],
          "64": [
            3993,
            4005,
            false
          ],
          "65": [
            4029,
            4083,
            true
          ],
          "66": [
            4223,
            4235,
            false
          ],
          "67": [
            4259,
            4323,
            true
          ],
          "68": [
            5625,
            5651,
            false
          ],
          "69": [
            5870,
            5934,
            true
          ]
        },
        "DailyRocket.sendToIba": {
          "72": [
            9953,
            10006,
            true
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "70": [
            6732,
            6872,
            true
          ],
          "71": [
            7007,
            7104,
            true
          ]
        }
      },
      "19": {},
      "21": {},
      "22": {},
      "23": {},
      "25": {},
      "27": {
        "TransferHelper.safeApprove": {
          "77": [
            2078,
            2085,
            false
          ],
          "78": [
            2090,
            2106,
            true
          ],
          "79": [
            2110,
            2134,
            true
          ]
        },
        "TransferHelper.safeTransfer": {
          "80": [
            1418,
            1425,
            false
          ],
          "81": [
            1430,
            1446,
            true
          ],
          "82": [
            1450,
            1474,
            true
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "74": [
            816,
            823,
            false
          ],
          "75": [
            828,
            844,
            true
          ],
          "76": [
            848,
            872,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "51": [
            2131,
            2148
          ],
          "52": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "15": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "36": [
            1926,
            1999
          ],
          "37": [
            2009,
            2028
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "8": [
            659,
            676
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "DailyRocket.addAssetAndAgg": {
          "16": [
            3659,
            3689
          ],
          "17": [
            3699,
            3738
          ],
          "18": [
            3748,
            3774
          ]
        },
        "DailyRocket.addPaymentToken": {
          "9": [
            3519,
            3548
          ]
        },
        "DailyRocket.checkUpkeep": {
          "10": [
            9214,
            9257
          ],
          "11": [
            9181,
            9200
          ],
          "12": [
            9350,
            9369
          ],
          "13": [
            9383,
            9423
          ],
          "14": [
            9443,
            9466
          ]
        },
        "DailyRocket.claimWinnings": {
          "1": [
            8251,
            8355
          ],
          "2": [
            8426,
            8490
          ],
          "3": [
            8500,
            8623
          ]
        },
        "DailyRocket.isAwinner": {
          "19": [
            8782,
            8828
          ],
          "20": [
            8838,
            8939
          ],
          "21": [
            8949,
            8960
          ]
        },
        "DailyRocket.performUpkeep": {
          "4": [
            9676,
            9696
          ],
          "5": [
            9710,
            9730
          ],
          "6": [
            9744,
            9754
          ],
          "7": [
            9811,
            9822
          ]
        },
        "DailyRocket.predictClosePrice": {
          "22": [
            3943,
            3979
          ],
          "23": [
            4021,
            4084
          ],
          "24": [
            4251,
            4324
          ],
          "25": [
            4421,
            4494
          ],
          "26": [
            4591,
            4653
          ],
          "27": [
            5671,
            5726
          ],
          "28": [
            5744,
            5816
          ],
          "29": [
            5862,
            5935
          ],
          "30": [
            5945,
            6010
          ],
          "31": [
            6039,
            6086
          ],
          "32": [
            6137,
            6279
          ],
          "33": [
            6331,
            6385
          ],
          "34": [
            6444,
            6497
          ],
          "35": [
            6508,
            6547
          ]
        },
        "DailyRocket.sendToIba": {
          "47": [
            9945,
            10007
          ],
          "48": [
            10226,
            10275
          ],
          "49": [
            10289,
            10429
          ],
          "50": [
            10067,
            10070
          ]
        },
        "DailyRocket.setNewClosingPrice": {
          "38": [
            3362,
            3426
          ],
          "39": [
            3344,
            3347
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "40": [
            6707,
            6886
          ],
          "41": [
            6999,
            7105
          ],
          "42": [
            7123,
            7222
          ],
          "43": [
            7240,
            7290
          ],
          "44": [
            7309,
            7382
          ],
          "45": [
            6976,
            6979
          ],
          "46": [
            6688,
            6691
          ]
        }
      },
      "19": {},
      "21": {},
      "22": {},
      "23": {},
      "25": {},
      "27": {
        "TransferHelper.safeApprove": {
          "54": [
            2070,
            2142
          ]
        },
        "TransferHelper.safeTransfer": {
          "55": [
            1410,
            1482
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "53": [
            808,
            881
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IMoonSquares",
    "ISwapRouter",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "TransferHelper"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "591:9864:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:37;;1250:4;1217:37;;;;;188:8:40;176:21;;;158:40;;146:2;131:18;1217:37:16;;;;;;;;1708:32;;;;;;;;;355:25:40;;;343:2;328:18;1708:32:16;209:177:40;2411:52:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;950:41:40;;;932:60;;1023:2;1008:18;;1001:34;;;;905:18;2411:52:16;760:281:40;8113:526:16;;;;;;:::i;:::-;;:::i;:::-;;1261:23;;;;;-1:-1:-1;;;;;1261:23:16;;;;;;-1:-1:-1;;;;;2660:47:40;;;2642:66;;2630:2;2615:18;1261:23:16;2496:218:40;9492:347:16;;;;;;:::i;:::-;;:::i;2508:73::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3948:32:40;;;3930:51;;3918:2;3903:18;2508:73:16;3784:203:40;2470:31:16;;;;;;:::i;:::-;;:::i;3449:106::-;;;;;;:::i;:::-;;:::i;7420:247::-;;;:::i;2036:74::-;;;;;;:::i;:::-;;:::i;1872:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8977:505;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;1792:73:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3565:216;;;;;;:::i;:::-;;:::i;8645:322::-;;;;;;:::i;:::-;;:::i;:::-;;;6806:14:40;;6799:22;6781:41;;6769:2;6754:18;8645:322:16;6641:187:40;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1956:73:16;;;;;;:::i;:::-;;:::i;3787:2767::-;;;;;;:::i;:::-;;:::i;2620:99::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7675:25:40;;;7731:2;7716:18;;7709:34;;;;7786:14;7779:22;7759:18;;;7752:50;7663:2;7648:18;2620:99:16;7481:327:40;1172:39:16;;;;;7673:252;;;;;;:::i;:::-;;:::i;1422:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:189:0;;;;;;:::i;:::-;;:::i;1136:30:16:-;;;;;-1:-1:-1;;;;;1136:30:16;;;8113:526;-1:-1:-1;;;;;8322:24:16;;;;;;:18;:24;;;;;;;:32;;;;8347:6;;8322:32;:::i;:::-;;;;;;;;;;;;;;8259:22;:28;8282:4;-1:-1:-1;;;;;8259:28:16;-1:-1:-1;;;;;8259:28:16;;;;;;;;;;;;8288:6;8259:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8296:10;8259:48;;;;;;;;:59;:95;8251:104;;;;;;-1:-1:-1;;;;;8383:25:16;;8365:15;8383:25;;;:19;:25;;;;;;:33;;;;8409:6;;8383:33;:::i;:::-;;;;;;;;;;;;;;8365:51;;8486:4;8426:22;:28;8449:4;-1:-1:-1;;;;;8426:28:16;-1:-1:-1;;;;;8426:28:16;;;;;;;;;;;;8455:6;8426:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8463:10;8426:48;;;;;;;;;;:57;;:64;;-1:-1:-1;;8426:64:16;;;;;;;;;;;8507:3;;-1:-1:-1;;;;;8561:25:16;;;;:19;:25;;;;;;;-1:-1:-1;;;;;8507:3:16;;;;8500:20;;8463:10;;8606:7;;8601:3;;8561:33;;8587:6;;8561:33;:::i;:::-;;;;;;;;;;;;;;8598:2;8560:40;;;;:::i;:::-;:44;;;;:::i;:::-;8559:54;;;;:::i;:::-;8500:123;;-1:-1:-1;;;;;;8500:123:16;;;;;;;-1:-1:-1;;;;;9597:32:40;;;8500:123:16;;;9579:51:40;9646:18;;;9639:34;9552:18;;8500:123:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8179:460;8113:526;;:::o;9492:347::-;9572:20;9595:34;;;;9606:11;9595:34;:::i;:::-;9572:57;-1:-1:-1;9643:17:16;9639:126;;9676:20;:18;:20::i;:::-;9710;:18;:20::i;:::-;9744:8;:10;;-1:-1:-1;;;;;9744:10:16;;:8;:10;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9744:10:16;;;;;-1:-1:-1;;;;;9744:10:16;;;;;;;9639:126;9778:12;9794:1;9778:17;9774:59;;;9811:11;:9;:11::i;:::-;9561:278;9492:347;;:::o;2508:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2508:73:16;;-1:-1:-1;2508:73:16;;-1:-1:-1;;2508:73:16:o;2470:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2470:31:16;;-1:-1:-1;2470:31:16;:::o;3449:106::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;3519:14:16::1;:29:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3519:29:16;;;;;::::1;::::0;;-1:-1:-1;;;;;;3519:29:16::1;-1:-1:-1::0;;;;;3519:29:16;;;::::1;::::0;;;::::1;::::0;;3449:106::o;7420:247::-;7459:4;7474:31;7530:42;7474:99;;7587:11;7603:9;-1:-1:-1;;;;;7603:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7583:47:16;7420:247;-1:-1:-1;;;;;;7420:247:16:o;2036:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8977:505;9056:17;9075:24;9157:9;:7;:9::i;:::-;9128:8;;-1:-1:-1;;;;;9128:8:16;9115:22;;;;:12;:22;;;;;;:38;;9140:13;9115:38;:::i;:::-;:51;9111:157;;;9228:28;;;9253:1;9228:28;;;11482:19:40;9196:4:16;;-1:-1:-1;9196:4:16;;11517:12:40;9228:28:16;;;;;;;;;;;;;9214:43;;;;;;9111:157;9306:8;;9293:12;;:25;;9306:11;;9316:1;;-1:-1:-1;;;;;9306:8:16;:11;:::i;:::-;-1:-1:-1;;;;;9293:25:16;;;;;;;;;;;;;9321:13;9293:41;;;;:::i;:::-;9281:9;:7;:9::i;:::-;:53;9277:157;;;9365:4;9350:19;;9391:4;9419:1;9397:25;;;;;;11482:19:40;;11526:2;11517:12;;11353:182;9277:157:16;9457:9;;9443:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9443:23:16;;-1:-1:-1;;;;8977:505:16;;;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3565:216:16:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3659:17:16::1;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3659:30:16;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3699:21:16::1;:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3699:39:16;;;;;::::1;::::0;;-1:-1:-1;;;;;;3699:39:16::1;-1:-1:-1::0;;;;;3699:39:16;::::1;;::::0;;3748:19:::1;::::0;:11:::1;::::0;:19:::1;::::0;3760:6;;3748:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;3748:26:16;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3565:216:16:o;8645:322::-;-1:-1:-1;;;;;8790:24:16;;8767:4;8790:24;;;:18;:24;;;;;;:32;;;;8815:6;;8790:32;:::i;:::-;;;;;;;;;;;;;;8826:1;8790:37;;8782:46;;;;;;-1:-1:-1;;;;;8906:24:16;;;;;;:18;:24;;;;;;;:32;;;;8931:6;;8906:32;:::i;:::-;;;;;;;;;;;;;;8846:22;:28;8869:4;-1:-1:-1;;;;;8846:28:16;-1:-1:-1;;;;;8846:28:16;;;;;;;;;;;;8875:6;8846:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8846:45:16;;;;;;;;;;:56;:92;8838:101;;;;;;-1:-1:-1;8956:4:16;8645:322;;;;;:::o;1956:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3787:2767::-;3919:5;7983:6;7979:111;7998:17;:24;7994:28;;7979:111;;;8072:6;-1:-1:-1;;;;;8051:27:16;:14;8066:1;8051:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8051:17:16;:27;8043:36;;;;;;8024:3;;;;:::i;:::-;;;;7979:111;;;;3951:11:::1;3963:6;3951:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:27;;:19:::0;:27:::1;3943:36;;;::::0;::::1;;3993:8;::::0;4004:1:::1;-1:-1:-1::0;;;;;3993:8:16;;::::1;:12;3989:135;;;4055:8;::::0;4042:12:::1;::::0;:25:::1;::::0;4055:11:::1;::::0;4065:1:::1;::::0;-1:-1:-1;;;;;4055:8:16::1;:11;:::i;:::-;-1:-1:-1::0;;;;;4042:25:16::1;;;;;;;;;;;;;4070:13;4042:41;;;;:::i;:::-;4029:9;:7;:9::i;:::-;:54;;4021:63;;;::::0;::::1;;4232:3;::::0;4150:20:::1;::::0;-1:-1:-1;;;;;4223:12:16;;::::1;4232:3:::0;::::1;4223:12;4219:1811;;4266:3;::::0;4259:48:::1;::::0;-1:-1:-1;;;4259:48:16;;4281:10:::1;4259:48;::::0;::::1;12275:34:40::0;4301:4:16::1;12325:18:40::0;;;12318:43;4316:6:16;;-1:-1:-1;;;;;4266:3:16::1;::::0;4259:21:::1;::::0;12210:18:40;;4259:48:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;4251:73;;;::::0;::::1;;4421;4453:5;4460:10;4480:4;4487:6;4421:31;:73::i;:::-;4591:62;4618:5;4633:10;4646:6;4591:26;:62::i;:::-;4792:388;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4792:388:16;;::::1;::::0;;4896:3:::1;::::0;;::::1;4792:388;::::0;::::1;::::0;;;1250:4:::1;4792:388:::0;;;;;;4974:4:::1;4792:388:::0;;;;;;5011:15:::1;4792:388:::0;;;;;;;;;;;;4690:20:::1;4792:388:::0;;;;;;-1:-1:-1;4792:388:16;;;;;;5317:36;;-1:-1:-1;;;5317:36:16;;12850:13:40;;12846:22;;5317:36:16::1;::::0;::::1;12828:41:40::0;12911:24;;12907:33;;12885:20;;;12878:63;12983:24;;13009:8;12979:39;12957:20;;;12950:69;13061:24;;13057:33;;13035:20;;;13028:63;13129:24;;13107:20;;;13100:54;13192:24;13170:20;;;13163:54;13255:24;;13233:20;;;13226:54;13322:24;;13318:33;;13296:20;;;13289:63;-1:-1:-1;5317:10:16::1;:28;::::0;::::1;::::0;12762:19:40;;5317:36:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5301:52;;5636:15;5625:8;:26;5621:210;;;5698:3;::::0;5671:55:::1;::::0;-1:-1:-1;;;;;5698:3:16::1;5711:10;5698:3;5671:26;:55::i;:::-;5772:3;::::0;5744:72:::1;::::0;-1:-1:-1;;;;;5772:3:16::1;5777:10;5789:26;5807:8:::0;5789:15;:26:::1;:::i;:::-;5744:27;:72::i;:::-;4237:1604;;;4219:1811;;;5877:3;::::0;5870:48:::1;::::0;-1:-1:-1;;;5870:48:16;;5892:10:::1;5870:48;::::0;::::1;12275:34:40::0;5912:4:16::1;12325:18:40::0;;;12318:43;5927:6:16;;-1:-1:-1;;;;;5877:3:16::1;::::0;5870:21:::1;::::0;12210:18:40;;5870:48:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;5862:73;;;::::0;::::1;;5952:3;::::0;5945:65:::1;::::0;-1:-1:-1;;;5945:65:16;;5970:10:::1;5945:65;::::0;::::1;13733:34:40::0;5990:4:16::1;13783:18:40::0;;;13776:43;13835:18;;;13828:34;;;-1:-1:-1;;;;;5952:3:16;;::::1;::::0;5945:24:::1;::::0;13668:18:40;;5945:65:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4219:1811;6059:8;::::0;-1:-1:-1;;;;;6059:8:16::1;6039:29;::::0;;;:19:::1;:29;::::0;;;;;;:37;;6080:6;;6039:29;:37:::1;::::0;6069:6;;6039:37:::1;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;6192:87;;;;;;;;6216:11;6192:87;;;;6241:9;:7;:9::i;:::-;6192:87:::0;;6264:5:::1;6192:87;::::0;;::::1;::::0;;;6160:8:::1;::::0;-1:-1:-1;;;;;6160:8:16::1;6137:32:::0;;:22:::1;:32:::0;;;;;;;;:40;;::::1;::::0;6170:6;;6137:40:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;6178:10:::1;6137:52;::::0;;;;;;;;;:142;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6137:142:16::1;::::0;::::1;;::::0;;;::::1;::::0;;;6350:8:::1;::::0;-1:-1:-1;;;;;6350:8:16::1;6331:28:::0;;:18:::1;:28:::0;;;;;;;:36:::1;::::0;6360:6;;6331:36:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:54;;::::1;::::0;::::1;::::0;;-1:-1:-1;6331:54:16;;;;;;::::1;::::0;;;6463:8:::1;::::0;-1:-1:-1;;;;;6463:8:16::1;6444:28:::0;;:18:::1;:28:::0;;;;;:36:::1;::::0;6473:6;;6444:36:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:53;;::::1;::::0;::::1;::::0;;-1:-1:-1;6444:53:16;;;;;;;::::1;::::0;;6486:10:::1;-1:-1:-1::0;;;;;;6444:53:16;;::::1;::::0;::::1;::::0;;;355:25:40;;;6486:10:16;6513:34:::1;::::0;328:18:40;6513:34:16::1;;;;;;;3930:2624;3787:2767:::0;;;;:::o;7673:252::-;7730:3;7744:31;7800:21;7822:9;7800:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7800:32:16;7744:89;;7845:10;7862:9;-1:-1:-1;;;;;7862:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7843:46:16;;7673:252;-1:-1:-1;;;;;;;7673:252:16:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;14075:2:40;1926:73:0::1;::::0;::::1;14057:21:40::0;14114:2;14094:18;;;14087:30;14153:34;14133:18;;;14126:62;-1:-1:-1;;;14204:18:40;;;14197:36;14250:19;;1926:73:0::1;13873:402:40::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3241:202:16:-;3295:9;3290:147;3314:21;:28;3310:32;;3290:147;;;3415:11;3424:1;3415:8;:11::i;:::-;3381:8;;-1:-1:-1;;;;;3381:8:16;3362:28;;;;:18;:28;;;;;3391:17;:20;;3409:1;;3391:20;;;;;;:::i;:::-;;;;;;;;3362:50;;;;;;:::i;:::-;;;;;;;;;;;;;;:64;3344:3;;;;:::i;:::-;;;;3290:147;;6560:853;6622:8;;-1:-1:-1;;;;;6622:8:16;6608:11;6640:767;6662:17;:24;6658:28;;;;6640:767;;;-1:-1:-1;;;;;6820:23:16;;;;;;:18;:23;;;;;6844:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6820:45;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;6732:18;:23;6751:3;-1:-1:-1;;;;;6732:23:16;;;;;;;;;;;;6756:17;6774:1;6756:20;;;;;;;;;;:::i;:::-;;;;;;;;6732:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;:140;6707:179;;;;;;6905:7;6900:497;-1:-1:-1;;;;;6922:23:16;;;;;;:18;:23;;;;;6946:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6922:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;6918:56;;;;6900:497;;;-1:-1:-1;;;;;7059:23:16;;;;;;:18;:23;;;;;7083:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7059:45;;;;;;:::i;:::-;;;;;;;;;;;;;;7007:18;:23;7026:3;-1:-1:-1;;;;;7007:23:16;;;;;;;;;;;;7031:17;7049:1;7031:20;;;;;;;;;;:::i;:::-;;;;;;;;7007:45;;;;;;:::i;:::-;;;;;;;;;;;;;7053:1;7007:48;;;;;;;;;;:::i;:::-;;;;;;;;;:97;6999:106;;;;;;-1:-1:-1;;;;;7123:22:16;;;;;;:17;:22;;;;;7146:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7123:44;;;;;;:::i;:::-;;;;;;;;;;;;;7173:18;:23;7192:3;-1:-1:-1;;;;;7173:23:16;;;;;;;;;;;;7197:17;7215:1;7197:20;;;;;;;;;;:::i;:::-;;;;;;;;7173:45;;;;;;:::i;:::-;;;;;;;;;;;;;7219:1;7173:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7123:99;;7173:48;7123:99;;;;;;;;;;;;;;-1:-1:-1;;;;;;7123:99:16;-1:-1:-1;;;;;7173:48:16;;;7123:99;;;;;;-1:-1:-1;;;;;7240:24:16;;;;:19;:24;;;;;7265:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7240:46;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;7309:10:16;;-1:-1:-1;;;;;7333:23:16;;7309:10;7333:23;;;:18;:23;;;;;7357:17;:20;;-1:-1:-1;;;;;7309:10:16;;;;:23;;7333;7357:17;:20;;;;;;;;;;:::i;:::-;;;;;;;;7333:45;;;;;;:::i;:::-;;;;;;;;;;;;;7379:1;7333:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;7309:73;;;;;;-1:-1:-1;;;;;;7309:73:16;;;-1:-1:-1;;;;;7333:48:16;;;7309:73;;;3930:51:40;3903:18;;7309:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6976:3;;;;;:::i;:::-;;;;6900:497;;;-1:-1:-1;6688:3:16;;;;:::i;:::-;;;;6640:767;;;;6598:815;6560:853::o;9906:540::-;9978:8;;9965:12;;:25;;9978:11;;9988:1;;-1:-1:-1;;;;;9978:8:16;:11;:::i;:::-;-1:-1:-1;;;;;9965:25:16;;;;;;;;;;;;;9993:13;9965:41;;;;:::i;:::-;9953:9;:7;:9::i;:::-;:53;9945:62;;;;;;10022:9;10017:423;10041:17;:24;-1:-1:-1;;;;;10037:28:16;;;10017:423;;;10122:8;;-1:-1:-1;;;;;10122:8:16;;;10086:11;10102:29;;;:19;:29;;;;;10132:17;:20;;10086:11;;10160:3;;10132:20;;;;;;;;;;:::i;:::-;;;;;;;;10102:51;;;;;;:::i;:::-;;;;;;;;;;;;;;10157:2;10101:58;;;;:::i;:::-;:62;;;;:::i;:::-;10233:3;;10254:11;;10226:49;;-1:-1:-1;;;10226:49:16;;-1:-1:-1;;;;;10254:11:16;;;10226:49;;;9579:51:40;9646:18;;;9639:34;;;10086:78:16;;-1:-1:-1;10233:3:16;;10226:19;;9552:18:40;;10226:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10289:11:16;;10326:3;;10385:10;;10289:140;;-1:-1:-1;;;10289:140:16;;-1:-1:-1;;;;;10326:3:16;;;10289:140;;;16351:34:40;16401:18;;;16394:34;;;10385:10:16;;;16444:18:40;;;16437:43;10289:11:16;16496:18:40;;;16489:47;10289:11:16;;;:19;;16285::40;;10289:140:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10072:368;10067:3;;;;;:::i;:::-;;;;10017:423;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;530:358:27:-;728:69;;;-1:-1:-1;;;;;13751:15:40;;;728:69:27;;;13733:34:40;13803:15;;;13783:18;;;13776:43;13835:18;;;;13828:34;;;728:69:27;;;;;;;;;;13668:18:40;;;;728:69:27;;;;;;;-1:-1:-1;;;;;728:69:27;-1:-1:-1;;;728:69:27;;;717:81;;-1:-1:-1;;;;717:10:27;;;;:81;;728:69;717:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:129;;;;816:7;:57;;;;-1:-1:-1;828:11:27;;:16;;:44;;;859:4;848:24;;;;;;;;;;;;:::i;:::-;808:73;;;;-1:-1:-1;;;808:73:27;;17028:2:40;808:73:27;;;17010:21:40;17067:1;17047:18;;;17040:29;-1:-1:-1;;;17085:18:40;;;17078:33;17128:18;;808:73:27;16826:326:40;808:73:27;659:229;;530:358;;;;:::o;1842:307::-;2001:58;;;-1:-1:-1;;;;;9597:32:40;;;2001:58:27;;;9579:51:40;9646:18;;;;9639:34;;;2001:58:27;;;;;;;;;;9552:18:40;;;;2001:58:27;;;;;;;-1:-1:-1;;;;;2001:58:27;-1:-1:-1;;;2001:58:27;;;1990:70;;-1:-1:-1;;;;1990:10:27;;;;:70;;2001:58;1990:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:106;;;;2078:7;:57;;;;-1:-1:-1;2090:11:27;;:16;;:44;;;2121:4;2110:24;;;;;;;;;;;;:::i;:::-;2070:72;;;;-1:-1:-1;;;2070:72:27;;17359:2:40;2070:72:27;;;17341:21:40;17398:1;17378:18;;;17371:29;-1:-1:-1;;;17416:18:40;;;17409:32;17458:18;;2070:72:27;17157:325:40;2070:72:27;1944:205;;1842:307;;;:::o;1180:309::-;1340:59;;;-1:-1:-1;;;;;9597:32:40;;;1340:59:27;;;9579:51:40;9646:18;;;;9639:34;;;1340:59:27;;;;;;;;;;9552:18:40;;;;1340:59:27;;;;;;;-1:-1:-1;;;;;1340:59:27;-1:-1:-1;;;1340:59:27;;;1329:71;;-1:-1:-1;;;;1329:10:27;;;;:71;;1340:59;1329:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:107;;;;1418:7;:57;;;;-1:-1:-1;1430:11:27;;:16;;:44;;;1461:4;1450:24;;;;;;;;;;;;:::i;:::-;1410:72;;;;-1:-1:-1;;;1410:72:27;;17689:2:40;1410:72:27;;;17671:21:40;17728:1;17708:18;;;17701:29;-1:-1:-1;;;17746:18:40;;;17739:32;17788:18;;1410:72:27;17487:325:40;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;391:173:40;459:20;;-1:-1:-1;;;;;508:31:40;;498:42;;488:70;;554:1;551;544:12;488:70;391:173;;;:::o;569:186::-;628:6;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;720:29;739:9;720:29;:::i;:::-;710:39;569:186;-1:-1:-1;;;569:186:40:o;1046:188::-;1114:20;;-1:-1:-1;;;;;1163:46:40;;1153:57;;1143:85;;1224:1;1221;1214:12;1239:127;1300:10;1295:3;1291:20;1288:1;1281:31;1331:4;1328:1;1321:15;1355:4;1352:1;1345:15;1371:719;1414:5;1467:3;1460:4;1452:6;1448:17;1444:27;1434:55;;1485:1;1482;1475:12;1434:55;1521:6;1508:20;1547:18;1584:2;1580;1577:10;1574:36;;;1590:18;;:::i;:::-;1665:2;1659:9;1633:2;1719:13;;-1:-1:-1;;1715:22:40;;;1739:2;1711:31;1707:40;1695:53;;;1763:18;;;1783:22;;;1760:46;1757:72;;;1809:18;;:::i;:::-;1849:10;1845:2;1838:22;1884:2;1876:6;1869:18;1930:3;1923:4;1918:2;1910:6;1906:15;1902:26;1899:35;1896:55;;;1947:1;1944;1937:12;1896:55;2011:2;2004:4;1996:6;1992:17;1985:4;1977:6;1973:17;1960:54;2058:1;2051:4;2046:2;2038:6;2034:15;2030:26;2023:37;2078:6;2069:15;;;;;;1371:719;;;;:::o;2095:396::-;2173:6;2181;2234:2;2222:9;2213:7;2209:23;2205:32;2202:52;;;2250:1;2247;2240:12;2202:52;2273:29;2292:9;2273:29;:::i;:::-;2263:39;;2353:2;2342:9;2338:18;2325:32;2380:18;2372:6;2369:30;2366:50;;;2412:1;2409;2402:12;2366:50;2435;2477:7;2468:6;2457:9;2453:22;2435:50;:::i;:::-;2425:60;;;2095:396;;;;;:::o;2719:591::-;2789:6;2797;2850:2;2838:9;2829:7;2825:23;2821:32;2818:52;;;2866:1;2863;2856:12;2818:52;2906:9;2893:23;2935:18;2976:2;2968:6;2965:14;2962:34;;;2992:1;2989;2982:12;2962:34;3030:6;3019:9;3015:22;3005:32;;3075:7;3068:4;3064:2;3060:13;3056:27;3046:55;;3097:1;3094;3087:12;3046:55;3137:2;3124:16;3163:2;3155:6;3152:14;3149:34;;;3179:1;3176;3169:12;3149:34;3224:7;3219:2;3210:6;3206:2;3202:15;3198:24;3195:37;3192:57;;;3245:1;3242;3235:12;3192:57;3276:2;3268:11;;;;;3298:6;;-1:-1:-1;2719:591:40;;-1:-1:-1;;;;2719:591:40:o;3315:464::-;3402:6;3410;3418;3471:2;3459:9;3450:7;3446:23;3442:32;3439:52;;;3487:1;3484;3477:12;3439:52;3510:29;3529:9;3510:29;:::i;:::-;3500:39;;3590:2;3579:9;3575:18;3562:32;3617:18;3609:6;3606:30;3603:50;;;3649:1;3646;3639:12;3603:50;3672;3714:7;3705:6;3694:9;3690:22;3672:50;:::i;:::-;3662:60;;;3769:2;3758:9;3754:18;3741:32;3731:42;;3315:464;;;;;:::o;3992:180::-;4051:6;4104:2;4092:9;4083:7;4079:23;4075:32;4072:52;;;4120:1;4117;4110:12;4072:52;-1:-1:-1;4143:23:40;;3992:180;-1:-1:-1;3992:180:40:o;4177:458::-;4264:6;4272;4280;4333:2;4321:9;4312:7;4308:23;4304:32;4301:52;;;4349:1;4346;4339:12;4301:52;4385:9;4372:23;4362:33;;4446:2;4435:9;4431:18;4418:32;4473:18;4465:6;4462:30;4459:50;;;4505:1;4502;4495:12;4640:390;4718:6;4726;4779:2;4767:9;4758:7;4754:23;4750:32;4747:52;;;4795:1;4792;4785:12;4747:52;4831:9;4818:23;4808:33;;4892:2;4881:9;4877:18;4864:32;4919:18;4911:6;4908:30;4905:50;;;4951:1;4948;4941:12;5035:258;5107:1;5117:113;5131:6;5128:1;5125:13;5117:113;;;5207:11;;;5201:18;5188:11;;;5181:39;5153:2;5146:10;5117:113;;;5248:6;5245:1;5242:13;5239:48;;;-1:-1:-1;;5283:1:40;5265:16;;5258:27;5035:258::o;5298:462::-;5481:6;5474:14;5467:22;5456:9;5449:41;5526:2;5521;5510:9;5506:18;5499:30;5430:4;5558:6;5552:13;5601:6;5596:2;5585:9;5581:18;5574:34;5617:66;5676:6;5671:2;5660:9;5656:18;5651:2;5643:6;5639:15;5617:66;:::i;:::-;5744:2;5723:15;-1:-1:-1;;5719:29:40;5704:45;;;;5751:2;5700:54;;5298:462;-1:-1:-1;;;5298:462:40:o;5765:396::-;5843:6;5851;5904:2;5892:9;5883:7;5879:23;5875:32;5872:52;;;5920:1;5917;5910:12;5872:52;5960:9;5947:23;5993:18;5985:6;5982:30;5979:50;;;6025:1;6022;6015:12;5979:50;6048;6090:7;6081:6;6070:9;6066:22;6048:50;:::i;:::-;6038:60;;;6117:38;6151:2;6140:9;6136:18;6117:38;:::i;:::-;6107:48;;5765:396;;;;;:::o;6166:470::-;6253:6;6261;6269;6322:2;6310:9;6301:7;6297:23;6293:32;6290:52;;;6338:1;6335;6328:12;6290:52;6361:29;6380:9;6361:29;:::i;:::-;6351:39;;6441:2;6430:9;6426:18;6413:32;6468:18;6460:6;6457:30;6454:50;;;6500:1;6497;6490:12;6454:50;6523;6565:7;6556:6;6545:9;6541:22;6523:50;:::i;:::-;6513:60;;;6592:38;6626:2;6615:9;6611:18;6592:38;:::i;:::-;6582:48;;6166:470;;;;;:::o;7013:463::-;7099:6;7107;7115;7168:2;7156:9;7147:7;7143:23;7139:32;7136:52;;;7184:1;7181;7174:12;7136:52;7224:9;7211:23;7257:18;7249:6;7246:30;7243:50;;;7289:1;7286;7279:12;7243:50;7312;7354:7;7345:6;7334:9;7330:22;7312:50;:::i;:::-;7302:60;;;7409:2;7398:9;7394:18;7381:32;7371:42;;7432:38;7466:2;7455:9;7451:18;7432:38;:::i;8041:322::-;8110:6;8163:2;8151:9;8142:7;8138:23;8134:32;8131:52;;;8179:1;8176;8169:12;8131:52;8219:9;8206:23;8252:18;8244:6;8241:30;8238:50;;;8284:1;8281;8274:12;8238:50;8307;8349:7;8340:6;8329:9;8325:22;8307:50;:::i;:::-;8297:60;8041:322;-1:-1:-1;;;;8041:322:40:o;8597:276::-;8728:3;8766:6;8760:13;8782:53;8828:6;8823:3;8816:4;8808:6;8804:17;8782:53;:::i;:::-;8851:16;;;;;8597:276;-1:-1:-1;;8597:276:40:o;8878:127::-;8939:10;8934:3;8930:20;8927:1;8920:31;8970:4;8967:1;8960:15;8994:4;8991:1;8984:15;9010:168;9050:7;9116:1;9112;9108:6;9104:14;9101:1;9098:21;9093:1;9086:9;9079:17;9075:45;9072:71;;;9123:18;;:::i;:::-;-1:-1:-1;9163:9:40;;9010:168::o;9183:217::-;9223:1;9249;9239:132;;9293:10;9288:3;9284:20;9281:1;9274:31;9328:4;9325:1;9318:15;9356:4;9353:1;9346:15;9239:132;-1:-1:-1;9385:9:40;;9183:217::o;9684:277::-;9751:6;9804:2;9792:9;9783:7;9779:23;9775:32;9772:52;;;9820:1;9817;9810:12;9772:52;9852:9;9846:16;9905:5;9898:13;9891:21;9884:5;9881:32;9871:60;;9927:1;9924;9917:12;9966:226;10005:3;-1:-1:-1;;;;;10102:2:40;10095:5;10091:14;10129:2;10120:7;10117:15;10114:41;;;10135:18;;:::i;:::-;10184:1;10171:15;;9966:226;-1:-1:-1;;;9966:226:40:o;10197:356::-;10399:2;10381:21;;;10418:18;;;10411:30;10477:34;10472:2;10457:18;;10450:62;10544:2;10529:18;;10197:356::o;10558:179::-;10636:13;;10689:22;10678:34;;10668:45;;10658:73;;10727:1;10724;10717:12;10742:473;10845:6;10853;10861;10869;10877;10930:3;10918:9;10909:7;10905:23;10901:33;10898:53;;;10947:1;10944;10937:12;10898:53;10970:39;10999:9;10970:39;:::i;:::-;10960:49;;11049:2;11038:9;11034:18;11028:25;11018:35;;11093:2;11082:9;11078:18;11072:25;11062:35;;11137:2;11126:9;11122:18;11116:25;11106:35;;11160:49;11204:3;11193:9;11189:19;11160:49;:::i;:::-;11150:59;;10742:473;;;;;;;;:::o;11220:128::-;11260:3;11291:1;11287:6;11284:1;11281:13;11278:39;;;11297:18;;:::i;:::-;-1:-1:-1;11333:9:40;;11220:128::o;11540:246::-;11580:4;-1:-1:-1;;;;;11693:10:40;;;;11663;;11715:12;;;11712:38;;;11730:18;;:::i;:::-;11767:13;;11540:246;-1:-1:-1;;;11540:246:40:o;11791:127::-;11852:10;11847:3;11843:20;11840:1;11833:31;11883:4;11880:1;11873:15;11907:4;11904:1;11897:15;11923:135;11962:3;-1:-1:-1;;11983:17:40;;11980:43;;;12003:18;;:::i;:::-;-1:-1:-1;12050:1:40;12039:13;;11923:135::o;12372:184::-;12442:6;12495:2;12483:9;12474:7;12470:23;12466:32;12463:52;;;12511:1;12508;12501:12;12463:52;-1:-1:-1;12534:16:40;;12372:184;-1:-1:-1;12372:184:40:o;13363:125::-;13403:4;13431:1;13428;13425:8;13422:34;;;13436:18;;:::i;:::-;-1:-1:-1;13473:9:40;;13363:125::o;14280:380::-;14359:1;14355:12;;;;14402;;;14423:61;;14477:4;14469:6;14465:17;14455:27;;14423:61;14530:2;14522:6;14519:14;14499:18;14496:38;14493:161;;;14576:10;14571:3;14567:20;14564:1;14557:31;14611:4;14608:1;14601:15;14639:4;14636:1;14629:15;14493:161;;14280:380;;;:::o;14791:1099::-;14919:3;14948:1;14981:6;14975:13;15011:3;15033:1;15061:9;15057:2;15053:18;15043:28;;15121:2;15110:9;15106:18;15143;15133:61;;15187:4;15179:6;15175:17;15165:27;;15133:61;15213:2;15261;15253:6;15250:14;15230:18;15227:38;15224:165;;;-1:-1:-1;;;15288:33:40;;15344:4;15341:1;15334:15;15374:4;15295:3;15362:17;15224:165;15405:18;15432:104;;;;15550:1;15545:320;;;;15398:467;;15432:104;-1:-1:-1;;15465:24:40;;15453:37;;15510:16;;;;-1:-1:-1;15432:104:40;;15545:320;14738:1;14731:14;;;14775:4;14762:18;;15640:1;15654:165;15668:6;15665:1;15662:13;15654:165;;;15746:14;;15733:11;;;15726:35;15789:16;;;;15683:10;;15654:165;;;15658:3;;15848:6;15843:3;15839:16;15832:23;;15398:467;-1:-1:-1;15881:3:40;;14791:1099;-1:-1:-1;;;;;;;;14791:1099:40:o;15895:175::-;15932:3;15976:4;15969:5;15965:16;16005:4;15996:7;15993:17;15990:43;;;16013:18;;:::i;:::-;16062:1;16049:15;;15895:175;-1:-1:-1;;15895:175:40:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    591,
    10455
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBE331A64 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE7572230 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xEC6F4F41 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xFD2FAA68 EQ PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBE331A64 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xC2ABA3F0 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x80F79702 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x81688C64 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x85AFA270 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAFA3A617 EQ PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47CE529A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x557ED1BA GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x5F90F0B7 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x63168475 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47CE529A EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x4A128671 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4A7DC8E0 EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xC3D5157 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x126DF02B EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x1CC87D88 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x266E2A56 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x25A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x242 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x22D PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x280 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x86E JUMP JUMPDEST PUSH2 0x280 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CB JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP3 SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x22D PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x20CB JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x43B PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x280 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2291 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x133C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x50D SWAP1 DUP4 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x13 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x59B SWAP1 DUP5 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x13 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 DUP6 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND DUP3 MSTORE PUSH1 0xC SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x64D SWAP1 DUP10 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x5A PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF DUP3 DUP5 ADD DUP5 PUSH2 0x20B2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x755 JUMPI PUSH2 0x70E PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x716 PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x0 PUSH2 0x72F DUP4 PUSH2 0x2363 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x18CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP DUP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x93A PUSH2 0x86E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x962 SWAP1 PUSH3 0x15180 PUSH2 0x2429 JUMP JUMPDEST EQ ISZERO PUSH2 0x993 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP4 POP DUP4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP SWAP2 POP PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x9B1 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x86E JUMP JUMPDEST GT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x97B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x238A JUMP JUMPDEST PUSH2 0xA72 PUSH1 0x0 PUSH2 0x1AB7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH2 0xAE1 SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1E0A JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x7 SWAP1 PUSH2 0xB3F SWAP1 DUP6 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xB89 SWAP1 DUP6 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xBCC SWAP1 DUP6 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x13 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xCF0 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0xCE8 DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP PUSH1 0x7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD56 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x86E JUMP JUMPDEST GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH8 0x8AC7230489E80000 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xFE9 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST LT ISZERO PUSH2 0xE2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE36 DUP4 CALLER ADDRESS DUP5 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xE61 DUP4 PUSH32 0x0 DUP4 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0xA SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0xBB8 DUP4 DUP6 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD DUP9 DUP2 MSTORE PUSH8 0xD02AB486CEDC0000 PUSH1 0xC0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP11 ADD DUP2 DUP2 MSTORE SWAP11 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 MLOAD DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP8 MLOAD DUP10 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP6 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP9 ADD MSTORE SWAP4 MLOAD DUP8 AND PUSH1 0x64 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE SWAP1 MLOAD PUSH1 0xC4 DUP5 ADD MSTORE SWAP5 MLOAD DUP4 AND PUSH1 0xE4 DUP4 ADD MSTORE SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0xA SLOAD PUSH2 0xFC1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x0 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xFE1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH2 0xFDC DUP5 DUP8 PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST POP POP POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1037 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST LT ISZERO PUSH2 0x1066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x110F SWAP1 DUP9 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114C PUSH2 0x86E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x117E SWAP1 DUP9 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP5 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x11E3 SWAP1 DUP8 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD DUP9 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 PUSH2 0x1229 SWAP1 DUP8 SWAP1 PUSH2 0x22CE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP7 DUP3 MSTORE SWAP2 PUSH32 0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12AB JUMPI PUSH2 0x12AB PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x130B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x132F SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x813 SWAP1 PUSH2 0x238A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x813 JUMP JUMPDEST PUSH2 0x13D4 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x13D4 JUMPI PUSH2 0x13ED DUP2 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x141B JUMPI PUSH2 0x141B PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x144C DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x149F JUMPI PUSH2 0x149F PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14FA JUMPI PUSH2 0x14FA PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1511 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD EQ PUSH2 0x152B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x155D JUMPI PUSH2 0x155D PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1574 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x15BD JUMPI PUSH2 0x15BD PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1615 JUMPI PUSH2 0x1615 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x164E JUMPI PUSH2 0x164E PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1692 JUMPI PUSH2 0x1692 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xF PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x16E9 JUMPI PUSH2 0x16E9 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1722 JUMPI PUSH2 0x1722 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0xD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x179F SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17BC SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8EBFA8AE SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x1807 JUMPI PUSH2 0x1807 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x181E SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1840 JUMPI PUSH2 0x1840 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x18B0 SWAP1 PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x152E JUMP JUMPDEST POP DUP1 PUSH2 0x18C3 DUP2 PUSH2 0x25A1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1463 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x18ED SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x191A PUSH2 0x86E JUMP JUMPDEST GT PUSH2 0x1924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND LT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x64 SWAP4 SWAP1 DUP7 AND SWAP1 DUP2 LT PUSH2 0x1971 JUMPI PUSH2 0x1971 PUSH2 0x2469 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1988 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xA PUSH2 0x19A3 SWAP2 SWAP1 PUSH2 0x2300 JUMP JUMPDEST PUSH2 0x19AD SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x1AAF SWAP1 PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1B6B SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BA8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1BD7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1BD7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BD7 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x813 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1C6D SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1CD9 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1CD9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x1D0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x813 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1D6D SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1DD9 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1DD9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DD9 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x1D0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x813 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1E16 SWAP1 PUSH2 0x24CA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1E7E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1E51 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1E7E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1E7E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E7E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E63 JUMP JUMPDEST POP PUSH2 0x1E8A SWAP3 SWAP2 POP PUSH2 0x1E8E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E8A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E8F JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EDA DUP3 PUSH2 0x1EA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F3A JUMPI PUSH2 0x1F3A PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1F62 JUMPI PUSH2 0x1F62 PUSH2 0x1EF8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB7 DUP4 PUSH2 0x1EE1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FDF DUP6 DUP3 DUP7 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2079 DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A1 DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2132 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6EB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2182 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x212F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21CD DUP6 DUP3 DUP7 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP POP PUSH2 0x21DC PUSH1 0x20 DUP5 ADD PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2203 DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222B DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP POP PUSH2 0x223A PUSH1 0x40 DUP6 ADD PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x226F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x227B DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x223A PUSH1 0x40 DUP6 ADD PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22E0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x212F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x231A JUMPI PUSH2 0x231A PUSH2 0x22EA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x233C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x2380 JUMPI PUSH2 0x2380 PUSH2 0x22EA JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23FA DUP7 PUSH2 0x23BF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x241D PUSH1 0x80 DUP8 ADD PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x243C JUMPI PUSH2 0x243C PUSH2 0x22EA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2461 JUMPI PUSH2 0x2461 PUSH2 0x22EA JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2493 PUSH2 0x22EA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C5 PUSH2 0x22EA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x24DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x24FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2521 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x2541 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2555 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2566 JUMPI PUSH2 0x2593 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x258B JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2572 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x25B8 JUMPI PUSH2 0x25B8 PUSH2 0x22EA JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x284FB69669C3094EC3B3FBF4F58ED07D68 0xEE PUSH15 0x3A8B8E826323BCE94D11EDC464736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBE331A64"
    },
    "49": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7572230"
    },
    "60": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "GT",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7572230"
    },
    "71": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47F"
    },
    "75": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEC6F4F41"
    },
    "82": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x492"
    },
    "86": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C0"
    },
    "97": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFD2FAA68"
    },
    "104": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D3"
    },
    "108": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBE331A64"
    },
    "120": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D4"
    },
    "124": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC2ABA3F0"
    },
    "131": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E7"
    },
    "135": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC31C9C07"
    },
    "142": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x458"
    },
    "146": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "153": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x336"
    },
    "162": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "163": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x80F79702"
    },
    "169": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33E"
    },
    "173": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81688C64"
    },
    "180": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37A"
    },
    "184": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x85AFA270"
    },
    "191": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38D"
    },
    "195": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B0"
    },
    "206": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAFA3A617"
    },
    "213": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "214": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C1"
    },
    "217": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "224": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x47CE529A"
    },
    "229": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "GT",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "234": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "235": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x557ED1BA"
    },
    "240": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "GT",
      "path": "16"
    },
    "241": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "245": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "246": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x557ED1BA"
    },
    "251": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "252": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BE"
    },
    "255": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "256": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5F90F0B7"
    },
    "262": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "263": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C6"
    },
    "266": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "267": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x63168475"
    },
    "273": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "274": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D9"
    },
    "277": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "278": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6E04FF0D"
    },
    "284": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "285": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x315"
    },
    "288": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "289": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "294": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "295": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x47CE529A"
    },
    "300": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "301": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26D"
    },
    "304": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "305": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4A128671"
    },
    "311": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "312": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x298"
    },
    "315": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "316": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "317": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4A7DC8E0"
    },
    "322": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "323": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AB"
    },
    "326": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "327": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "332": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "333": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x89FE6AA"
    },
    "338": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "343": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "344": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3D5157"
    },
    "349": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "350": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B5"
    },
    "353": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "354": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "355": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x126DF02B"
    },
    "360": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "361": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CC"
    },
    "364": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "365": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "366": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1CC87D88"
    },
    "371": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "372": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21A"
    },
    "375": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "376": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x266E2A56"
    },
    "382": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "383": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22F"
    },
    "386": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "387": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "388": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4585E33B"
    },
    "393": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "EQ",
      "path": "16"
    },
    "394": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25A"
    },
    "397": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "398": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "399": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        591,
        10455
      ],
      "op": "REVERT",
      "path": "16"
    },
    "403": {
      "offset": [
        1217,
        1254
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "404": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19C"
    },
    "407": {
      "offset": [
        1250,
        1254
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "410": {
      "offset": [
        1217,
        1254
      ],
      "op": "DUP2",
      "path": "16"
    },
    "411": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "JUMP",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "415": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "416": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "420": {
      "op": "SWAP1"
    },
    "421": {
      "op": "SWAP2"
    },
    "422": {
      "op": "AND"
    },
    "423": {
      "op": "DUP2"
    },
    "424": {
      "op": "MSTORE"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "offset": [
        1217,
        1254
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "429": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "431": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "432": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "DUP1",
      "path": "16"
    },
    "433": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "SUB",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "436": {
      "fn": null,
      "offset": [
        1217,
        1254
      ],
      "op": "RETURN",
      "path": "16"
    },
    "437": {
      "offset": [
        1708,
        1740
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "441": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "443": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "444": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "DUP2",
      "path": "16"
    },
    "445": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "JUMP",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "447": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "449": {
      "fn": null,
      "offset": [
        1708,
        1740
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "450": {
      "op": "SWAP1"
    },
    "451": {
      "op": "DUP2"
    },
    "452": {
      "op": "MSTORE"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "offset": [
        1708,
        1740
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "459": {
      "op": "JUMP"
    },
    "460": {
      "offset": [
        2411,
        2463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FA"
    },
    "464": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DA"
    },
    "467": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "470": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EBF"
    },
    "473": {
      "fn": null,
      "jump": "i",
      "offset": [
        2411,
        2463
      ],
      "op": "JUMP",
      "path": "16"
    },
    "474": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "477": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "479": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "480": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "483": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "DUP2",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "485": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "487": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "DUP1",
      "path": "16"
    },
    "490": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "491": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "493": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "494": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "ADD",
      "path": "16"
    },
    "496": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "497": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC0"
    },
    "499": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "501": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "502": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SHL",
      "path": "16"
    },
    "503": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "504": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "DUP3",
      "path": "16"
    },
    "505": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "JUMP",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "507": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "509": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "DUP1",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        2411,
        2463
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "op": "NOT"
    },
    "520": {
      "op": "SWAP1"
    },
    "521": {
      "op": "SWAP4"
    },
    "522": {
      "op": "AND"
    },
    "523": {
      "op": "DUP4"
    },
    "524": {
      "op": "MSTORE"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "527": {
      "op": "DUP4"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "op": "SWAP2"
    },
    "530": {
      "op": "SWAP1"
    },
    "531": {
      "op": "SWAP2"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "op": "ADD"
    },
    "534": {
      "offset": [
        2411,
        2463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "537": {
      "op": "JUMP"
    },
    "538": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "542": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228"
    },
    "545": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "548": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9B"
    },
    "551": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMP",
      "path": "16"
    },
    "552": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "553": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E6"
    },
    "556": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMP",
      "path": "16"
    },
    "557": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "558": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "STOP",
      "path": "16"
    },
    "559": {
      "offset": [
        1261,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "560": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "562": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "563": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x242"
    },
    "566": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "op": "SUB"
    },
    "575": {
      "offset": [
        1261,
        1284
      ],
      "op": "AND",
      "path": "16"
    },
    "576": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "DUP2",
      "path": "16"
    },
    "577": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "JUMP",
      "path": "16"
    },
    "578": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "579": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "581": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        1261,
        1284
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "op": "SWAP1"
    },
    "591": {
      "op": "SWAP2"
    },
    "592": {
      "op": "AND"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "offset": [
        1261,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "601": {
      "op": "JUMP"
    },
    "602": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "603": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "606": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x268"
    },
    "609": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "610": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "612": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE9"
    },
    "615": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMP",
      "path": "16"
    },
    "616": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "617": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F1"
    },
    "620": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMP",
      "path": "16"
    },
    "621": {
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "622": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "625": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27B"
    },
    "628": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "629": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "631": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x205B"
    },
    "634": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMP",
      "path": "16"
    },
    "635": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "636": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x76B"
    },
    "639": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMP",
      "path": "16"
    },
    "640": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "641": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "643": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "SUB"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "SWAP2"
    },
    "654": {
      "op": "AND"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "663": {
      "op": "JUMP"
    },
    "664": {
      "offset": [
        2470,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "665": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "668": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A6"
    },
    "671": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "672": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "674": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20B2"
    },
    "677": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "678": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "679": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BF"
    },
    "682": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "683": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "684": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "687": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B9"
    },
    "690": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "691": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "693": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EBF"
    },
    "696": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMP",
      "path": "16"
    },
    "697": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "698": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E9"
    },
    "701": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMP",
      "path": "16"
    },
    "702": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7420,
        7667
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "703": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7420,
        7667
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "706": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7420,
        7667
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "709": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7420,
        7667
      ],
      "op": "JUMP",
      "path": "16"
    },
    "710": {
      "offset": [
        2036,
        2110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "711": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "714": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D4"
    },
    "717": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "718": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "720": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20CB"
    },
    "723": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2036,
        2110
      ],
      "op": "JUMP",
      "path": "16"
    },
    "724": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "725": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F7"
    },
    "728": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2036,
        2110
      ],
      "op": "JUMP",
      "path": "16"
    },
    "729": {
      "offset": [
        1872,
        1945
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "730": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "733": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7"
    },
    "736": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "737": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "739": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20FE"
    },
    "742": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1872,
        1945
      ],
      "op": "JUMP",
      "path": "16"
    },
    "743": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "744": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "746": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "748": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "749": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "750": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "751": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "753": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "754": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP4",
      "path": "16"
    },
    "755": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "756": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "758": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "759": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "760": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "761": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "762": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "763": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "764": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP4",
      "path": "16"
    },
    "765": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "ADD",
      "path": "16"
    },
    "766": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP5",
      "path": "16"
    },
    "767": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "ADD",
      "path": "16"
    },
    "768": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "769": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "770": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "771": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "772": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "773": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "774": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP5",
      "path": "16"
    },
    "775": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "ADD",
      "path": "16"
    },
    "776": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "777": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "778": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "779": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "ADD",
      "path": "16"
    },
    "780": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "781": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "782": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "783": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "784": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "785": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "786": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "787": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "788": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1872,
        1945
      ],
      "op": "JUMP",
      "path": "16"
    },
    "789": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "790": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x328"
    },
    "793": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323"
    },
    "796": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "797": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "799": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE9"
    },
    "802": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMP",
      "path": "16"
    },
    "803": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x92E"
    },
    "807": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMP",
      "path": "16"
    },
    "808": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "809": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "811": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "812": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "815": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "816": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "817": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "818": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x215B"
    },
    "821": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMP",
      "path": "16"
    },
    "822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3E"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "830": {
      "offset": [
        1792,
        1865
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34C"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20FE"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1792,
        1865
      ],
      "op": "JUMP",
      "path": "16"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "849": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "850": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "851": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "854": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP4",
      "path": "16"
    },
    "856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "861": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "862": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "863": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "864": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP1",
      "path": "16"
    },
    "865": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP4",
      "path": "16"
    },
    "866": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "ADD",
      "path": "16"
    },
    "867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP5",
      "path": "16"
    },
    "868": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "ADD",
      "path": "16"
    },
    "869": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP1",
      "path": "16"
    },
    "870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "875": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP5",
      "path": "16"
    },
    "876": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "ADD",
      "path": "16"
    },
    "877": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "879": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "ADD",
      "path": "16"
    },
    "881": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "882": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "888": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "889": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1865
      ],
      "op": "JUMP",
      "path": "16"
    },
    "890": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "891": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "894": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x388"
    },
    "897": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "898": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "900": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2197"
    },
    "903": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "904": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "905": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA74"
    },
    "908": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "909": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "910": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A0"
    },
    "913": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "916": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "917": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "919": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E5"
    },
    "922": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMP",
      "path": "16"
    },
    "923": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "924": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB63"
    },
    "927": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMP",
      "path": "16"
    },
    "928": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "929": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "931": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "932": {
      "op": "SWAP1"
    },
    "933": {
      "op": "ISZERO"
    },
    "934": {
      "op": "ISZERO"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "943": {
      "op": "JUMP"
    },
    "944": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "945": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "957": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "960": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "961": {
      "offset": [
        1956,
        2029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "962": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CF"
    },
    "968": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "971": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20CB"
    },
    "974": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMP",
      "path": "16"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC47"
    },
    "979": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMP",
      "path": "16"
    },
    "980": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "981": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "984": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E2"
    },
    "987": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "990": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2243"
    },
    "993": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMP",
      "path": "16"
    },
    "994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "995": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC94"
    },
    "998": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMP",
      "path": "16"
    },
    "999": {
      "offset": [
        2620,
        2719
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1000": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43B"
    },
    "1003": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1007": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1009": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E5"
    },
    "1012": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        2620,
        2719
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1013": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1014": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1016": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1018": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1019": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1020": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1021": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1023": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1024": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1025": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1026": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1028": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1029": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1030": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1031": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1032": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1034": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1035": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1036": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1037": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1038": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1039": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1040": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1041": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1042": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1043": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1044": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1045": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1046": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1047": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1048": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1049": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1050": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1051": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1052": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1053": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1055": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1056": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1057": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1058": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1059": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1062": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1063": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1064": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1066": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1067": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1068": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1069": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1071": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "ADD",
      "path": "16"
    },
    "1074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1075": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1078": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1080": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "AND",
      "path": "16"
    },
    "1081": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1082": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1083": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1084": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1086": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1087": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2620,
        2719
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1088": {
      "op": "SWAP4"
    },
    "1089": {
      "op": "DUP5"
    },
    "1090": {
      "op": "MSTORE"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1093": {
      "op": "DUP5"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "op": "SWAP3"
    },
    "1096": {
      "op": "SWAP1"
    },
    "1097": {
      "op": "SWAP3"
    },
    "1098": {
      "op": "MSTORE"
    },
    "1099": {
      "op": "ISZERO"
    },
    "1100": {
      "op": "ISZERO"
    },
    "1101": {
      "op": "SWAP1"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "offset": [
        2620,
        2719
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "1111": {
      "op": "JUMP"
    },
    "1112": {
      "offset": [
        1172,
        1211
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1172,
        1211
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "1116": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1172,
        1211
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "1149": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1172,
        1211
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1172,
        1211
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1151": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1152": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "1155": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x48D"
    },
    "1158": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1159": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1161": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20B2"
    },
    "1164": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1165": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1166": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1295"
    },
    "1169": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1170": {
      "offset": [
        1422,
        1464
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1171": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A0"
    },
    "1174": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A0"
    },
    "1177": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1178": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1180": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2291"
    },
    "1183": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        1422,
        1464
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1184": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1185": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1186": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1187": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1189": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1190": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1191": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "ADD",
      "path": "16"
    },
    "1192": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1193": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "ADD",
      "path": "16"
    },
    "1194": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1195": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1196": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1198": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1199": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1200": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1201": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1202": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "ADD",
      "path": "16"
    },
    "1203": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1204": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1205": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1206": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "ADD",
      "path": "16"
    },
    "1207": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1208": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1209": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1210": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1211": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1213": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "AND",
      "path": "16"
    },
    "1214": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1215": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1422,
        1464
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "1223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EBF"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133C"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1235": {
      "offset": [
        1136,
        1166
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "1242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "offset": [
        1136,
        1166
      ],
      "op": "AND",
      "path": "16"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1136,
        1166
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1254": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "op": "SUB"
    },
    "1263": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 1
    },
    "1264": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "AND",
      "path": "16"
    },
    "1265": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1267": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1268": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1269": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1270": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8340
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1272": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1274": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1275": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1277": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1278": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1279": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1280": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8346
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1281": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1282": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1283": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50D"
    },
    "1286": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1287": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8347,
        8353
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1288": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8347,
        8353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1289": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "1292": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8322,
        8354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1293": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1294": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1295": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1296": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1297": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1299": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "ADD",
      "path": "16"
    },
    "1300": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1302": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1303": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1304": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1305": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SUB",
      "path": "16"
    },
    "1306": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1307": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1308": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8322,
        8354
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1309": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1311": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1313": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8282,
        8286
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "SUB"
    },
    "1322": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "AND",
      "path": "16"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "op": "SUB"
    },
    "1331": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "AND",
      "path": "16"
    },
    "1332": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1333": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1334": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1336": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "ADD",
      "path": "16"
    },
    "1337": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1338": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1339": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1340": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1342": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "ADD",
      "path": "16"
    },
    "1343": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1345": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8287
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1346": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8288,
        8294
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1347": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1349": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1350": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54F"
    },
    "1353": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1354": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1355": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "1358": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8259,
        8295
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1359": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1360": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1361": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1362": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1363": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1365": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1366": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1367": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1369": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1370": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1371": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1372": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SUB",
      "path": "16"
    },
    "1373": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1374": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "ADD",
      "path": "16"
    },
    "1375": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1376": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8295
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1377": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8296,
        8306
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1378": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1380": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1381": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1382": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1383": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1384": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1385": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1386": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8307
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1387": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8318
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1388": {
      "branch": 56,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8259,
        8354
      ],
      "op": "EQ",
      "path": "16"
    },
    "1389": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x575"
    },
    "1392": {
      "branch": 56,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1393": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1395": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1396": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1397": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8251,
        8355
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1407": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "AND",
      "path": "16"
    },
    "1408": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8365,
        8380
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1410": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1411": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1412": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1413": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8402
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1415": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1417": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1418": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1420": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1421": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1422": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8408
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1423": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1424": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1425": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59B"
    },
    "1428": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1429": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8409,
        8415
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1430": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8409,
        8415
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1431": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "1434": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8383,
        8416
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1435": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1436": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1437": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1438": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1439": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1441": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "ADD",
      "path": "16"
    },
    "1442": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1444": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1445": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1446": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1447": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SUB",
      "path": "16"
    },
    "1448": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1449": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1450": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8383,
        8416
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1451": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8365,
        8416
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1452": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8365,
        8416
      ],
      "op": "POP",
      "path": "16"
    },
    "1453": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8486,
        8490
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x1"
    },
    "1455": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8448
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1457": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1459": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8449,
        8453
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "AND",
      "path": "16"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "AND",
      "path": "16"
    },
    "1478": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1479": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1480": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1482": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "ADD",
      "path": "16"
    },
    "1483": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1485": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1486": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1488": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "ADD",
      "path": "16"
    },
    "1489": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8454
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1492": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8455,
        8461
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1493": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1495": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1496": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E1"
    },
    "1499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1500": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1501": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "1504": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8426,
        8462
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1505": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1506": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1507": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1508": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1509": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1513": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1516": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1517": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1518": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "SUB",
      "path": "16"
    },
    "1519": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1520": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "ADD",
      "path": "16"
    },
    "1521": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1522": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8462
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1523": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8463,
        8473
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1524": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1527": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1528": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1529": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1531": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1532": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1533": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1534": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8474
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1535": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8483
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1537": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8483
      ],
      "op": "ADD",
      "path": "16"
    },
    "1538": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1542": {
      "op": "NOT"
    },
    "1543": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "AND",
      "path": "16"
    },
    "1544": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "1545": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1547": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "1548": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1549": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "1550": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "OR",
      "path": "16"
    },
    "1551": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1552": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "1553": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8426,
        8490
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1554": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0xA"
    },
    "1556": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "SUB"
    },
    "1565": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "DUP10",
      "path": "16"
    },
    "1566": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "AND",
      "path": "16"
    },
    "1567": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1568": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1569": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "1571": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1572": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1573": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1574": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1575": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1576": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1577": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8586
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "op": "SUB"
    },
    "1586": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1587": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1588": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "AND",
      "path": "16"
    },
    "1589": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8507,
        8510
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1590": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8520
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "1595": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8520
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1596": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8463,
        8473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1597": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8463,
        8473
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1598": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8606,
        8613
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1599": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8606,
        8613
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1600": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8601,
        8604
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1602": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8601,
        8604
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1603": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64D"
    },
    "1606": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1607": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8587,
        8593
      ],
      "op": "DUP10",
      "path": "16"
    },
    "1608": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8587,
        8593
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1609": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "1612": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8561,
        8594
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1613": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1614": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1615": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1616": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1617": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1619": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "ADD",
      "path": "16"
    },
    "1620": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1622": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1623": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1624": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1625": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SUB",
      "path": "16"
    },
    "1626": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1627": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1628": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8561,
        8594
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1629": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8598,
        8600
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5A"
    },
    "1631": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8600
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x668"
    },
    "1634": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8600
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1635": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8600
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1636": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8600
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2300"
    },
    "1639": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8560,
        8600
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1640": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8600
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1641": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8604
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x672"
    },
    "1644": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8604
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1645": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8604
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1646": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8604
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "1649": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8560,
        8604
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1650": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8560,
        8604
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1651": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8559,
        8613
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67C"
    },
    "1654": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8559,
        8613
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1655": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8559,
        8613
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1656": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8559,
        8613
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "1659": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8559,
        8613
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1660": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8559,
        8613
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1661": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1663": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "op": "NOT"
    },
    "1673": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "1675": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1676": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1677": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SHL",
      "path": "16"
    },
    "1678": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "AND",
      "path": "16"
    },
    "1679": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1680": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "op": "SWAP1"
    },
    "1690": {
      "op": "SWAP3"
    },
    "1691": {
      "op": "AND"
    },
    "1692": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1694": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1695": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ADD",
      "path": "16"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1699": {
      "op": "DUP3"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "MSTORE"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1707": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1709": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1710": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1711": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1712": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SUB",
      "path": "16"
    },
    "1713": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1714": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1716": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1717": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "GAS",
      "path": "16"
    },
    "1718": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "CALL",
      "path": "16"
    },
    "1719": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1720": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1721": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1722": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C7"
    },
    "1725": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1726": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1727": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1729": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1730": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1731": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1732": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1734": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1735": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1736": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1737": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1738": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1739": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1740": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1742": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1743": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1744": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1746": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "NOT",
      "path": "16"
    },
    "1747": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1749": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1750": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ADD",
      "path": "16"
    },
    "1751": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "AND",
      "path": "16"
    },
    "1752": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1753": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ADD",
      "path": "16"
    },
    "1754": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1755": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1757": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1758": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1759": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1760": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "ADD",
      "path": "16"
    },
    "1761": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1762": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6EB"
    },
    "1765": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1766": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1767": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2341"
    },
    "1770": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8500,
        8623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1771": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1772": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8500,
        8623
      ],
      "op": "POP",
      "path": "16"
    },
    "1773": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8179,
        8639
      ],
      "op": "POP",
      "path": "16"
    },
    "1774": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "POP",
      "path": "16"
    },
    "1775": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8113,
        8639
      ],
      "op": "POP",
      "path": "16"
    },
    "1776": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "o",
      "offset": [
        8113,
        8639
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1777": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1778": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9572,
        9592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1780": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FF"
    },
    "1783": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1784": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1785": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "ADD",
      "path": "16"
    },
    "1786": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9606,
        9617
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1787": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20B2"
    },
    "1790": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9595,
        9629
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1791": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9595,
        9629
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1792": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9572,
        9629
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "branch": 57,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9643,
        9660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1795": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9639,
        9765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x755"
    },
    "1798": {
      "branch": 57,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9639,
        9765
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1799": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9676,
        9696
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0x70E"
    },
    "1802": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9676,
        9694
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13D7"
    },
    "1805": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9676,
        9696
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1806": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9676,
        9696
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1807": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9710,
        9730
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 5,
      "value": "0x716"
    },
    "1810": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9710,
        9728
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1454"
    },
    "1813": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9710,
        9730
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1814": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9710,
        9730
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1815": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9752
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x4"
    },
    "1817": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1818": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "AND",
      "path": "16"
    },
    "1828": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1829": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9752
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1831": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72F"
    },
    "1834": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1835": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2363"
    },
    "1838": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9744,
        9754
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1839": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1840": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1841": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1842": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1845": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "EXP",
      "path": "16"
    },
    "1846": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1847": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1848": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "MUL",
      "path": "16"
    },
    "1858": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "NOT",
      "path": "16"
    },
    "1859": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "AND",
      "path": "16"
    },
    "1860": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1861": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "AND",
      "path": "16"
    },
    "1871": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "MUL",
      "path": "16"
    },
    "1872": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "OR",
      "path": "16"
    },
    "1873": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1874": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1875": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "POP",
      "path": "16"
    },
    "1876": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9744,
        9754
      ],
      "op": "POP",
      "path": "16"
    },
    "1877": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9639,
        9765
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1878": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9778,
        9790
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1879": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9794,
        9795
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1881": {
      "branch": 58,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9778,
        9795
      ],
      "op": "EQ",
      "path": "16"
    },
    "1882": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9774,
        9833
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1883": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9774,
        9833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x766"
    },
    "1886": {
      "branch": 58,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9774,
        9833
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1887": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9811,
        9822
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 7,
      "value": "0x766"
    },
    "1890": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9811,
        9820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18CF"
    },
    "1893": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9811,
        9822
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1894": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9811,
        9822
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1895": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9561,
        9839
      ],
      "op": "POP",
      "path": "16"
    },
    "1896": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "POP",
      "path": "16"
    },
    "1897": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9492,
        9839
      ],
      "op": "POP",
      "path": "16"
    },
    "1898": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        9492,
        9839
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1899": {
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1900": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1902": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1904": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1905": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1906": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1907": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1909": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1910": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1911": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1912": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1914": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1915": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1916": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1917": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1918": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1919": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1920": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "ADD",
      "path": "16"
    },
    "1921": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1922": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "ADD",
      "path": "16"
    },
    "1923": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1924": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1925": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1926": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1927": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1928": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1929": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1930": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "ADD",
      "path": "16"
    },
    "1931": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1932": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1933": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "ADD",
      "path": "16"
    },
    "1934": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1935": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1936": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1937": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1938": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1939": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1940": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1941": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1942": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1943": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1944": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1945": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "LT",
      "path": "16"
    },
    "1946": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A2"
    },
    "1949": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1950": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1952": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1953": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1954": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1955": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1957": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1958": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1959": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1960": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1962": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1963": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1964": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1965": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "ADD",
      "path": "16"
    },
    "1966": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1973": {
      "op": "SHL"
    },
    "1974": {
      "op": "SUB"
    },
    "1975": {
      "offset": [
        2508,
        2581
      ],
      "op": "AND",
      "path": "16"
    },
    "1976": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "offset": [
        2508,
        2581
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1979": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2508,
        2581
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "jump": "o",
      "offset": [
        2508,
        2581
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1983": {
      "offset": [
        2470,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1984": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1986": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1987": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1988": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1989": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1990": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "LT",
      "path": "16"
    },
    "1991": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7CF"
    },
    "1994": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1995": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1997": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1998": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1999": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2000": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2002": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2003": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2004": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2005": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2007": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2008": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2009": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2010": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "ADD",
      "path": "16"
    },
    "2011": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "op": "SUB"
    },
    "2020": {
      "offset": [
        2470,
        2501
      ],
      "op": "AND",
      "path": "16"
    },
    "2021": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2470,
        2501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "offset": [
        2470,
        2501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2024": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        2470,
        2501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2025": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2026": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2028": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2038": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 8
    },
    "2039": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2040": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81C"
    },
    "2043": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2044": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2046": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2053": {
      "op": "SHL"
    },
    "2054": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2055": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2056": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2058": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2059": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "2062": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2063": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238A"
    },
    "2066": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2067": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2068": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2070": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2071": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2072": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2073": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "2074": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2075": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2076": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2077": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3533
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 9,
      "value": "0x11"
    },
    "2079": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2080": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2081": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2083": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2084": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "ADD",
      "path": "16"
    },
    "2085": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2086": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2089": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2090": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2091": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2092": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2093": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "2126": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "ADD",
      "path": "16"
    },
    "2127": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2128": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "op": "NOT"
    },
    "2138": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "AND",
      "path": "16"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2148": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2149": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2150": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "AND",
      "path": "16"
    },
    "2151": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2152": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2153": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2154": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "OR",
      "path": "16"
    },
    "2155": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2156": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3519,
        3548
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2157": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "o",
      "offset": [
        3449,
        3555
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2158": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7420,
        7667
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2159": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7459,
        7463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2161": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7474,
        7505
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2162": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7530,
        7572
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E"
    },
    "2183": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7474,
        7573
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2184": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7474,
        7573
      ],
      "op": "POP",
      "path": "16"
    },
    "2185": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7587,
        7598
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2187": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7612
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "op": "SUB"
    },
    "2196": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7628
      ],
      "op": "AND",
      "path": "16"
    },
    "2197": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7628
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFEAF968C"
    },
    "2202": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2204": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2205": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2206": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2211": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "AND",
      "path": "16"
    },
    "2212": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "2214": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "SHL",
      "path": "16"
    },
    "2215": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2216": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2217": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2219": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ADD",
      "path": "16"
    },
    "2220": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "2222": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2224": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2225": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2226": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2227": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "SUB",
      "path": "16"
    },
    "2228": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2229": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2230": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "GAS",
      "path": "16"
    },
    "2231": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2232": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2233": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2234": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2235": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C8"
    },
    "2238": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2239": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2240": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2242": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2243": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2244": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2245": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2247": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2248": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2249": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "POP",
      "path": "16"
    },
    "2250": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "POP",
      "path": "16"
    },
    "2251": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "POP",
      "path": "16"
    },
    "2252": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "POP",
      "path": "16"
    },
    "2253": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2255": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2256": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2257": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2259": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "NOT",
      "path": "16"
    },
    "2260": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2262": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2263": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ADD",
      "path": "16"
    },
    "2264": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "AND",
      "path": "16"
    },
    "2265": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2266": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ADD",
      "path": "16"
    },
    "2267": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2268": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2270": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2271": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "POP",
      "path": "16"
    },
    "2272": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2273": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "ADD",
      "path": "16"
    },
    "2274": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2275": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8EC"
    },
    "2278": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2279": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2280": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23D9"
    },
    "2283": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7603,
        7630
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2284": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7603,
        7630
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7583,
        7630
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "2287": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7420,
        7667
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "op": "POP"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "op": "POP"
    },
    "2294": {
      "fn": "DailyRocket.getTime",
      "jump": "o",
      "offset": [
        7420,
        7667
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2295": {
      "offset": [
        2036,
        2110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2296": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "2298": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2300": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2301": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2302": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2303": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2305": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2306": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2307": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2308": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2310": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2311": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2312": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2313": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2314": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2315": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2316": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "ADD",
      "path": "16"
    },
    "2317": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2318": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "ADD",
      "path": "16"
    },
    "2319": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2320": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2321": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2322": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2323": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2324": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2325": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2326": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "ADD",
      "path": "16"
    },
    "2327": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2328": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2329": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "ADD",
      "path": "16"
    },
    "2330": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2331": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2332": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2333": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2334": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2335": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2336": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2337": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2338": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2339": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2340": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2341": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "LT",
      "path": "16"
    },
    "2342": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A2"
    },
    "2345": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2346": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2348": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2349": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2036,
        2110
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2350": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2351": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9056,
        9073
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2353": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9075,
        9099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2355": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9157,
        9166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93A"
    },
    "2358": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9157,
        9164
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "2361": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9157,
        9166
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2362": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9157,
        9166
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2363": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9128,
        9136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2365": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9128,
        9136
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "op": "SUB"
    },
    "2374": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9128,
        9136
      ],
      "op": "AND",
      "path": "16"
    },
    "2375": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2377": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2378": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2379": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2380": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2382": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2384": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2385": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2387": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2388": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2389": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9137
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2390": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x962"
    },
    "2393": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2394": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9140,
        9153
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x15180"
    },
    "2398": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "2401": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9115,
        9153
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2402": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2403": {
      "branch": 59,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9115,
        9166
      ],
      "op": "EQ",
      "path": "16"
    },
    "2404": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9111,
        9268
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2405": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9111,
        9268
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x993"
    },
    "2408": {
      "branch": 59,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9111,
        9268
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2409": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 10,
      "value": "0x40"
    },
    "2411": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2412": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2413": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9253,
        9254
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2415": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2417": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2418": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "ADD",
      "path": "16"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9196,
        9200
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 11,
      "value": "0x1"
    },
    "2422": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9196,
        9200
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9196,
        9200
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2425": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9196,
        9200
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2426": {
      "op": "ADD"
    },
    "2427": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2428": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2430": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2431": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2433": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2434": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2435": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "SUB",
      "path": "16"
    },
    "2436": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "SUB",
      "path": "16"
    },
    "2437": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2438": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2439": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2440": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2442": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9228,
        9256
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2443": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2444": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "POP",
      "path": "16"
    },
    "2445": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2446": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "POP",
      "path": "16"
    },
    "2447": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA37"
    },
    "2450": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9214,
        9257
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2451": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9111,
        9268
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2452": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2454": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9314
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2455": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9305
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2457": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9305
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2458": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2460": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2461": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B1"
    },
    "2464": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9317
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2465": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9316,
        9317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2467": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9316,
        9317
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2474": {
      "op": "SHL"
    },
    "2475": {
      "op": "SUB"
    },
    "2476": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9314
      ],
      "op": "AND",
      "path": "16"
    },
    "2477": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2441"
    },
    "2480": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9306,
        9317
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2481": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9306,
        9317
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2488": {
      "op": "SHL"
    },
    "2489": {
      "op": "SUB"
    },
    "2490": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "AND",
      "path": "16"
    },
    "2491": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2492": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2493": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2495": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "ADD",
      "path": "16"
    },
    "2496": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2497": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2498": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2499": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2501": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "ADD",
      "path": "16"
    },
    "2502": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2504": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2505": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9318
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2506": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9321,
        9334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "2509": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9D6"
    },
    "2512": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9334
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2513": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9334
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2514": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "2517": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9293,
        9334
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2518": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9293,
        9334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2519": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9281,
        9290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9DE"
    },
    "2522": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9281,
        9288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "2525": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9281,
        9290
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2526": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9281,
        9290
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2527": {
      "branch": 60,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9281,
        9334
      ],
      "op": "GT",
      "path": "16"
    },
    "2528": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9277,
        9434
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2529": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9277,
        9434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9FD"
    },
    "2532": {
      "branch": 60,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9277,
        9434
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2533": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9365,
        9369
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 12,
      "value": "0x1"
    },
    "2535": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9350,
        9369
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2536": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9350,
        9369
      ],
      "op": "POP",
      "path": "16"
    },
    "2537": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9391,
        9395
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x1"
    },
    "2539": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9419,
        9420
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2540": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2542": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2543": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2545": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "ADD",
      "path": "16"
    },
    "2546": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97B"
    },
    "2549": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9397,
        9422
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2550": {
      "op": "DUP2"
    },
    "2551": {
      "op": "MSTORE"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "op": "ADD"
    },
    "2555": {
      "op": "SWAP1"
    },
    "2556": {
      "op": "JUMP"
    },
    "2557": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9277,
        9434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2558": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9457,
        9466
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 14
    },
    "2559": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9457,
        9466
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2560": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2561": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2562": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2564": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "ADD",
      "path": "16"
    },
    "2565": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2567": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2568": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2569": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DIV",
      "path": "16"
    },
    "2570": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "MUL",
      "path": "16"
    },
    "2571": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2573": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "ADD",
      "path": "16"
    },
    "2574": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2576": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2577": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2578": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2579": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "ADD",
      "path": "16"
    },
    "2580": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2582": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2583": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2584": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2585": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2586": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2587": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2588": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2589": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2590": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2591": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2593": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "ADD",
      "path": "16"
    },
    "2594": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2595": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2596": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2597": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2598": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2599": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "2600": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2602": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2603": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "ADD",
      "path": "16"
    },
    "2604": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2605": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2606": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2607": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2608": {
      "op": "POP"
    },
    "2609": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2610": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9443,
        9466
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "op": "POP"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2616": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2617": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "POP",
      "path": "16"
    },
    "2618": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2619": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2620": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8977,
        9482
      ],
      "op": "POP",
      "path": "16"
    },
    "2621": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "o",
      "offset": [
        8977,
        9482
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2622": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2623": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2625": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "op": "SUB"
    },
    "2634": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2635": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2636": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2637": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA68"
    },
    "2640": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2641": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2643": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2652": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2653": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2655": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2656": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "2659": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2660": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238A"
    },
    "2663": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2664": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xA72"
    },
    "2668": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB7"
    },
    "2673": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2675": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2676": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2677": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2679": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "op": "SUB"
    },
    "2688": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2689": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2690": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2691": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9E"
    },
    "2694": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2695": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2697": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2706": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2707": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2709": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2710": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "2713": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2714": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238A"
    },
    "2717": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2718": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2719": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3676
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x5"
    },
    "2721": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2722": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2723": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2725": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2726": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "ADD",
      "path": "16"
    },
    "2727": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2728": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2731": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2732": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2733": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2734": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2735": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2736": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2737": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE1"
    },
    "2740": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2741": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2774": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "ADD",
      "path": "16"
    },
    "2775": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2776": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2778": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2779": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "ADD",
      "path": "16"
    },
    "2780": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2781": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E0A"
    },
    "2784": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3659,
        3689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2785": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3659,
        3689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3720
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x6"
    },
    "2789": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2790": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2791": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2793": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2794": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2795": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "ADD",
      "path": "16"
    },
    "2796": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2797": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2800": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2801": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2802": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2803": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2804": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2837": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "ADD",
      "path": "16"
    },
    "2838": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2839": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "op": "SUB"
    },
    "2848": {
      "op": "NOT"
    },
    "2849": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "AND",
      "path": "16"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "op": "SUB"
    },
    "2858": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2859": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "AND",
      "path": "16"
    },
    "2860": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "OR",
      "path": "16"
    },
    "2861": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2862": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3699,
        3738
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2863": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 18,
      "value": "0x40"
    },
    "2865": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2866": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3759
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "2868": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3759
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2869": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB3F"
    },
    "2872": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2873": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3760,
        3766
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2874": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3760,
        3766
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2875": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "2878": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3748,
        3767
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2879": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2880": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2881": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2882": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2883": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2885": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2886": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2887": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2888": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2889": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SUB",
      "path": "16"
    },
    "2890": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2892": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "ADD",
      "path": "16"
    },
    "2893": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2894": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3767
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2895": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2896": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2897": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2898": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2899": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2902": {
      "op": "NOT"
    },
    "2903": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2904": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2905": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "AND",
      "path": "16"
    },
    "2906": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2907": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2908": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2909": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "OR",
      "path": "16"
    },
    "2910": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2911": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3748,
        3774
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        3565,
        3781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2915": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 19
    },
    "2925": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "AND",
      "path": "16"
    },
    "2926": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8767,
        8771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2928": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2929": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2930": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2931": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8808
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2933": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2935": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2936": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2938": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2939": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2940": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8814
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2941": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2942": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2943": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB89"
    },
    "2946": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2947": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8815,
        8821
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2948": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8815,
        8821
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2949": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "2952": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8790,
        8822
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2953": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2954": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2955": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2956": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2957": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2959": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "ADD",
      "path": "16"
    },
    "2960": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2962": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2963": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2964": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2965": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SUB",
      "path": "16"
    },
    "2966": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2967": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2968": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8822
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2969": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8826,
        8827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2971": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8827
      ],
      "op": "EQ",
      "path": "16"
    },
    "2972": {
      "branch": 61,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8790,
        8827
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2973": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "2976": {
      "branch": 61,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2977": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2979": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2980": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2981": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8782,
        8828
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "DUP5",
      "path": "16",
      "statement": 20
    },
    "2991": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "AND",
      "path": "16"
    },
    "2992": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2994": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2995": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2996": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2997": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8924
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2999": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3001": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3002": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3004": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3005": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3006": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3007": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8930
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3008": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3009": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3010": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBCC"
    },
    "3013": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3014": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8931,
        8937
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3015": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8931,
        8937
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3016": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "3019": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8906,
        8938
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3020": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3021": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3022": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3023": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3024": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3026": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "ADD",
      "path": "16"
    },
    "3027": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3029": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3030": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3031": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3032": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SUB",
      "path": "16"
    },
    "3033": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3034": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3035": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8906,
        8938
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3036": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8868
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "3038": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3040": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8869,
        8873
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3047": {
      "op": "SHL"
    },
    "3048": {
      "op": "SUB"
    },
    "3049": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "AND",
      "path": "16"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3056": {
      "op": "SHL"
    },
    "3057": {
      "op": "SUB"
    },
    "3058": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "AND",
      "path": "16"
    },
    "3059": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3060": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3061": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3063": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "ADD",
      "path": "16"
    },
    "3064": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3065": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3066": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3067": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3069": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "ADD",
      "path": "16"
    },
    "3070": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3072": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8874
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3073": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8875,
        8881
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3074": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3076": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3077": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC0E"
    },
    "3080": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3081": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3082": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "3085": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8846,
        8882
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3086": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3087": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3088": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3089": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3090": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3092": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3093": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3094": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3096": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3097": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3098": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3099": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SUB",
      "path": "16"
    },
    "3100": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3101": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "ADD",
      "path": "16"
    },
    "3102": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3103": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8882
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "SUB"
    },
    "3112": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3113": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "AND",
      "path": "16"
    },
    "3114": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3116": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3117": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3118": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3119": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3120": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3121": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3122": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8891
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3123": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8902
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3124": {
      "branch": 62,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8846,
        8938
      ],
      "op": "EQ",
      "path": "16"
    },
    "3125": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC3D"
    },
    "3128": {
      "branch": 62,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3129": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3131": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3132": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3133": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8838,
        8939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8956,
        8960
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x1"
    },
    "3137": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3138": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3139": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "POP",
      "path": "16"
    },
    "3140": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "POP",
      "path": "16"
    },
    "3141": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8645,
        8967
      ],
      "op": "POP",
      "path": "16"
    },
    "3142": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        8645,
        8967
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3143": {
      "offset": [
        1956,
        2029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3144": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3146": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3148": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3149": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3150": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3151": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3153": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3154": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3155": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3156": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3158": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3159": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3160": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3161": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3162": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3163": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3164": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "ADD",
      "path": "16"
    },
    "3165": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3166": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "ADD",
      "path": "16"
    },
    "3167": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3168": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3169": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3170": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3171": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3172": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3173": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3174": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "ADD",
      "path": "16"
    },
    "3175": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3176": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3177": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "ADD",
      "path": "16"
    },
    "3178": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3179": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3180": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3181": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3182": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3183": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3184": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3185": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3186": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3187": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3188": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3189": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "LT",
      "path": "16"
    },
    "3190": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC7E"
    },
    "3193": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3194": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3196": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3197": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3198": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3199": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3200": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3202": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3203": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3205": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3207": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3208": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "ADD",
      "path": "16"
    },
    "3209": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3211": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3212": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "POP",
      "path": "16"
    },
    "3213": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3214": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "POP",
      "path": "16"
    },
    "3215": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "POP",
      "path": "16"
    },
    "3216": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "POP",
      "path": "16"
    },
    "3217": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3218": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1956,
        2029
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3219": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        1956,
        2029
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3220": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3221": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3919,
        3924
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3222": {
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3224": {
      "offset": [
        7979,
        8090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3225": {
      "offset": [
        7998,
        8015
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3227": {
      "offset": [
        7998,
        8022
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3228": {
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7994,
        8022
      ],
      "op": "LT",
      "path": "16"
    },
    "3230": {
      "offset": [
        7979,
        8090
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3231": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7979,
        8090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF0"
    },
    "3234": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7979,
        8090
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3235": {
      "offset": [
        8072,
        8078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3242": {
      "op": "SHL"
    },
    "3243": {
      "op": "SUB"
    },
    "3244": {
      "offset": [
        8051,
        8078
      ],
      "op": "AND",
      "path": "16"
    },
    "3245": {
      "offset": [
        8051,
        8065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "3247": {
      "offset": [
        8066,
        8067
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3248": {
      "offset": [
        8051,
        8068
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3249": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3250": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "LT",
      "path": "16"
    },
    "3252": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBF"
    },
    "3255": {
      "offset": [
        8051,
        8068
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3256": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBF"
    },
    "3259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "3262": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        8051,
        8068
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3263": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3264": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3266": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3267": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3268": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3269": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3271": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3272": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3273": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3274": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "ADD",
      "path": "16"
    },
    "3275": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8051,
        8068
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "offset": [
        8051,
        8068
      ],
      "op": "AND",
      "path": "16"
    },
    "3285": {
      "offset": [
        8051,
        8078
      ],
      "op": "EQ",
      "path": "16"
    },
    "3286": {
      "offset": [
        8043,
        8079
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCDE"
    },
    "3289": {
      "offset": [
        8043,
        8079
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3290": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8043,
        8079
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3292": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8043,
        8079
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3293": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8043,
        8079
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3294": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8043,
        8079
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3295": {
      "offset": [
        8024,
        8027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCE8"
    },
    "3299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x247F"
    },
    "3303": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        8024,
        8027
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "POP",
      "path": "16"
    },
    "3307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        8024,
        8027
      ],
      "op": "POP",
      "path": "16"
    },
    "3308": {
      "offset": [
        7979,
        8090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC98"
    },
    "3311": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7979,
        8090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3312": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7979,
        8090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3313": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7979,
        8090
      ],
      "op": "POP",
      "path": "16"
    },
    "3314": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3962
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x7"
    },
    "3316": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3963,
        3969
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3319": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD01"
    },
    "3323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3324": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "3328": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3951,
        3970
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3329": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3330": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3331": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3332": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3333": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3335": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3337": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3339": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SUB",
      "path": "16"
    },
    "3340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3342": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "ADD",
      "path": "16"
    },
    "3343": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3344": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3345": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "AND",
      "path": "16"
    },
    "3349": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3978
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3350": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3978
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3351": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3353": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3951,
        3978
      ],
      "op": "EQ",
      "path": "16"
    },
    "3354": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD22"
    },
    "3357": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3358": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3360": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3361": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3362": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3943,
        3979
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3363": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3365": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4001
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3366": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4004,
        4005
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4001
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3377": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4001
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3378": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4001
      ],
      "op": "AND",
      "path": "16"
    },
    "3379": {
      "branch": 64,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3993,
        4005
      ],
      "op": "GT",
      "path": "16"
    },
    "3380": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3989,
        4124
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3381": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3989,
        4124
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD8E"
    },
    "3384": {
      "branch": 64,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3989,
        4124
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3385": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4063
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 23,
      "value": "0x4"
    },
    "3387": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4063
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3388": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3390": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3391": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3393": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3394": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4066
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD56"
    },
    "3397": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4066
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3398": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4065,
        4066
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3400": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4065,
        4066
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4063
      ],
      "op": "AND",
      "path": "16"
    },
    "3410": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4066
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2441"
    },
    "3413": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4055,
        4066
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3414": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4055,
        4066
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3421": {
      "op": "SHL"
    },
    "3422": {
      "op": "SUB"
    },
    "3423": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "AND",
      "path": "16"
    },
    "3424": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3425": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3426": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3428": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "ADD",
      "path": "16"
    },
    "3429": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3430": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3431": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3432": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3434": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "ADD",
      "path": "16"
    },
    "3435": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3437": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3438": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4067
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3439": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4070,
        4083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "3442": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD7B"
    },
    "3445": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4083
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3446": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3447": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "3450": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4042,
        4083
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3451": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4042,
        4083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3452": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4029,
        4038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD83"
    },
    "3455": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4029,
        4036
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "3458": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4029,
        4038
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3459": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4029,
        4038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3460": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4029,
        4083
      ],
      "op": "GT",
      "path": "16"
    },
    "3461": {
      "branch": 65,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4029,
        4083
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3462": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD8E"
    },
    "3465": {
      "branch": 65,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3466": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3468": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3469": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3470": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4021,
        4084
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4232,
        4235
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3473": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4232,
        4235
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3474": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4150,
        4170
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0x8AC7230489E80000"
    },
    "3483": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4150,
        4170
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3490": {
      "op": "SHL"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4223,
        4235
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3493": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4223,
        4235
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3494": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4223,
        4235
      ],
      "op": "AND",
      "path": "16"
    },
    "3495": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4232,
        4235
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3496": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4232,
        4235
      ],
      "op": "AND",
      "path": "16"
    },
    "3497": {
      "branch": 66,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4223,
        4235
      ],
      "op": "EQ",
      "path": "16"
    },
    "3498": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE9"
    },
    "3501": {
      "branch": 66,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4269
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0xA"
    },
    "3504": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4269
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3505": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3507": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3508": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3517": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3518": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4281,
        4291
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3519": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3521": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ADD",
      "path": "16"
    },
    "3523": {
      "op": "MSTORE"
    },
    "3524": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4301,
        4305
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3527": {
      "op": "DUP3"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "MSTORE"
    },
    "3530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4316,
        4322
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3531": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4316,
        4322
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4269
      ],
      "op": "AND",
      "path": "16"
    },
    "3541": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4269
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3542": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4280
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "3547": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4280
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3553": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3555": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3556": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3557": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3558": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "SUB",
      "path": "16"
    },
    "3559": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3560": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3561": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "GAS",
      "path": "16"
    },
    "3562": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3563": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3564": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3565": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3566": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDFB"
    },
    "3569": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3570": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3571": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3573": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3574": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3575": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3576": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3578": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3579": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3580": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "POP",
      "path": "16"
    },
    "3581": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "POP",
      "path": "16"
    },
    "3582": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "POP",
      "path": "16"
    },
    "3583": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "POP",
      "path": "16"
    },
    "3584": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3586": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3587": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3588": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3590": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "NOT",
      "path": "16"
    },
    "3591": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3593": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3594": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ADD",
      "path": "16"
    },
    "3595": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "AND",
      "path": "16"
    },
    "3596": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3597": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ADD",
      "path": "16"
    },
    "3598": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3599": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3601": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3602": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "POP",
      "path": "16"
    },
    "3603": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3604": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "ADD",
      "path": "16"
    },
    "3605": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3606": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE1F"
    },
    "3609": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3610": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3611": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249A"
    },
    "3614": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4259,
        4307
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3615": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4307
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3616": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4323
      ],
      "op": "LT",
      "path": "16"
    },
    "3617": {
      "branch": 67,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4259,
        4323
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3618": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2A"
    },
    "3621": {
      "branch": 67,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3622": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3624": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3625": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3626": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4251,
        4324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3627": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4421,
        4494
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 25,
      "value": "0xE36"
    },
    "3630": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4453,
        4458
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3631": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4460,
        4470
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3632": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4480,
        4484
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3633": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4487,
        4493
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3634": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4421,
        4452
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B07"
    },
    "3637": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4421,
        4494
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3638": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4421,
        4494
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3639": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4591,
        4653
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 26,
      "value": "0xE61"
    },
    "3642": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4618,
        4623
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3643": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4633,
        4643
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3676": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4646,
        4652
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3677": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4591,
        4617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C11"
    },
    "3680": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4591,
        4653
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3681": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4591,
        4653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3682": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3684": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3685": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3686": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3689": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3690": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3691": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3692": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3699": {
      "op": "SHL"
    },
    "3700": {
      "op": "SUB"
    },
    "3701": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3702": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3703": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "AND",
      "path": "16"
    },
    "3704": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3705": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3706": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4896,
        4899
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3708": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4896,
        4899
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3709": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4896,
        4899
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3710": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4896,
        4899
      ],
      "op": "AND",
      "path": "16"
    },
    "3711": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3713": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3714": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3715": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3716": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3717": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3718": {
      "offset": [
        1250,
        1254
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "3721": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3722": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3723": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3724": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3725": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3726": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3727": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4974,
        4978
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3728": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3730": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3731": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3732": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3733": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3734": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3735": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5011,
        5026
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "3736": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "3738": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3739": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3740": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3741": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3742": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3743": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "3745": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3746": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3747": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3748": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3749": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3750": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4690,
        4710
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xD02AB486CEDC0000"
    },
    "3759": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC0"
    },
    "3761": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3762": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3763": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3764": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3765": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3770": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP11",
      "path": "16"
    },
    "3771": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "ADD",
      "path": "16"
    },
    "3772": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3773": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3774": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4792,
        5180
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3775": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "SWAP11",
      "path": "16"
    },
    "3776": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3777": {
      "op": "PUSH4",
      "value": "0x1B67C433"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3786": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3787": {
      "op": "DUP11"
    },
    "3788": {
      "op": "MLOAD"
    },
    "3789": {
      "op": "DUP11"
    },
    "3790": {
      "op": "AND"
    },
    "3791": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3793": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3794": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ADD",
      "path": "16"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "SWAP8"
    },
    "3797": {
      "op": "MLOAD"
    },
    "3798": {
      "op": "DUP10"
    },
    "3799": {
      "op": "AND"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3802": {
      "op": "DUP10"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "SWAP6"
    },
    "3806": {
      "op": "MLOAD"
    },
    "3807": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "3811": {
      "op": "AND"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3814": {
      "op": "DUP9"
    },
    "3815": {
      "op": "ADD"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "SWAP4"
    },
    "3818": {
      "op": "MLOAD"
    },
    "3819": {
      "op": "DUP8"
    },
    "3820": {
      "op": "AND"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3823": {
      "op": "DUP8"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "SWAP2"
    },
    "3827": {
      "op": "MLOAD"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3830": {
      "op": "DUP7"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "MSTORE"
    },
    "3833": {
      "op": "MLOAD"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3836": {
      "op": "DUP6"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "SWAP1"
    },
    "3840": {
      "op": "MLOAD"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3843": {
      "op": "DUP5"
    },
    "3844": {
      "op": "ADD"
    },
    "3845": {
      "op": "MSTORE"
    },
    "3846": {
      "op": "SWAP5"
    },
    "3847": {
      "op": "MLOAD"
    },
    "3848": {
      "op": "DUP4"
    },
    "3849": {
      "op": "AND"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3852": {
      "op": "DUP4"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "MSTORE"
    },
    "3855": {
      "op": "SWAP2"
    },
    "3856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5327
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5345
      ],
      "op": "AND",
      "path": "16"
    },
    "3890": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5345
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDB3E2198"
    },
    "3896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "3900": {
      "op": "ADD"
    },
    "3901": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3903": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3907": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "SUB",
      "path": "16"
    },
    "3909": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3912": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3913": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "GAS",
      "path": "16"
    },
    "3914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "CALL",
      "path": "16"
    },
    "3915": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3916": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3917": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF5B"
    },
    "3921": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3922": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3923": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3926": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3927": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3928": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3930": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3931": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3932": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3933": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3934": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3935": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3938": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3939": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3940": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3942": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "NOT",
      "path": "16"
    },
    "3943": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3945": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3946": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ADD",
      "path": "16"
    },
    "3947": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "AND",
      "path": "16"
    },
    "3948": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3949": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ADD",
      "path": "16"
    },
    "3950": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3951": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3953": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3954": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3955": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3956": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "ADD",
      "path": "16"
    },
    "3957": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF7F"
    },
    "3961": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3962": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3963": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249A"
    },
    "3966": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5317,
        5353
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3967": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5317,
        5353
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3968": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5301,
        5353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3969": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5301,
        5353
      ],
      "op": "POP",
      "path": "16"
    },
    "3970": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5636,
        5651
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3971": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5625,
        5633
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3972": {
      "branch": 68,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5625,
        5651
      ],
      "op": "LT",
      "path": "16"
    },
    "3973": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5621,
        5831
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3974": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5621,
        5831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE1"
    },
    "3977": {
      "branch": 68,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5621,
        5831
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3978": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5698,
        5701
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 27,
      "value": "0xA"
    },
    "3980": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5698,
        5701
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3981": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5671,
        5726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFC1"
    },
    "3984": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5671,
        5726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "op": "SUB"
    },
    "3993": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5698,
        5701
      ],
      "op": "AND",
      "path": "16"
    },
    "3994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5711,
        5721
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4027": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5698,
        5701
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4029": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5671,
        5697
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C11"
    },
    "4032": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5671,
        5726
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5671,
        5726
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4034": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5772,
        5775
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0xA"
    },
    "4036": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5772,
        5775
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4037": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5744,
        5816
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE1"
    },
    "4040": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5744,
        5816
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4047": {
      "op": "SHL"
    },
    "4048": {
      "op": "SUB"
    },
    "4049": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5772,
        5775
      ],
      "op": "AND",
      "path": "16"
    },
    "4050": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5777,
        5787
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4051": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5789,
        5815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFDC"
    },
    "4054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5807,
        5815
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4055": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5789,
        5804
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4056": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5789,
        5815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24B3"
    },
    "4059": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5789,
        5815
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5789,
        5815
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5744,
        5771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D11"
    },
    "4064": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5744,
        5816
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4065": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5744,
        5816
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4066": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4237,
        5841
      ],
      "op": "POP",
      "path": "16"
    },
    "4067": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4237,
        5841
      ],
      "op": "POP",
      "path": "16"
    },
    "4068": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4237,
        5841
      ],
      "op": "POP",
      "path": "16"
    },
    "4069": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10E3"
    },
    "4072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5880
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0xA"
    },
    "4076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5880
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4080": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4089": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4090": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5892,
        5902
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4093": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4094": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ADD",
      "path": "16"
    },
    "4095": {
      "op": "MSTORE"
    },
    "4096": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5912,
        5916
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4099": {
      "op": "DUP3"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5927,
        5933
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4103": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5927,
        5933
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4110": {
      "op": "SHL"
    },
    "4111": {
      "op": "SUB"
    },
    "4112": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5880
      ],
      "op": "AND",
      "path": "16"
    },
    "4113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5880
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4114": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5891
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "4119": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4125": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4127": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4128": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4129": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4130": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "SUB",
      "path": "16"
    },
    "4131": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4132": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4133": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "GAS",
      "path": "16"
    },
    "4134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4136": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4137": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4138": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1037"
    },
    "4141": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4142": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4143": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4145": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4146": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4147": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4148": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4152": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "POP",
      "path": "16"
    },
    "4153": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "POP",
      "path": "16"
    },
    "4154": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "POP",
      "path": "16"
    },
    "4155": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "POP",
      "path": "16"
    },
    "4156": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4158": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4159": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4160": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4162": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "NOT",
      "path": "16"
    },
    "4163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ADD",
      "path": "16"
    },
    "4167": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "AND",
      "path": "16"
    },
    "4168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ADD",
      "path": "16"
    },
    "4170": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4173": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4174": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "POP",
      "path": "16"
    },
    "4175": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4176": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "ADD",
      "path": "16"
    },
    "4177": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4178": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x105B"
    },
    "4181": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4182": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4183": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249A"
    },
    "4186": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5870,
        5918
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4187": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5918
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5934
      ],
      "op": "LT",
      "path": "16"
    },
    "4189": {
      "branch": 69,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5870,
        5934
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4190": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1066"
    },
    "4193": {
      "branch": 69,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4194": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4196": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4198": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5862,
        5935
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4199": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0xA"
    },
    "4201": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4202": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4204": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4205": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4215": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5970,
        5980
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4216": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4218": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4219": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ADD",
      "path": "16"
    },
    "4220": {
      "op": "MSTORE"
    },
    "4221": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5990,
        5994
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4229": {
      "op": "DUP2"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "DUP4"
    },
    "4232": {
      "op": "SWAP1"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4240": {
      "op": "SHL"
    },
    "4241": {
      "op": "SUB"
    },
    "4242": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4243": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4244": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "AND",
      "path": "16"
    },
    "4245": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4246": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        5969
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "4251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        5969
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4257": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4260": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4262": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "SUB",
      "path": "16"
    },
    "4263": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4264": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4266": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4267": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "GAS",
      "path": "16"
    },
    "4268": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "CALL",
      "path": "16"
    },
    "4269": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4270": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4271": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4272": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10BD"
    },
    "4275": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4276": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4277": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4280": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4281": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4282": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4285": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4286": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4287": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4289": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4290": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4292": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4293": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4294": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "NOT",
      "path": "16"
    },
    "4297": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ADD",
      "path": "16"
    },
    "4301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "AND",
      "path": "16"
    },
    "4302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4303": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ADD",
      "path": "16"
    },
    "4304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4309": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4310": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "ADD",
      "path": "16"
    },
    "4311": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4312": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10E1"
    },
    "4315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4316": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2341"
    },
    "4320": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5945,
        6010
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4321": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4322": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5945,
        6010
      ],
      "op": "POP",
      "path": "16"
    },
    "4323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4219,
        6030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4324": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6059,
        6067
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x4"
    },
    "4326": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6059,
        6067
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4333": {
      "op": "SHL"
    },
    "4334": {
      "op": "SUB"
    },
    "4335": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6059,
        6067
      ],
      "op": "AND",
      "path": "16"
    },
    "4336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4339": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4341": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4343": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4345": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4349": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4350": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4351": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4352": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4353": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4354": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6080,
        6086
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4355": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6080,
        6086
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4356": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4357": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110F"
    },
    "4360": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4361": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6069,
        6075
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4362": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6069,
        6075
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4363": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "4366": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6039,
        6076
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4367": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4370": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4371": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4373": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "ADD",
      "path": "16"
    },
    "4374": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4376": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4377": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4378": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4379": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SUB",
      "path": "16"
    },
    "4380": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4381": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4382": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4384": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4385": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4386": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4387": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x112C"
    },
    "4390": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4391": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4392": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "4395": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6039,
        6086
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4396": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4397": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4398": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "POP",
      "path": "16"
    },
    "4399": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "POP",
      "path": "16"
    },
    "4400": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4401": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4402": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4403": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6039,
        6086
      ],
      "op": "POP",
      "path": "16"
    },
    "4404": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 32,
      "value": "0x40"
    },
    "4406": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4407": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4408": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4410": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4411": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4413": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4414": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4415": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6216,
        6227
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4416": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4417": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4418": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4420": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4421": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6241,
        6250
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114C"
    },
    "4424": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6241,
        6248
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "4427": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6241,
        6250
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4428": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6241,
        6250
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4429": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4430": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4431": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6264,
        6269
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4433": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4435": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4436": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4437": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4438": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4439": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4440": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6192,
        6279
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4441": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6160,
        6168
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4443": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6160,
        6168
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4450": {
      "op": "SHL"
    },
    "4451": {
      "op": "SUB"
    },
    "4452": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6160,
        6168
      ],
      "op": "AND",
      "path": "16"
    },
    "4453": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4454": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4455": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4457": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4458": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4459": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4460": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4462": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4463": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4464": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4465": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6169
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4466": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4467": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4468": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x117E"
    },
    "4471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4472": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6170,
        6176
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4473": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6170,
        6176
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4474": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "4477": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6137,
        6177
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4478": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4479": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4480": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4481": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4482": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4484": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4485": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4486": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4488": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4489": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4490": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4491": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "SUB",
      "path": "16"
    },
    "4492": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4493": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "ADD",
      "path": "16"
    },
    "4494": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4495": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6177
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4496": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6178,
        6188
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4497": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4499": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4500": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4501": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4503": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4504": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4505": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4506": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4507": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6189
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4508": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4509": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4510": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4511": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4512": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4513": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4514": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4515": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4516": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4518": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4519": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4520": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4521": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4523": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4524": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4525": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4527": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4528": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "4529": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ADD",
      "path": "16"
    },
    "4530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4531": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4534": {
      "op": "NOT"
    },
    "4535": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "AND",
      "path": "16"
    },
    "4536": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "4537": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4538": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4539": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "4540": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4541": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "4542": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "OR",
      "path": "16"
    },
    "4543": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4544": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4545": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6137,
        6279
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4546": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6350,
        6358
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 33,
      "value": "0x4"
    },
    "4548": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6350,
        6358
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4555": {
      "op": "SHL"
    },
    "4556": {
      "op": "SUB"
    },
    "4557": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6350,
        6358
      ],
      "op": "AND",
      "path": "16"
    },
    "4558": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4559": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4560": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6349
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "4562": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4563": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4564": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4565": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4566": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4567": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4568": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6359
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4569": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11E3"
    },
    "4572": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4573": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6360,
        6366
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4574": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6360,
        6366
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4575": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "4578": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6331,
        6367
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4579": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4580": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4581": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4582": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4583": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4585": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4586": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4587": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4588": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4589": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4590": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SUB",
      "path": "16"
    },
    "4591": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4593": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4594": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4595": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "ADD",
      "path": "16"
    },
    "4596": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4597": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6367
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4598": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4599": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4600": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4602": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4603": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "ADD",
      "path": "16"
    },
    "4604": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4605": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4609": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4610": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4611": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4612": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4613": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4614": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "ADD",
      "path": "16"
    },
    "4615": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4616": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4617": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6331,
        6385
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4618": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6463,
        6471
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 34,
      "value": "0x4"
    },
    "4620": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6463,
        6471
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4627": {
      "op": "SHL"
    },
    "4628": {
      "op": "SUB"
    },
    "4629": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6463,
        6471
      ],
      "op": "AND",
      "path": "16"
    },
    "4630": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4631": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4632": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "4634": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4635": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4636": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4637": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4638": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6472
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4639": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1229"
    },
    "4642": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4643": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6473,
        6479
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4644": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6473,
        6479
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4645": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CE"
    },
    "4648": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6444,
        6480
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4649": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4650": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4651": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4652": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4653": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4655": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4656": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4658": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4659": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4660": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4661": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "SUB",
      "path": "16"
    },
    "4662": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4663": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "ADD",
      "path": "16"
    },
    "4664": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4665": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6480
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4666": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4667": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4668": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4670": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4671": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "ADD",
      "path": "16"
    },
    "4672": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4673": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4676": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4677": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4678": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4679": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4680": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4681": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4682": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4683": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "ADD",
      "path": "16"
    },
    "4684": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4685": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4686": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6486,
        6496
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4693": {
      "op": "SHL"
    },
    "4694": {
      "op": "SUB"
    },
    "4695": {
      "op": "NOT"
    },
    "4696": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4697": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4698": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "AND",
      "path": "16"
    },
    "4699": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4700": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "OR",
      "path": "16"
    },
    "4701": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4702": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4703": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6497
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4704": {
      "op": "DUP7"
    },
    "4705": {
      "op": "DUP3"
    },
    "4706": {
      "op": "MSTORE"
    },
    "4707": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6486,
        6496
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4708": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 35,
      "value": "0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F"
    },
    "4741": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4745": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4746": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4747": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4748": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "SUB",
      "path": "16"
    },
    "4749": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4750": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6513,
        6547
      ],
      "op": "LOG2",
      "path": "16"
    },
    "4751": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3930,
        6554
      ],
      "op": "POP",
      "path": "16"
    },
    "4752": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "POP",
      "path": "16"
    },
    "4753": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "POP",
      "path": "16"
    },
    "4754": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "POP",
      "path": "16"
    },
    "4755": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3787,
        6554
      ],
      "op": "POP",
      "path": "16"
    },
    "4756": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "o",
      "offset": [
        3787,
        6554
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4757": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4758": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7730,
        7733
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4760": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7744,
        7775
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4761": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "4763": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7822,
        7831
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4764": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4765": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4766": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4767": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "LT",
      "path": "16"
    },
    "4768": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12AB"
    },
    "4771": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4772": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12AB"
    },
    "4775": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "4778": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7800,
        7832
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4779": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4780": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4781": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4783": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4784": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4786": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4788": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4789": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "ADD",
      "path": "16"
    },
    "4790": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4792": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4793": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4794": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4795": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "4798": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "EXP",
      "path": "16"
    },
    "4799": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4800": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "DIV",
      "path": "16"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "op": "SUB"
    },
    "4809": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7800,
        7832
      ],
      "op": "AND",
      "path": "16"
    },
    "4810": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7744,
        7833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4811": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7744,
        7833
      ],
      "op": "POP",
      "path": "16"
    },
    "4812": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7845,
        7855
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4814": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7871
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "op": "SUB"
    },
    "4823": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7887
      ],
      "op": "AND",
      "path": "16"
    },
    "4824": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7887
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFEAF968C"
    },
    "4829": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4831": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4832": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4833": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4838": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "AND",
      "path": "16"
    },
    "4839": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "4841": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "SHL",
      "path": "16"
    },
    "4842": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4843": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4844": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4846": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ADD",
      "path": "16"
    },
    "4847": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "4849": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4851": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4852": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4853": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4854": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "SUB",
      "path": "16"
    },
    "4855": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4856": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4857": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "GAS",
      "path": "16"
    },
    "4858": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4859": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4860": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4861": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4862": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x130B"
    },
    "4865": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4866": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4867": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4869": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4870": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4871": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4872": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4874": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4875": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4876": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "POP",
      "path": "16"
    },
    "4877": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "POP",
      "path": "16"
    },
    "4878": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "POP",
      "path": "16"
    },
    "4879": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "POP",
      "path": "16"
    },
    "4880": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4882": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4883": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4884": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4886": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "NOT",
      "path": "16"
    },
    "4887": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4889": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4890": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ADD",
      "path": "16"
    },
    "4891": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "AND",
      "path": "16"
    },
    "4892": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4893": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ADD",
      "path": "16"
    },
    "4894": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4895": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4897": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4898": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "POP",
      "path": "16"
    },
    "4899": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4900": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "ADD",
      "path": "16"
    },
    "4901": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4902": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x132F"
    },
    "4905": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4906": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4907": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23D9"
    },
    "4910": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7862,
        7889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4911": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7862,
        7889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7843,
        7889
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4914": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7843,
        7889
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "4915": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7673,
        7925
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "POP"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "op": "POP"
    },
    "4923": {
      "fn": "DailyRocket.getPrice",
      "jump": "o",
      "offset": [
        7673,
        7925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4925": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4927": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4937": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4938": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4939": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1366"
    },
    "4942": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4943": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4945": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4952": {
      "op": "SHL"
    },
    "4953": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4954": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4955": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4957": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4958": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "4961": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4962": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238A"
    },
    "4965": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4966": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "4976": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CB"
    },
    "4980": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4990": {
      "op": "SHL"
    },
    "4991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4999": {
      "op": "MSTORE"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "ADD"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5042": {
      "op": "DUP3"
    },
    "5043": {
      "op": "ADD"
    },
    "5044": {
      "op": "MSTORE"
    },
    "5045": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5054": {
      "op": "SHL"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5057": {
      "op": "DUP3"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "MSTORE"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "5066": {
      "op": "JUMP"
    },
    "5067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x13D4"
    },
    "5071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB7"
    },
    "5075": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "5078": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5079": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3241,
        3443
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5080": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3295,
        3304
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5082": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5083": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3314,
        3335
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "5085": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3314,
        3342
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5086": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3310,
        3342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5087": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3310,
        3342
      ],
      "op": "LT",
      "path": "16"
    },
    "5088": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5089": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13D4"
    },
    "5092": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5093": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3415,
        3426
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 38,
      "value": "0x13ED"
    },
    "5096": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3424,
        3425
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5097": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3415,
        3423
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1295"
    },
    "5100": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3415,
        3426
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5101": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3415,
        3426
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5102": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3381,
        3389
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5104": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3381,
        3389
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3381,
        3389
      ],
      "op": "AND",
      "path": "16"
    },
    "5114": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5116": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5117": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5118": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5119": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3380
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "5121": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5123": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5124": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5126": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5127": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3390
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5128": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5130": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5131": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5132": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3409,
        3410
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5133": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3409,
        3410
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5134": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5135": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "LT",
      "path": "16"
    },
    "5136": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x141B"
    },
    "5139": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5140": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x141B"
    },
    "5143": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5146": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3391,
        3411
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5147": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5148": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5149": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5151": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5152": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5154": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5156": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5157": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3391,
        3411
      ],
      "op": "ADD",
      "path": "16"
    },
    "5158": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5160": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5161": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1432"
    },
    "5164": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5165": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5166": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5169": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3362,
        3412
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5170": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5171": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5172": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5173": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5174": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5176": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5177": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5178": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5179": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5180": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SUB",
      "path": "16"
    },
    "5181": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5183": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "ADD",
      "path": "16"
    },
    "5184": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5185": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3412
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5186": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3362,
        3426
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5187": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 39
    },
    "5188": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x144C"
    },
    "5191": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5192": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x247F"
    },
    "5195": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3344,
        3347
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5196": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5197": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5198": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "POP",
      "path": "16"
    },
    "5199": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3344,
        3347
      ],
      "op": "POP",
      "path": "16"
    },
    "5200": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13DA"
    },
    "5203": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3290,
        3437
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5204": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6560,
        7413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5205": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6622,
        6630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5207": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6622,
        6630
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "SUB"
    },
    "5216": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6622,
        6630
      ],
      "op": "AND",
      "path": "16"
    },
    "5217": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6608,
        6619
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5219": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5220": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6662,
        6679
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5222": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6662,
        6686
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5223": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6658,
        6686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5225": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6658,
        6686
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5226": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6658,
        6686
      ],
      "op": "AND",
      "path": "16"
    },
    "5227": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6658,
        6686
      ],
      "op": "LT",
      "path": "16"
    },
    "5228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5229": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18CB"
    },
    "5232": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5239": {
      "op": "SHL"
    },
    "5240": {
      "op": "SUB"
    },
    "5241": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 40
    },
    "5242": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "AND",
      "path": "16"
    },
    "5243": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5245": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5246": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5247": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5248": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6838
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5250": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5252": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5253": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5255": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5256": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6843
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5257": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6861
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5259": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5261": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5263": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "AND",
      "path": "16"
    },
    "5265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5266": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "LT",
      "path": "16"
    },
    "5268": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149F"
    },
    "5271": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5272": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149F"
    },
    "5275": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5278": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6844,
        6864
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5279": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5280": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5281": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5283": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5284": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5286": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6844,
        6864
      ],
      "op": "ADD",
      "path": "16"
    },
    "5290": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5292": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5293": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B6"
    },
    "5296": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5297": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5298": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5301": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6820,
        6865
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5302": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5303": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5304": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5305": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5306": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "ADD",
      "path": "16"
    },
    "5309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5311": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5313": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5314": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SUB",
      "path": "16"
    },
    "5315": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5316": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6865
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5317": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5318": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6872
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5319": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5320": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6820,
        6872
      ],
      "op": "POP",
      "path": "16"
    },
    "5321": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6750
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5323": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5325": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6754
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5332": {
      "op": "SHL"
    },
    "5333": {
      "op": "SUB"
    },
    "5334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "AND",
      "path": "16"
    },
    "5335": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5336": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5337": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5339": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "ADD",
      "path": "16"
    },
    "5340": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5341": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5342": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5343": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5345": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "ADD",
      "path": "16"
    },
    "5346": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6755
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5349": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6773
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5351": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6774,
        6775
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5352": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5354": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "AND",
      "path": "16"
    },
    "5355": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5356": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5358": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "LT",
      "path": "16"
    },
    "5359": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14FA"
    },
    "5362": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5363": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14FA"
    },
    "5366": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5369": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6756,
        6776
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5370": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5371": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5372": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5374": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5375": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5377": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5380": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6756,
        6776
      ],
      "op": "ADD",
      "path": "16"
    },
    "5381": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5383": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5384": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1511"
    },
    "5387": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5388": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5389": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5392": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6732,
        6777
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5393": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5394": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5395": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5396": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5397": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5399": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5400": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5401": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5402": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5403": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SUB",
      "path": "16"
    },
    "5404": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5406": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "ADD",
      "path": "16"
    },
    "5407": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5408": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6777
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5409": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6784
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5410": {
      "branch": 70,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6732,
        6872
      ],
      "op": "EQ",
      "path": "16"
    },
    "5411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x152B"
    },
    "5414": {
      "branch": 70,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5415": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5417": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5418": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5419": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6707,
        6886
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5420": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6905,
        6912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5422": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5429": {
      "op": "SHL"
    },
    "5430": {
      "op": "SUB"
    },
    "5431": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5432": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "AND",
      "path": "16"
    },
    "5433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5435": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5436": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5437": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5438": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6940
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5442": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5443": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5445": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5446": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6945
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5449": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5450": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5451": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5453": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5454": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "AND",
      "path": "16"
    },
    "5455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5456": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5457": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "LT",
      "path": "16"
    },
    "5458": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155D"
    },
    "5461": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155D"
    },
    "5465": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5468": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5469": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5470": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5473": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5474": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5476": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5479": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6946,
        6966
      ],
      "op": "ADD",
      "path": "16"
    },
    "5480": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5482": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1574"
    },
    "5486": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5487": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5488": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5491": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6922,
        6967
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5492": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5493": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5494": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5495": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5496": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5498": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5499": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5500": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5501": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SUB",
      "path": "16"
    },
    "5503": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "ADD",
      "path": "16"
    },
    "5506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6967
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5508": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6922,
        6974
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5509": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6918,
        6974
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5511": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6918,
        6974
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5512": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6918,
        6974
      ],
      "op": "AND",
      "path": "16"
    },
    "5513": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6918,
        6974
      ],
      "op": "LT",
      "path": "16"
    },
    "5514": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5515": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18B8"
    },
    "5518": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "SUB"
    },
    "5527": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 41
    },
    "5528": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "AND",
      "path": "16"
    },
    "5529": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5531": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5532": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5533": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5534": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7077
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "5536": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5538": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5539": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5541": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5542": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7082
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5543": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7100
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5546": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5547": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5549": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5550": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "AND",
      "path": "16"
    },
    "5551": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5552": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5553": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "LT",
      "path": "16"
    },
    "5554": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15BD"
    },
    "5557": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5558": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15BD"
    },
    "5561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5564": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7083,
        7103
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5565": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5566": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5567": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5569": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5572": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5574": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5575": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7083,
        7103
      ],
      "op": "ADD",
      "path": "16"
    },
    "5576": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5578": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5579": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D4"
    },
    "5582": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5583": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5584": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5587": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7059,
        7104
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5588": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5589": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5590": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5591": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5592": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5594": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "ADD",
      "path": "16"
    },
    "5595": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5598": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5599": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5600": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SUB",
      "path": "16"
    },
    "5601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5602": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7059,
        7104
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5604": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7025
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5606": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5608": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7026,
        7029
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5615": {
      "op": "SHL"
    },
    "5616": {
      "op": "SUB"
    },
    "5617": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "AND",
      "path": "16"
    },
    "5618": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5619": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5620": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5622": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "ADD",
      "path": "16"
    },
    "5623": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5624": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5625": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5626": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5628": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "ADD",
      "path": "16"
    },
    "5629": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5631": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7030
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5632": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7048
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5634": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7049,
        7050
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5635": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5637": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "AND",
      "path": "16"
    },
    "5638": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5639": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5640": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5641": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "LT",
      "path": "16"
    },
    "5642": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1615"
    },
    "5645": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5646": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1615"
    },
    "5649": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5652": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7031,
        7051
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5653": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5654": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5655": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5657": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5658": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5660": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5662": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5663": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7031,
        7051
      ],
      "op": "ADD",
      "path": "16"
    },
    "5664": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5666": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5667": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x162C"
    },
    "5670": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5671": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5672": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5675": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7007,
        7052
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5676": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5677": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5678": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5679": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5680": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5682": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "ADD",
      "path": "16"
    },
    "5683": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5685": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5686": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5687": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5688": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SUB",
      "path": "16"
    },
    "5689": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5690": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7052
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5691": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7053,
        7054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5692": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5694": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "AND",
      "path": "16"
    },
    "5695": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5696": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5697": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5698": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "LT",
      "path": "16"
    },
    "5699": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164E"
    },
    "5702": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5703": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164E"
    },
    "5706": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5709": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7007,
        7055
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5710": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5711": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5712": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5714": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5715": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5717": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5719": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5720": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "ADD",
      "path": "16"
    },
    "5721": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7055
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5722": {
      "branch": 71,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7007,
        7104
      ],
      "op": "EQ",
      "path": "16"
    },
    "5723": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1663"
    },
    "5726": {
      "branch": 71,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5727": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5729": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5730": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5731": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6999,
        7105
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5738": {
      "op": "SHL"
    },
    "5739": {
      "op": "SUB"
    },
    "5740": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 42
    },
    "5741": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "AND",
      "path": "16"
    },
    "5742": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5744": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5745": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5746": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5747": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7140
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "5749": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5751": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5752": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5754": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5755": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7145
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5756": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5758": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5759": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5760": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5762": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5763": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "AND",
      "path": "16"
    },
    "5764": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5765": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5766": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "LT",
      "path": "16"
    },
    "5767": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1692"
    },
    "5770": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5771": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1692"
    },
    "5774": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5777": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7146,
        7166
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5778": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5779": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5780": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5782": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5783": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5785": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5787": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5788": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7166
      ],
      "op": "ADD",
      "path": "16"
    },
    "5789": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5792": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16A9"
    },
    "5795": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5796": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5797": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5800": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7123,
        7167
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5801": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5802": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5803": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5804": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5805": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5807": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "ADD",
      "path": "16"
    },
    "5808": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5810": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5811": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5812": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5813": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SUB",
      "path": "16"
    },
    "5814": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5815": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7167
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5816": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5818": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7192,
        7195
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5827": {
      "op": "SHL"
    },
    "5828": {
      "op": "SUB"
    },
    "5829": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "AND",
      "path": "16"
    },
    "5830": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5831": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5832": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5834": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "ADD",
      "path": "16"
    },
    "5835": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5836": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5837": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5838": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5840": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "ADD",
      "path": "16"
    },
    "5841": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7196
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5844": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5846": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7215,
        7216
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5847": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5849": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "AND",
      "path": "16"
    },
    "5850": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5851": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5852": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5853": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "LT",
      "path": "16"
    },
    "5854": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16E9"
    },
    "5857": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5858": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16E9"
    },
    "5861": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5864": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7197,
        7217
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5865": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5866": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5867": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5869": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5870": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5872": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5875": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7197,
        7217
      ],
      "op": "ADD",
      "path": "16"
    },
    "5876": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5878": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5879": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1700"
    },
    "5882": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "5887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7173,
        7218
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5888": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5890": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5891": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5892": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5894": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "ADD",
      "path": "16"
    },
    "5895": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5897": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5898": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5899": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5900": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SUB",
      "path": "16"
    },
    "5901": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5902": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7218
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5903": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7219,
        7220
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5904": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5906": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "AND",
      "path": "16"
    },
    "5907": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5910": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "LT",
      "path": "16"
    },
    "5911": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1722"
    },
    "5914": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5915": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1722"
    },
    "5918": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "5921": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7173,
        7221
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5922": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5923": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5925": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5926": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5927": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5928": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5931": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5932": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5933": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5934": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5935": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "ADD",
      "path": "16"
    },
    "5936": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5937": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5939": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5941": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5943": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "ADD",
      "path": "16"
    },
    "5944": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5946": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "5947": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5948": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5949": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5950": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5951": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5952": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "ADD",
      "path": "16"
    },
    "5953": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5954": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5961": {
      "op": "SHL"
    },
    "5962": {
      "op": "SUB"
    },
    "5963": {
      "op": "NOT"
    },
    "5964": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "AND",
      "path": "16"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5971": {
      "op": "SHL"
    },
    "5972": {
      "op": "SUB"
    },
    "5973": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5974": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5975": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7173,
        7221
      ],
      "op": "AND",
      "path": "16"
    },
    "5976": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5977": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5978": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5979": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "OR",
      "path": "16"
    },
    "5980": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5981": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7222
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5988": {
      "op": "SHL"
    },
    "5989": {
      "op": "SUB"
    },
    "5990": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "DUP7",
      "path": "16",
      "statement": 43
    },
    "5991": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "AND",
      "path": "16"
    },
    "5992": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5993": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5994": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7259
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "5996": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5997": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5998": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6000": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6001": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7264
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6002": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6005": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6006": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6008": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6009": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "AND",
      "path": "16"
    },
    "6010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6012": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "LT",
      "path": "16"
    },
    "6013": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1788"
    },
    "6016": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6017": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1788"
    },
    "6020": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "6023": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7265,
        7285
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6024": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6025": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6026": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6028": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6029": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6031": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6033": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6034": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7265,
        7285
      ],
      "op": "ADD",
      "path": "16"
    },
    "6035": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6037": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6038": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x179F"
    },
    "6041": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6042": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6043": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "6046": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7240,
        7286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6047": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6048": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6049": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6050": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6051": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6053": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "ADD",
      "path": "16"
    },
    "6054": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6056": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6057": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6058": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6059": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SUB",
      "path": "16"
    },
    "6060": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6061": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6062": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6064": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6065": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6066": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6067": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17BC"
    },
    "6070": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6071": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6072": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "6075": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7240,
        7290
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6076": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6077": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6078": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6079": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7290
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6080": {
      "op": "POP"
    },
    "6081": {
      "op": "POP"
    },
    "6082": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 44,
      "value": "0x3"
    },
    "6084": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6091": {
      "op": "SHL"
    },
    "6092": {
      "op": "SUB"
    },
    "6093": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6094": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "AND",
      "path": "16"
    },
    "6095": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6097": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6098": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6099": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6100": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7351
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6102": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6104": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6105": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6107": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6108": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6109": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6111": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6112": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6122": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6123": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "AND",
      "path": "16"
    },
    "6124": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7319
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6125": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7332
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8EBFA8AE"
    },
    "6130": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7332
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6131": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7356
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6132": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6133": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6135": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6136": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "AND",
      "path": "16"
    },
    "6137": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6138": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6139": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "LT",
      "path": "16"
    },
    "6140": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1807"
    },
    "6143": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6144": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1807"
    },
    "6147": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "6150": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7357,
        7377
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6151": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6152": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6153": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6155": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6156": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6158": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6160": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6161": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7357,
        7377
      ],
      "op": "ADD",
      "path": "16"
    },
    "6162": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6164": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6165": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181E"
    },
    "6168": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6169": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6170": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "6173": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7333,
        7378
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6174": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6175": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6176": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6177": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6178": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6180": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "ADD",
      "path": "16"
    },
    "6181": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6183": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6184": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6185": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6186": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SUB",
      "path": "16"
    },
    "6187": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6188": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7378
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6189": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7379,
        7380
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6190": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6192": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "AND",
      "path": "16"
    },
    "6193": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6194": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6195": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6196": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "LT",
      "path": "16"
    },
    "6197": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1840"
    },
    "6200": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6201": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1840"
    },
    "6204": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "6207": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7333,
        7381
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6208": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6209": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6211": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6212": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6213": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6214": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6216": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6217": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6218": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6219": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "ADD",
      "path": "16"
    },
    "6220": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6221": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6223": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6224": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "6226": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6227": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "SHL",
      "path": "16"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6235": {
      "op": "SHL"
    },
    "6236": {
      "op": "SUB"
    },
    "6237": {
      "op": "NOT"
    },
    "6238": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "AND",
      "path": "16"
    },
    "6239": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6240": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6247": {
      "op": "SHL"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6250": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6251": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7333,
        7381
      ],
      "op": "AND",
      "path": "16"
    },
    "6252": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6254": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6255": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "ADD",
      "path": "16"
    },
    "6256": {
      "op": "MSTORE"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6259": {
      "op": "ADD"
    },
    "6260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6262": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6266": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "SUB",
      "path": "16"
    },
    "6268": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6269": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6271": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6272": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6273": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "6274": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6275": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6276": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6277": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188D"
    },
    "6280": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6281": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6283": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6284": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6285": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6286": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "POP",
      "path": "16"
    },
    "6287": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "GAS",
      "path": "16"
    },
    "6288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "CALL",
      "path": "16"
    },
    "6289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6290": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6291": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6292": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18A1"
    },
    "6295": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6296": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6297": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6299": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6300": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6301": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6302": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6304": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6305": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6306": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "POP",
      "path": "16"
    },
    "6307": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "POP",
      "path": "16"
    },
    "6308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "POP",
      "path": "16"
    },
    "6309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7309,
        7382
      ],
      "op": "POP",
      "path": "16"
    },
    "6310": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 45
    },
    "6311": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18B0"
    },
    "6315": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6316": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25A1"
    },
    "6319": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6976,
        6979
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6320": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6321": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6322": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "POP",
      "path": "16"
    },
    "6323": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6976,
        6979
      ],
      "op": "POP",
      "path": "16"
    },
    "6324": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x152E"
    },
    "6327": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6328": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6900,
        7397
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 46
    },
    "6331": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18C3"
    },
    "6334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6335": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25A1"
    },
    "6338": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6688,
        6691
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6339": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6340": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6341": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "POP",
      "path": "16"
    },
    "6342": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6688,
        6691
      ],
      "op": "POP",
      "path": "16"
    },
    "6343": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1463"
    },
    "6346": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6347": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6640,
        7407
      ],
      "op": "POP",
      "path": "16"
    },
    "6349": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6598,
        7413
      ],
      "op": "POP",
      "path": "16"
    },
    "6350": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "o",
      "offset": [
        6560,
        7413
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6351": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9906,
        10446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6352": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9986
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 47,
      "value": "0x4"
    },
    "6354": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9986
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6355": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "6357": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6358": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6360": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6361": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9989
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18ED"
    },
    "6364": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9989
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6365": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9988,
        9989
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6367": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9988,
        9989
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6374": {
      "op": "SHL"
    },
    "6375": {
      "op": "SUB"
    },
    "6376": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9986
      ],
      "op": "AND",
      "path": "16"
    },
    "6377": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9989
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2441"
    },
    "6380": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9978,
        9989
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6381": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9978,
        9989
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6388": {
      "op": "SHL"
    },
    "6389": {
      "op": "SUB"
    },
    "6390": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "AND",
      "path": "16"
    },
    "6391": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6392": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6393": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6395": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "ADD",
      "path": "16"
    },
    "6396": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6397": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6398": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6399": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6401": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "ADD",
      "path": "16"
    },
    "6402": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6404": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6405": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        9990
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6406": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9993,
        10006
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "6409": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        10006
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1912"
    },
    "6412": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        10006
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6413": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        10006
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6414": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        10006
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2429"
    },
    "6417": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9965,
        10006
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6418": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9965,
        10006
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6419": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9953,
        9962
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191A"
    },
    "6422": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9953,
        9960
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86E"
    },
    "6425": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9953,
        9962
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6426": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9953,
        9962
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6427": {
      "branch": 72,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9953,
        10006
      ],
      "op": "GT",
      "path": "16"
    },
    "6428": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1924"
    },
    "6431": {
      "branch": 72,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6432": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6434": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6435": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6436": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9945,
        10007
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6437": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10022,
        10031
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6439": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6440": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10041,
        10058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6442": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10041,
        10065
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "op": "SUB"
    },
    "6451": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10037,
        10065
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6452": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10037,
        10065
      ],
      "op": "AND",
      "path": "16"
    },
    "6453": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10037,
        10065
      ],
      "op": "LT",
      "path": "16"
    },
    "6454": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6455": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13D4"
    },
    "6458": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6459": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10122,
        10130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6461": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10122,
        10130
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6468": {
      "op": "SHL"
    },
    "6469": {
      "op": "SUB"
    },
    "6470": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10122,
        10130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6471": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10122,
        10130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6472": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10122,
        10130
      ],
      "op": "AND",
      "path": "16"
    },
    "6473": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10086,
        10097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6475": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6476": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6477": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6478": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6480": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6482": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6483": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6485": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6486": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10131
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6487": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6489": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6490": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6491": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10086,
        10097
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6492": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10086,
        10097
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6493": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10160,
        10163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6495": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10160,
        10163
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6496": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6497": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6498": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "AND",
      "path": "16"
    },
    "6499": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6500": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6501": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "LT",
      "path": "16"
    },
    "6502": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1971"
    },
    "6505": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6506": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1971"
    },
    "6509": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2469"
    },
    "6512": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10132,
        10152
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6513": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6514": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6515": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6517": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6518": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6520": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6522": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6523": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10132,
        10152
      ],
      "op": "ADD",
      "path": "16"
    },
    "6524": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6526": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6527": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1988"
    },
    "6530": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6531": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6532": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2505"
    },
    "6535": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10102,
        10153
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6536": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6537": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6538": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6539": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6540": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6542": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "ADD",
      "path": "16"
    },
    "6543": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6545": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6546": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6547": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6548": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SUB",
      "path": "16"
    },
    "6549": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6550": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6551": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10102,
        10153
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6552": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10157,
        10159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "6554": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19A3"
    },
    "6557": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10159
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6558": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10159
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6559": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2300"
    },
    "6562": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10101,
        10159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6563": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6564": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19AD"
    },
    "6567": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10163
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6568": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10163
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6569": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "6572": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10101,
        10163
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6573": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10101,
        10163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6574": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10233,
        10236
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0xA"
    },
    "6576": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10233,
        10236
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6577": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10254,
        10265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "6579": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10254,
        10265
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6580": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6582": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6583": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6590": {
      "op": "SHL"
    },
    "6591": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6592": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "op": "SUB"
    },
    "6601": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10254,
        10265
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6602": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10254,
        10265
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6603": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10254,
        10265
      ],
      "op": "AND",
      "path": "16"
    },
    "6604": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6606": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6607": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ADD",
      "path": "16"
    },
    "6608": {
      "op": "MSTORE"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6611": {
      "op": "DUP2"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "DUP5"
    },
    "6614": {
      "op": "SWAP1"
    },
    "6615": {
      "op": "MSTORE"
    },
    "6616": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10086,
        10164
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6617": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10086,
        10164
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10233,
        10236
      ],
      "op": "AND",
      "path": "16"
    },
    "6620": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10233,
        10236
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6621": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10245
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "6626": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10245
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6629": {
      "op": "ADD"
    },
    "6630": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6632": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6634": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6635": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6636": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6637": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "SUB",
      "path": "16"
    },
    "6638": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6639": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6641": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6642": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "GAS",
      "path": "16"
    },
    "6643": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "CALL",
      "path": "16"
    },
    "6644": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6645": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6646": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6647": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A04"
    },
    "6650": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6651": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6652": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6654": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6655": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6656": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6657": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6659": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6660": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6661": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "POP",
      "path": "16"
    },
    "6662": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "POP",
      "path": "16"
    },
    "6663": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "POP",
      "path": "16"
    },
    "6664": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "POP",
      "path": "16"
    },
    "6665": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6667": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6668": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6669": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6671": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "NOT",
      "path": "16"
    },
    "6672": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6674": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6675": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ADD",
      "path": "16"
    },
    "6676": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "AND",
      "path": "16"
    },
    "6677": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6678": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ADD",
      "path": "16"
    },
    "6679": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6680": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6682": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6683": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "POP",
      "path": "16"
    },
    "6684": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6685": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "ADD",
      "path": "16"
    },
    "6686": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6687": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A28"
    },
    "6690": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6691": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6692": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2341"
    },
    "6695": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10226,
        10275
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6696": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10226,
        10275
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0x2"
    },
    "6700": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6701": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10326,
        10329
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "6703": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10326,
        10329
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6704": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10385,
        10395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6706": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10385,
        10395
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6707": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6709": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6710": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6717": {
      "op": "SHL"
    },
    "6718": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6719": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6726": {
      "op": "SHL"
    },
    "6727": {
      "op": "SUB"
    },
    "6728": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10326,
        10329
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6729": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10326,
        10329
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6730": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10326,
        10329
      ],
      "op": "AND",
      "path": "16"
    },
    "6731": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6733": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6734": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "ADD",
      "path": "16"
    },
    "6735": {
      "op": "MSTORE"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6738": {
      "op": "DUP2"
    },
    "6739": {
      "op": "ADD"
    },
    "6740": {
      "op": "DUP6"
    },
    "6741": {
      "op": "SWAP1"
    },
    "6742": {
      "op": "MSTORE"
    },
    "6743": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10385,
        10395
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6744": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10385,
        10395
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6745": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10385,
        10395
      ],
      "op": "AND",
      "path": "16"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6748": {
      "op": "DUP3"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6755": {
      "op": "DUP3"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "op": "MSTORE"
    },
    "6758": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6759": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "AND",
      "path": "16"
    },
    "6760": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10300
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6761": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10308
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE8EDA9DF"
    },
    "6766": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10308
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6769": {
      "op": "ADD"
    },
    "6770": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6772": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6774": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6775": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6776": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6777": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "SUB",
      "path": "16"
    },
    "6778": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6779": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6781": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6782": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6783": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "6784": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6785": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6786": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6787": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A8B"
    },
    "6790": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6791": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6793": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6794": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6795": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6796": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "POP",
      "path": "16"
    },
    "6797": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "GAS",
      "path": "16"
    },
    "6798": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "CALL",
      "path": "16"
    },
    "6799": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6800": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6801": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6802": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A9F"
    },
    "6805": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6806": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6807": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6809": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6810": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6811": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6812": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6814": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6815": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6816": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "POP",
      "path": "16"
    },
    "6817": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "POP",
      "path": "16"
    },
    "6818": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "POP",
      "path": "16"
    },
    "6819": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10289,
        10429
      ],
      "op": "POP",
      "path": "16"
    },
    "6820": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10072,
        10440
      ],
      "op": "POP",
      "path": "16"
    },
    "6821": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 50
    },
    "6822": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6823": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AAF"
    },
    "6826": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6827": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2363"
    },
    "6830": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10067,
        10070
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6831": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6832": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6833": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "POP",
      "path": "16"
    },
    "6834": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10067,
        10070
      ],
      "op": "POP",
      "path": "16"
    },
    "6835": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1927"
    },
    "6838": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10017,
        10440
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6839": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6840": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6842": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6843": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6850": {
      "op": "SHL"
    },
    "6851": {
      "op": "SUB"
    },
    "6852": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 51
    },
    "6853": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6854": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6861": {
      "op": "SHL"
    },
    "6862": {
      "op": "SUB"
    },
    "6863": {
      "op": "NOT"
    },
    "6864": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6865": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6866": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6867": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6868": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6869": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6870": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x40"
    },
    "6872": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6873": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6874": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6875": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6876": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6877": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6878": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6879": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6880": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6913": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6914": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6915": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6916": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6917": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6918": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6919": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6920": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6922": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6923": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6930": {
      "op": "SHL"
    },
    "6931": {
      "op": "SUB"
    },
    "6932": {
      "op": "DUP6"
    },
    "6933": {
      "op": "DUP2"
    },
    "6934": {
      "op": "AND"
    },
    "6935": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "6937": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6938": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6939": {
      "op": "MSTORE"
    },
    "6940": {
      "op": "DUP5"
    },
    "6941": {
      "op": "DUP2"
    },
    "6942": {
      "op": "AND"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6945": {
      "op": "DUP4"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6950": {
      "op": "DUP1"
    },
    "6951": {
      "op": "DUP4"
    },
    "6952": {
      "op": "ADD"
    },
    "6953": {
      "op": "DUP6"
    },
    "6954": {
      "op": "SWAP1"
    },
    "6955": {
      "op": "MSTORE"
    },
    "6956": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6957": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6958": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6959": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6960": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SUB",
      "path": "27"
    },
    "6961": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6962": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6963": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6964": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6965": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6968": {
      "op": "SWAP1"
    },
    "6969": {
      "op": "SWAP3"
    },
    "6970": {
      "op": "ADD"
    },
    "6971": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6972": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6973": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6975": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6976": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6977": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6978": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6985": {
      "op": "SHL"
    },
    "6986": {
      "op": "SUB"
    },
    "6987": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "AND",
      "path": "27"
    },
    "6988": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6995": {
      "op": "SHL"
    },
    "6996": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "OR",
      "path": "27"
    },
    "6997": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6998": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6999": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7000": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7003": {
      "op": "SWAP3"
    },
    "7004": {
      "op": "DUP4"
    },
    "7005": {
      "op": "SWAP3"
    },
    "7006": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7007": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "DUP9",
      "path": "27"
    },
    "7008": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "AND",
      "path": "27"
    },
    "7009": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7010": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B6B"
    },
    "7013": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7014": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7015": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22CE"
    },
    "7018": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7019": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7020": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7022": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7024": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7025": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7026": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7027": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SUB",
      "path": "27"
    },
    "7028": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7029": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7031": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7032": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "GAS",
      "path": "27"
    },
    "7033": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "CALL",
      "path": "27"
    },
    "7034": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7035": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7036": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7037": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7038": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7039": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7041": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7042": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "EQ",
      "path": "27"
    },
    "7043": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BA8"
    },
    "7046": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7047": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7049": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7050": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7051": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7052": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7054": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "NOT",
      "path": "27"
    },
    "7055": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "7057": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7058": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "7059": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "AND",
      "path": "27"
    },
    "7060": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7061": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "7062": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7064": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7065": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7066": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7067": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7068": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7069": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7071": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7073": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7074": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "7075": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7076": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BAD"
    },
    "7079": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7080": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7081": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "7083": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7084": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7085": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7086": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7087": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7088": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7089": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7090": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "7091": {
      "branch": 74,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        823
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 53
    },
    "7092": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7093": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7094": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BD7"
    },
    "7097": {
      "branch": 74,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7098": {
      "op": "POP"
    },
    "7099": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7100": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7101": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7102": {
      "branch": 75,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7103": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BD7"
    },
    "7106": {
      "branch": 75,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7107": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "POP",
      "path": "27"
    },
    "7108": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        859,
        863
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7109": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7110": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7112": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "27"
    },
    "7113": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7114": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7115": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7116": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "27"
    },
    "7117": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7118": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BD7"
    },
    "7121": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7122": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7123": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2341"
    },
    "7126": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        848,
        872
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7127": {
      "branch": 76,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7128": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C09"
    },
    "7131": {
      "branch": 76,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7132": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7134": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7141": {
      "op": "SHL"
    },
    "7142": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7143": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7146": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7148": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7149": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "ADD",
      "path": "27"
    },
    "7150": {
      "op": "MSTORE"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7155": {
      "op": "DUP3"
    },
    "7156": {
      "op": "ADD"
    },
    "7157": {
      "op": "MSTORE"
    },
    "7158": {
      "op": "PUSH3",
      "value": "0x29AA23"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "7164": {
      "op": "SHL"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7167": {
      "op": "DUP3"
    },
    "7168": {
      "op": "ADD"
    },
    "7169": {
      "op": "MSTORE"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7172": {
      "op": "ADD"
    },
    "7173": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x813"
    },
    "7176": {
      "op": "JUMP"
    },
    "7177": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7178": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7179": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7180": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7181": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7182": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7183": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "7184": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "o",
      "offset": [
        530,
        888
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7185": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7186": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7188": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7189": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7196": {
      "op": "SHL"
    },
    "7197": {
      "op": "SUB"
    },
    "7198": {
      "op": "DUP5"
    },
    "7199": {
      "op": "DUP2"
    },
    "7200": {
      "op": "AND"
    },
    "7201": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "7203": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7204": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "7205": {
      "op": "MSTORE"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7208": {
      "op": "DUP1"
    },
    "7209": {
      "op": "DUP4"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "op": "DUP6"
    },
    "7212": {
      "op": "SWAP1"
    },
    "7213": {
      "op": "MSTORE"
    },
    "7214": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7215": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7216": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7217": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7218": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SUB",
      "path": "27"
    },
    "7219": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7220": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7221": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "7222": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7223": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7226": {
      "op": "SWAP1"
    },
    "7227": {
      "op": "SWAP3"
    },
    "7228": {
      "op": "ADD"
    },
    "7229": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7230": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7231": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7233": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7234": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "7235": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7236": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7243": {
      "op": "SHL"
    },
    "7244": {
      "op": "SUB"
    },
    "7245": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "AND",
      "path": "27"
    },
    "7246": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7253": {
      "op": "SHL"
    },
    "7254": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "OR",
      "path": "27"
    },
    "7255": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7256": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7257": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7258": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7261": {
      "op": "SWAP3"
    },
    "7262": {
      "op": "DUP4"
    },
    "7263": {
      "op": "SWAP3"
    },
    "7264": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7265": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "DUP8",
      "path": "27"
    },
    "7266": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "AND",
      "path": "27"
    },
    "7267": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7268": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C6D"
    },
    "7271": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7272": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7273": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22CE"
    },
    "7276": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7277": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7278": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7280": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7282": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7283": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7284": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7285": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SUB",
      "path": "27"
    },
    "7286": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7287": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7289": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7290": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "GAS",
      "path": "27"
    },
    "7291": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "CALL",
      "path": "27"
    },
    "7292": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7293": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7294": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7295": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7296": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7297": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7299": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7300": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "EQ",
      "path": "27"
    },
    "7301": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CAA"
    },
    "7304": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7305": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7307": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7308": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7309": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7310": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7312": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "NOT",
      "path": "27"
    },
    "7313": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "7315": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7316": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "7317": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "AND",
      "path": "27"
    },
    "7318": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7319": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "7320": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7322": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7323": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7324": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7325": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7326": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7327": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7329": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7331": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7332": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "7333": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7334": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CAF"
    },
    "7337": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7338": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7339": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "7341": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7342": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7343": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7344": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7345": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7346": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7347": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7348": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7349": {
      "branch": 77,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2085
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 54
    },
    "7350": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7351": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7352": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CD9"
    },
    "7355": {
      "branch": 77,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7356": {
      "op": "POP"
    },
    "7357": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7358": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7359": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7360": {
      "branch": 78,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7361": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CD9"
    },
    "7364": {
      "branch": 78,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7365": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "POP",
      "path": "27"
    },
    "7366": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2121,
        2125
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7367": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7368": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7370": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "27"
    },
    "7371": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7372": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7373": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7374": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "27"
    },
    "7375": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7376": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1CD9"
    },
    "7379": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7380": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7381": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2341"
    },
    "7384": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7385": {
      "branch": 79,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7386": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D0A"
    },
    "7389": {
      "branch": 79,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7390": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7392": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7399": {
      "op": "SHL"
    },
    "7400": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7401": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7404": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7406": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7407": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "ADD",
      "path": "27"
    },
    "7408": {
      "op": "MSTORE"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7413": {
      "op": "DUP3"
    },
    "7414": {
      "op": "ADD"
    },
    "7415": {
      "op": "MSTORE"
    },
    "7416": {
      "op": "PUSH2",
      "value": "0x5341"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7421": {
      "op": "SHL"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7424": {
      "op": "DUP3"
    },
    "7425": {
      "op": "ADD"
    },
    "7426": {
      "op": "MSTORE"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7429": {
      "op": "ADD"
    },
    "7430": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x813"
    },
    "7433": {
      "op": "JUMP"
    },
    "7434": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7435": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7436": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7437": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7438": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7439": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7440": {
      "fn": "TransferHelper.safeApprove",
      "jump": "o",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7441": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1180,
        1489
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7442": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7444": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7445": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7452": {
      "op": "SHL"
    },
    "7453": {
      "op": "SUB"
    },
    "7454": {
      "op": "DUP5"
    },
    "7455": {
      "op": "DUP2"
    },
    "7456": {
      "op": "AND"
    },
    "7457": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "7459": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7460": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7461": {
      "op": "MSTORE"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7464": {
      "op": "DUP1"
    },
    "7465": {
      "op": "DUP4"
    },
    "7466": {
      "op": "ADD"
    },
    "7467": {
      "op": "DUP6"
    },
    "7468": {
      "op": "SWAP1"
    },
    "7469": {
      "op": "MSTORE"
    },
    "7470": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7471": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7472": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7473": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7474": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SUB",
      "path": "27"
    },
    "7475": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7476": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7477": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7478": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7479": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7482": {
      "op": "SWAP1"
    },
    "7483": {
      "op": "SWAP3"
    },
    "7484": {
      "op": "ADD"
    },
    "7485": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7486": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7487": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7489": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7490": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7491": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7492": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "AND",
      "path": "27"
    },
    "7502": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "OR",
      "path": "27"
    },
    "7511": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7512": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7513": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7514": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7517": {
      "op": "SWAP3"
    },
    "7518": {
      "op": "DUP4"
    },
    "7519": {
      "op": "SWAP3"
    },
    "7520": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7521": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "DUP8",
      "path": "27"
    },
    "7522": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "AND",
      "path": "27"
    },
    "7523": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7524": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D6D"
    },
    "7527": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7528": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7529": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x22CE"
    },
    "7532": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7533": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7534": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7536": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7538": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7539": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7540": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7541": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SUB",
      "path": "27"
    },
    "7542": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7543": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7545": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7546": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "GAS",
      "path": "27"
    },
    "7547": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "CALL",
      "path": "27"
    },
    "7548": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7549": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7550": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7551": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7552": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7553": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7555": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7556": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "EQ",
      "path": "27"
    },
    "7557": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DAA"
    },
    "7560": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7561": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7563": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7564": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7565": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7566": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7568": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "NOT",
      "path": "27"
    },
    "7569": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "7571": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7572": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7573": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "AND",
      "path": "27"
    },
    "7574": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7575": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7576": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7578": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7579": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7580": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7581": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7582": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7583": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7585": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7587": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7588": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7589": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7590": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DAF"
    },
    "7593": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7594": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7595": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "7597": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7598": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7599": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7600": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7601": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7602": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7603": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7604": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7605": {
      "branch": 80,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1425
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 55
    },
    "7606": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7607": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7608": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DD9"
    },
    "7611": {
      "branch": 80,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7612": {
      "op": "POP"
    },
    "7613": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7614": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7615": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7616": {
      "branch": 81,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7617": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DD9"
    },
    "7620": {
      "branch": 81,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7621": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "POP",
      "path": "27"
    },
    "7622": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1461,
        1465
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7623": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7624": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7626": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "27"
    },
    "7627": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7628": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7629": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7630": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "27"
    },
    "7631": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7632": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DD9"
    },
    "7635": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7636": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7637": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2341"
    },
    "7640": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7641": {
      "branch": 82,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7642": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D0A"
    },
    "7645": {
      "branch": 82,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7646": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7648": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7655": {
      "op": "SHL"
    },
    "7656": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7657": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7660": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7662": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7663": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "ADD",
      "path": "27"
    },
    "7664": {
      "op": "MSTORE"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7669": {
      "op": "DUP3"
    },
    "7670": {
      "op": "ADD"
    },
    "7671": {
      "op": "MSTORE"
    },
    "7672": {
      "op": "PUSH2",
      "value": "0x14D5"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "7677": {
      "op": "SHL"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7680": {
      "op": "DUP3"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "op": "MSTORE"
    },
    "7683": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7685": {
      "op": "ADD"
    },
    "7686": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x813"
    },
    "7689": {
      "op": "JUMP"
    },
    "7690": {
      "op": "JUMPDEST"
    },
    "7691": {
      "op": "DUP3"
    },
    "7692": {
      "op": "DUP1"
    },
    "7693": {
      "op": "SLOAD"
    },
    "7694": {
      "op": "PUSH2",
      "value": "0x1E16"
    },
    "7697": {
      "op": "SWAP1"
    },
    "7698": {
      "op": "PUSH2",
      "value": "0x24CA"
    },
    "7701": {
      "jump": "i",
      "op": "JUMP"
    },
    "7702": {
      "op": "JUMPDEST"
    },
    "7703": {
      "op": "SWAP1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7706": {
      "op": "MSTORE"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7711": {
      "op": "KECCAK256"
    },
    "7712": {
      "op": "SWAP1"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7715": {
      "op": "ADD"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7718": {
      "op": "SWAP1"
    },
    "7719": {
      "op": "DIV"
    },
    "7720": {
      "op": "DUP2"
    },
    "7721": {
      "op": "ADD"
    },
    "7722": {
      "op": "SWAP3"
    },
    "7723": {
      "op": "DUP3"
    },
    "7724": {
      "op": "PUSH2",
      "value": "0x1E38"
    },
    "7727": {
      "op": "JUMPI"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7730": {
      "op": "DUP6"
    },
    "7731": {
      "op": "SSTORE"
    },
    "7732": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7735": {
      "op": "JUMP"
    },
    "7736": {
      "op": "JUMPDEST"
    },
    "7737": {
      "op": "DUP3"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7740": {
      "op": "LT"
    },
    "7741": {
      "op": "PUSH2",
      "value": "0x1E51"
    },
    "7744": {
      "op": "JUMPI"
    },
    "7745": {
      "op": "DUP1"
    },
    "7746": {
      "op": "MLOAD"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7749": {
      "op": "NOT"
    },
    "7750": {
      "op": "AND"
    },
    "7751": {
      "op": "DUP4"
    },
    "7752": {
      "op": "DUP1"
    },
    "7753": {
      "op": "ADD"
    },
    "7754": {
      "op": "OR"
    },
    "7755": {
      "op": "DUP6"
    },
    "7756": {
      "op": "SSTORE"
    },
    "7757": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7760": {
      "op": "JUMP"
    },
    "7761": {
      "op": "JUMPDEST"
    },
    "7762": {
      "op": "DUP3"
    },
    "7763": {
      "op": "DUP1"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7767": {
      "op": "ADD"
    },
    "7768": {
      "op": "DUP6"
    },
    "7769": {
      "op": "SSTORE"
    },
    "7770": {
      "op": "DUP3"
    },
    "7771": {
      "op": "ISZERO"
    },
    "7772": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7775": {
      "op": "JUMPI"
    },
    "7776": {
      "op": "SWAP2"
    },
    "7777": {
      "op": "DUP3"
    },
    "7778": {
      "op": "ADD"
    },
    "7779": {
      "op": "JUMPDEST"
    },
    "7780": {
      "op": "DUP3"
    },
    "7781": {
      "op": "DUP2"
    },
    "7782": {
      "op": "GT"
    },
    "7783": {
      "op": "ISZERO"
    },
    "7784": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7787": {
      "op": "JUMPI"
    },
    "7788": {
      "op": "DUP3"
    },
    "7789": {
      "op": "MLOAD"
    },
    "7790": {
      "op": "DUP3"
    },
    "7791": {
      "op": "SSTORE"
    },
    "7792": {
      "op": "SWAP2"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7795": {
      "op": "ADD"
    },
    "7796": {
      "op": "SWAP2"
    },
    "7797": {
      "op": "SWAP1"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7800": {
      "op": "ADD"
    },
    "7801": {
      "op": "SWAP1"
    },
    "7802": {
      "op": "PUSH2",
      "value": "0x1E63"
    },
    "7805": {
      "op": "JUMP"
    },
    "7806": {
      "op": "JUMPDEST"
    },
    "7807": {
      "op": "POP"
    },
    "7808": {
      "op": "PUSH2",
      "value": "0x1E8A"
    },
    "7811": {
      "op": "SWAP3"
    },
    "7812": {
      "op": "SWAP2"
    },
    "7813": {
      "op": "POP"
    },
    "7814": {
      "op": "PUSH2",
      "value": "0x1E8E"
    },
    "7817": {
      "jump": "i",
      "op": "JUMP"
    },
    "7818": {
      "op": "JUMPDEST"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "op": "SWAP1"
    },
    "7821": {
      "jump": "o",
      "op": "JUMP"
    },
    "7822": {
      "op": "JUMPDEST"
    },
    "7823": {
      "op": "JUMPDEST"
    },
    "7824": {
      "op": "DUP1"
    },
    "7825": {
      "op": "DUP3"
    },
    "7826": {
      "op": "GT"
    },
    "7827": {
      "op": "ISZERO"
    },
    "7828": {
      "op": "PUSH2",
      "value": "0x1E8A"
    },
    "7831": {
      "op": "JUMPI"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7834": {
      "op": "DUP2"
    },
    "7835": {
      "op": "SSTORE"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7838": {
      "op": "ADD"
    },
    "7839": {
      "op": "PUSH2",
      "value": "0x1E8F"
    },
    "7842": {
      "op": "JUMP"
    },
    "7843": {
      "op": "JUMPDEST"
    },
    "7844": {
      "op": "DUP1"
    },
    "7845": {
      "op": "CALLDATALOAD"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "SUB"
    },
    "7854": {
      "op": "DUP2"
    },
    "7855": {
      "op": "AND"
    },
    "7856": {
      "op": "DUP2"
    },
    "7857": {
      "op": "EQ"
    },
    "7858": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "7861": {
      "op": "JUMPI"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7864": {
      "op": "DUP1"
    },
    "7865": {
      "op": "REVERT"
    },
    "7866": {
      "op": "JUMPDEST"
    },
    "7867": {
      "op": "SWAP2"
    },
    "7868": {
      "op": "SWAP1"
    },
    "7869": {
      "op": "POP"
    },
    "7870": {
      "jump": "o",
      "op": "JUMP"
    },
    "7871": {
      "op": "JUMPDEST"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7876": {
      "op": "DUP3"
    },
    "7877": {
      "op": "DUP5"
    },
    "7878": {
      "op": "SUB"
    },
    "7879": {
      "op": "SLT"
    },
    "7880": {
      "op": "ISZERO"
    },
    "7881": {
      "op": "PUSH2",
      "value": "0x1ED1"
    },
    "7884": {
      "op": "JUMPI"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7887": {
      "op": "DUP1"
    },
    "7888": {
      "op": "REVERT"
    },
    "7889": {
      "op": "JUMPDEST"
    },
    "7890": {
      "op": "PUSH2",
      "value": "0x1EDA"
    },
    "7893": {
      "op": "DUP3"
    },
    "7894": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "7897": {
      "jump": "i",
      "op": "JUMP"
    },
    "7898": {
      "op": "JUMPDEST"
    },
    "7899": {
      "op": "SWAP4"
    },
    "7900": {
      "op": "SWAP3"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "op": "POP"
    },
    "7903": {
      "op": "POP"
    },
    "7904": {
      "jump": "o",
      "op": "JUMP"
    },
    "7905": {
      "op": "JUMPDEST"
    },
    "7906": {
      "op": "DUP1"
    },
    "7907": {
      "op": "CALLDATALOAD"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7914": {
      "op": "SHL"
    },
    "7915": {
      "op": "SUB"
    },
    "7916": {
      "op": "DUP2"
    },
    "7917": {
      "op": "AND"
    },
    "7918": {
      "op": "DUP2"
    },
    "7919": {
      "op": "EQ"
    },
    "7920": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "7923": {
      "op": "JUMPI"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7926": {
      "op": "DUP1"
    },
    "7927": {
      "op": "REVERT"
    },
    "7928": {
      "op": "JUMPDEST"
    },
    "7929": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7936": {
      "op": "SHL"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7939": {
      "op": "MSTORE"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7944": {
      "op": "MSTORE"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7949": {
      "op": "REVERT"
    },
    "7950": {
      "op": "JUMPDEST"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7953": {
      "op": "DUP3"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7956": {
      "op": "DUP4"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "op": "SLT"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x1F1F"
    },
    "7962": {
      "op": "JUMPI"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7965": {
      "op": "DUP1"
    },
    "7966": {
      "op": "REVERT"
    },
    "7967": {
      "op": "JUMPDEST"
    },
    "7968": {
      "op": "DUP2"
    },
    "7969": {
      "op": "CALLDATALOAD"
    },
    "7970": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7979": {
      "op": "DUP1"
    },
    "7980": {
      "op": "DUP3"
    },
    "7981": {
      "op": "GT"
    },
    "7982": {
      "op": "ISZERO"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "7986": {
      "op": "JUMPI"
    },
    "7987": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x1EF8"
    },
    "7993": {
      "jump": "i",
      "op": "JUMP"
    },
    "7994": {
      "op": "JUMPDEST"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7997": {
      "op": "MLOAD"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8000": {
      "op": "DUP4"
    },
    "8001": {
      "op": "ADD"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8004": {
      "op": "NOT"
    },
    "8005": {
      "op": "SWAP1"
    },
    "8006": {
      "op": "DUP2"
    },
    "8007": {
      "op": "AND"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8010": {
      "op": "ADD"
    },
    "8011": {
      "op": "AND"
    },
    "8012": {
      "op": "DUP2"
    },
    "8013": {
      "op": "ADD"
    },
    "8014": {
      "op": "SWAP1"
    },
    "8015": {
      "op": "DUP3"
    },
    "8016": {
      "op": "DUP3"
    },
    "8017": {
      "op": "GT"
    },
    "8018": {
      "op": "DUP2"
    },
    "8019": {
      "op": "DUP4"
    },
    "8020": {
      "op": "LT"
    },
    "8021": {
      "op": "OR"
    },
    "8022": {
      "op": "ISZERO"
    },
    "8023": {
      "op": "PUSH2",
      "value": "0x1F62"
    },
    "8026": {
      "op": "JUMPI"
    },
    "8027": {
      "op": "PUSH2",
      "value": "0x1F62"
    },
    "8030": {
      "op": "PUSH2",
      "value": "0x1EF8"
    },
    "8033": {
      "jump": "i",
      "op": "JUMP"
    },
    "8034": {
      "op": "JUMPDEST"
    },
    "8035": {
      "op": "DUP2"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8038": {
      "op": "MSTORE"
    },
    "8039": {
      "op": "DUP4"
    },
    "8040": {
      "op": "DUP2"
    },
    "8041": {
      "op": "MSTORE"
    },
    "8042": {
      "op": "DUP7"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8045": {
      "op": "DUP6"
    },
    "8046": {
      "op": "DUP9"
    },
    "8047": {
      "op": "ADD"
    },
    "8048": {
      "op": "ADD"
    },
    "8049": {
      "op": "GT"
    },
    "8050": {
      "op": "ISZERO"
    },
    "8051": {
      "op": "PUSH2",
      "value": "0x1F7B"
    },
    "8054": {
      "op": "JUMPI"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8057": {
      "op": "DUP1"
    },
    "8058": {
      "op": "REVERT"
    },
    "8059": {
      "op": "JUMPDEST"
    },
    "8060": {
      "op": "DUP4"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8063": {
      "op": "DUP8"
    },
    "8064": {
      "op": "ADD"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8067": {
      "op": "DUP4"
    },
    "8068": {
      "op": "ADD"
    },
    "8069": {
      "op": "CALLDATACOPY"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8074": {
      "op": "DUP6"
    },
    "8075": {
      "op": "DUP4"
    },
    "8076": {
      "op": "ADD"
    },
    "8077": {
      "op": "ADD"
    },
    "8078": {
      "op": "MSTORE"
    },
    "8079": {
      "op": "DUP1"
    },
    "8080": {
      "op": "SWAP5"
    },
    "8081": {
      "op": "POP"
    },
    "8082": {
      "op": "POP"
    },
    "8083": {
      "op": "POP"
    },
    "8084": {
      "op": "POP"
    },
    "8085": {
      "op": "POP"
    },
    "8086": {
      "op": "SWAP3"
    },
    "8087": {
      "op": "SWAP2"
    },
    "8088": {
      "op": "POP"
    },
    "8089": {
      "op": "POP"
    },
    "8090": {
      "jump": "o",
      "op": "JUMP"
    },
    "8091": {
      "op": "JUMPDEST"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8094": {
      "op": "DUP1"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8097": {
      "op": "DUP4"
    },
    "8098": {
      "op": "DUP6"
    },
    "8099": {
      "op": "SUB"
    },
    "8100": {
      "op": "SLT"
    },
    "8101": {
      "op": "ISZERO"
    },
    "8102": {
      "op": "PUSH2",
      "value": "0x1FAE"
    },
    "8105": {
      "op": "JUMPI"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8108": {
      "op": "DUP1"
    },
    "8109": {
      "op": "REVERT"
    },
    "8110": {
      "op": "JUMPDEST"
    },
    "8111": {
      "op": "PUSH2",
      "value": "0x1FB7"
    },
    "8114": {
      "op": "DUP4"
    },
    "8115": {
      "op": "PUSH2",
      "value": "0x1EE1"
    },
    "8118": {
      "jump": "i",
      "op": "JUMP"
    },
    "8119": {
      "op": "JUMPDEST"
    },
    "8120": {
      "op": "SWAP2"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8124": {
      "op": "DUP4"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "op": "CALLDATALOAD"
    },
    "8127": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "GT"
    },
    "8138": {
      "op": "ISZERO"
    },
    "8139": {
      "op": "PUSH2",
      "value": "0x1FD3"
    },
    "8142": {
      "op": "JUMPI"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8145": {
      "op": "DUP1"
    },
    "8146": {
      "op": "REVERT"
    },
    "8147": {
      "op": "JUMPDEST"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x1FDF"
    },
    "8151": {
      "op": "DUP6"
    },
    "8152": {
      "op": "DUP3"
    },
    "8153": {
      "op": "DUP7"
    },
    "8154": {
      "op": "ADD"
    },
    "8155": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8158": {
      "jump": "i",
      "op": "JUMP"
    },
    "8159": {
      "op": "JUMPDEST"
    },
    "8160": {
      "op": "SWAP2"
    },
    "8161": {
      "op": "POP"
    },
    "8162": {
      "op": "POP"
    },
    "8163": {
      "op": "SWAP3"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "op": "SWAP3"
    },
    "8166": {
      "op": "SWAP1"
    },
    "8167": {
      "op": "POP"
    },
    "8168": {
      "jump": "o",
      "op": "JUMP"
    },
    "8169": {
      "op": "JUMPDEST"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8172": {
      "op": "DUP1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8175": {
      "op": "DUP4"
    },
    "8176": {
      "op": "DUP6"
    },
    "8177": {
      "op": "SUB"
    },
    "8178": {
      "op": "SLT"
    },
    "8179": {
      "op": "ISZERO"
    },
    "8180": {
      "op": "PUSH2",
      "value": "0x1FFC"
    },
    "8183": {
      "op": "JUMPI"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8186": {
      "op": "DUP1"
    },
    "8187": {
      "op": "REVERT"
    },
    "8188": {
      "op": "JUMPDEST"
    },
    "8189": {
      "op": "DUP3"
    },
    "8190": {
      "op": "CALLDATALOAD"
    },
    "8191": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8200": {
      "op": "DUP1"
    },
    "8201": {
      "op": "DUP3"
    },
    "8202": {
      "op": "GT"
    },
    "8203": {
      "op": "ISZERO"
    },
    "8204": {
      "op": "PUSH2",
      "value": "0x2014"
    },
    "8207": {
      "op": "JUMPI"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8210": {
      "op": "DUP1"
    },
    "8211": {
      "op": "REVERT"
    },
    "8212": {
      "op": "JUMPDEST"
    },
    "8213": {
      "op": "DUP2"
    },
    "8214": {
      "op": "DUP6"
    },
    "8215": {
      "op": "ADD"
    },
    "8216": {
      "op": "SWAP2"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "op": "DUP6"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8221": {
      "op": "DUP4"
    },
    "8222": {
      "op": "ADD"
    },
    "8223": {
      "op": "SLT"
    },
    "8224": {
      "op": "PUSH2",
      "value": "0x2028"
    },
    "8227": {
      "op": "JUMPI"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8230": {
      "op": "DUP1"
    },
    "8231": {
      "op": "REVERT"
    },
    "8232": {
      "op": "JUMPDEST"
    },
    "8233": {
      "op": "DUP2"
    },
    "8234": {
      "op": "CALLDATALOAD"
    },
    "8235": {
      "op": "DUP2"
    },
    "8236": {
      "op": "DUP2"
    },
    "8237": {
      "op": "GT"
    },
    "8238": {
      "op": "ISZERO"
    },
    "8239": {
      "op": "PUSH2",
      "value": "0x2037"
    },
    "8242": {
      "op": "JUMPI"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8245": {
      "op": "DUP1"
    },
    "8246": {
      "op": "REVERT"
    },
    "8247": {
      "op": "JUMPDEST"
    },
    "8248": {
      "op": "DUP7"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8251": {
      "op": "DUP3"
    },
    "8252": {
      "op": "DUP6"
    },
    "8253": {
      "op": "ADD"
    },
    "8254": {
      "op": "ADD"
    },
    "8255": {
      "op": "GT"
    },
    "8256": {
      "op": "ISZERO"
    },
    "8257": {
      "op": "PUSH2",
      "value": "0x2049"
    },
    "8260": {
      "op": "JUMPI"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8263": {
      "op": "DUP1"
    },
    "8264": {
      "op": "REVERT"
    },
    "8265": {
      "op": "JUMPDEST"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8268": {
      "op": "SWAP3"
    },
    "8269": {
      "op": "SWAP1"
    },
    "8270": {
      "op": "SWAP3"
    },
    "8271": {
      "op": "ADD"
    },
    "8272": {
      "op": "SWAP7"
    },
    "8273": {
      "op": "SWAP2"
    },
    "8274": {
      "op": "SWAP6"
    },
    "8275": {
      "op": "POP"
    },
    "8276": {
      "op": "SWAP1"
    },
    "8277": {
      "op": "SWAP4"
    },
    "8278": {
      "op": "POP"
    },
    "8279": {
      "op": "POP"
    },
    "8280": {
      "op": "POP"
    },
    "8281": {
      "op": "POP"
    },
    "8282": {
      "jump": "o",
      "op": "JUMP"
    },
    "8283": {
      "op": "JUMPDEST"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8286": {
      "op": "DUP1"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8289": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8291": {
      "op": "DUP5"
    },
    "8292": {
      "op": "DUP7"
    },
    "8293": {
      "op": "SUB"
    },
    "8294": {
      "op": "SLT"
    },
    "8295": {
      "op": "ISZERO"
    },
    "8296": {
      "op": "PUSH2",
      "value": "0x2070"
    },
    "8299": {
      "op": "JUMPI"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8302": {
      "op": "DUP1"
    },
    "8303": {
      "op": "REVERT"
    },
    "8304": {
      "op": "JUMPDEST"
    },
    "8305": {
      "op": "PUSH2",
      "value": "0x2079"
    },
    "8308": {
      "op": "DUP5"
    },
    "8309": {
      "op": "PUSH2",
      "value": "0x1EE1"
    },
    "8312": {
      "jump": "i",
      "op": "JUMP"
    },
    "8313": {
      "op": "JUMPDEST"
    },
    "8314": {
      "op": "SWAP3"
    },
    "8315": {
      "op": "POP"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8318": {
      "op": "DUP5"
    },
    "8319": {
      "op": "ADD"
    },
    "8320": {
      "op": "CALLDATALOAD"
    },
    "8321": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8330": {
      "op": "DUP2"
    },
    "8331": {
      "op": "GT"
    },
    "8332": {
      "op": "ISZERO"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x2095"
    },
    "8336": {
      "op": "JUMPI"
    },
    "8337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8339": {
      "op": "DUP1"
    },
    "8340": {
      "op": "REVERT"
    },
    "8341": {
      "op": "JUMPDEST"
    },
    "8342": {
      "op": "PUSH2",
      "value": "0x20A1"
    },
    "8345": {
      "op": "DUP7"
    },
    "8346": {
      "op": "DUP3"
    },
    "8347": {
      "op": "DUP8"
    },
    "8348": {
      "op": "ADD"
    },
    "8349": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8352": {
      "jump": "i",
      "op": "JUMP"
    },
    "8353": {
      "op": "JUMPDEST"
    },
    "8354": {
      "op": "SWAP3"
    },
    "8355": {
      "op": "POP"
    },
    "8356": {
      "op": "POP"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8359": {
      "op": "DUP5"
    },
    "8360": {
      "op": "ADD"
    },
    "8361": {
      "op": "CALLDATALOAD"
    },
    "8362": {
      "op": "SWAP1"
    },
    "8363": {
      "op": "POP"
    },
    "8364": {
      "op": "SWAP3"
    },
    "8365": {
      "op": "POP"
    },
    "8366": {
      "op": "SWAP3"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "op": "SWAP3"
    },
    "8369": {
      "jump": "o",
      "op": "JUMP"
    },
    "8370": {
      "op": "JUMPDEST"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8375": {
      "op": "DUP3"
    },
    "8376": {
      "op": "DUP5"
    },
    "8377": {
      "op": "SUB"
    },
    "8378": {
      "op": "SLT"
    },
    "8379": {
      "op": "ISZERO"
    },
    "8380": {
      "op": "PUSH2",
      "value": "0x20C4"
    },
    "8383": {
      "op": "JUMPI"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8386": {
      "op": "DUP1"
    },
    "8387": {
      "op": "REVERT"
    },
    "8388": {
      "op": "JUMPDEST"
    },
    "8389": {
      "op": "POP"
    },
    "8390": {
      "op": "CALLDATALOAD"
    },
    "8391": {
      "op": "SWAP2"
    },
    "8392": {
      "op": "SWAP1"
    },
    "8393": {
      "op": "POP"
    },
    "8394": {
      "jump": "o",
      "op": "JUMP"
    },
    "8395": {
      "op": "JUMPDEST"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8398": {
      "op": "DUP1"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8403": {
      "op": "DUP5"
    },
    "8404": {
      "op": "DUP7"
    },
    "8405": {
      "op": "SUB"
    },
    "8406": {
      "op": "SLT"
    },
    "8407": {
      "op": "ISZERO"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x20E0"
    },
    "8411": {
      "op": "JUMPI"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8414": {
      "op": "DUP1"
    },
    "8415": {
      "op": "REVERT"
    },
    "8416": {
      "op": "JUMPDEST"
    },
    "8417": {
      "op": "DUP4"
    },
    "8418": {
      "op": "CALLDATALOAD"
    },
    "8419": {
      "op": "SWAP3"
    },
    "8420": {
      "op": "POP"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8423": {
      "op": "DUP5"
    },
    "8424": {
      "op": "ADD"
    },
    "8425": {
      "op": "CALLDATALOAD"
    },
    "8426": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8435": {
      "op": "DUP2"
    },
    "8436": {
      "op": "GT"
    },
    "8437": {
      "op": "ISZERO"
    },
    "8438": {
      "op": "PUSH2",
      "value": "0x2095"
    },
    "8441": {
      "op": "JUMPI"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8444": {
      "op": "DUP1"
    },
    "8445": {
      "op": "REVERT"
    },
    "8446": {
      "op": "JUMPDEST"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8449": {
      "op": "DUP1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8452": {
      "op": "DUP4"
    },
    "8453": {
      "op": "DUP6"
    },
    "8454": {
      "op": "SUB"
    },
    "8455": {
      "op": "SLT"
    },
    "8456": {
      "op": "ISZERO"
    },
    "8457": {
      "op": "PUSH2",
      "value": "0x2111"
    },
    "8460": {
      "op": "JUMPI"
    },
    "8461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8463": {
      "op": "DUP1"
    },
    "8464": {
      "op": "REVERT"
    },
    "8465": {
      "op": "JUMPDEST"
    },
    "8466": {
      "op": "DUP3"
    },
    "8467": {
      "op": "CALLDATALOAD"
    },
    "8468": {
      "op": "SWAP2"
    },
    "8469": {
      "op": "POP"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8472": {
      "op": "DUP4"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "CALLDATALOAD"
    },
    "8475": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8484": {
      "op": "DUP2"
    },
    "8485": {
      "op": "GT"
    },
    "8486": {
      "op": "ISZERO"
    },
    "8487": {
      "op": "PUSH2",
      "value": "0x1FD3"
    },
    "8490": {
      "op": "JUMPI"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8493": {
      "op": "DUP1"
    },
    "8494": {
      "op": "REVERT"
    },
    "8495": {
      "op": "JUMPDEST"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8498": {
      "op": "JUMPDEST"
    },
    "8499": {
      "op": "DUP4"
    },
    "8500": {
      "op": "DUP2"
    },
    "8501": {
      "op": "LT"
    },
    "8502": {
      "op": "ISZERO"
    },
    "8503": {
      "op": "PUSH2",
      "value": "0x214A"
    },
    "8506": {
      "op": "JUMPI"
    },
    "8507": {
      "op": "DUP2"
    },
    "8508": {
      "op": "DUP2"
    },
    "8509": {
      "op": "ADD"
    },
    "8510": {
      "op": "MLOAD"
    },
    "8511": {
      "op": "DUP4"
    },
    "8512": {
      "op": "DUP3"
    },
    "8513": {
      "op": "ADD"
    },
    "8514": {
      "op": "MSTORE"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "op": "PUSH2",
      "value": "0x2132"
    },
    "8521": {
      "op": "JUMP"
    },
    "8522": {
      "op": "JUMPDEST"
    },
    "8523": {
      "op": "DUP4"
    },
    "8524": {
      "op": "DUP2"
    },
    "8525": {
      "op": "GT"
    },
    "8526": {
      "op": "ISZERO"
    },
    "8527": {
      "op": "PUSH2",
      "value": "0x6EB"
    },
    "8530": {
      "op": "JUMPI"
    },
    "8531": {
      "op": "POP"
    },
    "8532": {
      "op": "POP"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8535": {
      "op": "SWAP2"
    },
    "8536": {
      "op": "ADD"
    },
    "8537": {
      "op": "MSTORE"
    },
    "8538": {
      "jump": "o",
      "op": "JUMP"
    },
    "8539": {
      "op": "JUMPDEST"
    },
    "8540": {
      "op": "DUP3"
    },
    "8541": {
      "op": "ISZERO"
    },
    "8542": {
      "op": "ISZERO"
    },
    "8543": {
      "op": "DUP2"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8549": {
      "op": "DUP3"
    },
    "8550": {
      "op": "ADD"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8554": {
      "op": "DUP3"
    },
    "8555": {
      "op": "MLOAD"
    },
    "8556": {
      "op": "DUP1"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8559": {
      "op": "DUP5"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "op": "MSTORE"
    },
    "8562": {
      "op": "PUSH2",
      "value": "0x2182"
    },
    "8565": {
      "op": "DUP2"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8568": {
      "op": "DUP6"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8572": {
      "op": "DUP8"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "op": "PUSH2",
      "value": "0x212F"
    },
    "8577": {
      "jump": "i",
      "op": "JUMP"
    },
    "8578": {
      "op": "JUMPDEST"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8581": {
      "op": "ADD"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8584": {
      "op": "NOT"
    },
    "8585": {
      "op": "AND"
    },
    "8586": {
      "op": "SWAP2"
    },
    "8587": {
      "op": "SWAP1"
    },
    "8588": {
      "op": "SWAP2"
    },
    "8589": {
      "op": "ADD"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8592": {
      "op": "ADD"
    },
    "8593": {
      "op": "SWAP4"
    },
    "8594": {
      "op": "SWAP3"
    },
    "8595": {
      "op": "POP"
    },
    "8596": {
      "op": "POP"
    },
    "8597": {
      "op": "POP"
    },
    "8598": {
      "jump": "o",
      "op": "JUMP"
    },
    "8599": {
      "op": "JUMPDEST"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8602": {
      "op": "DUP1"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8605": {
      "op": "DUP4"
    },
    "8606": {
      "op": "DUP6"
    },
    "8607": {
      "op": "SUB"
    },
    "8608": {
      "op": "SLT"
    },
    "8609": {
      "op": "ISZERO"
    },
    "8610": {
      "op": "PUSH2",
      "value": "0x21AA"
    },
    "8613": {
      "op": "JUMPI"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8616": {
      "op": "DUP1"
    },
    "8617": {
      "op": "REVERT"
    },
    "8618": {
      "op": "JUMPDEST"
    },
    "8619": {
      "op": "DUP3"
    },
    "8620": {
      "op": "CALLDATALOAD"
    },
    "8621": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8630": {
      "op": "DUP2"
    },
    "8631": {
      "op": "GT"
    },
    "8632": {
      "op": "ISZERO"
    },
    "8633": {
      "op": "PUSH2",
      "value": "0x21C1"
    },
    "8636": {
      "op": "JUMPI"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8639": {
      "op": "DUP1"
    },
    "8640": {
      "op": "REVERT"
    },
    "8641": {
      "op": "JUMPDEST"
    },
    "8642": {
      "op": "PUSH2",
      "value": "0x21CD"
    },
    "8645": {
      "op": "DUP6"
    },
    "8646": {
      "op": "DUP3"
    },
    "8647": {
      "op": "DUP7"
    },
    "8648": {
      "op": "ADD"
    },
    "8649": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8652": {
      "jump": "i",
      "op": "JUMP"
    },
    "8653": {
      "op": "JUMPDEST"
    },
    "8654": {
      "op": "SWAP3"
    },
    "8655": {
      "op": "POP"
    },
    "8656": {
      "op": "POP"
    },
    "8657": {
      "op": "PUSH2",
      "value": "0x21DC"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8662": {
      "op": "DUP5"
    },
    "8663": {
      "op": "ADD"
    },
    "8664": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "8667": {
      "jump": "i",
      "op": "JUMP"
    },
    "8668": {
      "op": "JUMPDEST"
    },
    "8669": {
      "op": "SWAP1"
    },
    "8670": {
      "op": "POP"
    },
    "8671": {
      "op": "SWAP3"
    },
    "8672": {
      "op": "POP"
    },
    "8673": {
      "op": "SWAP3"
    },
    "8674": {
      "op": "SWAP1"
    },
    "8675": {
      "op": "POP"
    },
    "8676": {
      "jump": "o",
      "op": "JUMP"
    },
    "8677": {
      "op": "JUMPDEST"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8680": {
      "op": "DUP1"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8685": {
      "op": "DUP5"
    },
    "8686": {
      "op": "DUP7"
    },
    "8687": {
      "op": "SUB"
    },
    "8688": {
      "op": "SLT"
    },
    "8689": {
      "op": "ISZERO"
    },
    "8690": {
      "op": "PUSH2",
      "value": "0x21FA"
    },
    "8693": {
      "op": "JUMPI"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8696": {
      "op": "DUP1"
    },
    "8697": {
      "op": "REVERT"
    },
    "8698": {
      "op": "JUMPDEST"
    },
    "8699": {
      "op": "PUSH2",
      "value": "0x2203"
    },
    "8702": {
      "op": "DUP5"
    },
    "8703": {
      "op": "PUSH2",
      "value": "0x1EE1"
    },
    "8706": {
      "jump": "i",
      "op": "JUMP"
    },
    "8707": {
      "op": "JUMPDEST"
    },
    "8708": {
      "op": "SWAP3"
    },
    "8709": {
      "op": "POP"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8712": {
      "op": "DUP5"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "op": "CALLDATALOAD"
    },
    "8715": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8724": {
      "op": "DUP2"
    },
    "8725": {
      "op": "GT"
    },
    "8726": {
      "op": "ISZERO"
    },
    "8727": {
      "op": "PUSH2",
      "value": "0x221F"
    },
    "8730": {
      "op": "JUMPI"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8733": {
      "op": "DUP1"
    },
    "8734": {
      "op": "REVERT"
    },
    "8735": {
      "op": "JUMPDEST"
    },
    "8736": {
      "op": "PUSH2",
      "value": "0x222B"
    },
    "8739": {
      "op": "DUP7"
    },
    "8740": {
      "op": "DUP3"
    },
    "8741": {
      "op": "DUP8"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8746": {
      "jump": "i",
      "op": "JUMP"
    },
    "8747": {
      "op": "JUMPDEST"
    },
    "8748": {
      "op": "SWAP3"
    },
    "8749": {
      "op": "POP"
    },
    "8750": {
      "op": "POP"
    },
    "8751": {
      "op": "PUSH2",
      "value": "0x223A"
    },
    "8754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8756": {
      "op": "DUP6"
    },
    "8757": {
      "op": "ADD"
    },
    "8758": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "8761": {
      "jump": "i",
      "op": "JUMP"
    },
    "8762": {
      "op": "JUMPDEST"
    },
    "8763": {
      "op": "SWAP1"
    },
    "8764": {
      "op": "POP"
    },
    "8765": {
      "op": "SWAP3"
    },
    "8766": {
      "op": "POP"
    },
    "8767": {
      "op": "SWAP3"
    },
    "8768": {
      "op": "POP"
    },
    "8769": {
      "op": "SWAP3"
    },
    "8770": {
      "jump": "o",
      "op": "JUMP"
    },
    "8771": {
      "op": "JUMPDEST"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8774": {
      "op": "DUP1"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8779": {
      "op": "DUP5"
    },
    "8780": {
      "op": "DUP7"
    },
    "8781": {
      "op": "SUB"
    },
    "8782": {
      "op": "SLT"
    },
    "8783": {
      "op": "ISZERO"
    },
    "8784": {
      "op": "PUSH2",
      "value": "0x2258"
    },
    "8787": {
      "op": "JUMPI"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8790": {
      "op": "DUP1"
    },
    "8791": {
      "op": "REVERT"
    },
    "8792": {
      "op": "JUMPDEST"
    },
    "8793": {
      "op": "DUP4"
    },
    "8794": {
      "op": "CALLDATALOAD"
    },
    "8795": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8804": {
      "op": "DUP2"
    },
    "8805": {
      "op": "GT"
    },
    "8806": {
      "op": "ISZERO"
    },
    "8807": {
      "op": "PUSH2",
      "value": "0x226F"
    },
    "8810": {
      "op": "JUMPI"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8813": {
      "op": "DUP1"
    },
    "8814": {
      "op": "REVERT"
    },
    "8815": {
      "op": "JUMPDEST"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x227B"
    },
    "8819": {
      "op": "DUP7"
    },
    "8820": {
      "op": "DUP3"
    },
    "8821": {
      "op": "DUP8"
    },
    "8822": {
      "op": "ADD"
    },
    "8823": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8826": {
      "jump": "i",
      "op": "JUMP"
    },
    "8827": {
      "op": "JUMPDEST"
    },
    "8828": {
      "op": "SWAP4"
    },
    "8829": {
      "op": "POP"
    },
    "8830": {
      "op": "POP"
    },
    "8831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8833": {
      "op": "DUP5"
    },
    "8834": {
      "op": "ADD"
    },
    "8835": {
      "op": "CALLDATALOAD"
    },
    "8836": {
      "op": "SWAP2"
    },
    "8837": {
      "op": "POP"
    },
    "8838": {
      "op": "PUSH2",
      "value": "0x223A"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8843": {
      "op": "DUP6"
    },
    "8844": {
      "op": "ADD"
    },
    "8845": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "8848": {
      "jump": "i",
      "op": "JUMP"
    },
    "8849": {
      "op": "JUMPDEST"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8854": {
      "op": "DUP3"
    },
    "8855": {
      "op": "DUP5"
    },
    "8856": {
      "op": "SUB"
    },
    "8857": {
      "op": "SLT"
    },
    "8858": {
      "op": "ISZERO"
    },
    "8859": {
      "op": "PUSH2",
      "value": "0x22A3"
    },
    "8862": {
      "op": "JUMPI"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8865": {
      "op": "DUP1"
    },
    "8866": {
      "op": "REVERT"
    },
    "8867": {
      "op": "JUMPDEST"
    },
    "8868": {
      "op": "DUP2"
    },
    "8869": {
      "op": "CALLDATALOAD"
    },
    "8870": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8879": {
      "op": "DUP2"
    },
    "8880": {
      "op": "GT"
    },
    "8881": {
      "op": "ISZERO"
    },
    "8882": {
      "op": "PUSH2",
      "value": "0x22BA"
    },
    "8885": {
      "op": "JUMPI"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8888": {
      "op": "DUP1"
    },
    "8889": {
      "op": "REVERT"
    },
    "8890": {
      "op": "JUMPDEST"
    },
    "8891": {
      "op": "PUSH2",
      "value": "0x22C6"
    },
    "8894": {
      "op": "DUP5"
    },
    "8895": {
      "op": "DUP3"
    },
    "8896": {
      "op": "DUP6"
    },
    "8897": {
      "op": "ADD"
    },
    "8898": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "8901": {
      "jump": "i",
      "op": "JUMP"
    },
    "8902": {
      "op": "JUMPDEST"
    },
    "8903": {
      "op": "SWAP5"
    },
    "8904": {
      "op": "SWAP4"
    },
    "8905": {
      "op": "POP"
    },
    "8906": {
      "op": "POP"
    },
    "8907": {
      "op": "POP"
    },
    "8908": {
      "op": "POP"
    },
    "8909": {
      "jump": "o",
      "op": "JUMP"
    },
    "8910": {
      "op": "JUMPDEST"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8913": {
      "op": "DUP3"
    },
    "8914": {
      "op": "MLOAD"
    },
    "8915": {
      "op": "PUSH2",
      "value": "0x22E0"
    },
    "8918": {
      "op": "DUP2"
    },
    "8919": {
      "op": "DUP5"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8922": {
      "op": "DUP8"
    },
    "8923": {
      "op": "ADD"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x212F"
    },
    "8927": {
      "jump": "i",
      "op": "JUMP"
    },
    "8928": {
      "op": "JUMPDEST"
    },
    "8929": {
      "op": "SWAP2"
    },
    "8930": {
      "op": "SWAP1"
    },
    "8931": {
      "op": "SWAP2"
    },
    "8932": {
      "op": "ADD"
    },
    "8933": {
      "op": "SWAP3"
    },
    "8934": {
      "op": "SWAP2"
    },
    "8935": {
      "op": "POP"
    },
    "8936": {
      "op": "POP"
    },
    "8937": {
      "jump": "o",
      "op": "JUMP"
    },
    "8938": {
      "op": "JUMPDEST"
    },
    "8939": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8946": {
      "op": "SHL"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8949": {
      "op": "MSTORE"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8954": {
      "op": "MSTORE"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8959": {
      "op": "REVERT"
    },
    "8960": {
      "op": "JUMPDEST"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8963": {
      "op": "DUP2"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8966": {
      "op": "NOT"
    },
    "8967": {
      "op": "DIV"
    },
    "8968": {
      "op": "DUP4"
    },
    "8969": {
      "op": "GT"
    },
    "8970": {
      "op": "DUP3"
    },
    "8971": {
      "op": "ISZERO"
    },
    "8972": {
      "op": "ISZERO"
    },
    "8973": {
      "op": "AND"
    },
    "8974": {
      "op": "ISZERO"
    },
    "8975": {
      "op": "PUSH2",
      "value": "0x231A"
    },
    "8978": {
      "op": "JUMPI"
    },
    "8979": {
      "op": "PUSH2",
      "value": "0x231A"
    },
    "8982": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "8985": {
      "jump": "i",
      "op": "JUMP"
    },
    "8986": {
      "op": "JUMPDEST"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "op": "MUL"
    },
    "8989": {
      "op": "SWAP1"
    },
    "8990": {
      "jump": "o",
      "op": "JUMP"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8994": {
      "op": "DUP3"
    },
    "8995": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "8998": {
      "op": "JUMPI"
    },
    "8999": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9006": {
      "op": "SHL"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9009": {
      "op": "MSTORE"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9014": {
      "op": "MSTORE"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9019": {
      "op": "REVERT"
    },
    "9020": {
      "op": "JUMPDEST"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "op": "DIV"
    },
    "9023": {
      "op": "SWAP1"
    },
    "9024": {
      "jump": "o",
      "op": "JUMP"
    },
    "9025": {
      "op": "JUMPDEST"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9030": {
      "op": "DUP3"
    },
    "9031": {
      "op": "DUP5"
    },
    "9032": {
      "op": "SUB"
    },
    "9033": {
      "op": "SLT"
    },
    "9034": {
      "op": "ISZERO"
    },
    "9035": {
      "op": "PUSH2",
      "value": "0x2353"
    },
    "9038": {
      "op": "JUMPI"
    },
    "9039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9041": {
      "op": "DUP1"
    },
    "9042": {
      "op": "REVERT"
    },
    "9043": {
      "op": "JUMPDEST"
    },
    "9044": {
      "op": "DUP2"
    },
    "9045": {
      "op": "MLOAD"
    },
    "9046": {
      "op": "DUP1"
    },
    "9047": {
      "op": "ISZERO"
    },
    "9048": {
      "op": "ISZERO"
    },
    "9049": {
      "op": "DUP2"
    },
    "9050": {
      "op": "EQ"
    },
    "9051": {
      "op": "PUSH2",
      "value": "0x1EDA"
    },
    "9054": {
      "op": "JUMPI"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9057": {
      "op": "DUP1"
    },
    "9058": {
      "op": "REVERT"
    },
    "9059": {
      "op": "JUMPDEST"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9068": {
      "op": "SHL"
    },
    "9069": {
      "op": "SUB"
    },
    "9070": {
      "op": "DUP1"
    },
    "9071": {
      "op": "DUP4"
    },
    "9072": {
      "op": "AND"
    },
    "9073": {
      "op": "DUP2"
    },
    "9074": {
      "op": "DUP2"
    },
    "9075": {
      "op": "EQ"
    },
    "9076": {
      "op": "ISZERO"
    },
    "9077": {
      "op": "PUSH2",
      "value": "0x2380"
    },
    "9080": {
      "op": "JUMPI"
    },
    "9081": {
      "op": "PUSH2",
      "value": "0x2380"
    },
    "9084": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9087": {
      "jump": "i",
      "op": "JUMP"
    },
    "9088": {
      "op": "JUMPDEST"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9091": {
      "op": "ADD"
    },
    "9092": {
      "op": "SWAP4"
    },
    "9093": {
      "op": "SWAP3"
    },
    "9094": {
      "op": "POP"
    },
    "9095": {
      "op": "POP"
    },
    "9096": {
      "op": "POP"
    },
    "9097": {
      "jump": "o",
      "op": "JUMP"
    },
    "9098": {
      "op": "JUMPDEST"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9101": {
      "op": "DUP1"
    },
    "9102": {
      "op": "DUP3"
    },
    "9103": {
      "op": "MSTORE"
    },
    "9104": {
      "op": "DUP2"
    },
    "9105": {
      "op": "DUP2"
    },
    "9106": {
      "op": "ADD"
    },
    "9107": {
      "op": "MSTORE"
    },
    "9108": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9143": {
      "op": "DUP3"
    },
    "9144": {
      "op": "ADD"
    },
    "9145": {
      "op": "MSTORE"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9148": {
      "op": "ADD"
    },
    "9149": {
      "op": "SWAP1"
    },
    "9150": {
      "jump": "o",
      "op": "JUMP"
    },
    "9151": {
      "op": "JUMPDEST"
    },
    "9152": {
      "op": "DUP1"
    },
    "9153": {
      "op": "MLOAD"
    },
    "9154": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "9165": {
      "op": "DUP2"
    },
    "9166": {
      "op": "AND"
    },
    "9167": {
      "op": "DUP2"
    },
    "9168": {
      "op": "EQ"
    },
    "9169": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "9172": {
      "op": "JUMPI"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9175": {
      "op": "DUP1"
    },
    "9176": {
      "op": "REVERT"
    },
    "9177": {
      "op": "JUMPDEST"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9180": {
      "op": "DUP1"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9183": {
      "op": "DUP1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9188": {
      "op": "DUP7"
    },
    "9189": {
      "op": "DUP9"
    },
    "9190": {
      "op": "SUB"
    },
    "9191": {
      "op": "SLT"
    },
    "9192": {
      "op": "ISZERO"
    },
    "9193": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "9196": {
      "op": "JUMPI"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9199": {
      "op": "DUP1"
    },
    "9200": {
      "op": "REVERT"
    },
    "9201": {
      "op": "JUMPDEST"
    },
    "9202": {
      "op": "PUSH2",
      "value": "0x23FA"
    },
    "9205": {
      "op": "DUP7"
    },
    "9206": {
      "op": "PUSH2",
      "value": "0x23BF"
    },
    "9209": {
      "jump": "i",
      "op": "JUMP"
    },
    "9210": {
      "op": "JUMPDEST"
    },
    "9211": {
      "op": "SWAP5"
    },
    "9212": {
      "op": "POP"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9215": {
      "op": "DUP7"
    },
    "9216": {
      "op": "ADD"
    },
    "9217": {
      "op": "MLOAD"
    },
    "9218": {
      "op": "SWAP4"
    },
    "9219": {
      "op": "POP"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9222": {
      "op": "DUP7"
    },
    "9223": {
      "op": "ADD"
    },
    "9224": {
      "op": "MLOAD"
    },
    "9225": {
      "op": "SWAP3"
    },
    "9226": {
      "op": "POP"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9229": {
      "op": "DUP7"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "op": "MLOAD"
    },
    "9232": {
      "op": "SWAP2"
    },
    "9233": {
      "op": "POP"
    },
    "9234": {
      "op": "PUSH2",
      "value": "0x241D"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9239": {
      "op": "DUP8"
    },
    "9240": {
      "op": "ADD"
    },
    "9241": {
      "op": "PUSH2",
      "value": "0x23BF"
    },
    "9244": {
      "jump": "i",
      "op": "JUMP"
    },
    "9245": {
      "op": "JUMPDEST"
    },
    "9246": {
      "op": "SWAP1"
    },
    "9247": {
      "op": "POP"
    },
    "9248": {
      "op": "SWAP3"
    },
    "9249": {
      "op": "SWAP6"
    },
    "9250": {
      "op": "POP"
    },
    "9251": {
      "op": "SWAP3"
    },
    "9252": {
      "op": "SWAP6"
    },
    "9253": {
      "op": "SWAP1"
    },
    "9254": {
      "op": "SWAP4"
    },
    "9255": {
      "op": "POP"
    },
    "9256": {
      "jump": "o",
      "op": "JUMP"
    },
    "9257": {
      "op": "JUMPDEST"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9260": {
      "op": "DUP3"
    },
    "9261": {
      "op": "NOT"
    },
    "9262": {
      "op": "DUP3"
    },
    "9263": {
      "op": "GT"
    },
    "9264": {
      "op": "ISZERO"
    },
    "9265": {
      "op": "PUSH2",
      "value": "0x243C"
    },
    "9268": {
      "op": "JUMPI"
    },
    "9269": {
      "op": "PUSH2",
      "value": "0x243C"
    },
    "9272": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9275": {
      "jump": "i",
      "op": "JUMP"
    },
    "9276": {
      "op": "JUMPDEST"
    },
    "9277": {
      "op": "POP"
    },
    "9278": {
      "op": "ADD"
    },
    "9279": {
      "op": "SWAP1"
    },
    "9280": {
      "jump": "o",
      "op": "JUMP"
    },
    "9281": {
      "op": "JUMPDEST"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9290": {
      "op": "SHL"
    },
    "9291": {
      "op": "SUB"
    },
    "9292": {
      "op": "DUP4"
    },
    "9293": {
      "op": "DUP2"
    },
    "9294": {
      "op": "AND"
    },
    "9295": {
      "op": "SWAP1"
    },
    "9296": {
      "op": "DUP4"
    },
    "9297": {
      "op": "AND"
    },
    "9298": {
      "op": "DUP2"
    },
    "9299": {
      "op": "DUP2"
    },
    "9300": {
      "op": "LT"
    },
    "9301": {
      "op": "ISZERO"
    },
    "9302": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9305": {
      "op": "JUMPI"
    },
    "9306": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9309": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9312": {
      "jump": "i",
      "op": "JUMP"
    },
    "9313": {
      "op": "JUMPDEST"
    },
    "9314": {
      "op": "SUB"
    },
    "9315": {
      "op": "SWAP4"
    },
    "9316": {
      "op": "SWAP3"
    },
    "9317": {
      "op": "POP"
    },
    "9318": {
      "op": "POP"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "jump": "o",
      "op": "JUMP"
    },
    "9321": {
      "op": "JUMPDEST"
    },
    "9322": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9329": {
      "op": "SHL"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9332": {
      "op": "MSTORE"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9337": {
      "op": "MSTORE"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9342": {
      "op": "REVERT"
    },
    "9343": {
      "op": "JUMPDEST"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9348": {
      "op": "NOT"
    },
    "9349": {
      "op": "DUP3"
    },
    "9350": {
      "op": "EQ"
    },
    "9351": {
      "op": "ISZERO"
    },
    "9352": {
      "op": "PUSH2",
      "value": "0x2493"
    },
    "9355": {
      "op": "JUMPI"
    },
    "9356": {
      "op": "PUSH2",
      "value": "0x2493"
    },
    "9359": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9362": {
      "jump": "i",
      "op": "JUMP"
    },
    "9363": {
      "op": "JUMPDEST"
    },
    "9364": {
      "op": "POP"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9367": {
      "op": "ADD"
    },
    "9368": {
      "op": "SWAP1"
    },
    "9369": {
      "jump": "o",
      "op": "JUMP"
    },
    "9370": {
      "op": "JUMPDEST"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9375": {
      "op": "DUP3"
    },
    "9376": {
      "op": "DUP5"
    },
    "9377": {
      "op": "SUB"
    },
    "9378": {
      "op": "SLT"
    },
    "9379": {
      "op": "ISZERO"
    },
    "9380": {
      "op": "PUSH2",
      "value": "0x24AC"
    },
    "9383": {
      "op": "JUMPI"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9386": {
      "op": "DUP1"
    },
    "9387": {
      "op": "REVERT"
    },
    "9388": {
      "op": "JUMPDEST"
    },
    "9389": {
      "op": "POP"
    },
    "9390": {
      "op": "MLOAD"
    },
    "9391": {
      "op": "SWAP2"
    },
    "9392": {
      "op": "SWAP1"
    },
    "9393": {
      "op": "POP"
    },
    "9394": {
      "jump": "o",
      "op": "JUMP"
    },
    "9395": {
      "op": "JUMPDEST"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9398": {
      "op": "DUP3"
    },
    "9399": {
      "op": "DUP3"
    },
    "9400": {
      "op": "LT"
    },
    "9401": {
      "op": "ISZERO"
    },
    "9402": {
      "op": "PUSH2",
      "value": "0x24C5"
    },
    "9405": {
      "op": "JUMPI"
    },
    "9406": {
      "op": "PUSH2",
      "value": "0x24C5"
    },
    "9409": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9412": {
      "jump": "i",
      "op": "JUMP"
    },
    "9413": {
      "op": "JUMPDEST"
    },
    "9414": {
      "op": "POP"
    },
    "9415": {
      "op": "SUB"
    },
    "9416": {
      "op": "SWAP1"
    },
    "9417": {
      "jump": "o",
      "op": "JUMP"
    },
    "9418": {
      "op": "JUMPDEST"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9421": {
      "op": "DUP2"
    },
    "9422": {
      "op": "DUP2"
    },
    "9423": {
      "op": "SHR"
    },
    "9424": {
      "op": "SWAP1"
    },
    "9425": {
      "op": "DUP3"
    },
    "9426": {
      "op": "AND"
    },
    "9427": {
      "op": "DUP1"
    },
    "9428": {
      "op": "PUSH2",
      "value": "0x24DE"
    },
    "9431": {
      "op": "JUMPI"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9434": {
      "op": "DUP3"
    },
    "9435": {
      "op": "AND"
    },
    "9436": {
      "op": "SWAP2"
    },
    "9437": {
      "op": "POP"
    },
    "9438": {
      "op": "JUMPDEST"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9441": {
      "op": "DUP3"
    },
    "9442": {
      "op": "LT"
    },
    "9443": {
      "op": "DUP2"
    },
    "9444": {
      "op": "EQ"
    },
    "9445": {
      "op": "ISZERO"
    },
    "9446": {
      "op": "PUSH2",
      "value": "0x24FF"
    },
    "9449": {
      "op": "JUMPI"
    },
    "9450": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9457": {
      "op": "SHL"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9460": {
      "op": "MSTORE"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9465": {
      "op": "MSTORE"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9470": {
      "op": "REVERT"
    },
    "9471": {
      "op": "JUMPDEST"
    },
    "9472": {
      "op": "POP"
    },
    "9473": {
      "op": "SWAP2"
    },
    "9474": {
      "op": "SWAP1"
    },
    "9475": {
      "op": "POP"
    },
    "9476": {
      "jump": "o",
      "op": "JUMP"
    },
    "9477": {
      "op": "JUMPDEST"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9480": {
      "op": "DUP1"
    },
    "9481": {
      "op": "DUP4"
    },
    "9482": {
      "op": "SLOAD"
    },
    "9483": {
      "op": "DUP2"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9486": {
      "op": "DUP3"
    },
    "9487": {
      "op": "DUP2"
    },
    "9488": {
      "op": "SHR"
    },
    "9489": {
      "op": "SWAP2"
    },
    "9490": {
      "op": "POP"
    },
    "9491": {
      "op": "DUP1"
    },
    "9492": {
      "op": "DUP4"
    },
    "9493": {
      "op": "AND"
    },
    "9494": {
      "op": "DUP1"
    },
    "9495": {
      "op": "PUSH2",
      "value": "0x2521"
    },
    "9498": {
      "op": "JUMPI"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9501": {
      "op": "DUP4"
    },
    "9502": {
      "op": "AND"
    },
    "9503": {
      "op": "SWAP3"
    },
    "9504": {
      "op": "POP"
    },
    "9505": {
      "op": "JUMPDEST"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9508": {
      "op": "DUP1"
    },
    "9509": {
      "op": "DUP5"
    },
    "9510": {
      "op": "LT"
    },
    "9511": {
      "op": "DUP3"
    },
    "9512": {
      "op": "EQ"
    },
    "9513": {
      "op": "ISZERO"
    },
    "9514": {
      "op": "PUSH2",
      "value": "0x2541"
    },
    "9517": {
      "op": "JUMPI"
    },
    "9518": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9525": {
      "op": "SHL"
    },
    "9526": {
      "op": "DUP7"
    },
    "9527": {
      "op": "MSTORE"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9535": {
      "op": "DUP7"
    },
    "9536": {
      "op": "REVERT"
    },
    "9537": {
      "op": "JUMPDEST"
    },
    "9538": {
      "op": "DUP2"
    },
    "9539": {
      "op": "DUP1"
    },
    "9540": {
      "op": "ISZERO"
    },
    "9541": {
      "op": "PUSH2",
      "value": "0x2555"
    },
    "9544": {
      "op": "JUMPI"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9547": {
      "op": "DUP2"
    },
    "9548": {
      "op": "EQ"
    },
    "9549": {
      "op": "PUSH2",
      "value": "0x2566"
    },
    "9552": {
      "op": "JUMPI"
    },
    "9553": {
      "op": "PUSH2",
      "value": "0x2593"
    },
    "9556": {
      "op": "JUMP"
    },
    "9557": {
      "op": "JUMPDEST"
    },
    "9558": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9560": {
      "op": "NOT"
    },
    "9561": {
      "op": "DUP7"
    },
    "9562": {
      "op": "AND"
    },
    "9563": {
      "op": "DUP10"
    },
    "9564": {
      "op": "MSTORE"
    },
    "9565": {
      "op": "DUP5"
    },
    "9566": {
      "op": "DUP10"
    },
    "9567": {
      "op": "ADD"
    },
    "9568": {
      "op": "SWAP7"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "PUSH2",
      "value": "0x2593"
    },
    "9573": {
      "op": "JUMP"
    },
    "9574": {
      "op": "JUMPDEST"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9577": {
      "op": "DUP11"
    },
    "9578": {
      "op": "DUP2"
    },
    "9579": {
      "op": "MSTORE"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9582": {
      "op": "SWAP1"
    },
    "9583": {
      "op": "KECCAK256"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9586": {
      "op": "JUMPDEST"
    },
    "9587": {
      "op": "DUP7"
    },
    "9588": {
      "op": "DUP2"
    },
    "9589": {
      "op": "LT"
    },
    "9590": {
      "op": "ISZERO"
    },
    "9591": {
      "op": "PUSH2",
      "value": "0x258B"
    },
    "9594": {
      "op": "JUMPI"
    },
    "9595": {
      "op": "DUP2"
    },
    "9596": {
      "op": "SLOAD"
    },
    "9597": {
      "op": "DUP12"
    },
    "9598": {
      "op": "DUP3"
    },
    "9599": {
      "op": "ADD"
    },
    "9600": {
      "op": "MSTORE"
    },
    "9601": {
      "op": "SWAP1"
    },
    "9602": {
      "op": "DUP6"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "SWAP1"
    },
    "9605": {
      "op": "DUP4"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "PUSH2",
      "value": "0x2572"
    },
    "9610": {
      "op": "JUMP"
    },
    "9611": {
      "op": "JUMPDEST"
    },
    "9612": {
      "op": "POP"
    },
    "9613": {
      "op": "POP"
    },
    "9614": {
      "op": "DUP5"
    },
    "9615": {
      "op": "DUP10"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "op": "SWAP7"
    },
    "9618": {
      "op": "POP"
    },
    "9619": {
      "op": "JUMPDEST"
    },
    "9620": {
      "op": "POP"
    },
    "9621": {
      "op": "SWAP5"
    },
    "9622": {
      "op": "SWAP9"
    },
    "9623": {
      "op": "SWAP8"
    },
    "9624": {
      "op": "POP"
    },
    "9625": {
      "op": "POP"
    },
    "9626": {
      "op": "POP"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "op": "POP"
    },
    "9629": {
      "op": "POP"
    },
    "9630": {
      "op": "POP"
    },
    "9631": {
      "op": "POP"
    },
    "9632": {
      "jump": "o",
      "op": "JUMP"
    },
    "9633": {
      "op": "JUMPDEST"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9638": {
      "op": "DUP3"
    },
    "9639": {
      "op": "AND"
    },
    "9640": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9642": {
      "op": "DUP2"
    },
    "9643": {
      "op": "EQ"
    },
    "9644": {
      "op": "ISZERO"
    },
    "9645": {
      "op": "PUSH2",
      "value": "0x25B8"
    },
    "9648": {
      "op": "JUMPI"
    },
    "9649": {
      "op": "PUSH2",
      "value": "0x25B8"
    },
    "9652": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "9655": {
      "jump": "i",
      "op": "JUMP"
    },
    "9656": {
      "op": "JUMPDEST"
    },
    "9657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9659": {
      "op": "ADD"
    },
    "9660": {
      "op": "SWAP3"
    },
    "9661": {
      "op": "SWAP2"
    },
    "9662": {
      "op": "POP"
    },
    "9663": {
      "op": "POP"
    },
    "9664": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8ab16292c5d9594c12a47ac629e017a112c022c1",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/DataTypes.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/ILendingPool.sol\";\nimport \"../interfaces/TransferHelper.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"../interfaces/IMoonSquares.sol\";\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract DailyRocket is Ownable, KeeperCompatibleInterface {\n\n    //preferably should use the http get to get the actual close price of an asset rather than aggregator\n    //to confirm during testing phase\n\n\n    //IUniswapV2Router01 public sushiRouter = IUniswapV2Router01(0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506);\n\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(\n        address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)\n    );  \n    ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n    \n    IMoonSquares public moonSquare;\n    ISwapRouter public immutable swapRouter;\n    uint24 public constant poolFee = 3000;\n\n    uint128 public dayCount;//Kepps track of the days\n\n    string[] predictableAssets;//all assets that a user can predict\n    address[] assetPriceAggregators;\n\n    mapping(string => bool) public activeAsset;\n\n    mapping(uint256 => mapping(string => int256)) dayAssetClosePrice; //Closing Price per asset \n\n    mapping(uint256 => uint256) dayCloseTime; //Closing Time per asset\n    \n    address Dai = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n\n    uint256 public contractStartTime; //The contract should start at 0000.00 hours\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetTotalAmount;\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetNoOfWinners;\n    \n    mapping(uint256 => mapping(string => int256[])) public dayAssetPrediction;\n\n    mapping(uint256 => mapping(string => address[])) public dayAssetPredictors;\n\n    event Predicted(address indexed _placer, int256 _prediction);\n    \n    struct Charity {\n        bytes8 name;\n        bytes32 link; //sends people to the charity's official site\n    }\n    struct Prediction {\n        int256 prediction;\n        uint256 time;\n        bool isWinner;\n    }\n    \n    mapping (address => Charity) public presentCharities;\n\n    address[] public AcceptedTokens;\n\n    mapping(uint128 => mapping(string => address[])) public dailyAssetWinners;\n\n    //user and their prediction\n    mapping(uint128 => mapping(string => mapping(address => Prediction))) public dayAssetUserPrediction;\n\n    constructor(\n        address _dai,\n        ISwapRouter _swapRouter, //0xE592427A0AEce92De3Edee1F18E0157C05861564\n        IMoonSquares _moonsqr\n        )\n    {\n        AcceptedTokens.push(_dai);\n        swapRouter = _swapRouter;\n        moonSquare = _moonsqr;\n        contractStartTime = block.timestamp;\n        dayCount = 1;\n        dayCloseTime[dayCount] = contractStartTime + 86400 seconds;//adds a day to the start time. to change to an input later.\n    }//instantiate the token addresses upon deployment\n\n\n    function setNewClosingPrice() internal {\n        for (uint256 i = 0; i < assetPriceAggregators.length; i++){\n            dayAssetClosePrice[dayCount][predictableAssets[i]] = getPrice(i);\n        }\n    }\n\n    function addPaymentToken(address _address) public onlyOwner {\n        AcceptedTokens.push(_address);\n    }\n    \n    function addAssetAndAgg(string memory _asset, address _aggregator) public onlyOwner {\n        predictableAssets.push(_asset);\n        assetPriceAggregators.push(_aggregator);\n        activeAsset[_asset] = true;\n    }\n\n    function predictClosePrice(\n        string memory _asset, \n        int _prediction,\n        address token\n    ) public allowedToken(token)\n    {   \n        require(activeAsset[_asset] == true);\n        if (dayCount > 1) {\n            require(getTime() <= dayCloseTime[dayCount -1] + 64800 seconds);//After this time, one cannot\n        }\n        uint256 amount = 10000000000000000000;//the amount we set for the daily close\n        if (token != Dai) {\n            require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n            //IERC20(token).transferFrom(msg.sender, address(this), uint(amount));\n            TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount);\n\n            // Approve the router to spend the specifed `amountInMaximum` of DAI.\n            TransferHelper.safeApprove(token, address(swapRouter), amount);\n            uint amountInMaximum = 15000000000000000000;\n            ISwapRouter.ExactOutputSingleParams memory params =\n                ISwapRouter.ExactOutputSingleParams({\n                    tokenIn: token,\n                    tokenOut: Dai,\n                    fee: poolFee,\n                    recipient: address(this),\n                    deadline: block.timestamp,\n                    amountOut: amount,\n                    amountInMaximum: amountInMaximum,\n                    sqrtPriceLimitX96: 0\n                });\n\n            // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n            uint amountIn = swapRouter.exactOutputSingle(params);\n\n            // For exact output swaps, the amountInMaximum may not have all been spent.\n            // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n            if (amountIn < amountInMaximum) {\n                TransferHelper.safeApprove(Dai, address(swapRouter), 0);\n                TransferHelper.safeTransfer(Dai, msg.sender, amountInMaximum - amountIn);\n            }\n        } else {\n    \n        require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n        IERC20(Dai).transferFrom(msg.sender, address(this), uint(amount));\n        \n        }\n        dayAssetTotalAmount[dayCount][_asset] += amount;\n        //Updates The prediction mapping\n        dayAssetUserPrediction[dayCount][_asset][msg.sender] = Prediction(\n            _prediction,\n            getTime(),\n            false\n        );\n        //adds to the list of predictions\n        dayAssetPrediction[dayCount][_asset].push(_prediction);\n        //add the sender to the predictors array\n        dayAssetPredictors[dayCount][_asset].push(msg.sender);\n\n        emit Predicted(msg.sender, _prediction);\n    }\n\n    function setNumberOfWinners() private {\n        uint128 day = dayCount;\n        for (uint8 i = 0; i < predictableAssets.length; i++) {\n            require(\n                dayAssetPrediction[day][predictableAssets[i]].length\n                ==\n                dayAssetPredictors[day][predictableAssets[i]].length\n            );\n            for (uint8 p = 0; p < dayAssetPrediction[day][predictableAssets[i]].length; p++) {\n                require(dayAssetPrediction[day][predictableAssets[i]][p] == dayAssetClosePrice[day][predictableAssets[i]]);\n                dailyAssetWinners[day][predictableAssets[i]].push(dayAssetPredictors[day][predictableAssets[i]][p]);\n                dayAssetNoOfWinners[day][predictableAssets[i]] +=1;\n\n                moonSquare.addToWinners(dayAssetPredictors[day][predictableAssets[i]][p]);\n            }\n        }\n    }\n\n\n    function getTime() public view returns(uint){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x6135b13325bfC4B00278B4abC5e20bbce2D6580e);\n        (,,,uint answer,) = priceFeed.latestRoundData();\n         return uint(answer);\n    }\n\n    function getPrice(uint256 _aggindex) public view returns(int){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(assetPriceAggregators[_aggindex]);\n        (,int answer,,,) = priceFeed.latestRoundData();\n         return int(answer);\n    }\n\n    modifier allowedToken(address _token) {\n        for(uint i =0; i < predictableAssets.length; i++) {\n            require(AcceptedTokens[i] == _token);\n        }\n        _;\n    }\n\n    function claimWinnings(uint128 _day, string memory _asset) public {\n        //logic to see if the person had a winning prediction\n        require(dayAssetUserPrediction[_day][_asset][msg.sender].prediction == dayAssetClosePrice[_day][_asset]);\n        uint256 winners = dayAssetNoOfWinners[_day][_asset];\n        dayAssetUserPrediction[_day][_asset][msg.sender].isWinner = true;\n        IERC20(Dai).transfer(\n            msg.sender, \n            ((dayAssetTotalAmount[_day][_asset]) * 90/100)/winners\n        );\n        \n    }\n\n    function isAwinner(\n        uint128 _day,\n        string memory _asset,\n        address checked\n    ) public view returns(bool){\n        require(dayAssetClosePrice[_day][_asset] != 0);\n        require(dayAssetUserPrediction[_day][_asset][checked].prediction == dayAssetClosePrice[_day][_asset]);\n        return true;\n    }\n    \n    function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        if (dayCloseTime[dayCount] + 86400 seconds == getTime()){\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint256(0)));\n        }\n        if (getTime() > dayCloseTime[dayCount -1] + 64800 seconds) {\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint(1)));\n        }\n        performData = checkData;\n        \n    }\n    \n    function performUpkeep(bytes calldata performData) external override {\n         uint256 decodedValue = abi.decode(performData, (uint256));\n        if (decodedValue == 0) {\n            setNewClosingPrice();\n            setNumberOfWinners();\n            dayCount++;\n        }\n        if (decodedValue == 1) {\n            sendToIba();\n        }\n    }\n    \n    //sends non winnings to an interest bearibg account \n    function sendToIba() private {\n        require(getTime() > dayCloseTime[dayCount -1] + 64800 seconds);\n        for (uint128 i = 0; i < predictableAssets.length; i++) {\n            uint amount = ((dayAssetTotalAmount[dayCount][predictableAssets[i]]) * 10/100);\n            //IERC20(Dai).approve(IBA, amount);\n            IERC20(Dai).approve(address(lendingPool), amount);\n            lendingPool.deposit(\n                Dai,\n                uint(amount),\n                address(moonSquare),\n                0\n            );\n        }\n    }\n\n\n    \n}",
  "sourceMap": "591:9864:16:-:0;;;;;914:137;;;-1:-1:-1;;;;;;914:137:16;1002:42;914:137;;;;;;-1:-1:-1;;;1099:25:16;;1002:42;1099:23;;:25;;;;;591:9864;1002:42;1099:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1059:66;;;-1:-1:-1;;;;;1059:66:16;;;;-1:-1:-1;;;;;;1059:66:16;;;;;;1645:56;;;;;;1659:42;1645:56;;;2726:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:10;867:9:0;:23::i;:::-;2893:14:16;:25;;;;;;;;-1:-1:-1;2893:25:16;;;;;;;;-1:-1:-1;;;;;2893:25:16;;;-1:-1:-1;;;;;;2893:25:16;;;;;;;2928:24;;;;;2962:10;:21;;;;;;;;;;;;;;;3013:15;2993:17;:35;;;3038:8;:12;;-1:-1:-1;;;;;;3038:12:16;;;;;;;3085:33;;3105:13;3085:33;:::i;:::-;3073:8;;-1:-1:-1;;;;;3073:8:16;3060:22;;;;:12;:22;;;;;:58;-1:-1:-1;591:9864:16;;-1:-1:-1;;591:9864:16;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:131:40:-;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:40:o;406:560::-;535:6;543;551;604:2;592:9;583:7;579:23;575:32;572:52;;;620:1;617;610:12;572:52;652:9;646:16;671:31;696:5;671:31;:::i;:::-;771:2;756:18;;750:25;721:5;;-1:-1:-1;784:33:40;750:25;784:33;:::i;:::-;888:2;873:18;;867:25;836:7;;-1:-1:-1;901:33:40;867:25;901:33;:::i;:::-;953:7;943:17;;;406:560;;;;;:::o;971:225::-;1011:3;1042:1;1038:6;1035:1;1032:13;1029:136;;;1087:10;1082:3;1078:20;1075:1;1068:31;1122:4;1119:1;1112:15;1150:4;1147:1;1140:15;1029:136;-1:-1:-1;1181:9:40;;971:225::o;:::-;591:9864:16;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/DailyRocket.sol",
  "type": "contract"
}