{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        },
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "contract IMoonSquares",
          "name": "_moonsqr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_placer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "Predicted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AcceptedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "activeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "addAssetAndAgg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyAssetWinners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetNoOfWinners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPredictors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dayAssetUserPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_aggindex",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "checked",
          "type": "address"
        }
      ],
      "name": "isAwinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moonSquare",
      "outputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "predictClosePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presentCharities",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "name",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "link",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "10": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "14": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "15": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "16": "contracts/DailyRocket.sol",
    "19": "interfaces/IERC20.sol",
    "21": "interfaces/ILendingPool.sol",
    "22": "interfaces/ILendingPoolAddressesProvider.sol",
    "23": "interfaces/IMoonSquares.sol",
    "25": "interfaces/ISwapRouter.sol",
    "27": "interfaces/TransferHelper.sol"
  },
  "ast": {
    "absolutePath": "contracts/DailyRocket.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        2727
      ],
      "Context": [
        5772
      ],
      "DailyRocket": [
        934
      ],
      "DataTypes": [
        2787
      ],
      "IERC20": [
        5864
      ],
      "ILendingPool": [
        3165
      ],
      "ILendingPoolAddressesProvider": [
        3316
      ],
      "IMoonSquares": [
        3324
      ],
      "ISwapRouter": [
        3424
      ],
      "IUniswapV3SwapCallback": [
        5786
      ],
      "KeeperCompatibleInterface": [
        2746
      ],
      "Ownable": [
        2681
      ],
      "TransferHelper": [
        3595
      ]
    },
    "id": 935,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:16"
      },
      {
        "absolutePath": "interfaces/DataTypes.sol",
        "file": "../interfaces/DataTypes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 2788,
        "src": "56:37:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 3317,
        "src": "94:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 3166,
        "src": "152:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/TransferHelper.sol",
        "file": "../interfaces/TransferHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 3596,
        "src": "193:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISwapRouter.sol",
        "file": "../interfaces/ISwapRouter.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 3425,
        "src": "236:39:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoonSquares.sol",
        "file": "../interfaces/IMoonSquares.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 3325,
        "src": "276:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 2747,
        "src": "318:80:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 2728,
        "src": "399:76:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 935,
        "sourceUnit": 2682,
        "src": "535:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2681,
              "src": "615:7:16"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "615:7:16"
          },
          {
            "baseName": {
              "id": 13,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2746,
              "src": "624:25:16"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "624:25:16"
          }
        ],
        "canonicalName": "DailyRocket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 934,
        "linearizedBaseContracts": [
          934,
          2746,
          2681,
          5772
        ],
        "name": "DailyRocket",
        "nameLocation": "600:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "944:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "914:137:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3316",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3316,
                "src": "914:29:16"
              },
              "referencedDeclaration": 3316,
              "src": "914:29:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3316",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:42:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "994:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 18,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:16",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 21,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "994:51:16",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 17,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3316,
                "src": "955:29:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$3316_$",
                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                }
              },
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "955:96:16",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3316",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "1192:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1179:66:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$3165",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "ILendingPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3165,
                "src": "1179:12:16"
              },
              "referencedDeclaration": 3165,
              "src": "1179:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$3165",
                "typeString": "contract ILendingPool"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [],
                  "expression": {
                    "argumentTypes": [],
                    "expression": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1219:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$3316",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "getLendingPool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3250,
                    "src": "1219:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                      "typeString": "function () view external returns (address)"
                    }
                  },
                  "id": 29,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1219:25:16",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 26,
                "name": "ILendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3165,
                "src": "1206:12:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$3165_$",
                  "typeString": "type(contract ILendingPool)"
                }
              },
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1206:39:16",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$3165",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd2faa68",
            "id": 34,
            "mutability": "mutable",
            "name": "moonSquare",
            "nameLocation": "1276:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1256:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMoonSquares_$3324",
              "typeString": "contract IMoonSquares"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "IMoonSquares",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3324,
                "src": "1256:12:16"
              },
              "referencedDeclaration": 3324,
              "src": "1256:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                "typeString": "contract IMoonSquares"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 37,
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "1321:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1292:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$3424",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3424,
                "src": "1292:11:16"
              },
              "referencedDeclaration": 3424,
              "src": "1292:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 40,
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "1360:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1337:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 38,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1337:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1370:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "dayCount",
            "nameLocation": "1389:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1381:16:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 41,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1381:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "predictableAssets",
            "nameLocation": "1438:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1429:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1429:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1429:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "assetPriceAggregators",
            "nameLocation": "1507:21:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1497:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1497:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1497:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ec6f4f41",
            "id": 52,
            "mutability": "mutable",
            "name": "activeAsset",
            "nameLocation": "1566:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1535:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1543:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1535:23:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 50,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1553:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "dayAssetClosePrice",
            "nameLocation": "1630:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1584:64:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256))"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1592:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1584:45:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256))"
              },
              "valueType": {
                "id": 56,
                "keyType": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1611:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1603:25:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                  "typeString": "mapping(string => int256)"
                },
                "valueType": {
                  "id": 55,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1621:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "dayCloseTime",
            "nameLocation": "1710:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1682:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1690:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1682:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1701:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "Dai",
            "nameLocation": "1766:3:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1758:56:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 63,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1758:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1772:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0c3d5157",
            "id": 67,
            "mutability": "mutable",
            "name": "contractStartTime",
            "nameLocation": "1836:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1821:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1821:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80f79702",
            "id": 73,
            "mutability": "mutable",
            "name": "dayAssetTotalAmount",
            "nameLocation": "1959:19:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1905:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1913:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1905:46:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 71,
                "keyType": {
                  "id": 69,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1932:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1924:26:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 70,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1942:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63168475",
            "id": 79,
            "mutability": "mutable",
            "name": "dayAssetNoOfWinners",
            "nameLocation": "2039:19:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "1985:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1993:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1985:46:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 77,
                "keyType": {
                  "id": 75,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2012:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2004:26:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2022:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afa3a617",
            "id": 86,
            "mutability": "mutable",
            "name": "dayAssetPrediction",
            "nameLocation": "2124:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2069:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256[]))"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2077:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2069:47:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256[]))"
              },
              "valueType": {
                "id": 84,
                "keyType": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2096:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2088:27:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                  "typeString": "mapping(string => int256[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 82,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ArrayTypeName",
                  "src": "2106:8:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                    "typeString": "int256[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f90f0b7",
            "id": 93,
            "mutability": "mutable",
            "name": "dayAssetPredictors",
            "nameLocation": "2205:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2149:74:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 92,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2157:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2149:48:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 91,
                "keyType": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2176:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2168:28:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ArrayTypeName",
                  "src": "2186:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 99,
            "name": "Predicted",
            "nameLocation": "2236:9:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_placer",
                  "nameLocation": "2262:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2246:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "2278:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2271:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:45:16"
            },
            "src": "2230:61:16"
          },
          {
            "canonicalName": "DailyRocket.Charity",
            "id": 104,
            "members": [
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "2333:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2326:11:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 100,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2326:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "2355:4:16",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2347:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 102,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2347:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Charity",
            "nameLocation": "2308:7:16",
            "nodeType": "StructDefinition",
            "scope": 934,
            "src": "2301:111:16",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "126df02b",
            "id": 109,
            "mutability": "mutable",
            "name": "presentCharities",
            "nameLocation": "2458:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2422:52:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
              "typeString": "mapping(address => struct DailyRocket.Charity)"
            },
            "typeName": {
              "id": 108,
              "keyType": {
                "id": 105,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2431:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2422:28:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
                "typeString": "mapping(address => struct DailyRocket.Charity)"
              },
              "valueType": {
                "id": 107,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 106,
                  "name": "Charity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "2442:7:16"
                },
                "referencedDeclaration": 104,
                "src": "2442:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Charity_$104_storage_ptr",
                  "typeString": "struct DailyRocket.Charity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a128671",
            "id": 112,
            "mutability": "mutable",
            "name": "AcceptedTokens",
            "nameLocation": "2498:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2481:31:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 110,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2481:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 111,
              "nodeType": "ArrayTypeName",
              "src": "2481:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ce529a",
            "id": 119,
            "mutability": "mutable",
            "name": "dailyAssetWinners",
            "nameLocation": "2575:17:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2519:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint128 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 118,
              "keyType": {
                "id": 113,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2527:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2519:48:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint128 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 117,
                "keyType": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2546:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2538:28:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 116,
                  "nodeType": "ArrayTypeName",
                  "src": "2556:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2aba3f0",
            "id": 127,
            "mutability": "mutable",
            "name": "dayAssetUserPrediction",
            "nameLocation": "2704:22:16",
            "nodeType": "VariableDeclaration",
            "scope": 934,
            "src": "2631:95:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
              "typeString": "mapping(uint128 => mapping(string => mapping(address => int256)))"
            },
            "typeName": {
              "id": 126,
              "keyType": {
                "id": 120,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2639:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2631:65:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                "typeString": "mapping(uint128 => mapping(string => mapping(address => int256)))"
              },
              "valueType": {
                "id": 125,
                "keyType": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2658:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2650:45:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                  "typeString": "mapping(string => mapping(address => int256))"
                },
                "valueType": {
                  "id": 124,
                  "keyType": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2668:26:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                    "typeString": "mapping(address => int256)"
                  },
                  "valueType": {
                    "id": 123,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2890:302:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2920:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2900:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2900:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:25:16"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2935:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "2948:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "2935:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:24:16"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "moonSquare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2969:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_moonsqr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2982:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "src": "2969:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:21:16"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "contractStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3000:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 153,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3020:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3020:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3000:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:35:16"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3045:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3056:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3045:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:12:16"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "dayCloseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3067:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "dayCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3080:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3067:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 164,
                        "name": "contractStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3092:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3112:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "3092:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3067:58:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:58:16"
                }
              ]
            },
            "id": 170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_dai",
                  "nameLocation": "2762:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2754:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "2788:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2776:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130,
                      "name": "ISwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3424,
                      "src": "2776:11:16"
                    },
                    "referencedDeclaration": 3424,
                    "src": "2776:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_moonsqr",
                  "nameLocation": "2867:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2854:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                    "typeString": "contract IMoonSquares"
                  },
                  "typeName": {
                    "id": 134,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 133,
                      "name": "IMoonSquares",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3324,
                      "src": "2854:12:16"
                    },
                    "referencedDeclaration": 3324,
                    "src": "2854:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2744:141:16"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2890:0:16"
            },
            "scope": 934,
            "src": "2733:459:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "3287:163:16",
              "statements": [
                {
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "3355:89:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 184,
                                "name": "dayAssetClosePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "3369:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                  "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                }
                              },
                              "id": 189,
                              "indexExpression": {
                                "id": 185,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3388:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3369:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                "typeString": "mapping(string memory => int256)"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 186,
                                "name": "predictableAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "3398:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 188,
                              "indexExpression": {
                                "id": 187,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "3416:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3398:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3369:50:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 192,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "3431:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 191,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "3422:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3422:11:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3369:64:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 195,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:64:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 177,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "3317:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 178,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3321:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3321:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3317:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "initializationExpression": {
                    "assignments": [
                      174
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3310:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "3302:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3302:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 176,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3314:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3302:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3351:3:16",
                      "subExpression": {
                        "id": 181,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3351:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 183,
                    "nodeType": "ExpressionStatement",
                    "src": "3351:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3297:147:16"
                }
              ]
            },
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewClosingPrice",
            "nameLocation": "3257:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:2:16"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3287:0:16"
            },
            "scope": 934,
            "src": "3248:202:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3516:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3546:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 206,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3526:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3526:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:29:16"
                }
              ]
            },
            "functionSelector": "4a7dc8e0",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 203,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2624,
                  "src": "3506:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3506:9:16"
              }
            ],
            "name": "addPaymentToken",
            "nameLocation": "3465:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3489:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3481:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3480:18:16"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3516:0:16"
            },
            "scope": 934,
            "src": "3456:106:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3656:132:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3689:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 222,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3666:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3666:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "_aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3733:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 228,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3706:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3706:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:39:16"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 234,
                        "name": "activeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3755:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 236,
                      "indexExpression": {
                        "id": 235,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3767:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3755:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3777:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3755:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:26:16"
                }
              ]
            },
            "functionSelector": "81688c64",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2624,
                  "src": "3646:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3646:9:16"
              }
            ],
            "name": "addAssetAndAgg",
            "nameLocation": "3581:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3610:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3596:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "3626:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3618:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3595:43:16"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3656:0:16"
            },
            "scope": 934,
            "src": "3572:216:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "3937:2548:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 254,
                            "name": "activeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3958:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "id": 255,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3970:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3958:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3981:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3958:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3950:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:36:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 261,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4000:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4011:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4000:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "IfStatement",
                  "src": "3996:135:16",
                  "trueBody": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "4014:117:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 265,
                                  "name": "getTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "4036:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4036:9:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 267,
                                    "name": "dayCloseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "4049:12:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 271,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 268,
                                      "name": "dayCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "4062:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 269,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4072:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4062:11:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4049:25:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3634383030",
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4077:13:16",
                                  "subdenomination": "seconds",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64800_by_1",
                                    "typeString": "int_const 64800"
                                  },
                                  "value": "64800"
                                },
                                "src": "4049:41:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4036:54:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 264,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4028:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4028:63:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 276,
                        "nodeType": "ExpressionStatement",
                        "src": "4028:63:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 280,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4148:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "4140:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4140:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "hexValue": "3130303030303030303030303030303030303030",
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4157:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4140:37:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "4230:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 284,
                      "name": "Dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4239:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4230:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "5854:183:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 394,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5899:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5899:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 398,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5919:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$934",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$934",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5911:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 396,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5911:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5911:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 391,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "5884:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 390,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5864,
                                      "src": "5877:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5864_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5877:11:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5864",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5823,
                                  "src": "5877:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5877:48:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 403,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "5934:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5929:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 401,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5929:4:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5929:12:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5877:64:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 389,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5869:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5869:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "5869:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5977:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5977:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 416,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5997:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5989:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 414,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5989:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5989:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 420,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "6009:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6004:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6004:4:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6004:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 409,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "5959:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 408,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5864,
                                "src": "5952:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5864_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5952:11:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5864",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5845,
                            "src": "5952:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5952:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "5952:65:16"
                      }
                    ]
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "4226:1811:16",
                  "trueBody": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "4244:1604:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 291,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4288:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4288:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 295,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4308:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$934",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$934",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4300:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 293,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4300:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4300:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 288,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "4273:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 287,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5864,
                                      "src": "4266:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5864_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4266:11:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5864",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5823,
                                  "src": "4266:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4266:48:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 300,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "4323:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4318:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 298,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4318:4:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4318:12:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4266:64:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 286,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4258:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "4258:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 308,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4460:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 309,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4467:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4467:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 313,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4487:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4479:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 311,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4479:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4479:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 315,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "4494:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 305,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3595,
                              "src": "4428:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3595_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3476,
                            "src": "4428:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4428:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "4428:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 321,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4625:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 324,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "4640:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4632:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 322,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4632:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4632:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 326,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "4653:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 318,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3595,
                              "src": "4598:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3595_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3568,
                            "src": "4598:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4598:62:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "4598:62:16"
                      },
                      {
                        "assignments": [
                          330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 330,
                            "mutability": "mutable",
                            "name": "amountInMaximum",
                            "nameLocation": "4679:15:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "4674:20:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4674:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 332,
                        "initialValue": {
                          "hexValue": "3135303030303030303030303030303030303030",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4697:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15000000000000000000_by_1",
                            "typeString": "int_const 15000000000000000000"
                          },
                          "value": "15000000000000000000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4674:43:16"
                      },
                      {
                        "assignments": [
                          337
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 337,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "4774:6:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "4731:49:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3394_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                            },
                            "typeName": {
                              "id": 336,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 335,
                                "name": "ISwapRouter.ExactOutputSingleParams",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3394,
                                "src": "4731:35:16"
                              },
                              "referencedDeclaration": 3394,
                              "src": "4731:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3394_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 353,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 340,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4866:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 341,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4903:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 342,
                              "name": "poolFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4933:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 345,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4981:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$934",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4973:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 343,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4973:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4973:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 347,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5018:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5018:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 349,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "5066:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 350,
                              "name": "amountInMaximum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "5111:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5167:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 338,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3424,
                              "src": "4799:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$3424_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ExactOutputSingleParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3394,
                            "src": "4799:35:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$3394_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountOut",
                            "amountInMaximum",
                            "sqrtPriceLimitX96"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4799:388:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3394_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4731:456:16"
                      },
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "5313:8:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "5308:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5308:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 360,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 358,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5353:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3394_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$3394_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            ],
                            "expression": {
                              "id": 356,
                              "name": "swapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "5324:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                                "typeString": "contract ISwapRouter"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exactOutputSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3403,
                            "src": "5324:28:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$3394_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5324:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5308:52:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 361,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "5632:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 362,
                            "name": "amountInMaximum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "5643:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5632:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 387,
                        "nodeType": "IfStatement",
                        "src": "5628:210:16",
                        "trueBody": {
                          "id": 386,
                          "nodeType": "Block",
                          "src": "5660:178:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 367,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5705:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 370,
                                        "name": "swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "5718:10:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$3424",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      ],
                                      "id": 369,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5710:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 368,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5710:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5710:19:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5731:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 364,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3595,
                                    "src": "5678:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3595_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeApprove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3568,
                                  "src": "5678:26:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5678:55:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 374,
                              "nodeType": "ExpressionStatement",
                              "src": "5678:55:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 378,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5779:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 379,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5784:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5784:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 381,
                                      "name": "amountInMaximum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "5796:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 382,
                                      "name": "amountIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 355,
                                      "src": "5814:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5796:26:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 375,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3595,
                                    "src": "5751:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3595_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3522,
                                  "src": "5751:27:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5751:72:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 385,
                              "nodeType": "ExpressionStatement",
                              "src": "5751:72:16"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "dayAssetTotalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6046:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "id": 427,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6066:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6046:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "id": 428,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6076:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6046:37:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "6087:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6046:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:47:16"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 434,
                            "name": "dayAssetUserPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "6144:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                              "typeString": "mapping(uint128 => mapping(string memory => mapping(address => int256)))"
                            }
                          },
                          "id": 439,
                          "indexExpression": {
                            "id": 435,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6167:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6144:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                            "typeString": "mapping(string memory => mapping(address => int256))"
                          }
                        },
                        "id": 440,
                        "indexExpression": {
                          "id": 436,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6177:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6144:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "expression": {
                          "id": 437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6185:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6185:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6144:52:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 442,
                      "name": "_prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "6199:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "6144:66:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6304:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 445,
                            "name": "dayAssetPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "6262:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                            }
                          },
                          "id": 448,
                          "indexExpression": {
                            "id": 446,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6281:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6262:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                            "typeString": "mapping(string memory => int256[] storage ref)"
                          }
                        },
                        "id": 449,
                        "indexExpression": {
                          "id": 447,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6291:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6262:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                          "typeString": "int256[] storage ref"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6262:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_int256_$dyn_storage_ptr_$_t_int256_$returns$__$bound_to$_t_array$_t_int256_$dyn_storage_ptr_$",
                        "typeString": "function (int256[] storage pointer,int256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6262:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "6262:54:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6417:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6417:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 454,
                            "name": "dayAssetPredictors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "6375:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "id": 455,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6394:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6375:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 458,
                        "indexExpression": {
                          "id": 456,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6404:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6375:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6375:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6375:53:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6454:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6454:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6466:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 464,
                      "name": "Predicted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "6444:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "EmitStatement",
                  "src": "6439:39:16"
                }
              ]
            },
            "functionSelector": "be331a64",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 250,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 247,
                    "src": "3926:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "allowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 673,
                  "src": "3913:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3913:19:16"
              }
            ],
            "name": "predictClosePrice",
            "nameLocation": "3803:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3844:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3830:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "3865:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3861:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3894:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3886:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3886:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3820:85:16"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:16"
            },
            "scope": 934,
            "src": "3794:2691:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "6529:815:16",
              "statements": [
                {
                  "assignments": [
                    475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "6547:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "6539:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6539:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "id": 476,
                    "name": "dayCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "6553:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6539:22:16"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "6624:714:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 490,
                                      "name": "dayAssetPrediction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86,
                                      "src": "6663:18:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                      }
                                    },
                                    "id": 492,
                                    "indexExpression": {
                                      "id": 491,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6682:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6663:23:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                      "typeString": "mapping(string memory => int256[] storage ref)"
                                    }
                                  },
                                  "id": 496,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 493,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6687:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 495,
                                    "indexExpression": {
                                      "id": 494,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "6705:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6687:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6663:45:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                    "typeString": "int256[] storage ref"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6663:52:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 498,
                                      "name": "dayAssetPredictors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 93,
                                      "src": "6751:18:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                      }
                                    },
                                    "id": 500,
                                    "indexExpression": {
                                      "id": 499,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6770:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6751:23:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(string memory => address[] storage ref)"
                                    }
                                  },
                                  "id": 504,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 501,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6775:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 503,
                                    "indexExpression": {
                                      "id": 502,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "6793:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6775:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6751:45:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6751:52:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6663:140:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 489,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6638:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6638:179:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "6638:179:16"
                      },
                      {
                        "body": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6912:416:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 527,
                                            "name": "dayAssetPrediction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "6938:18:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                            }
                                          },
                                          "id": 529,
                                          "indexExpression": {
                                            "id": 528,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 475,
                                            "src": "6957:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6938:23:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                            "typeString": "mapping(string memory => int256[] storage ref)"
                                          }
                                        },
                                        "id": 533,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 530,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45,
                                            "src": "6962:17:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 532,
                                          "indexExpression": {
                                            "id": 531,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 479,
                                            "src": "6980:1:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6962:20:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6938:45:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                          "typeString": "int256[] storage ref"
                                        }
                                      },
                                      "id": 535,
                                      "indexExpression": {
                                        "id": 534,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 510,
                                        "src": "6984:1:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6938:48:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 536,
                                          "name": "dayAssetClosePrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58,
                                          "src": "6990:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                          }
                                        },
                                        "id": 538,
                                        "indexExpression": {
                                          "id": 537,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7009:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6990:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                          "typeString": "mapping(string memory => int256)"
                                        }
                                      },
                                      "id": 542,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 539,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7014:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 541,
                                        "indexExpression": {
                                          "id": 540,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7032:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7014:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6990:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "6938:97:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 526,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6930:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6930:106:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 545,
                              "nodeType": "ExpressionStatement",
                              "src": "6930:106:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 554,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7104:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 556,
                                        "indexExpression": {
                                          "id": 555,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7123:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7104:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 560,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 557,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7128:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 559,
                                        "indexExpression": {
                                          "id": 558,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7146:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7128:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7104:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 562,
                                    "indexExpression": {
                                      "id": 561,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "7150:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7104:48:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 546,
                                        "name": "dailyAssetWinners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 119,
                                        "src": "7054:17:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => address[] storage ref))"
                                        }
                                      },
                                      "id": 551,
                                      "indexExpression": {
                                        "id": 547,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "7072:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7054:22:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(string memory => address[] storage ref)"
                                      }
                                    },
                                    "id": 552,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 548,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "7077:17:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 550,
                                      "indexExpression": {
                                        "id": 549,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 479,
                                        "src": "7095:1:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7077:20:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7054:44:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 553,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7054:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7054:99:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 564,
                              "nodeType": "ExpressionStatement",
                              "src": "7054:99:16"
                            },
                            {
                              "expression": {
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 565,
                                      "name": "dayAssetNoOfWinners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "7171:19:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                      }
                                    },
                                    "id": 570,
                                    "indexExpression": {
                                      "id": 566,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "7191:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7171:24:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 571,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 567,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "7196:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 569,
                                    "indexExpression": {
                                      "id": 568,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "7214:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7196:20:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7171:46:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7220:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7171:50:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 574,
                              "nodeType": "ExpressionStatement",
                              "src": "7171:50:16"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 578,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7264:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 580,
                                        "indexExpression": {
                                          "id": 579,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7283:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7264:23:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 584,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 581,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7288:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 583,
                                        "indexExpression": {
                                          "id": 582,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7306:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7288:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7264:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 586,
                                    "indexExpression": {
                                      "id": 585,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "7310:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7264:48:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 575,
                                    "name": "moonSquare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "7240:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                                      "typeString": "contract IMoonSquares"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addToWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3323,
                                  "src": "7240:23:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7240:73:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 588,
                              "nodeType": "ExpressionStatement",
                              "src": "7240:73:16"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 513,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "6849:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 514,
                                  "name": "dayAssetPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "6853:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                  }
                                },
                                "id": 516,
                                "indexExpression": {
                                  "id": 515,
                                  "name": "day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "6872:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6853:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                  "typeString": "mapping(string memory => int256[] storage ref)"
                                }
                              },
                              "id": 520,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 517,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "6877:17:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 519,
                                "indexExpression": {
                                  "id": 518,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "6895:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6877:20:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6853:45:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                "typeString": "int256[] storage ref"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6853:52:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6849:56:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 590,
                        "initializationExpression": {
                          "assignments": [
                            510
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 510,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "6842:1:16",
                              "nodeType": "VariableDeclaration",
                              "scope": 590,
                              "src": "6836:7:16",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 509,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6836:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 512,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6846:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6836:11:16"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6907:3:16",
                            "subExpression": {
                              "id": 523,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "6907:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 525,
                          "nodeType": "ExpressionStatement",
                          "src": "6907:3:16"
                        },
                        "nodeType": "ForStatement",
                        "src": "6831:497:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 482,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6589:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 483,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6593:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6593:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6589:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 592,
                  "initializationExpression": {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6582:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "6576:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 481,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6586:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6576:11:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6619:3:16",
                      "subExpression": {
                        "id": 486,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "6619:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 488,
                    "nodeType": "ExpressionStatement",
                    "src": "6619:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "6571:767:16"
                }
              ]
            },
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberOfWinners",
            "nameLocation": "6500:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6518:2:16"
            },
            "returnParameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6529:0:16"
            },
            "scope": 934,
            "src": "6491:853:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "7395:203:16",
              "statements": [
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7427:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "7405:31:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 599,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2727,
                          "src": "7405:21:16"
                        },
                        "referencedDeclaration": 2727,
                        "src": "7405:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7461:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 602,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2727,
                      "src": "7439:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2727_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7439:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7405:99:16"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    607,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7523:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "7518:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7518:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 608,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "7534:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2726,
                      "src": "7534:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7534:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7514:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 614,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7584:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7579:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7579:4:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7579:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "7572:19:16"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "id": 618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "7360:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7367:2:16"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "7390:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7389:6:16"
            },
            "scope": 934,
            "src": "7351:247:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "7665:191:16",
              "statements": [
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7697:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "7675:31:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 625,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2727,
                          "src": "7675:21:16"
                        },
                        "referencedDeclaration": 2727,
                        "src": "7675:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 629,
                          "name": "assetPriceAggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "7731:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 631,
                        "indexExpression": {
                          "id": 630,
                          "name": "_aggindex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "7753:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7731:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 628,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2727,
                      "src": "7709:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2727_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7709:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7675:89:16"
                },
                {
                  "assignments": [
                    null,
                    635,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7780:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "7776:10:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7776:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 639,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 636,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "7793:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2727",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2726,
                      "src": "7793:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7793:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7774:46:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 642,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "7842:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7838:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7838:3:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:11:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 624,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "7831:18:16"
                }
              ]
            },
            "functionSelector": "e7572230",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "7613:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_aggindex",
                  "nameLocation": "7630:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7622:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7622:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7621:19:16"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7661:3:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7660:5:16"
            },
            "scope": 934,
            "src": "7604:252:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "7900:138:16",
              "statements": [
                {
                  "body": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "7960:61:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 662,
                                  "name": "AcceptedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "7982:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 664,
                                "indexExpression": {
                                  "id": 663,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 651,
                                  "src": "7997:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7982:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 665,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "8003:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7982:27:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7974:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7974:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "7974:36:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 654,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "7925:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 655,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "7929:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7929:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7925:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 670,
                  "initializationExpression": {
                    "assignments": [
                      651
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7919:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7914:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7914:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 653,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7922:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7914:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7955:3:16",
                      "subExpression": {
                        "id": 658,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "7955:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 660,
                    "nodeType": "ExpressionStatement",
                    "src": "7955:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "7910:111:16"
                },
                {
                  "id": 671,
                  "nodeType": "PlaceholderStatement",
                  "src": "8030:1:16"
                }
              ]
            },
            "id": 673,
            "name": "allowedToken",
            "nameLocation": "7871:12:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7892:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "7884:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7884:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7883:16:16"
            },
            "src": "7862:176:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8110:375:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 681,
                                "name": "dayAssetUserPrediction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "8190:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                                  "typeString": "mapping(uint128 => mapping(string memory => mapping(address => int256)))"
                                }
                              },
                              "id": 683,
                              "indexExpression": {
                                "id": 682,
                                "name": "_day",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 675,
                                "src": "8213:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8190:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                                "typeString": "mapping(string memory => mapping(address => int256))"
                              }
                            },
                            "id": 685,
                            "indexExpression": {
                              "id": 684,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8219:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8190:36:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 688,
                          "indexExpression": {
                            "expression": {
                              "id": 686,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8227:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8227:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8190:48:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 689,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8242:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "id": 690,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8261:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8242:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 693,
                          "indexExpression": {
                            "id": 692,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "8267:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8242:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8190:84:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8182:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8182:93:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "8182:93:16"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "8293:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "8285:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 697,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8285:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 699,
                        "name": "dayAssetNoOfWinners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "8303:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                        }
                      },
                      "id": 701,
                      "indexExpression": {
                        "id": 700,
                        "name": "_day",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "8323:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8303:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 703,
                    "indexExpression": {
                      "id": 702,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8329:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8303:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8285:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8380:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8380:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 711,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "8407:19:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 713,
                                        "indexExpression": {
                                          "id": 712,
                                          "name": "_day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 675,
                                          "src": "8427:4:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8407:25:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 715,
                                      "indexExpression": {
                                        "id": 714,
                                        "name": "_asset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 677,
                                        "src": "8433:6:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8407:33:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 716,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8406:35:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3930",
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8444:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_90_by_1",
                                    "typeString": "int_const 90"
                                  },
                                  "value": "90"
                                },
                                "src": "8406:40:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8447:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8406:44:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 721,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8405:46:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 722,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "8452:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8405:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 706,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "8353:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 705,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5864,
                          "src": "8346:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5864_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8346:11:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5864",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5813,
                      "src": "8346:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8346:123:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "8346:123:16"
                }
              ]
            },
            "functionSelector": "1cc87d88",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWinnings",
            "nameLocation": "8053:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "8075:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8067:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8067:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8095:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8081:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8081:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8066:36:16"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8110:0:16"
            },
            "scope": 934,
            "src": "8044:441:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "8618:128:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 739,
                                "name": "dayAssetUserPrediction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "8636:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                                  "typeString": "mapping(uint128 => mapping(string memory => mapping(address => int256)))"
                                }
                              },
                              "id": 741,
                              "indexExpression": {
                                "id": 740,
                                "name": "_day",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "8659:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8636:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                                "typeString": "mapping(string memory => mapping(address => int256))"
                              }
                            },
                            "id": 743,
                            "indexExpression": {
                              "id": 742,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "8665:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8636:36:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 745,
                          "indexExpression": {
                            "id": 744,
                            "name": "checked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "8673:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8636:45:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 746,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8685:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 748,
                            "indexExpression": {
                              "id": 747,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "8704:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8685:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 750,
                          "indexExpression": {
                            "id": 749,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "8710:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8685:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8636:81:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8628:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8628:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8628:90:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8735:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 737,
                  "id": 755,
                  "nodeType": "Return",
                  "src": "8728:11:16"
                }
              ]
            },
            "functionSelector": "85afa270",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAwinner",
            "nameLocation": "8500:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "8527:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "8519:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8555:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "8541:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8541:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "checked",
                  "nameLocation": "8579:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "8571:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8571:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8509:83:16"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "8613:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8613:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8612:6:16"
            },
            "scope": 934,
            "src": "8491:255:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2739
            ],
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "8880:381:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 767,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "8894:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 769,
                        "indexExpression": {
                          "id": 768,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "8907:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8894:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8919:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "8894:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 772,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "8936:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8936:9:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8894:51:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 790,
                  "nodeType": "IfStatement",
                  "src": "8890:157:16",
                  "trueBody": {
                    "id": 789,
                    "nodeType": "Block",
                    "src": "8946:101:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 775,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "8960:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8975:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8960:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "8960:19:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9001:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 784,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9032:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 783,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9024:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 782,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9024:7:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9024:10:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 780,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9007:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9007:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9007:28:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 787,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9000:36:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 766,
                        "id": 788,
                        "nodeType": "Return",
                        "src": "8993:43:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 791,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "9060:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9060:9:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 793,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "9072:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 797,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 794,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "9085:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9095:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9085:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9072:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3634383030",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9100:13:16",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64800_by_1",
                          "typeString": "int_const 64800"
                        },
                        "value": "64800"
                      },
                      "src": "9072:41:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9060:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 816,
                  "nodeType": "IfStatement",
                  "src": "9056:157:16",
                  "trueBody": {
                    "id": 815,
                    "nodeType": "Block",
                    "src": "9115:98:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 801,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "9129:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9144:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9129:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 804,
                        "nodeType": "ExpressionStatement",
                        "src": "9129:19:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9170:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 810,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9198:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9193:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 808,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9193:4:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9193:7:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 806,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9176:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9176:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9176:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 813,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9169:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 766,
                        "id": 814,
                        "nodeType": "Return",
                        "src": "9162:40:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 817,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "9222:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 818,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "9236:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "9222:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:23:16"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "8765:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 761,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8817:8:16"
            },
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "8792:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "8777:24:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8777:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8776:26:16"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "8840:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "8835:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8835:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "8867:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "8854:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8854:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8834:45:16"
            },
            "scope": 934,
            "src": "8756:505:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2745
            ],
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "9340:278:16",
              "statements": [
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "mutability": "mutable",
                      "name": "decodedValue",
                      "nameLocation": "9359:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 860,
                      "src": "9351:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 828,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9351:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 837,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 832,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "9385:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9399:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 833,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9399:7:16",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 835,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9398:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 830,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9374:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "9374:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9351:57:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 838,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "9422:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9438:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9422:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 851,
                  "nodeType": "IfStatement",
                  "src": "9418:126:16",
                  "trueBody": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "9441:103:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 841,
                            "name": "setNewClosingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "9455:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9455:20:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 843,
                        "nodeType": "ExpressionStatement",
                        "src": "9455:20:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 844,
                            "name": "setNumberOfWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "9489:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9489:20:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "9489:20:16"
                      },
                      {
                        "expression": {
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9523:10:16",
                          "subExpression": {
                            "id": 847,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "9523:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 849,
                        "nodeType": "ExpressionStatement",
                        "src": "9523:10:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 852,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "9557:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9573:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9557:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 859,
                  "nodeType": "IfStatement",
                  "src": "9553:59:16",
                  "trueBody": {
                    "id": 858,
                    "nodeType": "Block",
                    "src": "9576:36:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 855,
                            "name": "sendToIba",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 933,
                            "src": "9590:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9590:11:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "9590:11:16"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "9280:13:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9331:8:16"
            },
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "9309:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "9294:26:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9294:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9293:28:16"
            },
            "returnParameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9340:0:16"
            },
            "scope": 934,
            "src": "9271:347:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 932,
              "nodeType": "Block",
              "src": "9714:511:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 865,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "9732:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9732:9:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 867,
                              "name": "dayCloseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "9744:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 871,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 868,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "9757:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9767:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9757:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9744:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3634383030",
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9772:13:16",
                            "subdenomination": "seconds",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64800_by_1",
                              "typeString": "int_const 64800"
                            },
                            "value": "64800"
                          },
                          "src": "9744:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9732:53:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9724:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9724:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "9724:62:16"
                },
                {
                  "body": {
                    "id": 930,
                    "nodeType": "Block",
                    "src": "9851:368:16",
                    "statements": [
                      {
                        "assignments": [
                          889
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 889,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9870:6:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 930,
                            "src": "9865:11:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 888,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9865:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 903,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 890,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "9881:19:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 892,
                                        "indexExpression": {
                                          "id": 891,
                                          "name": "dayCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 42,
                                          "src": "9901:8:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9881:29:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 896,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 893,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "9911:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 895,
                                        "indexExpression": {
                                          "id": 894,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 878,
                                          "src": "9929:1:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9911:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9881:51:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 897,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9880:53:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 898,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9936:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "9880:58:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9939:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "9880:62:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 902,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9879:64:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9865:78:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 910,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "10033:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$3165",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$3165",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10025:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 908,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10025:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10025:20:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 912,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "10047:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 905,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "10012:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 904,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5864,
                                "src": "10005:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5864_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10005:11:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5864",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5833,
                            "src": "10005:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10005:49:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 914,
                        "nodeType": "ExpressionStatement",
                        "src": "10005:49:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 918,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "10105:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 921,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 889,
                                  "src": "10131:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10126:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 919,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10126:4:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10126:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 925,
                                  "name": "moonSquare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "10164:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                                    "typeString": "contract IMoonSquares"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$3324",
                                    "typeString": "contract IMoonSquares"
                                  }
                                ],
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10156:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 923,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10156:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10156:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10193:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 915,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "10068:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$3165",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2940,
                            "src": "10068:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10068:140:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 929,
                        "nodeType": "ExpressionStatement",
                        "src": "10068:140:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 881,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "9816:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 882,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "9820:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9820:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9816:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 931,
                  "initializationExpression": {
                    "assignments": [
                      878
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9809:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "9801:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "9801:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 880,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9813:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9801:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9846:3:16",
                      "subExpression": {
                        "id": 885,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "9846:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 887,
                    "nodeType": "ExpressionStatement",
                    "src": "9846:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "9796:423:16"
                }
              ]
            },
            "id": 933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToIba",
            "nameLocation": "9694:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9703:2:16"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9714:0:16"
            },
            "scope": 934,
            "src": "9685:540:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 935,
        "src": "591:9643:16",
        "usedErrors": []
      }
    ],
    "src": "31:10203:16"
  },
  "bytecode": "60a06040819052600180546001600160a01b0319167388757f2f99175387ab4c6a4b3067c77a695b0349908117909155630261bf8b60e01b825290630261bf8b9060a490602090600481865afa1580156200005e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200008491906200021b565b600280546001600160a01b03929092166001600160a01b0319928316179055600a805490911673ff795577d9ac8bd7d90ee22b6c1703490b6512fd179055348015620000cf57600080fd5b506040516200279b3803806200279b833981016040819052620000f29162000242565b620000fd33620001b2565b60118054600181810183556000929092527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c680180546001600160a01b038087166001600160a01b031992831617909255848216608052600380549285169290911691909117905542600b819055600480546001600160801b0319169092179091556200018d906201518062000296565b6004546001600160801b031660009081526009602052604090205550620002bd915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200021857600080fd5b50565b6000602082840312156200022e57600080fd5b81516200023b8162000202565b9392505050565b6000806000606084860312156200025857600080fd5b8351620002658162000202565b6020850151909350620002788162000202565b60408501519092506200028b8162000202565b809150509250925092565b60008219821115620002b857634e487b7160e01b600052601160045260246000fd5b500190565b6080516124ad620002ee600039600081816103e801528181610d3501528181610e0a0152610e9401526124ad6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063be331a6411610097578063e757223011610071578063e75722301461040a578063ec6f4f411461041d578063f2fde38b1461044b578063fd2faa681461045e57600080fd5b8063be331a641461038e578063c2aba3f0146103a1578063c31c9c07146103e357600080fd5b8063715018a6146102f057806380f79702146102f857806381688c641461033457806385afa270146103475780638da5cb5b1461036a578063afa3a6171461037b57600080fd5b80634a128671116101305780634a128671146102525780634a7dc8e014610265578063557ed1ba146102785780635f90f0b71461028057806363168475146102935780636e04ff0d146102cf57600080fd5b8063089fe6aa146101785780630c3d51571461019a578063126df02b146101b15780631cc87d88146101ff5780634585e33b1461021457806347ce529a14610227575b600080fd5b610181610bb881565b60405162ffffff90911681526020015b60405180910390f35b6101a3600b5481565b604051908152602001610191565b6101df6101bf366004611d75565b6010602052600090815260409020805460019091015460c09190911b9082565b604080516001600160c01b03199093168352602083019190915201610191565b61021261020d366004611e51565b610471565b005b610212610222366004611e9f565b61062d565b61023a610235366004611f11565b6106a7565b6040516001600160a01b039091168152602001610191565b61023a610260366004611f68565b6106fb565b610212610273366004611d75565b610725565b6101a36107aa565b61023a61028e366004611f81565b610833565b6101a36102a1366004611fb4565b600d602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6102e26102dd366004611e9f565b61086a565b604051610191929190612011565b61021261097a565b6101a3610306366004611fb4565b600c602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b61021261034236600461204d565b6109b0565b61035a61035536600461209b565b610a9f565b6040519015158152602001610191565b6000546001600160a01b031661023a565b6101a3610389366004611f81565b610b40565b61021261039c3660046120f9565b610b8d565b6101a36103af36600461209b565b6013602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b61023a7f000000000000000000000000000000000000000000000000000000000000000081565b6101a3610418366004611f68565b61114b565b61035a61042b366004612147565b805160208183018101805160078252928201919093012091525460ff1681565b610212610459366004611d75565b6111f2565b60035461023a906001600160a01b031681565b6001600160801b038216600090815260086020526040908190209051610498908390612184565b90815260200160405180910390205460136000846001600160801b03166001600160801b03168152602001908152602001600020826040516104da9190612184565b908152604080516020928190038301902033600090815292529020541461050057600080fd5b6001600160801b0382166000908152600d60205260408082209051610526908490612184565b9081526020016040518091039020549050600a60009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb33836064600c6000896001600160801b03168152602001908152602001600020876040516105899190612184565b908152602001604051809103902054605a6105a491906121b6565b6105ae91906121d5565b6105b891906121d5565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610603573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062791906121f7565b50505050565b600061063b82840184611f68565b9050806106915761064a61128d565b61065261130a565b600480546001600160801b031690600061066b83612219565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550505b80600114156106a2576106a2611785565b505050565b601260209081526000848152604090208351808501830180519281529083019285019290922091528054829081106106de57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6011818154811061070b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107585760405162461bcd60e51b815260040161074f90612240565b60405180910390fd5b601180546001810182556000919091527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c680180546001600160a01b0319166001600160a01b0392909216919091179055565b600080736135b13325bfc4b00278b4abc5e20bbce2d6580e90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610828919061228f565b509695505050505050565b600f60209081526000848152604090208351808501830180519281529083019285019290922091528054829081106106de57600080fd5b600060606108766107aa565b6004546001600160801b031660009081526009602052604090205461089e90620151806122df565b14156108cf576040805160006020820152600193508391015b60405160208183030381529060405291509150610973565b6004546009906000906108ed906001906001600160801b03166122f7565b6001600160801b031681526020019081526020016000205461fd2061091291906122df565b61091a6107aa565b111561093957600191506001806040516020016108b791815260200190565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b9250929050565b6000546001600160a01b031633146109a45760405162461bcd60e51b815260040161074f90612240565b6109ae600061196d565b565b6000546001600160a01b031633146109da5760405162461bcd60e51b815260040161074f90612240565b600580546001810182556000919091528251610a1d917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001906020850190611cc0565b5060068054600180820183556000929092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038416179055604051600790610a7b908590612184565b908152604051908190036020019020805491151560ff199092169190911790555050565b6001600160801b0383166000908152600860205260408082209051610ac5908590612184565b90815260200160405180910390205460136000866001600160801b03166001600160801b0316815260200190815260200160002084604051610b079190612184565b90815260408051602092819003830190206001600160a01b0386166000908152925290205414610b3657600080fd5b5060019392505050565b600e6020908152600084815260409020835180850183018051928152908301928501929092209152805482908110610b7757600080fd5b9060005260206000200160009250925050505481565b8060005b600554811015610be957816001600160a01b031660118281548110610bb857610bb861231f565b6000918252602090912001546001600160a01b031614610bd757600080fd5b80610be181612335565b915050610b91565b50600784604051610bfa9190612184565b9081526040519081900360200190205460ff161515600114610c1b57600080fd5b60045460016001600160801b039091161115610c8757600454600990600090610c4f906001906001600160801b03166122f7565b6001600160801b031681526020019081526020016000205461fd20610c7491906122df565b610c7c6107aa565b1115610c8757600080fd5b600a54678ac7230489e80000906001600160a01b03848116911614610ee257600a54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d189190612350565b1015610d2357600080fd5b610d2f833330846119bd565b610d5a837f000000000000000000000000000000000000000000000000000000000000000083611ac7565b60408051610100810182526001600160a01b038581168252600a54811660208301908152610bb88385019081523060608501908152426080860190815260a0860188815267d02ab486cedc000060c08801818152600060e08a018181529a51631b67c43360e31b81528a518a166004820152975189166024890152955162ffffff166044880152935187166064870152915160848601525160a4850152905160c48401529451831660e4830152917f0000000000000000000000000000000000000000000000000000000000000000169063db3e219890610104016020604051808303816000875af1158015610e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e789190612350565b905082811015610eda57600a54610eba906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006000611ac7565b600a54610eda906001600160a01b031633610ed58487612369565b611bc7565b505050610fdc565b600a54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f549190612350565b1015610f5f57600080fd5b600a546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda91906121f7565b505b6004546001600160801b03166000908152600c6020526040908190209051829190611008908890612184565b9081526020016040518091039020600082825461102591906122df565b90915550506004546001600160801b0316600090815260136020526040908190209051859190611056908890612184565b908152604080519182900360209081018320336000908152908252828120949094556004546001600160801b03168452600e905290912090611099908790612184565b90815260408051918290036020908101832080546001810182556000918252828220018890556004546001600160801b03168152600f90915220906110df908790612184565b908152604051602091819003820181208054600181018255600091825290839020018054336001600160a01b03199091168117909155868252917f10fe2ed8f3daa306f14de54294a550f0f7dec5e7138f0cf277eac43bc95aab6f910160405180910390a25050505050565b600080600683815481106111615761116161231f565b9060005260206000200160009054906101000a90046001600160a01b031690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e5919061228f565b5091979650505050505050565b6000546001600160a01b0316331461121c5760405162461bcd60e51b815260040161074f90612240565b6001600160a01b0381166112815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161074f565b61128a8161196d565b50565b60005b60065481101561128a576112a38161114b565b6004546001600160801b0316600090815260086020526040902060058054849081106112d1576112d161231f565b906000526020600020016040516112e891906123bb565b908152604051908190036020019020558061130281612335565b915050611290565b6004546001600160801b031660005b60055460ff82161015611781576001600160801b0382166000908152600f602052604090206005805460ff84169081106113555761135561231f565b9060005260206000200160405161136c91906123bb565b908152602001604051809103902080549050600e6000846001600160801b0316815260200190815260200160002060058360ff16815481106113b0576113b061231f565b906000526020600020016040516113c791906123bb565b90815260405190819003602001902054146113e157600080fd5b60005b6001600160801b0383166000908152600e602052604090206005805460ff85169081106114135761141361231f565b9060005260206000200160405161142a91906123bb565b9081526040519081900360200190205460ff8216101561176e576001600160801b03831660009081526008602052604090206005805460ff85169081106114735761147361231f565b9060005260206000200160405161148a91906123bb565b908152602001604051809103902054600e6000856001600160801b0316815260200190815260200160002060058460ff16815481106114cb576114cb61231f565b906000526020600020016040516114e291906123bb565b90815260200160405180910390208260ff16815481106115045761150461231f565b90600052602060002001541461151957600080fd5b6001600160801b03831660009081526012602052604090206005805460ff85169081106115485761154861231f565b9060005260206000200160405161155f91906123bb565b9081526020016040518091039020600f6000856001600160801b0316815260200190815260200160002060058460ff168154811061159f5761159f61231f565b906000526020600020016040516115b691906123bb565b90815260200160405180910390208260ff16815481106115d8576115d861231f565b60009182526020808320909101548354600181810186559484528284200180546001600160a01b0319166001600160a01b039092169190911790556001600160801b0386168252600d9052604090206005805460ff861690811061163e5761163e61231f565b9060005260206000200160405161165591906123bb565b9081526020016040518091039020600082825461167291906122df565b90915550506003546001600160801b0384166000908152600f60205260409020600580546001600160a01b0390931692638ebfa8ae92919060ff87169081106116bd576116bd61231f565b906000526020600020016040516116d491906123bb565b90815260200160405180910390208360ff16815481106116f6576116f661231f565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b15801561174357600080fd5b505af1158015611757573d6000803e3d6000fd5b50505050808061176690612457565b9150506113e4565b508061177981612457565b915050611319565b5050565b6004546009906000906117a3906001906001600160801b03166122f7565b6001600160801b031681526020019081526020016000205461fd206117c891906122df565b6117d06107aa565b116117da57600080fd5b60005b6005546001600160801b038216101561128a576004546001600160801b039081166000908152600c602052604081206005805492936064939086169081106118275761182761231f565b9060005260206000200160405161183e91906123bb565b908152602001604051809103902054600a61185991906121b6565b61186391906121d5565b600a5460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af11580156118ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118de91906121f7565b50600254600a5460035460405163e8eda9df60e01b81526001600160a01b0392831660048201526024810185905290821660448201526000606482015291169063e8eda9df90608401600060405180830381600087803b15801561194157600080fd5b505af1158015611955573d6000803e3d6000fd5b5050505050808061196590612219565b9150506117dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611a219190612184565b6000604051808303816000865af19150503d8060008114611a5e576040519150601f19603f3d011682016040523d82523d6000602084013e611a63565b606091505b5091509150818015611a8d575080511580611a8d575080806020019051810190611a8d91906121f7565b611abf5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161074f565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691611b239190612184565b6000604051808303816000865af19150503d8060008114611b60576040519150601f19603f3d011682016040523d82523d6000602084013e611b65565b606091505b5091509150818015611b8f575080511580611b8f575080806020019051810190611b8f91906121f7565b611bc05760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161074f565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611c239190612184565b6000604051808303816000865af19150503d8060008114611c60576040519150601f19603f3d011682016040523d82523d6000602084013e611c65565b606091505b5091509150818015611c8f575080511580611c8f575080806020019051810190611c8f91906121f7565b611bc05760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161074f565b828054611ccc90612380565b90600052602060002090601f016020900481019282611cee5760008555611d34565b82601f10611d0757805160ff1916838001178555611d34565b82800160010185558215611d34579182015b82811115611d34578251825591602001919060010190611d19565b50611d40929150611d44565b5090565b5b80821115611d405760008155600101611d45565b80356001600160a01b0381168114611d7057600080fd5b919050565b600060208284031215611d8757600080fd5b611d9082611d59565b9392505050565b80356001600160801b0381168114611d7057600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112611dd557600080fd5b813567ffffffffffffffff80821115611df057611df0611dae565b604051601f8301601f19908116603f01168101908282118183101715611e1857611e18611dae565b81604052838152866020858801011115611e3157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611e6457600080fd5b611e6d83611d97565b9150602083013567ffffffffffffffff811115611e8957600080fd5b611e9585828601611dc4565b9150509250929050565b60008060208385031215611eb257600080fd5b823567ffffffffffffffff80821115611eca57600080fd5b818501915085601f830112611ede57600080fd5b813581811115611eed57600080fd5b866020828501011115611eff57600080fd5b60209290920196919550909350505050565b600080600060608486031215611f2657600080fd5b611f2f84611d97565b9250602084013567ffffffffffffffff811115611f4b57600080fd5b611f5786828701611dc4565b925050604084013590509250925092565b600060208284031215611f7a57600080fd5b5035919050565b600080600060608486031215611f9657600080fd5b83359250602084013567ffffffffffffffff811115611f4b57600080fd5b60008060408385031215611fc757600080fd5b82359150602083013567ffffffffffffffff811115611e8957600080fd5b60005b83811015612000578181015183820152602001611fe8565b838111156106275750506000910152565b82151581526040602082015260008251806040840152612038816060850160208701611fe5565b601f01601f1916919091016060019392505050565b6000806040838503121561206057600080fd5b823567ffffffffffffffff81111561207757600080fd5b61208385828601611dc4565b92505061209260208401611d59565b90509250929050565b6000806000606084860312156120b057600080fd5b6120b984611d97565b9250602084013567ffffffffffffffff8111156120d557600080fd5b6120e186828701611dc4565b9250506120f060408501611d59565b90509250925092565b60008060006060848603121561210e57600080fd5b833567ffffffffffffffff81111561212557600080fd5b61213186828701611dc4565b935050602084013591506120f060408501611d59565b60006020828403121561215957600080fd5b813567ffffffffffffffff81111561217057600080fd5b61217c84828501611dc4565b949350505050565b60008251612196818460208701611fe5565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156121d0576121d06121a0565b500290565b6000826121f257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561220957600080fd5b81518015158114611d9057600080fd5b60006001600160801b0380831681811415612236576122366121a0565b6001019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805169ffffffffffffffffffff81168114611d7057600080fd5b600080600080600060a086880312156122a757600080fd5b6122b086612275565b94506020860151935060408601519250606086015191506122d360808701612275565b90509295509295909350565b600082198211156122f2576122f26121a0565b500190565b60006001600160801b0383811690831681811015612317576123176121a0565b039392505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612349576123496121a0565b5060010190565b60006020828403121561236257600080fd5b5051919050565b60008282101561237b5761237b6121a0565b500390565b600181811c9082168061239457607f821691505b602082108114156123b557634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806123d757607f831692505b60208084108214156123f757634e487b7160e01b86526022600452602486fd5b81801561240b576001811461241c57612449565b60ff19861689528489019650612449565b60008a81526020902060005b868110156124415781548b820152908501908301612428565b505084890196505b509498975050505050505050565b600060ff821660ff81141561246e5761246e6121a0565b6001019291505056fea26469706673582212206891cc7bc3ef2c12f42b8c84ff5b071fa0cd20c23774cfd5c353efce237e56c164736f6c634300080b0033",
  "bytecodeSha1": "e6ef70704c504a0bebd29db8b1a400113b43bbfc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "DailyRocket",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "70": [
            1934,
            1956,
            true
          ]
        }
      },
      "10": {},
      "14": {},
      "15": {},
      "16": {
        "DailyRocket.checkUpkeep": {
          "57": [
            8894,
            8945,
            false
          ],
          "58": [
            9060,
            9113,
            false
          ]
        },
        "DailyRocket.claimWinnings": {
          "54": [
            8190,
            8274,
            true
          ]
        },
        "DailyRocket.isAwinner": {
          "59": [
            8636,
            8717,
            true
          ]
        },
        "DailyRocket.performUpkeep": {
          "55": [
            9422,
            9439,
            false
          ],
          "56": [
            9557,
            9574,
            false
          ]
        },
        "DailyRocket.predictClosePrice": {
          "60": [
            3958,
            3985,
            true
          ],
          "61": [
            4000,
            4012,
            false
          ],
          "62": [
            4036,
            4090,
            true
          ],
          "63": [
            4230,
            4242,
            false
          ],
          "64": [
            4266,
            4330,
            true
          ],
          "65": [
            5632,
            5658,
            false
          ],
          "66": [
            5877,
            5941,
            true
          ]
        },
        "DailyRocket.sendToIba": {
          "69": [
            9732,
            9785,
            true
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "67": [
            6663,
            6803,
            true
          ],
          "68": [
            6938,
            7035,
            true
          ]
        }
      },
      "19": {},
      "21": {},
      "22": {},
      "23": {},
      "25": {},
      "27": {
        "TransferHelper.safeApprove": {
          "74": [
            2078,
            2085,
            false
          ],
          "75": [
            2090,
            2106,
            true
          ],
          "76": [
            2110,
            2134,
            true
          ]
        },
        "TransferHelper.safeTransfer": {
          "77": [
            1418,
            1425,
            false
          ],
          "78": [
            1430,
            1446,
            true
          ],
          "79": [
            1450,
            1474,
            true
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "71": [
            816,
            823,
            false
          ],
          "72": [
            828,
            844,
            true
          ],
          "73": [
            848,
            872,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "49": [
            2131,
            2148
          ],
          "50": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "34": [
            1926,
            1999
          ],
          "35": [
            2009,
            2028
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "DailyRocket.addAssetAndAgg": {
          "15": [
            3666,
            3696
          ],
          "16": [
            3706,
            3745
          ],
          "17": [
            3755,
            3781
          ]
        },
        "DailyRocket.addPaymentToken": {
          "8": [
            3526,
            3555
          ]
        },
        "DailyRocket.checkUpkeep": {
          "9": [
            8993,
            9036
          ],
          "10": [
            8960,
            8979
          ],
          "11": [
            9129,
            9148
          ],
          "12": [
            9162,
            9202
          ],
          "13": [
            9222,
            9245
          ]
        },
        "DailyRocket.claimWinnings": {
          "1": [
            8182,
            8275
          ],
          "2": [
            8346,
            8469
          ]
        },
        "DailyRocket.isAwinner": {
          "18": [
            8628,
            8718
          ],
          "19": [
            8728,
            8739
          ]
        },
        "DailyRocket.performUpkeep": {
          "3": [
            9455,
            9475
          ],
          "4": [
            9489,
            9509
          ],
          "5": [
            9523,
            9533
          ],
          "6": [
            9590,
            9601
          ]
        },
        "DailyRocket.predictClosePrice": {
          "20": [
            3950,
            3986
          ],
          "21": [
            4028,
            4091
          ],
          "22": [
            4258,
            4331
          ],
          "23": [
            4428,
            4501
          ],
          "24": [
            4598,
            4660
          ],
          "25": [
            5678,
            5733
          ],
          "26": [
            5751,
            5823
          ],
          "27": [
            5869,
            5942
          ],
          "28": [
            5952,
            6017
          ],
          "29": [
            6046,
            6093
          ],
          "30": [
            6144,
            6210
          ],
          "31": [
            6262,
            6316
          ],
          "32": [
            6375,
            6428
          ],
          "33": [
            6439,
            6478
          ]
        },
        "DailyRocket.sendToIba": {
          "45": [
            9724,
            9786
          ],
          "46": [
            10005,
            10054
          ],
          "47": [
            10068,
            10208
          ],
          "48": [
            9846,
            9849
          ]
        },
        "DailyRocket.setNewClosingPrice": {
          "36": [
            3369,
            3433
          ],
          "37": [
            3351,
            3354
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "38": [
            6638,
            6817
          ],
          "39": [
            6930,
            7036
          ],
          "40": [
            7054,
            7153
          ],
          "41": [
            7171,
            7221
          ],
          "42": [
            7240,
            7313
          ],
          "43": [
            6907,
            6910
          ],
          "44": [
            6619,
            6622
          ]
        }
      },
      "19": {},
      "21": {},
      "22": {},
      "23": {},
      "25": {},
      "27": {
        "TransferHelper.safeApprove": {
          "52": [
            2070,
            2142
          ]
        },
        "TransferHelper.safeTransfer": {
          "53": [
            1410,
            1482
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "51": [
            808,
            881
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IMoonSquares",
    "ISwapRouter",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "TransferHelper"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "591:9643:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:37;;1370:4;1337:37;;;;;188:8:40;176:21;;;158:40;;146:2;131:18;1337:37:16;;;;;;;;1821:32;;;;;;;;;355:25:40;;;343:2;328:18;1821:32:16;209:177:40;2422:52:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;950:41:40;;;932:60;;1023:2;1008:18;;1001:34;;;;905:18;2422:52:16;760:281:40;8044:441:16;;;;;;:::i;:::-;;:::i;:::-;;9271:347;;;;;;:::i;:::-;;:::i;2519:73::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3725:32:40;;;3707:51;;3695:2;3680:18;2519:73:16;3561:203:40;2481:31:16;;;;;;:::i;:::-;;:::i;3456:106::-;;;;;;:::i;:::-;;:::i;7351:247::-;;;:::i;2149:74::-;;;;;;:::i;:::-;;:::i;1985:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8756:505;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;1905:73:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:216;;;;;;:::i;:::-;;:::i;8491:255::-;;;;;;:::i;:::-;;:::i;:::-;;;6583:14:40;;6576:22;6558:41;;6546:2;6531:18;8491:255:16;6418:187:40;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;2069:73:16;;;;;;:::i;:::-;;:::i;3794:2691::-;;;;;;:::i;:::-;;:::i;2631:95::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:39;;;;;7604:252;;;;;;:::i;:::-;;:::i;1535:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:189:0;;;;;;:::i;:::-;;:::i;1256:30:16:-;;;;;-1:-1:-1;;;;;1256:30:16;;;8044:441;-1:-1:-1;;;;;8242:24:16;;;;;;:18;:24;;;;;;;:32;;;;8267:6;;8242:32;:::i;:::-;;;;;;;;;;;;;;8190:22;:28;8213:4;-1:-1:-1;;;;;8190:28:16;-1:-1:-1;;;;;8190:28:16;;;;;;;;;;;;8219:6;8190:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8227:10;8190:48;;;;;;;;;:84;8182:93;;;;;;-1:-1:-1;;;;;8303:25:16;;8285:15;8303:25;;;:19;:25;;;;;;:33;;;;8329:6;;8303:33;:::i;:::-;;;;;;;;;;;;;;8285:51;;8353:3;;;;;;;;;-1:-1:-1;;;;;8353:3:16;-1:-1:-1;;;;;8346:20:16;;8380:10;8452:7;8447:3;8407:19;:25;8427:4;-1:-1:-1;;;;;8407:25:16;;;;;;;;;;;;8433:6;8407:33;;;;;;:::i;:::-;;;;;;;;;;;;;;8444:2;8406:40;;;;:::i;:::-;:44;;;;:::i;:::-;8405:54;;;;:::i;:::-;8346:123;;-1:-1:-1;;;;;;8346:123:16;;;;;;;-1:-1:-1;;;;;9042:32:40;;;8346:123:16;;;9024:51:40;9091:18;;;9084:34;8997:18;;8346:123:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8110:375;8044:441;;:::o;9271:347::-;9351:20;9374:34;;;;9385:11;9374:34;:::i;:::-;9351:57;-1:-1:-1;9422:17:16;9418:126;;9455:20;:18;:20::i;:::-;9489;:18;:20::i;:::-;9523:8;:10;;-1:-1:-1;;;;;9523:10:16;;:8;:10;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9523:10:16;;;;;-1:-1:-1;;;;;9523:10:16;;;;;;;9418:126;9557:12;9573:1;9557:17;9553:59;;;9590:11;:9;:11::i;:::-;9340:278;9271:347;;:::o;2519:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2519:73:16;;-1:-1:-1;2519:73:16;;-1:-1:-1;;2519:73:16:o;2481:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2481:31:16;;-1:-1:-1;2481:31:16;:::o;3456:106::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;3526:14:16::1;:29:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3526:29:16;;;;;::::1;::::0;;-1:-1:-1;;;;;;3526:29:16::1;-1:-1:-1::0;;;;;3526:29:16;;;::::1;::::0;;;::::1;::::0;;3456:106::o;7351:247::-;7390:4;7405:31;7461:42;7405:99;;7518:11;7534:9;-1:-1:-1;;;;;7534:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7514:47:16;7351:247;-1:-1:-1;;;;;;7351:247:16:o;2149:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8756:505;8835:17;8854:24;8936:9;:7;:9::i;:::-;8907:8;;-1:-1:-1;;;;;8907:8:16;8894:22;;;;:12;:22;;;;;;:38;;8919:13;8894:38;:::i;:::-;:51;8890:157;;;9007:28;;;9032:1;9007:28;;;10927:19:40;8975:4:16;;-1:-1:-1;8975:4:16;;10962:12:40;9007:28:16;;;;;;;;;;;;;8993:43;;;;;;8890:157;9085:8;;9072:12;;:25;;9085:11;;9095:1;;-1:-1:-1;;;;;9085:8:16;:11;:::i;:::-;-1:-1:-1;;;;;9072:25:16;;;;;;;;;;;;;9100:13;9072:41;;;;:::i;:::-;9060:9;:7;:9::i;:::-;:53;9056:157;;;9144:4;9129:19;;9170:4;9198:1;9176:25;;;;;;10927:19:40;;10971:2;10962:12;;10798:182;9056:157:16;9236:9;;9222:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9222:23:16;;-1:-1:-1;;;;8756:505:16;;;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3572:216:16:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3666:17:16::1;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3666:30:16;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3706:21:16::1;:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3706:39:16;;;;;::::1;::::0;;-1:-1:-1;;;;;;3706:39:16::1;-1:-1:-1::0;;;;;3706:39:16;::::1;;::::0;;3755:19:::1;::::0;:11:::1;::::0;:19:::1;::::0;3767:6;;3755:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;3755:26:16;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3572:216:16:o;8491:255::-;-1:-1:-1;;;;;8685:24:16;;8613:4;8685:24;;;:18;:24;;;;;;:32;;;;8710:6;;8685:32;:::i;:::-;;;;;;;;;;;;;;8636:22;:28;8659:4;-1:-1:-1;;;;;8636:28:16;-1:-1:-1;;;;;8636:28:16;;;;;;;;;;;;8665:6;8636:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8636:45:16;;;;;;;;;;;:81;8628:90;;;;;;-1:-1:-1;8735:4:16;8491:255;;;;;:::o;2069:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3794:2691::-;3926:5;7914:6;7910:111;7929:17;:24;7925:28;;7910:111;;;8003:6;-1:-1:-1;;;;;7982:27:16;:14;7997:1;7982:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7982:17:16;:27;7974:36;;;;;;7955:3;;;;:::i;:::-;;;;7910:111;;;;3958:11:::1;3970:6;3958:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:27;;:19:::0;:27:::1;3950:36;;;::::0;::::1;;4000:8;::::0;4011:1:::1;-1:-1:-1::0;;;;;4000:8:16;;::::1;:12;3996:135;;;4062:8;::::0;4049:12:::1;::::0;:25:::1;::::0;4062:11:::1;::::0;4072:1:::1;::::0;-1:-1:-1;;;;;4062:8:16::1;:11;:::i;:::-;-1:-1:-1::0;;;;;4049:25:16::1;;;;;;;;;;;;;4077:13;4049:41;;;;:::i;:::-;4036:9;:7;:9::i;:::-;:54;;4028:63;;;::::0;::::1;;4239:3;::::0;4157:20:::1;::::0;-1:-1:-1;;;;;4230:12:16;;::::1;4239:3:::0;::::1;4230:12;4226:1811;;4273:3;::::0;4266:48:::1;::::0;-1:-1:-1;;;4266:48:16;;4288:10:::1;4266:48;::::0;::::1;11720:34:40::0;4308:4:16::1;11770:18:40::0;;;11763:43;4323:6:16;;-1:-1:-1;;;;;4273:3:16::1;::::0;4266:21:::1;::::0;11655:18:40;;4266:48:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;4258:73;;;::::0;::::1;;4428;4460:5;4467:10;4487:4;4494:6;4428:31;:73::i;:::-;4598:62;4625:5;4640:10;4653:6;4598:26;:62::i;:::-;4799:388;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4799:388:16;;::::1;::::0;;4903:3:::1;::::0;;::::1;4799:388;::::0;::::1;::::0;;;1370:4:::1;4799:388:::0;;;;;;4981:4:::1;4799:388:::0;;;;;;5018:15:::1;4799:388:::0;;;;;;;;;;;;4697:20:::1;4799:388:::0;;;;;;-1:-1:-1;4799:388:16;;;;;;5324:36;;-1:-1:-1;;;5324:36:16;;12295:13:40;;12291:22;;5324:36:16::1;::::0;::::1;12273:41:40::0;12356:24;;12352:33;;12330:20;;;12323:63;12428:24;;12454:8;12424:39;12402:20;;;12395:69;12506:24;;12502:33;;12480:20;;;12473:63;12574:24;;12552:20;;;12545:54;12637:24;12615:20;;;12608:54;12700:24;;12678:20;;;12671:54;12767:24;;12763:33;;12741:20;;;12734:63;-1:-1:-1;5324:10:16::1;:28;::::0;::::1;::::0;12207:19:40;;5324:36:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5308:52;;5643:15;5632:8;:26;5628:210;;;5705:3;::::0;5678:55:::1;::::0;-1:-1:-1;;;;;5705:3:16::1;5718:10;5705:3;5678:26;:55::i;:::-;5779:3;::::0;5751:72:::1;::::0;-1:-1:-1;;;;;5779:3:16::1;5784:10;5796:26;5814:8:::0;5796:15;:26:::1;:::i;:::-;5751:27;:72::i;:::-;4244:1604;;;4226:1811;;;5884:3;::::0;5877:48:::1;::::0;-1:-1:-1;;;5877:48:16;;5899:10:::1;5877:48;::::0;::::1;11720:34:40::0;5919:4:16::1;11770:18:40::0;;;11763:43;5934:6:16;;-1:-1:-1;;;;;5884:3:16::1;::::0;5877:21:::1;::::0;11655:18:40;;5877:48:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;5869:73;;;::::0;::::1;;5959:3;::::0;5952:65:::1;::::0;-1:-1:-1;;;5952:65:16;;5977:10:::1;5952:65;::::0;::::1;13178:34:40::0;5997:4:16::1;13228:18:40::0;;;13221:43;13280:18;;;13273:34;;;-1:-1:-1;;;;;5959:3:16;;::::1;::::0;5952:24:::1;::::0;13113:18:40;;5952:65:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4226:1811;6066:8;::::0;-1:-1:-1;;;;;6066:8:16::1;6046:29;::::0;;;:19:::1;:29;::::0;;;;;;:37;;6087:6;;6046:29;:37:::1;::::0;6076:6;;6046:37:::1;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6167:8:16::1;::::0;-1:-1:-1;;;;;6167:8:16::1;6144:32;::::0;;;:22:::1;:32;::::0;;;;;;:40;;6199:11;;6144:32;:40:::1;::::0;6177:6;;6144:40:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;6185:10:::1;6144:52;::::0;;;;;;;;;:66;;;;6281:8:::1;::::0;-1:-1:-1;;;;;6281:8:16::1;6262:28:::0;;:18:::1;:28:::0;;;;;;:36:::1;::::0;6291:6;;6262:36:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:54;;::::1;::::0;::::1;::::0;;-1:-1:-1;6262:54:16;;;;;;::::1;::::0;;;6394:8:::1;::::0;-1:-1:-1;;;;;6394:8:16::1;6375:28:::0;;:18:::1;:28:::0;;;;;:36:::1;::::0;6404:6;;6375:36:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:53;;::::1;::::0;::::1;::::0;;-1:-1:-1;6375:53:16;;;;;;;::::1;::::0;;6417:10:::1;-1:-1:-1::0;;;;;;6375:53:16;;::::1;::::0;::::1;::::0;;;355:25:40;;;6417:10:16;6444:34:::1;::::0;328:18:40;6444:34:16::1;;;;;;;3937:2548;3794:2691:::0;;;;:::o;7604:252::-;7661:3;7675:31;7731:21;7753:9;7731:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7731:32:16;7675:89;;7776:10;7793:9;-1:-1:-1;;;;;7793:25:16;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7774:46:16;;7604:252;-1:-1:-1;;;;;;;7604:252:16:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:10;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;13520:2:40;1926:73:0::1;::::0;::::1;13502:21:40::0;13559:2;13539:18;;;13532:30;13598:34;13578:18;;;13571:62;-1:-1:-1;;;13649:18:40;;;13642:36;13695:19;;1926:73:0::1;13318:402:40::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3248:202:16:-;3302:9;3297:147;3321:21;:28;3317:32;;3297:147;;;3422:11;3431:1;3422:8;:11::i;:::-;3388:8;;-1:-1:-1;;;;;3388:8:16;3369:28;;;;:18;:28;;;;;3398:17;:20;;3416:1;;3398:20;;;;;;:::i;:::-;;;;;;;;3369:50;;;;;;:::i;:::-;;;;;;;;;;;;;;:64;3351:3;;;;:::i;:::-;;;;3297:147;;6491:853;6553:8;;-1:-1:-1;;;;;6553:8:16;6539:11;6571:767;6593:17;:24;6589:28;;;;6571:767;;;-1:-1:-1;;;;;6751:23:16;;;;;;:18;:23;;;;;6775:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6751:45;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;6663:18;:23;6682:3;-1:-1:-1;;;;;6663:23:16;;;;;;;;;;;;6687:17;6705:1;6687:20;;;;;;;;;;:::i;:::-;;;;;;;;6663:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;:140;6638:179;;;;;;6836:7;6831:497;-1:-1:-1;;;;;6853:23:16;;;;;;:18;:23;;;;;6877:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6853:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;6849:56;;;;6831:497;;;-1:-1:-1;;;;;6990:23:16;;;;;;:18;:23;;;;;7014:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6990:45;;;;;;:::i;:::-;;;;;;;;;;;;;;6938:18;:23;6957:3;-1:-1:-1;;;;;6938:23:16;;;;;;;;;;;;6962:17;6980:1;6962:20;;;;;;;;;;:::i;:::-;;;;;;;;6938:45;;;;;;:::i;:::-;;;;;;;;;;;;;6984:1;6938:48;;;;;;;;;;:::i;:::-;;;;;;;;;:97;6930:106;;;;;;-1:-1:-1;;;;;7054:22:16;;;;;;:17;:22;;;;;7077:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7054:44;;;;;;:::i;:::-;;;;;;;;;;;;;7104:18;:23;7123:3;-1:-1:-1;;;;;7104:23:16;;;;;;;;;;;;7128:17;7146:1;7128:20;;;;;;;;;;:::i;:::-;;;;;;;;7104:45;;;;;;:::i;:::-;;;;;;;;;;;;;7150:1;7104:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7054:99;;7104:48;7054:99;;;;;;;;;;;;;;-1:-1:-1;;;;;;7054:99:16;-1:-1:-1;;;;;7104:48:16;;;7054:99;;;;;;-1:-1:-1;;;;;7171:24:16;;;;:19;:24;;;;;7196:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7171:46;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;7240:10:16;;-1:-1:-1;;;;;7264:23:16;;7240:10;7264:23;;;:18;:23;;;;;7288:17;:20;;-1:-1:-1;;;;;7240:10:16;;;;:23;;7264;7288:17;:20;;;;;;;;;;:::i;:::-;;;;;;;;7264:45;;;;;;:::i;:::-;;;;;;;;;;;;;7310:1;7264:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;7240:73;;;;;;-1:-1:-1;;;;;;7240:73:16;;;-1:-1:-1;;;;;7264:48:16;;;7240:73;;;3707:51:40;3680:18;;7240:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6907:3;;;;;:::i;:::-;;;;6831:497;;;-1:-1:-1;6619:3:16;;;;:::i;:::-;;;;6571:767;;;;6529:815;6491:853::o;9685:540::-;9757:8;;9744:12;;:25;;9757:11;;9767:1;;-1:-1:-1;;;;;9757:8:16;:11;:::i;:::-;-1:-1:-1;;;;;9744:25:16;;;;;;;;;;;;;9772:13;9744:41;;;;:::i;:::-;9732:9;:7;:9::i;:::-;:53;9724:62;;;;;;9801:9;9796:423;9820:17;:24;-1:-1:-1;;;;;9816:28:16;;;9796:423;;;9901:8;;-1:-1:-1;;;;;9901:8:16;;;9865:11;9881:29;;;:19;:29;;;;;9911:17;:20;;9865:11;;9939:3;;9911:20;;;;;;;;;;:::i;:::-;;;;;;;;9881:51;;;;;;:::i;:::-;;;;;;;;;;;;;;9936:2;9880:58;;;;:::i;:::-;:62;;;;:::i;:::-;10012:3;;10033:11;;10005:49;;-1:-1:-1;;;10005:49:16;;-1:-1:-1;;;;;10033:11:16;;;10005:49;;;9024:51:40;9091:18;;;9084:34;;;9865:78:16;;-1:-1:-1;10012:3:16;;10005:19;;8997:18:40;;10005:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10068:11:16;;10105:3;;10164:10;;10068:140;;-1:-1:-1;;;10068:140:16;;-1:-1:-1;;;;;10105:3:16;;;10068:140;;;15796:34:40;15846:18;;;15839:34;;;10164:10:16;;;15889:18:40;;;15882:43;10068:11:16;15941:18:40;;;15934:47;10068:11:16;;;:19;;15730::40;;10068:140:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9851:368;9846:3;;;;;:::i;:::-;;;;9796:423;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;530:358:27:-;728:69;;;-1:-1:-1;;;;;13196:15:40;;;728:69:27;;;13178:34:40;13248:15;;;13228:18;;;13221:43;13280:18;;;;13273:34;;;728:69:27;;;;;;;;;;13113:18:40;;;;728:69:27;;;;;;;-1:-1:-1;;;;;728:69:27;-1:-1:-1;;;728:69:27;;;717:81;;-1:-1:-1;;;;717:10:27;;;;:81;;728:69;717:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:129;;;;816:7;:57;;;;-1:-1:-1;828:11:27;;:16;;:44;;;859:4;848:24;;;;;;;;;;;;:::i;:::-;808:73;;;;-1:-1:-1;;;808:73:27;;16473:2:40;808:73:27;;;16455:21:40;16512:1;16492:18;;;16485:29;-1:-1:-1;;;16530:18:40;;;16523:33;16573:18;;808:73:27;16271:326:40;808:73:27;659:229;;530:358;;;;:::o;1842:307::-;2001:58;;;-1:-1:-1;;;;;9042:32:40;;;2001:58:27;;;9024:51:40;9091:18;;;;9084:34;;;2001:58:27;;;;;;;;;;8997:18:40;;;;2001:58:27;;;;;;;-1:-1:-1;;;;;2001:58:27;-1:-1:-1;;;2001:58:27;;;1990:70;;-1:-1:-1;;;;1990:10:27;;;;:70;;2001:58;1990:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:106;;;;2078:7;:57;;;;-1:-1:-1;2090:11:27;;:16;;:44;;;2121:4;2110:24;;;;;;;;;;;;:::i;:::-;2070:72;;;;-1:-1:-1;;;2070:72:27;;16804:2:40;2070:72:27;;;16786:21:40;16843:1;16823:18;;;16816:29;-1:-1:-1;;;16861:18:40;;;16854:32;16903:18;;2070:72:27;16602:325:40;2070:72:27;1944:205;;1842:307;;;:::o;1180:309::-;1340:59;;;-1:-1:-1;;;;;9042:32:40;;;1340:59:27;;;9024:51:40;9091:18;;;;9084:34;;;1340:59:27;;;;;;;;;;8997:18:40;;;;1340:59:27;;;;;;;-1:-1:-1;;;;;1340:59:27;-1:-1:-1;;;1340:59:27;;;1329:71;;-1:-1:-1;;;;1329:10:27;;;;:71;;1340:59;1329:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:107;;;;1418:7;:57;;;;-1:-1:-1;1430:11:27;;:16;;:44;;;1461:4;1450:24;;;;;;;;;;;;:::i;:::-;1410:72;;;;-1:-1:-1;;;1410:72:27;;17134:2:40;1410:72:27;;;17116:21:40;17173:1;17153:18;;;17146:29;-1:-1:-1;;;17191:18:40;;;17184:32;17233:18;;1410:72:27;16932:325:40;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;391:173:40;459:20;;-1:-1:-1;;;;;508:31:40;;498:42;;488:70;;554:1;551;544:12;488:70;391:173;;;:::o;569:186::-;628:6;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;720:29;739:9;720:29;:::i;:::-;710:39;569:186;-1:-1:-1;;;569:186:40:o;1046:188::-;1114:20;;-1:-1:-1;;;;;1163:46:40;;1153:57;;1143:85;;1224:1;1221;1214:12;1239:127;1300:10;1295:3;1291:20;1288:1;1281:31;1331:4;1328:1;1321:15;1355:4;1352:1;1345:15;1371:719;1414:5;1467:3;1460:4;1452:6;1448:17;1444:27;1434:55;;1485:1;1482;1475:12;1434:55;1521:6;1508:20;1547:18;1584:2;1580;1577:10;1574:36;;;1590:18;;:::i;:::-;1665:2;1659:9;1633:2;1719:13;;-1:-1:-1;;1715:22:40;;;1739:2;1711:31;1707:40;1695:53;;;1763:18;;;1783:22;;;1760:46;1757:72;;;1809:18;;:::i;:::-;1849:10;1845:2;1838:22;1884:2;1876:6;1869:18;1930:3;1923:4;1918:2;1910:6;1906:15;1902:26;1899:35;1896:55;;;1947:1;1944;1937:12;1896:55;2011:2;2004:4;1996:6;1992:17;1985:4;1977:6;1973:17;1960:54;2058:1;2051:4;2046:2;2038:6;2034:15;2030:26;2023:37;2078:6;2069:15;;;;;;1371:719;;;;:::o;2095:396::-;2173:6;2181;2234:2;2222:9;2213:7;2209:23;2205:32;2202:52;;;2250:1;2247;2240:12;2202:52;2273:29;2292:9;2273:29;:::i;:::-;2263:39;;2353:2;2342:9;2338:18;2325:32;2380:18;2372:6;2369:30;2366:50;;;2412:1;2409;2402:12;2366:50;2435;2477:7;2468:6;2457:9;2453:22;2435:50;:::i;:::-;2425:60;;;2095:396;;;;;:::o;2496:591::-;2566:6;2574;2627:2;2615:9;2606:7;2602:23;2598:32;2595:52;;;2643:1;2640;2633:12;2595:52;2683:9;2670:23;2712:18;2753:2;2745:6;2742:14;2739:34;;;2769:1;2766;2759:12;2739:34;2807:6;2796:9;2792:22;2782:32;;2852:7;2845:4;2841:2;2837:13;2833:27;2823:55;;2874:1;2871;2864:12;2823:55;2914:2;2901:16;2940:2;2932:6;2929:14;2926:34;;;2956:1;2953;2946:12;2926:34;3001:7;2996:2;2987:6;2983:2;2979:15;2975:24;2972:37;2969:57;;;3022:1;3019;3012:12;2969:57;3053:2;3045:11;;;;;3075:6;;-1:-1:-1;2496:591:40;;-1:-1:-1;;;;2496:591:40:o;3092:464::-;3179:6;3187;3195;3248:2;3236:9;3227:7;3223:23;3219:32;3216:52;;;3264:1;3261;3254:12;3216:52;3287:29;3306:9;3287:29;:::i;:::-;3277:39;;3367:2;3356:9;3352:18;3339:32;3394:18;3386:6;3383:30;3380:50;;;3426:1;3423;3416:12;3380:50;3449;3491:7;3482:6;3471:9;3467:22;3449:50;:::i;:::-;3439:60;;;3546:2;3535:9;3531:18;3518:32;3508:42;;3092:464;;;;;:::o;3769:180::-;3828:6;3881:2;3869:9;3860:7;3856:23;3852:32;3849:52;;;3897:1;3894;3887:12;3849:52;-1:-1:-1;3920:23:40;;3769:180;-1:-1:-1;3769:180:40:o;3954:458::-;4041:6;4049;4057;4110:2;4098:9;4089:7;4085:23;4081:32;4078:52;;;4126:1;4123;4116:12;4078:52;4162:9;4149:23;4139:33;;4223:2;4212:9;4208:18;4195:32;4250:18;4242:6;4239:30;4236:50;;;4282:1;4279;4272:12;4417:390;4495:6;4503;4556:2;4544:9;4535:7;4531:23;4527:32;4524:52;;;4572:1;4569;4562:12;4524:52;4608:9;4595:23;4585:33;;4669:2;4658:9;4654:18;4641:32;4696:18;4688:6;4685:30;4682:50;;;4728:1;4725;4718:12;4812:258;4884:1;4894:113;4908:6;4905:1;4902:13;4894:113;;;4984:11;;;4978:18;4965:11;;;4958:39;4930:2;4923:10;4894:113;;;5025:6;5022:1;5019:13;5016:48;;;-1:-1:-1;;5060:1:40;5042:16;;5035:27;4812:258::o;5075:462::-;5258:6;5251:14;5244:22;5233:9;5226:41;5303:2;5298;5287:9;5283:18;5276:30;5207:4;5335:6;5329:13;5378:6;5373:2;5362:9;5358:18;5351:34;5394:66;5453:6;5448:2;5437:9;5433:18;5428:2;5420:6;5416:15;5394:66;:::i;:::-;5521:2;5500:15;-1:-1:-1;;5496:29:40;5481:45;;;;5528:2;5477:54;;5075:462;-1:-1:-1;;;5075:462:40:o;5542:396::-;5620:6;5628;5681:2;5669:9;5660:7;5656:23;5652:32;5649:52;;;5697:1;5694;5687:12;5649:52;5737:9;5724:23;5770:18;5762:6;5759:30;5756:50;;;5802:1;5799;5792:12;5756:50;5825;5867:7;5858:6;5847:9;5843:22;5825:50;:::i;:::-;5815:60;;;5894:38;5928:2;5917:9;5913:18;5894:38;:::i;:::-;5884:48;;5542:396;;;;;:::o;5943:470::-;6030:6;6038;6046;6099:2;6087:9;6078:7;6074:23;6070:32;6067:52;;;6115:1;6112;6105:12;6067:52;6138:29;6157:9;6138:29;:::i;:::-;6128:39;;6218:2;6207:9;6203:18;6190:32;6245:18;6237:6;6234:30;6231:50;;;6277:1;6274;6267:12;6231:50;6300;6342:7;6333:6;6322:9;6318:22;6300:50;:::i;:::-;6290:60;;;6369:38;6403:2;6392:9;6388:18;6369:38;:::i;:::-;6359:48;;5943:470;;;;;:::o;6790:463::-;6876:6;6884;6892;6945:2;6933:9;6924:7;6920:23;6916:32;6913:52;;;6961:1;6958;6951:12;6913:52;7001:9;6988:23;7034:18;7026:6;7023:30;7020:50;;;7066:1;7063;7056:12;7020:50;7089;7131:7;7122:6;7111:9;7107:22;7089:50;:::i;:::-;7079:60;;;7186:2;7175:9;7171:18;7158:32;7148:42;;7209:38;7243:2;7232:9;7228:18;7209:38;:::i;7486:322::-;7555:6;7608:2;7596:9;7587:7;7583:23;7579:32;7576:52;;;7624:1;7621;7614:12;7576:52;7664:9;7651:23;7697:18;7689:6;7686:30;7683:50;;;7729:1;7726;7719:12;7683:50;7752;7794:7;7785:6;7774:9;7770:22;7752:50;:::i;:::-;7742:60;7486:322;-1:-1:-1;;;;7486:322:40:o;8042:276::-;8173:3;8211:6;8205:13;8227:53;8273:6;8268:3;8261:4;8253:6;8249:17;8227:53;:::i;:::-;8296:16;;;;;8042:276;-1:-1:-1;;8042:276:40:o;8323:127::-;8384:10;8379:3;8375:20;8372:1;8365:31;8415:4;8412:1;8405:15;8439:4;8436:1;8429:15;8455:168;8495:7;8561:1;8557;8553:6;8549:14;8546:1;8543:21;8538:1;8531:9;8524:17;8520:45;8517:71;;;8568:18;;:::i;:::-;-1:-1:-1;8608:9:40;;8455:168::o;8628:217::-;8668:1;8694;8684:132;;8738:10;8733:3;8729:20;8726:1;8719:31;8773:4;8770:1;8763:15;8801:4;8798:1;8791:15;8684:132;-1:-1:-1;8830:9:40;;8628:217::o;9129:277::-;9196:6;9249:2;9237:9;9228:7;9224:23;9220:32;9217:52;;;9265:1;9262;9255:12;9217:52;9297:9;9291:16;9350:5;9343:13;9336:21;9329:5;9326:32;9316:60;;9372:1;9369;9362:12;9411:226;9450:3;-1:-1:-1;;;;;9547:2:40;9540:5;9536:14;9574:2;9565:7;9562:15;9559:41;;;9580:18;;:::i;:::-;9629:1;9616:15;;9411:226;-1:-1:-1;;;9411:226:40:o;9642:356::-;9844:2;9826:21;;;9863:18;;;9856:30;9922:34;9917:2;9902:18;;9895:62;9989:2;9974:18;;9642:356::o;10003:179::-;10081:13;;10134:22;10123:34;;10113:45;;10103:73;;10172:1;10169;10162:12;10187:473;10290:6;10298;10306;10314;10322;10375:3;10363:9;10354:7;10350:23;10346:33;10343:53;;;10392:1;10389;10382:12;10343:53;10415:39;10444:9;10415:39;:::i;:::-;10405:49;;10494:2;10483:9;10479:18;10473:25;10463:35;;10538:2;10527:9;10523:18;10517:25;10507:35;;10582:2;10571:9;10567:18;10561:25;10551:35;;10605:49;10649:3;10638:9;10634:19;10605:49;:::i;:::-;10595:59;;10187:473;;;;;;;;:::o;10665:128::-;10705:3;10736:1;10732:6;10729:1;10726:13;10723:39;;;10742:18;;:::i;:::-;-1:-1:-1;10778:9:40;;10665:128::o;10985:246::-;11025:4;-1:-1:-1;;;;;11138:10:40;;;;11108;;11160:12;;;11157:38;;;11175:18;;:::i;:::-;11212:13;;10985:246;-1:-1:-1;;;10985:246:40:o;11236:127::-;11297:10;11292:3;11288:20;11285:1;11278:31;11328:4;11325:1;11318:15;11352:4;11349:1;11342:15;11368:135;11407:3;-1:-1:-1;;11428:17:40;;11425:43;;;11448:18;;:::i;:::-;-1:-1:-1;11495:1:40;11484:13;;11368:135::o;11817:184::-;11887:6;11940:2;11928:9;11919:7;11915:23;11911:32;11908:52;;;11956:1;11953;11946:12;11908:52;-1:-1:-1;11979:16:40;;11817:184;-1:-1:-1;11817:184:40:o;12808:125::-;12848:4;12876:1;12873;12870:8;12867:34;;;12881:18;;:::i;:::-;-1:-1:-1;12918:9:40;;12808:125::o;13725:380::-;13804:1;13800:12;;;;13847;;;13868:61;;13922:4;13914:6;13910:17;13900:27;;13868:61;13975:2;13967:6;13964:14;13944:18;13941:38;13938:161;;;14021:10;14016:3;14012:20;14009:1;14002:31;14056:4;14053:1;14046:15;14084:4;14081:1;14074:15;13938:161;;13725:380;;;:::o;14236:1099::-;14364:3;14393:1;14426:6;14420:13;14456:3;14478:1;14506:9;14502:2;14498:18;14488:28;;14566:2;14555:9;14551:18;14588;14578:61;;14632:4;14624:6;14620:17;14610:27;;14578:61;14658:2;14706;14698:6;14695:14;14675:18;14672:38;14669:165;;;-1:-1:-1;;;14733:33:40;;14789:4;14786:1;14779:15;14819:4;14740:3;14807:17;14669:165;14850:18;14877:104;;;;14995:1;14990:320;;;;14843:467;;14877:104;-1:-1:-1;;14910:24:40;;14898:37;;14955:16;;;;-1:-1:-1;14877:104:40;;14990:320;14183:1;14176:14;;;14220:4;14207:18;;15085:1;15099:165;15113:6;15110:1;15107:13;15099:165;;;15191:14;;15178:11;;;15171:35;15234:16;;;;15128:10;;15099:165;;;15103:3;;15293:6;15288:3;15284:16;15277:23;;14843:467;-1:-1:-1;15326:3:40;;14236:1099;-1:-1:-1;;;;;;;;14236:1099:40:o;15340:175::-;15377:3;15421:4;15414:5;15410:16;15450:4;15441:7;15438:17;15435:43;;;15458:18;;:::i;:::-;15507:1;15494:15;;15340:175;-1:-1:-1;;15340:175:40:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    591,
    10234
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBE331A64 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE7572230 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xEC6F4F41 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xFD2FAA68 EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBE331A64 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC2ABA3F0 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x80F79702 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x81688C64 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x85AFA270 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xAFA3A617 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A128671 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x4A128671 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x4A7DC8E0 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x5F90F0B7 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x63168475 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC3D5157 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x126DF02B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x1CC87D88 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x47CE529A EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181 PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F68 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x212 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x23A PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP3 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x209B JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x191 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F68 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH2 0x35A PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2147 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x23A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x498 SWAP1 DUP4 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x13 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x526 SWAP1 DUP5 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x64 PUSH1 0xC PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x5A PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B DUP3 DUP5 ADD DUP5 PUSH2 0x1F68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x691 JUMPI PUSH2 0x64A PUSH2 0x128D JUMP JUMPDEST PUSH2 0x652 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x0 PUSH2 0x66B DUP4 PUSH2 0x2219 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x1785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP DUP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x228F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x876 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x89E SWAP1 PUSH3 0x15180 PUSH2 0x22DF JUMP JUMPDEST EQ ISZERO PUSH2 0x8CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP4 POP DUP4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP SWAP2 POP PUSH2 0x973 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x8ED SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH2 0x91A PUSH2 0x7AA JUMP JUMPDEST GT ISZERO PUSH2 0x939 JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x0 PUSH2 0x196D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH2 0xA1D SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x7 SWAP1 PUSH2 0xA7B SWAP1 DUP6 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xAC5 SWAP1 DUP6 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x13 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0xB36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xBE9 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBB8 JUMPI PUSH2 0xBB8 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0xBE1 DUP2 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC4F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH2 0xC7C PUSH2 0x7AA JUMP JUMPDEST GT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH8 0x8AC7230489E80000 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xEE2 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST LT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2F DUP4 CALLER ADDRESS DUP5 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0xD5A DUP4 PUSH32 0x0 DUP4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0xA SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0xBB8 DUP4 DUP6 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD DUP9 DUP2 MSTORE PUSH8 0xD02AB486CEDC0000 PUSH1 0xC0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP11 ADD DUP2 DUP2 MSTORE SWAP11 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 MLOAD DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP8 MLOAD DUP10 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP6 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP9 ADD MSTORE SWAP4 MLOAD DUP8 AND PUSH1 0x64 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE SWAP1 MLOAD PUSH1 0xC4 DUP5 ADD MSTORE SWAP5 MLOAD DUP4 AND PUSH1 0xE4 DUP4 ADD MSTORE SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xEDA JUMPI PUSH1 0xA SLOAD PUSH2 0xEBA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x0 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xEDA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH2 0xED5 DUP5 DUP8 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x1BC7 JUMP JUMPDEST POP POP POP PUSH2 0xFDC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST LT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1008 SWAP1 DUP9 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP6 SWAP2 SWAP1 PUSH2 0x1056 SWAP1 DUP9 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE PUSH1 0xE SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1099 SWAP1 DUP8 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD DUP9 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 PUSH2 0x10DF SWAP1 DUP8 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP7 DUP3 MSTORE SWAP2 PUSH32 0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1161 JUMPI PUSH2 0x1161 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x228F JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x121C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74F SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x74F JUMP JUMPDEST PUSH2 0x128A DUP2 PUSH2 0x196D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x128A JUMPI PUSH2 0x12A3 DUP2 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D1 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x12E8 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x1302 DUP2 PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1781 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x1355 JUMPI PUSH2 0x1355 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x136C SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x13B0 JUMPI PUSH2 0x13B0 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD EQ PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1413 JUMPI PUSH2 0x1413 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x176E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1473 JUMPI PUSH2 0x1473 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x148A SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14CB JUMPI PUSH2 0x14CB PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1504 JUMPI PUSH2 0x1504 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ PUSH2 0x1519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1548 JUMPI PUSH2 0x1548 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x155F SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xF PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x159F JUMPI PUSH2 0x159F PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x15B6 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x15D8 JUMPI PUSH2 0x15D8 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0xD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x163E JUMPI PUSH2 0x163E PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1672 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8EBFA8AE SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x16BD JUMPI PUSH2 0x16BD PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x16F6 JUMPI PUSH2 0x16F6 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1757 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1766 SWAP1 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E4 JUMP JUMPDEST POP DUP1 PUSH2 0x1779 DUP2 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1319 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x17A3 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x17C8 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH2 0x17D0 PUSH2 0x7AA JUMP JUMPDEST GT PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND LT ISZERO PUSH2 0x128A JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x64 SWAP4 SWAP1 DUP7 AND SWAP1 DUP2 LT PUSH2 0x1827 JUMPI PUSH2 0x1827 PUSH2 0x231F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xA PUSH2 0x1859 SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18DE SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1955 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x1965 SWAP1 PUSH2 0x2219 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1A21 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A5E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A8D JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A8D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x1ABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x74F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1B23 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B8F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1B8F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B8F SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x74F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1C23 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C8F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C8F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C8F SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x1BC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x74F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CCC SWAP1 PUSH2 0x2380 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D34 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D07 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D34 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D34 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D34 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D19 JUMP JUMPDEST POP PUSH2 0x1D40 SWAP3 SWAP2 POP PUSH2 0x1D44 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D40 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D45 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D90 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1DF0 JUMPI PUSH2 0x1DF0 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1E18 JUMPI PUSH2 0x1E18 PUSH2 0x1DAE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E6D DUP4 PUSH2 0x1D97 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E95 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2F DUP5 PUSH2 0x1D97 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F57 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2000 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x627 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2038 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2083 DUP6 DUP3 DUP7 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2092 PUSH1 0x20 DUP5 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B9 DUP5 PUSH2 0x1D97 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E1 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x20F0 PUSH1 0x40 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x210E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2131 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x20F0 PUSH1 0x40 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP5 DUP3 DUP6 ADD PUSH2 0x1DC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2196 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x21D0 JUMPI PUSH2 0x21D0 PUSH2 0x21A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2236 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B0 DUP7 PUSH2 0x2275 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x22D3 PUSH1 0x80 DUP8 ADD PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22F2 JUMPI PUSH2 0x22F2 PUSH2 0x21A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2317 PUSH2 0x21A0 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2349 JUMPI PUSH2 0x2349 PUSH2 0x21A0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x237B JUMPI PUSH2 0x237B PUSH2 0x21A0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2394 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x23D7 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x23F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x240B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x241C JUMPI PUSH2 0x2449 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2441 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2428 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x246E JUMPI PUSH2 0x246E PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x91CC7BC3EF2C12F42B DUP13 DUP5 SELFDESTRUCT JUMPDEST SMOD 0x1F LOG0 0xCD KECCAK256 0xC2 CALLDATACOPY PUSH21 0xCFD5C353EFCE237E56C164736F6C634300080B0033 ",
  "pcMap": {
    "0": {
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x173"
    },
    "25": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBE331A64"
    },
    "49": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7572230"
    },
    "60": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "GT",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7572230"
    },
    "71": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x40A"
    },
    "75": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEC6F4F41"
    },
    "82": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41D"
    },
    "86": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44B"
    },
    "97": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFD2FAA68"
    },
    "104": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45E"
    },
    "108": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBE331A64"
    },
    "120": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38E"
    },
    "124": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC2ABA3F0"
    },
    "131": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A1"
    },
    "135": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC31C9C07"
    },
    "142": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E3"
    },
    "146": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "153": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F0"
    },
    "162": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "163": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x80F79702"
    },
    "169": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F8"
    },
    "173": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81688C64"
    },
    "180": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x334"
    },
    "184": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x85AFA270"
    },
    "191": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x347"
    },
    "195": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36A"
    },
    "206": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAFA3A617"
    },
    "213": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "214": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37B"
    },
    "217": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "224": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4A128671"
    },
    "229": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "GT",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x130"
    },
    "233": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "234": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "235": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4A128671"
    },
    "240": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "241": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x252"
    },
    "244": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "245": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "246": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4A7DC8E0"
    },
    "251": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "252": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x265"
    },
    "255": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "256": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x557ED1BA"
    },
    "262": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "263": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "266": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "267": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5F90F0B7"
    },
    "273": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "274": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "277": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "278": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x63168475"
    },
    "284": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "285": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x293"
    },
    "288": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "289": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "290": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6E04FF0D"
    },
    "295": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "296": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CF"
    },
    "299": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "300": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "305": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x89FE6AA"
    },
    "311": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "312": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x178"
    },
    "315": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "316": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "317": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3D5157"
    },
    "322": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "323": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19A"
    },
    "326": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "327": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x126DF02B"
    },
    "333": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "334": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B1"
    },
    "337": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "338": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1CC87D88"
    },
    "344": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "345": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FF"
    },
    "348": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "349": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "350": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4585E33B"
    },
    "355": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "356": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x214"
    },
    "359": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "360": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "361": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x47CE529A"
    },
    "366": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "EQ",
      "path": "16"
    },
    "367": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x227"
    },
    "370": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "371": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "372": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "374": {
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "DUP1",
      "path": "16"
    },
    "375": {
      "first_revert": true,
      "fn": null,
      "offset": [
        591,
        10234
      ],
      "op": "REVERT",
      "path": "16"
    },
    "376": {
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181"
    },
    "380": {
      "offset": [
        1370,
        1374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "383": {
      "offset": [
        1337,
        1374
      ],
      "op": "DUP2",
      "path": "16"
    },
    "384": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "JUMP",
      "path": "16"
    },
    "385": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "388": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "389": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "SWAP2"
    },
    "395": {
      "op": "AND"
    },
    "396": {
      "op": "DUP2"
    },
    "397": {
      "op": "MSTORE"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "400": {
      "op": "ADD"
    },
    "401": {
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "404": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "405": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "DUP1",
      "path": "16"
    },
    "406": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "407": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SUB",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "409": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "RETURN",
      "path": "16"
    },
    "410": {
      "offset": [
        1821,
        1853
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "411": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "414": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "416": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "417": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "DUP2",
      "path": "16"
    },
    "418": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "JUMP",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "420": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "422": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "423": {
      "op": "SWAP1"
    },
    "424": {
      "op": "DUP2"
    },
    "425": {
      "op": "MSTORE"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191"
    },
    "432": {
      "op": "JUMP"
    },
    "433": {
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF"
    },
    "437": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BF"
    },
    "440": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "441": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "443": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D75"
    },
    "446": {
      "fn": null,
      "jump": "i",
      "offset": [
        2422,
        2474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "447": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "448": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "450": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "452": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "453": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "456": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP2",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "458": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "460": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP1",
      "path": "16"
    },
    "463": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "464": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "466": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "467": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "ADD",
      "path": "16"
    },
    "469": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "470": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC0"
    },
    "472": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "474": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SHL",
      "path": "16"
    },
    "476": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP3",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "479": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "480": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "482": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP1",
      "path": "16"
    },
    "483": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "op": "NOT"
    },
    "493": {
      "op": "SWAP1"
    },
    "494": {
      "op": "SWAP4"
    },
    "495": {
      "op": "AND"
    },
    "496": {
      "op": "DUP4"
    },
    "497": {
      "op": "MSTORE"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "op": "DUP4"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "SWAP2"
    },
    "503": {
      "op": "SWAP1"
    },
    "504": {
      "op": "SWAP2"
    },
    "505": {
      "op": "MSTORE"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191"
    },
    "510": {
      "op": "JUMP"
    },
    "511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20D"
    },
    "518": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "519": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "521": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E51"
    },
    "524": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x471"
    },
    "529": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "531": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "STOP",
      "path": "16"
    },
    "532": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "533": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "536": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x222"
    },
    "539": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "540": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "542": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E9F"
    },
    "545": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMP",
      "path": "16"
    },
    "546": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "547": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62D"
    },
    "550": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMP",
      "path": "16"
    },
    "551": {
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "552": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23A"
    },
    "555": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x235"
    },
    "558": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "559": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "561": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F11"
    },
    "564": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "16"
    },
    "565": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "566": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A7"
    },
    "569": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "16"
    },
    "570": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "571": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "573": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "op": "SWAP1"
    },
    "583": {
      "op": "SWAP2"
    },
    "584": {
      "op": "AND"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "595": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23A"
    },
    "598": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x260"
    },
    "601": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "602": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "604": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F68"
    },
    "607": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "16"
    },
    "608": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "609": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "612": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "16"
    },
    "613": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "614": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "617": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x273"
    },
    "620": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "621": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "623": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D75"
    },
    "626": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "16"
    },
    "627": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "628": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x725"
    },
    "631": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "16"
    },
    "632": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "633": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "636": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AA"
    },
    "639": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMP",
      "path": "16"
    },
    "640": {
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "641": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23A"
    },
    "644": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28E"
    },
    "647": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "648": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "650": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F81"
    },
    "653": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMP",
      "path": "16"
    },
    "654": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "655": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x833"
    },
    "658": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMP",
      "path": "16"
    },
    "659": {
      "offset": [
        1985,
        2058
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "660": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "663": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "666": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "667": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "669": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FB4"
    },
    "672": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMP",
      "path": "16"
    },
    "673": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "674": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "676": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "678": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "679": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "680": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "681": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "683": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "684": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP4",
      "path": "16"
    },
    "685": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "686": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "688": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "689": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "690": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "691": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "692": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "693": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP1",
      "path": "16"
    },
    "694": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP4",
      "path": "16"
    },
    "695": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "16"
    },
    "696": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP5",
      "path": "16"
    },
    "697": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "16"
    },
    "698": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP1",
      "path": "16"
    },
    "699": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "700": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "701": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "702": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "703": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "704": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP5",
      "path": "16"
    },
    "705": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "16"
    },
    "706": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "707": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "708": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "709": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "16"
    },
    "710": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "711": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "712": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "713": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "714": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "715": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "716": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "717": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "718": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMP",
      "path": "16"
    },
    "719": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "720": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E2"
    },
    "723": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DD"
    },
    "726": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "727": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "729": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E9F"
    },
    "732": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "733": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "734": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86A"
    },
    "737": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "738": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "739": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "741": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "742": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191"
    },
    "745": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "746": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "747": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "748": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2011"
    },
    "751": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "756": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "759": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "760": {
      "offset": [
        1905,
        1978
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x306"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FB4"
    },
    "773": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMP",
      "path": "16"
    },
    "774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "16"
    },
    "781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "784": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP4",
      "path": "16"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "16"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP1",
      "path": "16"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP4",
      "path": "16"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "16"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP5",
      "path": "16"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "16"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP1",
      "path": "16"
    },
    "800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "16"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP5",
      "path": "16"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "16"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "809": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "810": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "16"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "16"
    },
    "819": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMP",
      "path": "16"
    },
    "820": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "821": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "824": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x342"
    },
    "827": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "828": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "830": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x204D"
    },
    "833": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "16"
    },
    "834": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "835": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B0"
    },
    "838": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "16"
    },
    "839": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "840": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35A"
    },
    "843": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x355"
    },
    "846": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "847": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "849": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x209B"
    },
    "852": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMP",
      "path": "16"
    },
    "853": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "854": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA9F"
    },
    "857": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMP",
      "path": "16"
    },
    "858": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "859": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "861": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x191"
    },
    "873": {
      "op": "JUMP"
    },
    "874": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "887": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "890": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "891": {
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x389"
    },
    "898": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "899": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F81"
    },
    "904": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "905": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "906": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB40"
    },
    "909": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "911": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "917": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F9"
    },
    "923": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "924": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB8D"
    },
    "928": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "929": {
      "offset": [
        2631,
        2726
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "930": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "933": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AF"
    },
    "936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "937": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "939": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x209B"
    },
    "942": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMP",
      "path": "16"
    },
    "943": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "944": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "946": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "948": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "949": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "16"
    },
    "950": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "951": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "953": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "954": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "16"
    },
    "955": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "956": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "16"
    },
    "959": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP6",
      "path": "16"
    },
    "960": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "961": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "16"
    },
    "962": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "963": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "16"
    },
    "964": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP7",
      "path": "16"
    },
    "965": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "16"
    },
    "966": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "16"
    },
    "967": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "16"
    },
    "968": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "16"
    },
    "969": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "970": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "971": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "16"
    },
    "972": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "973": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "974": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "16"
    },
    "975": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "16"
    },
    "976": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "977": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "16"
    },
    "978": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "16"
    },
    "979": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "980": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "981": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "982": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "983": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "984": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "985": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "986": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "987": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP3",
      "path": "16"
    },
    "989": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "990": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "991": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "992": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "993": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "16"
    },
    "994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMP",
      "path": "16"
    },
    "995": {
      "offset": [
        1292,
        1331
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "996": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23A"
    },
    "999": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "1032": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1034": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1035": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3"
    },
    "1038": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x418"
    },
    "1041": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1042": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1044": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F68"
    },
    "1047": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1048": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1049": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114B"
    },
    "1052": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1053": {
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1054": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35A"
    },
    "1057": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1060": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1061": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1063": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2147"
    },
    "1066": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1067": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1068": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1069": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1070": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1072": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1073": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1074": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "16"
    },
    "1075": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1076": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "16"
    },
    "1077": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1078": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1079": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1081": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1082": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1083": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1084": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1085": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "16"
    },
    "1086": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1087": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1088": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1089": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "16"
    },
    "1090": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1091": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1092": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1093": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1094": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1096": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "AND",
      "path": "16"
    },
    "1097": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1098": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D75"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F2"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1118": {
      "offset": [
        1256,
        1286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23A"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "op": "SUB"
    },
    "1134": {
      "offset": [
        1256,
        1286
      ],
      "op": "AND",
      "path": "16"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1137": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 1
    },
    "1147": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "AND",
      "path": "16"
    },
    "1148": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1150": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1151": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1152": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1153": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8260
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1155": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1157": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1158": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1160": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1161": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1162": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1163": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1164": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1165": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1166": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x498"
    },
    "1169": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1170": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8267,
        8273
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1171": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8267,
        8273
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1172": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "1175": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8242,
        8274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1176": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1177": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1178": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1179": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1180": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1182": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "ADD",
      "path": "16"
    },
    "1183": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1185": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1186": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1187": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1188": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SUB",
      "path": "16"
    },
    "1189": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1190": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1191": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1192": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8212
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1194": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1196": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8213,
        8217
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "AND",
      "path": "16"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "AND",
      "path": "16"
    },
    "1215": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1216": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1217": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1219": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "ADD",
      "path": "16"
    },
    "1220": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1221": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1222": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1223": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1225": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "ADD",
      "path": "16"
    },
    "1226": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1228": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1229": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8219,
        8225
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1230": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1232": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1233": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DA"
    },
    "1236": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1237": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1238": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "1241": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8190,
        8226
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1242": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1243": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1244": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1245": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1246": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1248": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1249": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1250": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1252": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1253": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1254": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1255": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SUB",
      "path": "16"
    },
    "1256": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1257": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "ADD",
      "path": "16"
    },
    "1258": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1259": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1260": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8227,
        8237
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1261": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1263": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1264": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1265": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1266": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1267": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1268": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1269": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1270": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1271": {
      "branch": 54,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8274
      ],
      "op": "EQ",
      "path": "16"
    },
    "1272": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x500"
    },
    "1275": {
      "branch": 54,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1276": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1278": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1279": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1280": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1290": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "AND",
      "path": "16"
    },
    "1291": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1293": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1294": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1295": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1296": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1298": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1300": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1301": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1303": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1304": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1305": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1306": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1307": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1308": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x526"
    },
    "1311": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1312": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8329,
        8335
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1313": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8329,
        8335
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1314": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "1317": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8303,
        8336
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1318": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1319": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1320": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1321": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1322": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1324": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "ADD",
      "path": "16"
    },
    "1325": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1327": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1328": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1329": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1330": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SUB",
      "path": "16"
    },
    "1331": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1332": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1333": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1334": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8336
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1335": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8336
      ],
      "op": "POP",
      "path": "16"
    },
    "1336": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0xA"
    },
    "1338": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1340": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1341": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1342": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1343": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1346": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "EXP",
      "path": "16"
    },
    "1347": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1348": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "DIV",
      "path": "16"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "AND",
      "path": "16"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8366
      ],
      "op": "AND",
      "path": "16"
    },
    "1367": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8366
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "1372": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8380,
        8390
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1373": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8452,
        8459
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1374": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8447,
        8450
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1376": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8426
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "1378": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1380": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8427,
        8431
      ],
      "op": "DUP10",
      "path": "16"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "AND",
      "path": "16"
    },
    "1390": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1391": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1392": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1394": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "ADD",
      "path": "16"
    },
    "1395": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1396": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1397": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1398": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1400": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "ADD",
      "path": "16"
    },
    "1401": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1403": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1404": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8433,
        8439
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1405": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1407": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1408": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x589"
    },
    "1411": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1412": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1413": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "1416": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8407,
        8440
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1417": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1418": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1419": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1420": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1421": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1423": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "ADD",
      "path": "16"
    },
    "1424": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1426": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1427": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1428": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1429": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SUB",
      "path": "16"
    },
    "1430": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1431": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1432": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1433": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8444,
        8446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5A"
    },
    "1435": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A4"
    },
    "1438": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1439": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1440": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21B6"
    },
    "1443": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8406,
        8446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1444": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1445": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AE"
    },
    "1448": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1449": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1450": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21D5"
    },
    "1453": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8406,
        8450
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1454": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1455": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B8"
    },
    "1458": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1459": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1460": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21D5"
    },
    "1463": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8405,
        8459
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1464": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1465": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1467": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "op": "SUB"
    },
    "1476": {
      "op": "NOT"
    },
    "1477": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "1479": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1480": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1481": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SHL",
      "path": "16"
    },
    "1482": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "AND",
      "path": "16"
    },
    "1483": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "op": "SWAP1"
    },
    "1494": {
      "op": "SWAP3"
    },
    "1495": {
      "op": "AND"
    },
    "1496": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1498": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "16"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1513": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1514": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1516": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SUB",
      "path": "16"
    },
    "1517": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1518": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1520": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1521": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "GAS",
      "path": "16"
    },
    "1522": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "CALL",
      "path": "16"
    },
    "1523": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1524": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x603"
    },
    "1529": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1531": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1533": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1534": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1535": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1536": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1538": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1540": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1541": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1542": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1543": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1544": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1547": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1548": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1550": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "NOT",
      "path": "16"
    },
    "1551": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1553": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1554": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "16"
    },
    "1555": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "AND",
      "path": "16"
    },
    "1556": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1557": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "16"
    },
    "1558": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1559": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1561": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1562": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1563": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1564": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "16"
    },
    "1565": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1566": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x627"
    },
    "1569": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1570": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1571": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21F7"
    },
    "1574": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1575": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1576": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "16"
    },
    "1577": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8110,
        8485
      ],
      "op": "POP",
      "path": "16"
    },
    "1578": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "POP",
      "path": "16"
    },
    "1579": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "POP",
      "path": "16"
    },
    "1580": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "o",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1581": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1582": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9351,
        9371
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1584": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63B"
    },
    "1587": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1588": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1589": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "ADD",
      "path": "16"
    },
    "1590": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9385,
        9396
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1591": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F68"
    },
    "1594": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9374,
        9408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1595": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9374,
        9408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1596": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9351,
        9408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "branch": 55,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9422,
        9439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1599": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9418,
        9544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x691"
    },
    "1602": {
      "branch": 55,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9418,
        9544
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1603": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9455,
        9475
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 3,
      "value": "0x64A"
    },
    "1606": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9455,
        9473
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x128D"
    },
    "1609": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9455,
        9475
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1610": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9455,
        9475
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1611": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9489,
        9509
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0x652"
    },
    "1614": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9489,
        9507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x130A"
    },
    "1617": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9489,
        9509
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1618": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9489,
        9509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1619": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9531
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0x4"
    },
    "1621": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1622": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "AND",
      "path": "16"
    },
    "1632": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1633": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9531
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1635": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66B"
    },
    "1638": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1639": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2219"
    },
    "1642": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9523,
        9533
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1643": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1644": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1645": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1646": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1649": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "EXP",
      "path": "16"
    },
    "1650": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1651": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1652": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "op": "SUB"
    },
    "1661": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "MUL",
      "path": "16"
    },
    "1662": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "NOT",
      "path": "16"
    },
    "1663": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "AND",
      "path": "16"
    },
    "1664": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1665": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "AND",
      "path": "16"
    },
    "1675": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "MUL",
      "path": "16"
    },
    "1676": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "OR",
      "path": "16"
    },
    "1677": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1678": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1679": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "POP",
      "path": "16"
    },
    "1680": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9523,
        9533
      ],
      "op": "POP",
      "path": "16"
    },
    "1681": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9418,
        9544
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1682": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9557,
        9569
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1683": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9573,
        9574
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1685": {
      "branch": 56,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9557,
        9574
      ],
      "op": "EQ",
      "path": "16"
    },
    "1686": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9553,
        9612
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1687": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9553,
        9612
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A2"
    },
    "1690": {
      "branch": 56,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9553,
        9612
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1691": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9590,
        9601
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 6,
      "value": "0x6A2"
    },
    "1694": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9590,
        9599
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1785"
    },
    "1697": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9590,
        9601
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1698": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9590,
        9601
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1699": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9340,
        9618
      ],
      "op": "POP",
      "path": "16"
    },
    "1700": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "POP",
      "path": "16"
    },
    "1701": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9271,
        9618
      ],
      "op": "POP",
      "path": "16"
    },
    "1702": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        9271,
        9618
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1703": {
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1704": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1706": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1708": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1709": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1710": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1711": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1713": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1714": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1715": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1716": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1718": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1719": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1720": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1721": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1722": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1723": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1724": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "16"
    },
    "1725": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1726": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "16"
    },
    "1727": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1728": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1729": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1730": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1731": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1732": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1733": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1734": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "16"
    },
    "1735": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1736": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1737": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "16"
    },
    "1738": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1739": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1740": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1741": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1742": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1743": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1744": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1745": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1746": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1747": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1748": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1749": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "LT",
      "path": "16"
    },
    "1750": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DE"
    },
    "1753": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1754": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1756": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1757": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1758": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1759": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1761": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1762": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1763": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1764": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1766": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1767": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1768": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1769": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "16"
    },
    "1770": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "offset": [
        2519,
        2592
      ],
      "op": "AND",
      "path": "16"
    },
    "1780": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1783": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "jump": "o",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1787": {
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1788": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1790": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1791": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1792": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1793": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1794": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "LT",
      "path": "16"
    },
    "1795": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x70B"
    },
    "1798": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1799": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1801": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1802": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1803": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1804": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1806": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1807": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1808": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1809": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1811": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1812": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1813": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1814": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "ADD",
      "path": "16"
    },
    "1815": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "offset": [
        2481,
        2512
      ],
      "op": "AND",
      "path": "16"
    },
    "1825": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1828": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1829": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1832": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1842": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 7
    },
    "1843": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1844": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x758"
    },
    "1847": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1850": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1859": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1860": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1862": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "1866": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2240"
    },
    "1870": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1871": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1872": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1874": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1875": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1876": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1878": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1881": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3540
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 8,
      "value": "0x11"
    },
    "1883": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1884": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1885": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1887": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1888": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "ADD",
      "path": "16"
    },
    "1889": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1890": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1893": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1894": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1895": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1896": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1897": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "1930": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "ADD",
      "path": "16"
    },
    "1931": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1932": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "op": "SUB"
    },
    "1941": {
      "op": "NOT"
    },
    "1942": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "AND",
      "path": "16"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "op": "SUB"
    },
    "1951": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1952": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1953": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1954": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "AND",
      "path": "16"
    },
    "1955": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1956": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1957": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1958": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "OR",
      "path": "16"
    },
    "1959": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1960": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1961": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "o",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1962": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1963": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7390,
        7394
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1965": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7436
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1966": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7461,
        7503
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E"
    },
    "1987": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1988": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "1989": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7518,
        7529
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1991": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7543
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "op": "SUB"
    },
    "2000": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7559
      ],
      "op": "AND",
      "path": "16"
    },
    "2001": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7559
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFEAF968C"
    },
    "2006": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2008": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2009": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2010": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2015": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "AND",
      "path": "16"
    },
    "2016": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "2018": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SHL",
      "path": "16"
    },
    "2019": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2020": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2021": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2023": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "16"
    },
    "2024": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "2026": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2028": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2029": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2030": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2031": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SUB",
      "path": "16"
    },
    "2032": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2033": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2034": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "GAS",
      "path": "16"
    },
    "2035": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2036": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2037": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2038": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2039": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x804"
    },
    "2042": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2043": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2044": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2046": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2047": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2048": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2049": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2051": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2052": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2053": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "2054": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "2055": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "2056": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "2057": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2059": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2060": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2061": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2063": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "NOT",
      "path": "16"
    },
    "2064": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2066": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2067": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "16"
    },
    "2068": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "AND",
      "path": "16"
    },
    "2069": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2070": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "16"
    },
    "2071": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2072": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2074": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2075": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "2076": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2077": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "16"
    },
    "2078": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2079": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x828"
    },
    "2082": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2083": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2084": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228F"
    },
    "2087": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2088": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7514,
        7561
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "2091": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "fn": "DailyRocket.getTime",
      "jump": "o",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2099": {
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2100": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "2102": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2104": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2105": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2106": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2107": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2109": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2110": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2111": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2112": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2114": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2115": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2116": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2117": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2118": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2119": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2120": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2121": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2122": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2123": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2124": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2125": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2126": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2127": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2128": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2129": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2130": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2131": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2132": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2133": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2134": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2135": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2136": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2137": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2138": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2139": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2140": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2141": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2142": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2143": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2144": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2145": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "LT",
      "path": "16"
    },
    "2146": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DE"
    },
    "2149": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2150": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2152": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2153": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2154": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2155": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8835,
        8852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2157": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8854,
        8878
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2159": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8936,
        8945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x876"
    },
    "2162": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8936,
        8943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AA"
    },
    "2165": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8936,
        8945
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2166": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8936,
        8945
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2167": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8907,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2169": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8907,
        8915
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "SUB"
    },
    "2178": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8907,
        8915
      ],
      "op": "AND",
      "path": "16"
    },
    "2179": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2181": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2182": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2183": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2184": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2186": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2188": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2189": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2191": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2192": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2193": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8916
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2194": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89E"
    },
    "2197": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2198": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8919,
        8932
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x15180"
    },
    "2202": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "2205": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8894,
        8932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2206": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2207": {
      "branch": 57,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8894,
        8945
      ],
      "op": "EQ",
      "path": "16"
    },
    "2208": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8890,
        9047
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2209": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8890,
        9047
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CF"
    },
    "2212": {
      "branch": 57,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8890,
        9047
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2213": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 9,
      "value": "0x40"
    },
    "2215": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2216": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2217": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9032,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2219": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2221": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2222": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "ADD",
      "path": "16"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8979
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 10,
      "value": "0x1"
    },
    "2226": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8979
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8979
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2229": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8979
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2232": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2234": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2235": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2237": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2238": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2239": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "SUB",
      "path": "16"
    },
    "2240": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "SUB",
      "path": "16"
    },
    "2241": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2242": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2243": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2244": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2246": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9007,
        9035
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2247": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2248": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "POP",
      "path": "16"
    },
    "2249": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2250": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "POP",
      "path": "16"
    },
    "2251": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x973"
    },
    "2254": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8993,
        9036
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2255": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8890,
        9047
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2256": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2258": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9093
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2259": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9084
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2261": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9084
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2262": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2264": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2265": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9096
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8ED"
    },
    "2268": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9096
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2269": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9095,
        9096
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2271": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9095,
        9096
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "op": "SUB"
    },
    "2280": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9093
      ],
      "op": "AND",
      "path": "16"
    },
    "2281": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9096
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22F7"
    },
    "2284": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9085,
        9096
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2285": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9085,
        9096
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "AND",
      "path": "16"
    },
    "2295": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2296": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2297": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2299": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "ADD",
      "path": "16"
    },
    "2300": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2301": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2302": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2303": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2305": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "ADD",
      "path": "16"
    },
    "2306": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2308": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2309": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9097
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2310": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9100,
        9113
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "2313": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9113
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x912"
    },
    "2316": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9113
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2317": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9113
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2318": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9113
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "2321": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9072,
        9113
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2322": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9072,
        9113
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2323": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9060,
        9069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91A"
    },
    "2326": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9060,
        9067
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AA"
    },
    "2329": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        9060,
        9069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2330": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9060,
        9069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2331": {
      "branch": 58,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9060,
        9113
      ],
      "op": "GT",
      "path": "16"
    },
    "2332": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9056,
        9213
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2333": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9056,
        9213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x939"
    },
    "2336": {
      "branch": 58,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9056,
        9213
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2337": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9144,
        9148
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 11,
      "value": "0x1"
    },
    "2339": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9129,
        9148
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2340": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9129,
        9148
      ],
      "op": "POP",
      "path": "16"
    },
    "2341": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9170,
        9174
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 12,
      "value": "0x1"
    },
    "2343": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9198,
        9199
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2344": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2346": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2347": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2349": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "ADD",
      "path": "16"
    },
    "2350": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B7"
    },
    "2353": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9176,
        9201
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2354": {
      "op": "DUP2"
    },
    "2355": {
      "op": "MSTORE"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "SWAP1"
    },
    "2360": {
      "op": "JUMP"
    },
    "2361": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9056,
        9213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2362": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9236,
        9245
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 13
    },
    "2363": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9236,
        9245
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2364": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2365": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2366": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2368": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "ADD",
      "path": "16"
    },
    "2369": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2371": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2372": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2373": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DIV",
      "path": "16"
    },
    "2374": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "MUL",
      "path": "16"
    },
    "2375": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2377": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "ADD",
      "path": "16"
    },
    "2378": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2380": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2381": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2382": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2383": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "ADD",
      "path": "16"
    },
    "2384": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2386": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2387": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2388": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2389": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2390": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2391": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2392": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2393": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2394": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2395": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2397": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "ADD",
      "path": "16"
    },
    "2398": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2399": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2400": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2401": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2402": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2403": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "2404": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2406": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2407": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "ADD",
      "path": "16"
    },
    "2408": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2409": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2410": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2411": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2414": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        9222,
        9245
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2420": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2421": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "POP",
      "path": "16"
    },
    "2422": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2423": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2424": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8756,
        9261
      ],
      "op": "POP",
      "path": "16"
    },
    "2425": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "o",
      "offset": [
        8756,
        9261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2427": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2429": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "SUB"
    },
    "2438": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2439": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2440": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2441": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A4"
    },
    "2444": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2445": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2447": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2456": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2457": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2459": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2460": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "2463": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2240"
    },
    "2467": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2468": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x9AE"
    },
    "2472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196D"
    },
    "2477": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2479": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2480": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2481": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2483": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "SUB"
    },
    "2492": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2493": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2494": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2495": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "2498": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2499": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2501": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2510": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2511": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2513": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2514": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "2517": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2518": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2240"
    },
    "2521": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2522": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2523": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3683
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x5"
    },
    "2525": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2526": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2527": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2529": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2530": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "16"
    },
    "2531": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2532": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2535": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2536": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2537": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2538": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2539": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2540": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2541": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA1D"
    },
    "2544": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2545": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2578": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "16"
    },
    "2579": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2580": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2582": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2583": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "16"
    },
    "2584": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2585": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CC0"
    },
    "2588": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3666,
        3696
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2589": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2590": {
      "op": "POP"
    },
    "2591": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3727
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x6"
    },
    "2593": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2594": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2595": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2597": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2598": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2599": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "ADD",
      "path": "16"
    },
    "2600": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2601": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2604": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2605": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2606": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2607": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2608": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2641": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "ADD",
      "path": "16"
    },
    "2642": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2643": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "op": "NOT"
    },
    "2653": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "AND",
      "path": "16"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2660": {
      "op": "SHL"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2663": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "AND",
      "path": "16"
    },
    "2664": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "OR",
      "path": "16"
    },
    "2665": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2666": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2667": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x40"
    },
    "2669": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2670": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3766
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "2672": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3766
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2673": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA7B"
    },
    "2676": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2677": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3767,
        3773
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2678": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3767,
        3773
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2679": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "2682": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3755,
        3774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2683": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2684": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2685": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2686": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2687": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2689": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2690": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2691": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2692": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2693": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SUB",
      "path": "16"
    },
    "2694": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2696": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "ADD",
      "path": "16"
    },
    "2697": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2698": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2699": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2700": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2701": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2702": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2703": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2706": {
      "op": "NOT"
    },
    "2707": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2708": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2709": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "AND",
      "path": "16"
    },
    "2710": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2711": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2712": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2713": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "OR",
      "path": "16"
    },
    "2714": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2715": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "op": "POP"
    },
    "2718": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2719": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2726": {
      "op": "SHL"
    },
    "2727": {
      "op": "SUB"
    },
    "2728": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 18
    },
    "2729": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "AND",
      "path": "16"
    },
    "2730": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8613,
        8617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2732": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2733": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2734": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2735": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2737": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2739": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2740": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2742": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2743": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2744": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8709
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2745": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2746": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2747": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAC5"
    },
    "2750": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2751": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8710,
        8716
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2752": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8710,
        8716
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2753": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "2756": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8685,
        8717
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2757": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2758": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2759": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2760": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2761": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2763": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "ADD",
      "path": "16"
    },
    "2764": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2766": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2767": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2768": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2769": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SUB",
      "path": "16"
    },
    "2770": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2771": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2772": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8685,
        8717
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2773": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8658
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2775": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2777": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8659,
        8663
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "AND",
      "path": "16"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "op": "SUB"
    },
    "2795": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "AND",
      "path": "16"
    },
    "2796": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2797": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2798": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2800": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "ADD",
      "path": "16"
    },
    "2801": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2802": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2803": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2804": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2806": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "ADD",
      "path": "16"
    },
    "2807": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2809": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8664
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2810": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8665,
        8671
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2811": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2813": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2814": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB07"
    },
    "2817": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2818": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2819": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "2822": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        8636,
        8672
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2823": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2824": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2825": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2826": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2827": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2829": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2830": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2831": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2833": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2834": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2835": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2836": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SUB",
      "path": "16"
    },
    "2837": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2838": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "ADD",
      "path": "16"
    },
    "2839": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2840": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8672
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2847": {
      "op": "SHL"
    },
    "2848": {
      "op": "SUB"
    },
    "2849": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2850": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "AND",
      "path": "16"
    },
    "2851": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2853": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2854": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2855": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2856": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2857": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2858": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2859": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2860": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8681
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2861": {
      "branch": 59,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8636,
        8717
      ],
      "op": "EQ",
      "path": "16"
    },
    "2862": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB36"
    },
    "2865": {
      "branch": 59,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2866": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2868": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2869": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2870": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8628,
        8718
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8735,
        8739
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x1"
    },
    "2874": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2875": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2876": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "POP",
      "path": "16"
    },
    "2877": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "POP",
      "path": "16"
    },
    "2878": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        8491,
        8746
      ],
      "op": "POP",
      "path": "16"
    },
    "2879": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        8491,
        8746
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2880": {
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2881": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "2883": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2885": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2886": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2887": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2888": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2890": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2891": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2892": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2893": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2895": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2896": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2897": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2898": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2899": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2900": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2901": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "16"
    },
    "2902": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2903": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "16"
    },
    "2904": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2905": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2906": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2907": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2908": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2909": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2910": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2911": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "16"
    },
    "2912": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2913": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2914": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "16"
    },
    "2915": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2916": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2917": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2918": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2919": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2920": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2921": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2922": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2923": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2924": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2925": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2926": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "LT",
      "path": "16"
    },
    "2927": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB77"
    },
    "2930": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2931": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2933": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2934": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2935": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2936": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2937": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2939": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2940": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2942": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2944": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2945": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "16"
    },
    "2946": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2948": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2949": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "16"
    },
    "2950": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2951": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "16"
    },
    "2952": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "16"
    },
    "2953": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "16"
    },
    "2954": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2955": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2956": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2957": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3926,
        3931
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2959": {
      "offset": [
        7914,
        7920
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2961": {
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2962": {
      "offset": [
        7929,
        7946
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "2964": {
      "offset": [
        7929,
        7953
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2965": {
      "offset": [
        7925,
        7953
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2966": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7925,
        7953
      ],
      "op": "LT",
      "path": "16"
    },
    "2967": {
      "offset": [
        7910,
        8021
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2968": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE9"
    },
    "2971": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2972": {
      "offset": [
        8003,
        8009
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "offset": [
        7982,
        8009
      ],
      "op": "AND",
      "path": "16"
    },
    "2982": {
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2984": {
      "offset": [
        7997,
        7998
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2985": {
      "offset": [
        7982,
        7999
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2986": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2987": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "LT",
      "path": "16"
    },
    "2989": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "2992": {
      "offset": [
        7982,
        7999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2993": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "2996": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "2999": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        7982,
        7999
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3000": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3001": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3003": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3004": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3005": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3008": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3009": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3010": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3011": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "ADD",
      "path": "16"
    },
    "3012": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "offset": [
        7982,
        7999
      ],
      "op": "AND",
      "path": "16"
    },
    "3022": {
      "offset": [
        7982,
        8009
      ],
      "op": "EQ",
      "path": "16"
    },
    "3023": {
      "offset": [
        7974,
        8010
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBD7"
    },
    "3026": {
      "offset": [
        7974,
        8010
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3027": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3029": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3030": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3031": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3032": {
      "offset": [
        7955,
        7958
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE1"
    },
    "3036": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3037": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2335"
    },
    "3040": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        7955,
        7958
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3041": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3042": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3043": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "POP",
      "path": "16"
    },
    "3044": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "POP",
      "path": "16"
    },
    "3045": {
      "offset": [
        7910,
        8021
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB91"
    },
    "3048": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3049": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3050": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "POP",
      "path": "16"
    },
    "3051": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3969
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 20,
      "value": "0x7"
    },
    "3053": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3970,
        3976
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3056": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3057": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBFA"
    },
    "3060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3062": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "3065": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3958,
        3977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3066": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3067": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3068": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3069": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3070": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3075": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SUB",
      "path": "16"
    },
    "3077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "ADD",
      "path": "16"
    },
    "3080": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3081": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3082": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3083": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3085": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "AND",
      "path": "16"
    },
    "3086": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3087": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3088": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3090": {
      "branch": 60,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "EQ",
      "path": "16"
    },
    "3091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC1B"
    },
    "3094": {
      "branch": 60,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3095": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3097": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3098": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3099": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3100": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3102": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3103": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "op": "SUB"
    },
    "3113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3114": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3115": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "AND",
      "path": "16"
    },
    "3116": {
      "branch": 61,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4012
      ],
      "op": "GT",
      "path": "16"
    },
    "3117": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3118": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC87"
    },
    "3121": {
      "branch": 61,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3122": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x4"
    },
    "3124": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3125": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4061
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3127": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4061
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3128": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3130": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3131": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4F"
    },
    "3134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4072,
        4073
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3137": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4072,
        4073
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "AND",
      "path": "16"
    },
    "3147": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22F7"
    },
    "3150": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4062,
        4073
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "AND",
      "path": "16"
    },
    "3161": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3162": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "ADD",
      "path": "16"
    },
    "3166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3167": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "ADD",
      "path": "16"
    },
    "3172": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3174": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3175": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3176": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4077,
        4090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "3179": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC74"
    },
    "3182": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3183": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3184": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "3187": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4049,
        4090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3189": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC7C"
    },
    "3192": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AA"
    },
    "3195": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4036,
        4045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3196": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4090
      ],
      "op": "GT",
      "path": "16"
    },
    "3198": {
      "branch": 62,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4090
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3199": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC87"
    },
    "3202": {
      "branch": 62,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3203": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3205": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3206": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3207": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3208": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3210": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3211": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4157,
        4177
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0x8AC7230489E80000"
    },
    "3220": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4157,
        4177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3227": {
      "op": "SHL"
    },
    "3228": {
      "op": "SUB"
    },
    "3229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3230": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3231": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "AND",
      "path": "16"
    },
    "3232": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3233": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "AND",
      "path": "16"
    },
    "3234": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "EQ",
      "path": "16"
    },
    "3235": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEE2"
    },
    "3238": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3239": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0xA"
    },
    "3241": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3242": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3244": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3245": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3252": {
      "op": "SHL"
    },
    "3253": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3254": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3255": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4288,
        4298
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3256": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3258": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "16"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4308,
        4312
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4323,
        4329
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3268": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4323,
        4329
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "AND",
      "path": "16"
    },
    "3278": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4287
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "3284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4287
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3290": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3292": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3293": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3294": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3295": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SUB",
      "path": "16"
    },
    "3296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3297": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3298": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "GAS",
      "path": "16"
    },
    "3299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3303": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF4"
    },
    "3306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3310": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3311": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3312": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3313": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3316": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "16"
    },
    "3318": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "16"
    },
    "3319": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "16"
    },
    "3320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "16"
    },
    "3321": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3324": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3327": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "NOT",
      "path": "16"
    },
    "3328": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3330": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3331": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "16"
    },
    "3332": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "AND",
      "path": "16"
    },
    "3333": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3334": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "16"
    },
    "3335": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3339": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "16"
    },
    "3340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3341": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "16"
    },
    "3342": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3343": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD18"
    },
    "3346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3347": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2350"
    },
    "3351": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3352": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3353": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4330
      ],
      "op": "LT",
      "path": "16"
    },
    "3354": {
      "branch": 64,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4330
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3355": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD23"
    },
    "3358": {
      "branch": 64,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3359": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3361": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3362": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3363": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3364": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4501
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 23,
      "value": "0xD2F"
    },
    "3367": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4460,
        4465
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4467,
        4477
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4487,
        4491
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3370": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4494,
        4500
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3371": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19BD"
    },
    "3374": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4428,
        4501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3375": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3376": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4660
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 24,
      "value": "0xD5A"
    },
    "3379": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4625,
        4630
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3380": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4640,
        4650
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3413": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4653,
        4659
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3414": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4624
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC7"
    },
    "3417": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4598,
        4660
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3418": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3419": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3421": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3422": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3423": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3426": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3427": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3428": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3429": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "op": "SUB"
    },
    "3438": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3439": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3440": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "AND",
      "path": "16"
    },
    "3441": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3442": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3443": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3445": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3446": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3447": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "AND",
      "path": "16"
    },
    "3448": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3450": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3451": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3452": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3453": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3454": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3455": {
      "offset": [
        1370,
        1374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB8"
    },
    "3458": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3459": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3460": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3461": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3462": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3463": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3464": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4981,
        4985
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3465": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3467": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3468": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3469": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3470": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3472": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5018,
        5033
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "3473": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "3475": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3476": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3477": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3478": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3479": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3480": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "3482": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3483": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3484": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3485": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3486": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3487": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4697,
        4717
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xD02AB486CEDC0000"
    },
    "3496": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC0"
    },
    "3498": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3499": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3500": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3501": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3505": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3507": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP11",
      "path": "16"
    },
    "3508": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3509": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3510": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3511": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3512": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP11",
      "path": "16"
    },
    "3513": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3514": {
      "op": "PUSH4",
      "value": "0x1B67C433"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3521": {
      "op": "SHL"
    },
    "3522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3523": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3524": {
      "op": "DUP11"
    },
    "3525": {
      "op": "MLOAD"
    },
    "3526": {
      "op": "DUP11"
    },
    "3527": {
      "op": "AND"
    },
    "3528": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3531": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "16"
    },
    "3532": {
      "op": "MSTORE"
    },
    "3533": {
      "op": "SWAP8"
    },
    "3534": {
      "op": "MLOAD"
    },
    "3535": {
      "op": "DUP10"
    },
    "3536": {
      "op": "AND"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3539": {
      "op": "DUP10"
    },
    "3540": {
      "op": "ADD"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "SWAP6"
    },
    "3543": {
      "op": "MLOAD"
    },
    "3544": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "3548": {
      "op": "AND"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3551": {
      "op": "DUP9"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "SWAP4"
    },
    "3555": {
      "op": "MLOAD"
    },
    "3556": {
      "op": "DUP8"
    },
    "3557": {
      "op": "AND"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3560": {
      "op": "DUP8"
    },
    "3561": {
      "op": "ADD"
    },
    "3562": {
      "op": "MSTORE"
    },
    "3563": {
      "op": "SWAP2"
    },
    "3564": {
      "op": "MLOAD"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3567": {
      "op": "DUP7"
    },
    "3568": {
      "op": "ADD"
    },
    "3569": {
      "op": "MSTORE"
    },
    "3570": {
      "op": "MLOAD"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3573": {
      "op": "DUP6"
    },
    "3574": {
      "op": "ADD"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "op": "SWAP1"
    },
    "3577": {
      "op": "MLOAD"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3580": {
      "op": "DUP5"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "MSTORE"
    },
    "3583": {
      "op": "SWAP5"
    },
    "3584": {
      "op": "MLOAD"
    },
    "3585": {
      "op": "DUP4"
    },
    "3586": {
      "op": "AND"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3589": {
      "op": "DUP4"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "op": "SWAP2"
    },
    "3593": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5334
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3626": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "AND",
      "path": "16"
    },
    "3627": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3628": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDB3E2198"
    },
    "3633": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3640": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3642": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3643": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3644": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3645": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SUB",
      "path": "16"
    },
    "3646": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3647": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3649": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3650": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "GAS",
      "path": "16"
    },
    "3651": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "CALL",
      "path": "16"
    },
    "3652": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3653": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3654": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3655": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE54"
    },
    "3658": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3659": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3660": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3662": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3663": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3664": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3665": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3667": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3668": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3669": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3670": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3671": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3672": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3673": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3675": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3676": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3677": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3679": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "NOT",
      "path": "16"
    },
    "3680": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3682": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3683": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "16"
    },
    "3684": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "AND",
      "path": "16"
    },
    "3685": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3686": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "16"
    },
    "3687": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3688": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3690": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3691": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3692": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3693": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "16"
    },
    "3694": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3695": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE78"
    },
    "3698": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3699": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3700": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2350"
    },
    "3703": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3704": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3705": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5308,
        5360
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3706": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5308,
        5360
      ],
      "op": "POP",
      "path": "16"
    },
    "3707": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5643,
        5658
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3708": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5632,
        5640
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3709": {
      "branch": 65,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5632,
        5658
      ],
      "op": "LT",
      "path": "16"
    },
    "3710": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3711": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEDA"
    },
    "3714": {
      "branch": 65,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3715": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0xA"
    },
    "3717": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3718": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEBA"
    },
    "3721": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "AND",
      "path": "16"
    },
    "3731": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5718,
        5728
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3764": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3766": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC7"
    },
    "3769": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5678,
        5733
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3770": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3771": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 26,
      "value": "0xA"
    },
    "3773": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3774": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEDA"
    },
    "3777": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "op": "SUB"
    },
    "3786": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "AND",
      "path": "16"
    },
    "3787": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5784,
        5794
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3788": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xED5"
    },
    "3791": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5814,
        5822
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3792": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5811
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3793": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2369"
    },
    "3796": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5796,
        5822
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3797": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3798": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5778
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BC7"
    },
    "3801": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5751,
        5823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3802": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3803": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "16"
    },
    "3804": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "16"
    },
    "3805": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "16"
    },
    "3806": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFDC"
    },
    "3809": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3810": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3811": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 27,
      "value": "0xA"
    },
    "3813": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3814": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3816": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3817": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3824": {
      "op": "SHL"
    },
    "3825": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3826": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3827": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5899,
        5909
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3828": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3830": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3831": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "16"
    },
    "3832": {
      "op": "MSTORE"
    },
    "3833": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5919,
        5923
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3836": {
      "op": "DUP3"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5934,
        5940
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3840": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5934,
        5940
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3847": {
      "op": "SHL"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "AND",
      "path": "16"
    },
    "3850": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3851": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5898
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "3856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3862": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3864": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3865": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3866": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3867": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SUB",
      "path": "16"
    },
    "3868": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3869": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3870": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "GAS",
      "path": "16"
    },
    "3871": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3872": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3873": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3874": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3875": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF30"
    },
    "3878": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3879": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3880": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3882": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3883": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3884": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3885": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3887": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3888": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "16"
    },
    "3890": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "16"
    },
    "3891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "16"
    },
    "3892": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "16"
    },
    "3893": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3895": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3897": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "NOT",
      "path": "16"
    },
    "3900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3903": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "16"
    },
    "3904": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "AND",
      "path": "16"
    },
    "3905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "16"
    },
    "3907": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3911": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "16"
    },
    "3912": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3913": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "16"
    },
    "3914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3915": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF54"
    },
    "3918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3919": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2350"
    },
    "3923": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3924": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5941
      ],
      "op": "LT",
      "path": "16"
    },
    "3926": {
      "branch": 66,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5941
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3927": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF5F"
    },
    "3930": {
      "branch": 66,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3931": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3933": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3934": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3935": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0xA"
    },
    "3938": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3939": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3941": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3942": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3951": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3952": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5977,
        5987
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3953": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3955": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3956": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "16"
    },
    "3957": {
      "op": "MSTORE"
    },
    "3958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5997,
        6001
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3961": {
      "op": "DUP3"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "MSTORE"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3966": {
      "op": "DUP2"
    },
    "3967": {
      "op": "ADD"
    },
    "3968": {
      "op": "DUP4"
    },
    "3969": {
      "op": "SWAP1"
    },
    "3970": {
      "op": "MSTORE"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "op": "SUB"
    },
    "3979": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3980": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3981": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "AND",
      "path": "16"
    },
    "3982": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3983": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5976
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "3988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5976
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3996": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3997": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3998": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3999": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SUB",
      "path": "16"
    },
    "4000": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4001": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4003": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4004": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "GAS",
      "path": "16"
    },
    "4005": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "CALL",
      "path": "16"
    },
    "4006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4007": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4008": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4009": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFB6"
    },
    "4012": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4013": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4014": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4016": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4017": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4018": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4019": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4021": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4022": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4023": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4024": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4025": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4026": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4027": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4029": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4030": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4031": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "NOT",
      "path": "16"
    },
    "4034": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4036": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4037": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "16"
    },
    "4038": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "AND",
      "path": "16"
    },
    "4039": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4040": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "16"
    },
    "4041": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4042": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4044": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4045": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4046": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4047": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "16"
    },
    "4048": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4049": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFDA"
    },
    "4052": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4053": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21F7"
    },
    "4057": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4058": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4059": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "4060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x4"
    },
    "4063": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "op": "SUB"
    },
    "4072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "AND",
      "path": "16"
    },
    "4073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4075": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4078": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4080": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4082": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4083": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4085": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4086": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4087": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4088": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4089": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4090": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6087,
        6093
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4092": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6087,
        6093
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4093": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4094": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1008"
    },
    "4097": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4098": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6076,
        6082
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4099": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6076,
        6082
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4100": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "4103": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6046,
        6083
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4104": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4105": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4106": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4107": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4108": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4110": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "ADD",
      "path": "16"
    },
    "4111": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4114": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4115": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4116": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SUB",
      "path": "16"
    },
    "4117": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4118": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4119": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4121": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4122": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4123": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4124": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1025"
    },
    "4127": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4128": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4129": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "4132": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6046,
        6093
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4133": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4136": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x4"
    },
    "4141": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "SUB"
    },
    "4150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "AND",
      "path": "16"
    },
    "4151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4153": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4154": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4155": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4156": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4158": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4160": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4161": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4164": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4167": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6199,
        6210
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4170": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6199,
        6210
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4172": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1056"
    },
    "4175": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4176": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6177,
        6183
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4177": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6177,
        6183
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4178": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "4181": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6144,
        6184
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4182": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4183": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4184": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4185": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4186": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4189": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4190": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4191": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4192": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4193": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SUB",
      "path": "16"
    },
    "4194": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4196": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4198": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "ADD",
      "path": "16"
    },
    "4199": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4200": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4201": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6185,
        6195
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4202": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4204": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4205": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4206": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4207": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4208": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4209": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4210": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4211": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4212": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4213": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4215": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4216": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4217": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x4"
    },
    "4219": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4226": {
      "op": "SHL"
    },
    "4227": {
      "op": "SUB"
    },
    "4228": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "AND",
      "path": "16"
    },
    "4229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4230": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4231": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6280
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "4233": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4234": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4235": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4236": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4237": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4238": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4239": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1099"
    },
    "4242": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4243": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6291,
        6297
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4244": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6291,
        6297
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4245": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "4248": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6262,
        6298
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4249": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4250": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4252": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4253": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4255": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4256": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4257": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4258": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4260": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SUB",
      "path": "16"
    },
    "4261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4263": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4264": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4265": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "ADD",
      "path": "16"
    },
    "4266": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4267": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4268": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4269": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4270": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4272": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4273": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "ADD",
      "path": "16"
    },
    "4274": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4275": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4280": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4281": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4282": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4283": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "ADD",
      "path": "16"
    },
    "4285": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP9",
      "path": "16"
    },
    "4286": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4287": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 32,
      "value": "0x4"
    },
    "4290": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "op": "SUB"
    },
    "4299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "AND",
      "path": "16"
    },
    "4300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6393
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "4304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4309": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10DF"
    },
    "4312": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4313": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6404,
        6410
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4314": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6404,
        6410
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2184"
    },
    "4318": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6375,
        6411
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4319": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4321": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4322": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4326": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4328": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4329": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4330": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4331": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SUB",
      "path": "16"
    },
    "4332": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4333": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "ADD",
      "path": "16"
    },
    "4334": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4335": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4337": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4341": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "ADD",
      "path": "16"
    },
    "4342": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4343": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4347": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4349": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4350": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4351": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4352": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4353": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "ADD",
      "path": "16"
    },
    "4354": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4355": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4356": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6417,
        6427
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4363": {
      "op": "SHL"
    },
    "4364": {
      "op": "SUB"
    },
    "4365": {
      "op": "NOT"
    },
    "4366": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4367": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "AND",
      "path": "16"
    },
    "4369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4370": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "OR",
      "path": "16"
    },
    "4371": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4372": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4373": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4374": {
      "op": "DUP7"
    },
    "4375": {
      "op": "DUP3"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6417,
        6427
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4378": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 33,
      "value": "0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F"
    },
    "4411": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4415": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4416": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4417": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4418": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SUB",
      "path": "16"
    },
    "4419": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4420": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "LOG2",
      "path": "16"
    },
    "4421": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3937,
        6485
      ],
      "op": "POP",
      "path": "16"
    },
    "4422": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "16"
    },
    "4423": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "16"
    },
    "4424": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "16"
    },
    "4425": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "16"
    },
    "4426": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "o",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4427": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4428": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7661,
        7664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4430": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7706
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4431": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7752
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "4433": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7753,
        7762
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4434": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4435": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4436": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4437": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "LT",
      "path": "16"
    },
    "4438": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1161"
    },
    "4441": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4442": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1161"
    },
    "4445": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "4448": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4449": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4450": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4451": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4453": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4454": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4456": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4458": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4459": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "ADD",
      "path": "16"
    },
    "4460": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4462": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4463": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4464": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4465": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "4468": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "EXP",
      "path": "16"
    },
    "4469": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4470": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DIV",
      "path": "16"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4477": {
      "op": "SHL"
    },
    "4478": {
      "op": "SUB"
    },
    "4479": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "AND",
      "path": "16"
    },
    "4480": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7764
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4481": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7764
      ],
      "op": "POP",
      "path": "16"
    },
    "4482": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7776,
        7786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4484": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7802
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7818
      ],
      "op": "AND",
      "path": "16"
    },
    "4494": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7818
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFEAF968C"
    },
    "4499": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4501": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4502": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4503": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4508": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "AND",
      "path": "16"
    },
    "4509": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "4511": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SHL",
      "path": "16"
    },
    "4512": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4513": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4514": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4516": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "16"
    },
    "4517": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "4519": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4521": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4522": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4523": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4524": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SUB",
      "path": "16"
    },
    "4525": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4526": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4527": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "GAS",
      "path": "16"
    },
    "4528": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4529": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4530": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4531": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4532": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11C1"
    },
    "4535": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4536": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4537": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4539": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4540": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4541": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4542": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4544": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4545": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4546": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "16"
    },
    "4547": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "16"
    },
    "4548": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "16"
    },
    "4549": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "16"
    },
    "4550": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4552": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4553": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4554": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4556": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "NOT",
      "path": "16"
    },
    "4557": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4559": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4560": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "16"
    },
    "4561": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "AND",
      "path": "16"
    },
    "4562": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4563": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "16"
    },
    "4564": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4565": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4567": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4568": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "16"
    },
    "4569": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4570": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "16"
    },
    "4571": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4572": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11E5"
    },
    "4575": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4576": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4577": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228F"
    },
    "4580": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4581": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7774,
        7820
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4584": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7774,
        7820
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "4585": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "4586": {
      "op": "POP"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "fn": "DailyRocket.getPrice",
      "jump": "o",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4595": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4597": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "op": "SUB"
    },
    "4606": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4607": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4608": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4609": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121C"
    },
    "4612": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4613": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4615": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4624": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4625": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4627": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4628": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "4631": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4632": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2240"
    },
    "4635": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4636": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4643": {
      "op": "SHL"
    },
    "4644": {
      "op": "SUB"
    },
    "4645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 34
    },
    "4646": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1281"
    },
    "4650": {
      "branch": 70,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4651": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4653": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4660": {
      "op": "SHL"
    },
    "4661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4662": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4669": {
      "op": "MSTORE"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4712": {
      "op": "DUP3"
    },
    "4713": {
      "op": "ADD"
    },
    "4714": {
      "op": "MSTORE"
    },
    "4715": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4724": {
      "op": "SHL"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4727": {
      "op": "DUP3"
    },
    "4728": {
      "op": "ADD"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74F"
    },
    "4736": {
      "op": "JUMP"
    },
    "4737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0x128A"
    },
    "4741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196D"
    },
    "4745": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4748": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4749": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3248,
        3450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4750": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3302,
        3311
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4752": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4753": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3321,
        3342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "4755": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3321,
        3349
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4756": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3317,
        3349
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4757": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3317,
        3349
      ],
      "op": "LT",
      "path": "16"
    },
    "4758": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4759": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x128A"
    },
    "4762": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4763": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3433
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 36,
      "value": "0x12A3"
    },
    "4766": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3431,
        3432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4767": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3430
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114B"
    },
    "4770": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3422,
        3433
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4771": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3433
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4772": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4774": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "op": "SUB"
    },
    "4783": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "AND",
      "path": "16"
    },
    "4784": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4786": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4787": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4788": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4789": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4791": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4793": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4794": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4796": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4797": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4798": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "4800": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4801": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4802": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3416,
        3417
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4803": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3416,
        3417
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4804": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4805": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "LT",
      "path": "16"
    },
    "4806": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12D1"
    },
    "4809": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4810": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12D1"
    },
    "4813": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "4816": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4817": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4818": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4819": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4821": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4822": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4824": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4826": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4827": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "ADD",
      "path": "16"
    },
    "4828": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4830": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4831": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12E8"
    },
    "4834": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4835": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4836": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "4839": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3369,
        3419
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4840": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4841": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4842": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4843": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4844": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4846": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4847": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4848": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4849": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4850": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SUB",
      "path": "16"
    },
    "4851": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4853": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "ADD",
      "path": "16"
    },
    "4854": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4855": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4856": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3433
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4857": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 37
    },
    "4858": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1302"
    },
    "4861": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4862": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2335"
    },
    "4865": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3351,
        3354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4866": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4867": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4868": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "POP",
      "path": "16"
    },
    "4869": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "POP",
      "path": "16"
    },
    "4870": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1290"
    },
    "4873": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6491,
        7344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4875": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4877": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4884": {
      "op": "SHL"
    },
    "4885": {
      "op": "SUB"
    },
    "4886": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "AND",
      "path": "16"
    },
    "4887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6539,
        6550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4890": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6593,
        6610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "4892": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6593,
        6617
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4893": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4895": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4896": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "AND",
      "path": "16"
    },
    "4897": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "LT",
      "path": "16"
    },
    "4898": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4899": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1781"
    },
    "4902": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4909": {
      "op": "SHL"
    },
    "4910": {
      "op": "SUB"
    },
    "4911": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 38
    },
    "4912": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "AND",
      "path": "16"
    },
    "4913": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4915": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4916": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4917": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4918": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "4920": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4922": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4923": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4925": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4926": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4927": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6792
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "4929": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4931": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4933": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4934": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "AND",
      "path": "16"
    },
    "4935": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4936": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4937": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "LT",
      "path": "16"
    },
    "4938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1355"
    },
    "4941": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1355"
    },
    "4945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "4948": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4949": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4950": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4951": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4953": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4954": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4956": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4958": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4959": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "ADD",
      "path": "16"
    },
    "4960": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4962": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4963": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x136C"
    },
    "4966": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4967": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4968": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "4971": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6751,
        6796
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4972": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4973": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4974": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4975": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4976": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4978": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "ADD",
      "path": "16"
    },
    "4979": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4981": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4982": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4983": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4984": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SUB",
      "path": "16"
    },
    "4985": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4986": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4987": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4988": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4989": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4990": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "POP",
      "path": "16"
    },
    "4991": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6681
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "4993": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4995": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6682,
        6685
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5002": {
      "op": "SHL"
    },
    "5003": {
      "op": "SUB"
    },
    "5004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "AND",
      "path": "16"
    },
    "5005": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5006": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5007": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5009": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "ADD",
      "path": "16"
    },
    "5010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5012": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5013": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5015": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "ADD",
      "path": "16"
    },
    "5016": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5018": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5019": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5021": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6705,
        6706
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5022": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5024": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "AND",
      "path": "16"
    },
    "5025": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5026": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5027": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5028": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "LT",
      "path": "16"
    },
    "5029": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B0"
    },
    "5032": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5033": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B0"
    },
    "5036": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5039": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5040": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5041": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5042": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5044": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5045": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5047": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5049": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5050": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "ADD",
      "path": "16"
    },
    "5051": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5053": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5054": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13C7"
    },
    "5057": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5058": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5059": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5062": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6663,
        6708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5063": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5064": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5065": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5066": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5067": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5069": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5070": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5071": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5072": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5073": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SUB",
      "path": "16"
    },
    "5074": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5076": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "ADD",
      "path": "16"
    },
    "5077": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5078": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5079": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6715
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5080": {
      "branch": 67,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6803
      ],
      "op": "EQ",
      "path": "16"
    },
    "5081": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E1"
    },
    "5084": {
      "branch": 67,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5085": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5087": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5088": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5089": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5090": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6836,
        6843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5092": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5099": {
      "op": "SHL"
    },
    "5100": {
      "op": "SUB"
    },
    "5101": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5102": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "AND",
      "path": "16"
    },
    "5103": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5105": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5106": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5107": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5108": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6871
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5110": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5112": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5113": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5115": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5116": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5117": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5119": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5120": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5121": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5123": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5124": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "AND",
      "path": "16"
    },
    "5125": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5126": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5127": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "LT",
      "path": "16"
    },
    "5128": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1413"
    },
    "5131": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5132": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1413"
    },
    "5135": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5138": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5139": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5140": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5141": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5143": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5144": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5146": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5148": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5149": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "ADD",
      "path": "16"
    },
    "5150": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5152": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5153": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x142A"
    },
    "5156": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5157": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5158": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5161": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6853,
        6898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5162": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5163": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5164": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5165": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5166": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5168": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5169": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5170": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5171": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5172": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SUB",
      "path": "16"
    },
    "5173": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5175": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "ADD",
      "path": "16"
    },
    "5176": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5177": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5178": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6905
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5179": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5181": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5182": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "AND",
      "path": "16"
    },
    "5183": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "LT",
      "path": "16"
    },
    "5184": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5185": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x176E"
    },
    "5188": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 39
    },
    "5198": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "AND",
      "path": "16"
    },
    "5199": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5201": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5202": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5203": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5204": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "5206": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5208": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5209": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5211": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5212": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5213": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7031
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5215": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5216": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5217": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5219": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5220": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "AND",
      "path": "16"
    },
    "5221": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5222": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5223": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "LT",
      "path": "16"
    },
    "5224": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1473"
    },
    "5227": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1473"
    },
    "5231": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5234": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5235": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5236": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5237": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5239": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5240": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5242": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5244": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5245": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "ADD",
      "path": "16"
    },
    "5246": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5248": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5249": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148A"
    },
    "5252": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5253": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5254": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5257": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6990,
        7035
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5258": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5259": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5261": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5262": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "ADD",
      "path": "16"
    },
    "5265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5268": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5269": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5270": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SUB",
      "path": "16"
    },
    "5271": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5272": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5273": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5274": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6956
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "5276": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5278": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6957,
        6960
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5285": {
      "op": "SHL"
    },
    "5286": {
      "op": "SUB"
    },
    "5287": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "AND",
      "path": "16"
    },
    "5288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5290": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5292": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "ADD",
      "path": "16"
    },
    "5293": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5294": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5295": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5296": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5298": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "ADD",
      "path": "16"
    },
    "5299": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5301": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5302": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6979
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5304": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6980,
        6981
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5305": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5307": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "AND",
      "path": "16"
    },
    "5308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5310": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5311": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "LT",
      "path": "16"
    },
    "5312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14CB"
    },
    "5315": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5316": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14CB"
    },
    "5319": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5322": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5323": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5324": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5325": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5327": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5328": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5330": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5332": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5333": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "ADD",
      "path": "16"
    },
    "5334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5336": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5337": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14E2"
    },
    "5340": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5341": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5342": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5345": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6938,
        6983
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5346": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5347": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5349": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5350": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5352": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "ADD",
      "path": "16"
    },
    "5353": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5355": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5356": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5358": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SUB",
      "path": "16"
    },
    "5359": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5360": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5361": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6984,
        6985
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5362": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5364": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "AND",
      "path": "16"
    },
    "5365": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5366": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5367": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5368": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "LT",
      "path": "16"
    },
    "5369": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1504"
    },
    "5372": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5373": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1504"
    },
    "5376": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5380": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5381": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5382": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5384": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5385": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5387": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5389": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5390": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "ADD",
      "path": "16"
    },
    "5391": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5392": {
      "branch": 68,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        7035
      ],
      "op": "EQ",
      "path": "16"
    },
    "5393": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1519"
    },
    "5396": {
      "branch": 68,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5397": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5399": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5400": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5401": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "op": "SUB"
    },
    "5410": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 40
    },
    "5411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "AND",
      "path": "16"
    },
    "5412": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5414": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5415": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5416": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5417": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "5419": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5421": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5422": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5424": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5425": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5426": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5428": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5429": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5430": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5432": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "AND",
      "path": "16"
    },
    "5434": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5435": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5436": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "LT",
      "path": "16"
    },
    "5437": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1548"
    },
    "5440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5441": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1548"
    },
    "5444": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5448": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5449": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5450": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5452": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5453": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5457": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5458": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "ADD",
      "path": "16"
    },
    "5459": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5461": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155F"
    },
    "5465": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5466": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5467": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5470": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7054,
        7098
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5472": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5473": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5474": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5477": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "ADD",
      "path": "16"
    },
    "5478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5480": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5481": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5482": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SUB",
      "path": "16"
    },
    "5484": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5485": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5486": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5488": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5490": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7126
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "op": "SUB"
    },
    "5499": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "AND",
      "path": "16"
    },
    "5500": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5501": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5504": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "ADD",
      "path": "16"
    },
    "5505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5508": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5510": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "ADD",
      "path": "16"
    },
    "5511": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5513": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5514": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5516": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7147
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5517": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5519": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "AND",
      "path": "16"
    },
    "5520": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5521": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5522": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5523": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "LT",
      "path": "16"
    },
    "5524": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159F"
    },
    "5527": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5528": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159F"
    },
    "5531": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5534": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5535": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5536": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5537": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5539": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5540": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5542": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5544": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "ADD",
      "path": "16"
    },
    "5546": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5548": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5549": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15B6"
    },
    "5552": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5553": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5554": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5557": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7104,
        7149
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5558": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5559": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5560": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5562": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5564": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "ADD",
      "path": "16"
    },
    "5565": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5567": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5568": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5569": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SUB",
      "path": "16"
    },
    "5571": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5572": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5573": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7150,
        7151
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5574": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5576": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "AND",
      "path": "16"
    },
    "5577": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5578": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5579": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5580": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "LT",
      "path": "16"
    },
    "5581": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D8"
    },
    "5584": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5585": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D8"
    },
    "5588": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5591": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5592": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5593": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5595": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5596": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5598": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5600": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5602": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5604": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5605": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "ADD",
      "path": "16"
    },
    "5606": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5607": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5608": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5609": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5611": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5612": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5613": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "ADD",
      "path": "16"
    },
    "5614": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5615": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5616": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "5617": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5618": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5619": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5620": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5621": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5622": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "ADD",
      "path": "16"
    },
    "5623": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5624": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5631": {
      "op": "SHL"
    },
    "5632": {
      "op": "SUB"
    },
    "5633": {
      "op": "NOT"
    },
    "5634": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "AND",
      "path": "16"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5641": {
      "op": "SHL"
    },
    "5642": {
      "op": "SUB"
    },
    "5643": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5644": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5645": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "AND",
      "path": "16"
    },
    "5646": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5647": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5648": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5649": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "OR",
      "path": "16"
    },
    "5650": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5651": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "op": "SUB"
    },
    "5660": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "DUP7",
      "path": "16",
      "statement": 41
    },
    "5661": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "AND",
      "path": "16"
    },
    "5662": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5663": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5664": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7190
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "5666": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5667": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5668": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5670": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5671": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5672": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7213
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5674": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5675": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5676": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5678": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5679": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "AND",
      "path": "16"
    },
    "5680": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5681": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5682": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "LT",
      "path": "16"
    },
    "5683": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x163E"
    },
    "5686": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5687": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x163E"
    },
    "5690": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5693": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5694": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5695": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5696": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5698": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5699": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5701": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5703": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5704": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "ADD",
      "path": "16"
    },
    "5705": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5707": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5708": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1655"
    },
    "5711": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5712": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5713": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5716": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7171,
        7217
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5717": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5718": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5719": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5720": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5721": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5723": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "ADD",
      "path": "16"
    },
    "5724": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5726": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5727": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5728": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5729": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SUB",
      "path": "16"
    },
    "5730": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5731": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5732": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5734": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5735": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5736": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5737": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1672"
    },
    "5740": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5741": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5742": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "5745": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7171,
        7221
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5746": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5747": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5748": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5749": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 42,
      "value": "0x3"
    },
    "5754": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5761": {
      "op": "SHL"
    },
    "5762": {
      "op": "SUB"
    },
    "5763": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5764": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "AND",
      "path": "16"
    },
    "5765": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5767": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5768": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5769": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5770": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5772": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5774": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5775": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5777": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5778": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5779": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7305
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5781": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5782": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5789": {
      "op": "SHL"
    },
    "5790": {
      "op": "SUB"
    },
    "5791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5792": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "5793": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "AND",
      "path": "16"
    },
    "5794": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5795": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7263
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8EBFA8AE"
    },
    "5800": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7263
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5801": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5802": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7305
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5803": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5805": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5806": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "AND",
      "path": "16"
    },
    "5807": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5808": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5809": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "LT",
      "path": "16"
    },
    "5810": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16BD"
    },
    "5813": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5814": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16BD"
    },
    "5817": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5821": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5822": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5823": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5825": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5826": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5828": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5830": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5831": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "ADD",
      "path": "16"
    },
    "5832": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5834": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5835": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D4"
    },
    "5838": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5839": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5840": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "5843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7264,
        7309
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5844": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5845": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5846": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5847": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5848": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5850": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "ADD",
      "path": "16"
    },
    "5851": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5853": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5854": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5855": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5856": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SUB",
      "path": "16"
    },
    "5857": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5858": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5859": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7310,
        7311
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5860": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5862": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "AND",
      "path": "16"
    },
    "5863": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5864": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5865": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5866": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "LT",
      "path": "16"
    },
    "5867": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F6"
    },
    "5870": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5871": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F6"
    },
    "5874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "5877": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5878": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5879": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5881": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5882": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5886": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5888": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "ADD",
      "path": "16"
    },
    "5890": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5891": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5893": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5894": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "5896": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5897": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5898": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SHL",
      "path": "16"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5905": {
      "op": "SHL"
    },
    "5906": {
      "op": "SUB"
    },
    "5907": {
      "op": "NOT"
    },
    "5908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "AND",
      "path": "16"
    },
    "5909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5910": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5917": {
      "op": "SHL"
    },
    "5918": {
      "op": "SUB"
    },
    "5919": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5920": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5921": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "AND",
      "path": "16"
    },
    "5922": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5924": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5925": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ADD",
      "path": "16"
    },
    "5926": {
      "op": "MSTORE"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5932": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5934": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5935": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5936": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5937": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SUB",
      "path": "16"
    },
    "5938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5939": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5941": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5943": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "5944": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5946": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5947": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1743"
    },
    "5950": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5951": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5953": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5954": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5955": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5956": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "16"
    },
    "5957": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "GAS",
      "path": "16"
    },
    "5958": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "CALL",
      "path": "16"
    },
    "5959": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5960": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5961": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5962": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1757"
    },
    "5965": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5966": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5967": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5969": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5970": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5971": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5972": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5974": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5975": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5976": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "16"
    },
    "5977": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "16"
    },
    "5978": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "16"
    },
    "5979": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "16"
    },
    "5980": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 43
    },
    "5981": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5982": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1766"
    },
    "5985": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5986": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2457"
    },
    "5989": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6907,
        6910
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5990": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5991": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5992": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "POP",
      "path": "16"
    },
    "5993": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "POP",
      "path": "16"
    },
    "5994": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E4"
    },
    "5997": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5998": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 44
    },
    "6001": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1779"
    },
    "6004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6005": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2457"
    },
    "6008": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6619,
        6622
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6009": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "POP",
      "path": "16"
    },
    "6012": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "POP",
      "path": "16"
    },
    "6013": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1319"
    },
    "6016": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6017": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6018": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "POP",
      "path": "16"
    },
    "6019": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6529,
        7344
      ],
      "op": "POP",
      "path": "16"
    },
    "6020": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "o",
      "offset": [
        6491,
        7344
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6021": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9685,
        10225
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6022": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9765
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x4"
    },
    "6024": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9765
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6025": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9756
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "6027": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9756
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6028": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6030": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6031": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17A3"
    },
    "6034": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9768
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6035": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9767,
        9768
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6037": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9767,
        9768
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6044": {
      "op": "SHL"
    },
    "6045": {
      "op": "SUB"
    },
    "6046": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9765
      ],
      "op": "AND",
      "path": "16"
    },
    "6047": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22F7"
    },
    "6050": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9757,
        9768
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6051": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9757,
        9768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6058": {
      "op": "SHL"
    },
    "6059": {
      "op": "SUB"
    },
    "6060": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "AND",
      "path": "16"
    },
    "6061": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6062": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6063": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6065": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "ADD",
      "path": "16"
    },
    "6066": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6067": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6068": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6069": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6071": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "ADD",
      "path": "16"
    },
    "6072": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6074": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6075": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9769
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6076": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9772,
        9785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD20"
    },
    "6079": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17C8"
    },
    "6082": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6083": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6084": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22DF"
    },
    "6087": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9744,
        9785
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6088": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9744,
        9785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6089": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9732,
        9741
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17D0"
    },
    "6092": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9732,
        9739
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AA"
    },
    "6095": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9732,
        9741
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6096": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9732,
        9741
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6097": {
      "branch": 69,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9732,
        9785
      ],
      "op": "GT",
      "path": "16"
    },
    "6098": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17DA"
    },
    "6101": {
      "branch": 69,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6102": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6104": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6105": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6106": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9724,
        9786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6107": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9801,
        9810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6109": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6110": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9820,
        9837
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6112": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9820,
        9844
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9816,
        9844
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6122": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9816,
        9844
      ],
      "op": "AND",
      "path": "16"
    },
    "6123": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9816,
        9844
      ],
      "op": "LT",
      "path": "16"
    },
    "6124": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6125": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x128A"
    },
    "6128": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6129": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9901,
        9909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6131": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9901,
        9909
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6138": {
      "op": "SHL"
    },
    "6139": {
      "op": "SUB"
    },
    "6140": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9901,
        9909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6141": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9901,
        9909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6142": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9901,
        9909
      ],
      "op": "AND",
      "path": "16"
    },
    "6143": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9865,
        9876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6145": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6146": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6147": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6148": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6150": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6152": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6153": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6155": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6156": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9910
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6157": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9928
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "6159": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6160": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6161": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9865,
        9876
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6162": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9865,
        9876
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6163": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9939,
        9942
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6165": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9939,
        9942
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6166": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6167": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6168": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "AND",
      "path": "16"
    },
    "6169": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6170": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6171": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "LT",
      "path": "16"
    },
    "6172": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1827"
    },
    "6175": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6176": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1827"
    },
    "6179": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231F"
    },
    "6182": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9911,
        9931
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6183": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6184": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6185": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6187": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6188": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6190": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6192": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6193": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9911,
        9931
      ],
      "op": "ADD",
      "path": "16"
    },
    "6194": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6196": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6197": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x183E"
    },
    "6200": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6201": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6202": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23BB"
    },
    "6205": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9881,
        9932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6206": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6207": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6208": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6209": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6210": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6212": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "ADD",
      "path": "16"
    },
    "6213": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6215": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6216": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6217": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6218": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SUB",
      "path": "16"
    },
    "6219": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6220": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6221": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9881,
        9932
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6222": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9936,
        9938
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "6224": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9938
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1859"
    },
    "6227": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6228": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9938
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6229": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9938
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21B6"
    },
    "6232": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9880,
        9938
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6233": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9938
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6234": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1863"
    },
    "6237": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9942
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6238": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9942
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6239": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21D5"
    },
    "6242": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9880,
        9942
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6243": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9880,
        9942
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6244": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10012,
        10015
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 46,
      "value": "0xA"
    },
    "6246": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10012,
        10015
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6247": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10033,
        10044
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "6249": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10033,
        10044
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6250": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6252": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6253": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6260": {
      "op": "SHL"
    },
    "6261": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6262": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6269": {
      "op": "SHL"
    },
    "6270": {
      "op": "SUB"
    },
    "6271": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10033,
        10044
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6272": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10033,
        10044
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6273": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10033,
        10044
      ],
      "op": "AND",
      "path": "16"
    },
    "6274": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6276": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6277": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ADD",
      "path": "16"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6281": {
      "op": "DUP2"
    },
    "6282": {
      "op": "ADD"
    },
    "6283": {
      "op": "DUP5"
    },
    "6284": {
      "op": "SWAP1"
    },
    "6285": {
      "op": "MSTORE"
    },
    "6286": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9865,
        9943
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6287": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9865,
        9943
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6288": {
      "op": "POP"
    },
    "6289": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10012,
        10015
      ],
      "op": "AND",
      "path": "16"
    },
    "6290": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10012,
        10015
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6291": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10024
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "6296": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6299": {
      "op": "ADD"
    },
    "6300": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6302": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6304": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6305": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6306": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6307": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "SUB",
      "path": "16"
    },
    "6308": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6309": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6311": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6312": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "GAS",
      "path": "16"
    },
    "6313": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "CALL",
      "path": "16"
    },
    "6314": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6315": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6316": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6317": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18BA"
    },
    "6320": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6321": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6322": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6324": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6325": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6326": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6327": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6329": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6330": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6331": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "POP",
      "path": "16"
    },
    "6332": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "POP",
      "path": "16"
    },
    "6333": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "POP",
      "path": "16"
    },
    "6334": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "POP",
      "path": "16"
    },
    "6335": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6337": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6338": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6339": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6341": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "NOT",
      "path": "16"
    },
    "6342": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6344": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6345": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ADD",
      "path": "16"
    },
    "6346": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "AND",
      "path": "16"
    },
    "6347": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6348": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ADD",
      "path": "16"
    },
    "6349": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6350": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6352": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6353": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "POP",
      "path": "16"
    },
    "6354": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6355": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "ADD",
      "path": "16"
    },
    "6356": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6357": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18DE"
    },
    "6360": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6361": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6362": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21F7"
    },
    "6365": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        10005,
        10054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6366": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10005,
        10054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 47,
      "value": "0x2"
    },
    "6370": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6371": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10105,
        10108
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "6373": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10105,
        10108
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6374": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10164,
        10174
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6376": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10164,
        10174
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6377": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6379": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6380": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6387": {
      "op": "SHL"
    },
    "6388": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6389": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "SUB"
    },
    "6398": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10105,
        10108
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6399": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10105,
        10108
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6400": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10105,
        10108
      ],
      "op": "AND",
      "path": "16"
    },
    "6401": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6403": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6404": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "ADD",
      "path": "16"
    },
    "6405": {
      "op": "MSTORE"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6408": {
      "op": "DUP2"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "DUP6"
    },
    "6411": {
      "op": "SWAP1"
    },
    "6412": {
      "op": "MSTORE"
    },
    "6413": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10164,
        10174
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6414": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10164,
        10174
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6415": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10164,
        10174
      ],
      "op": "AND",
      "path": "16"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6418": {
      "op": "DUP3"
    },
    "6419": {
      "op": "ADD"
    },
    "6420": {
      "op": "MSTORE"
    },
    "6421": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6425": {
      "op": "DUP3"
    },
    "6426": {
      "op": "ADD"
    },
    "6427": {
      "op": "MSTORE"
    },
    "6428": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6429": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "AND",
      "path": "16"
    },
    "6430": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10079
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6431": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10087
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE8EDA9DF"
    },
    "6436": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10087
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6439": {
      "op": "ADD"
    },
    "6440": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6442": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6444": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6445": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6446": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6447": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "SUB",
      "path": "16"
    },
    "6448": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6449": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6451": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6452": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6453": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "6454": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6455": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6456": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6457": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1941"
    },
    "6460": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6461": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6463": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6464": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6465": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6466": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "POP",
      "path": "16"
    },
    "6467": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "GAS",
      "path": "16"
    },
    "6468": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "CALL",
      "path": "16"
    },
    "6469": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6470": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6471": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6472": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1955"
    },
    "6475": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6476": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6477": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6479": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6480": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6481": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6482": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6484": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6485": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6486": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "POP",
      "path": "16"
    },
    "6487": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "POP",
      "path": "16"
    },
    "6488": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "POP",
      "path": "16"
    },
    "6489": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        10068,
        10208
      ],
      "op": "POP",
      "path": "16"
    },
    "6490": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9851,
        10219
      ],
      "op": "POP",
      "path": "16"
    },
    "6491": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 48
    },
    "6492": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6493": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1965"
    },
    "6496": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6497": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2219"
    },
    "6500": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9846,
        9849
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6501": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6502": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6503": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "POP",
      "path": "16"
    },
    "6504": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9846,
        9849
      ],
      "op": "POP",
      "path": "16"
    },
    "6505": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17DD"
    },
    "6508": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9796,
        10219
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6509": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6510": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6512": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6513": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6520": {
      "op": "SHL"
    },
    "6521": {
      "op": "SUB"
    },
    "6522": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 49
    },
    "6523": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6524": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6531": {
      "op": "SHL"
    },
    "6532": {
      "op": "SUB"
    },
    "6533": {
      "op": "NOT"
    },
    "6534": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6535": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6536": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6537": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6538": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6539": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6540": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x40"
    },
    "6542": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6543": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6544": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6545": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6546": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6547": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6548": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6549": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6550": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6583": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6584": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6585": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6586": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6587": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6588": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6589": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6590": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6592": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6593": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6600": {
      "op": "SHL"
    },
    "6601": {
      "op": "SUB"
    },
    "6602": {
      "op": "DUP6"
    },
    "6603": {
      "op": "DUP2"
    },
    "6604": {
      "op": "AND"
    },
    "6605": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "6607": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6608": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6609": {
      "op": "MSTORE"
    },
    "6610": {
      "op": "DUP5"
    },
    "6611": {
      "op": "DUP2"
    },
    "6612": {
      "op": "AND"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6615": {
      "op": "DUP4"
    },
    "6616": {
      "op": "ADD"
    },
    "6617": {
      "op": "MSTORE"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6620": {
      "op": "DUP1"
    },
    "6621": {
      "op": "DUP4"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "DUP6"
    },
    "6624": {
      "op": "SWAP1"
    },
    "6625": {
      "op": "MSTORE"
    },
    "6626": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6627": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6628": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6629": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6630": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SUB",
      "path": "27"
    },
    "6631": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6632": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6633": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6634": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6635": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6638": {
      "op": "SWAP1"
    },
    "6639": {
      "op": "SWAP3"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6642": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6643": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6645": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6646": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "27"
    },
    "6647": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6648": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6655": {
      "op": "SHL"
    },
    "6656": {
      "op": "SUB"
    },
    "6657": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "AND",
      "path": "27"
    },
    "6658": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6665": {
      "op": "SHL"
    },
    "6666": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "OR",
      "path": "27"
    },
    "6667": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6668": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6669": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6670": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6673": {
      "op": "SWAP3"
    },
    "6674": {
      "op": "DUP4"
    },
    "6675": {
      "op": "SWAP3"
    },
    "6676": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6677": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "DUP9",
      "path": "27"
    },
    "6678": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "AND",
      "path": "27"
    },
    "6679": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6680": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A21"
    },
    "6683": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6684": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6685": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2184"
    },
    "6688": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6689": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6690": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6692": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6694": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6695": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6696": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6697": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SUB",
      "path": "27"
    },
    "6698": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6699": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6701": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP7",
      "path": "27"
    },
    "6702": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "GAS",
      "path": "27"
    },
    "6703": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "CALL",
      "path": "27"
    },
    "6704": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6705": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6706": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6707": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6708": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6709": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6711": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6712": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "EQ",
      "path": "27"
    },
    "6713": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A5E"
    },
    "6716": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6717": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6719": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6720": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6721": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6722": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6724": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "NOT",
      "path": "27"
    },
    "6725": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "6727": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6728": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "6729": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "AND",
      "path": "27"
    },
    "6730": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6731": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "6732": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6734": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6735": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6736": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6737": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6738": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6739": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6741": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6743": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6744": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "27"
    },
    "6745": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "6746": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A63"
    },
    "6749": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6750": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6751": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "6753": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6754": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6755": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6756": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6757": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6758": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6759": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6760": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "27"
    },
    "6761": {
      "branch": 71,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        823
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 51
    },
    "6762": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6763": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6764": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A8D"
    },
    "6767": {
      "branch": 71,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6770": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6771": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "6772": {
      "branch": 72,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6773": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A8D"
    },
    "6776": {
      "branch": 72,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6777": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "POP",
      "path": "27"
    },
    "6778": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        859,
        863
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6779": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6780": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6782": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "27"
    },
    "6783": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6784": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6785": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6786": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "27"
    },
    "6787": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6788": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A8D"
    },
    "6791": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6792": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6793": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21F7"
    },
    "6796": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        848,
        872
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6797": {
      "branch": 73,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6798": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1ABF"
    },
    "6801": {
      "branch": 73,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6802": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6804": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6811": {
      "op": "SHL"
    },
    "6812": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6813": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6816": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6818": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6819": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "ADD",
      "path": "27"
    },
    "6820": {
      "op": "MSTORE"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6825": {
      "op": "DUP3"
    },
    "6826": {
      "op": "ADD"
    },
    "6827": {
      "op": "MSTORE"
    },
    "6828": {
      "op": "PUSH3",
      "value": "0x29AA23"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6834": {
      "op": "SHL"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6837": {
      "op": "DUP3"
    },
    "6838": {
      "op": "ADD"
    },
    "6839": {
      "op": "MSTORE"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x74F"
    },
    "6846": {
      "op": "JUMP"
    },
    "6847": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6848": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6849": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6850": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6851": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6852": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6853": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "27"
    },
    "6854": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "o",
      "offset": [
        530,
        888
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6855": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6856": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6858": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6859": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6866": {
      "op": "SHL"
    },
    "6867": {
      "op": "SUB"
    },
    "6868": {
      "op": "DUP5"
    },
    "6869": {
      "op": "DUP2"
    },
    "6870": {
      "op": "AND"
    },
    "6871": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "6873": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6874": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "6875": {
      "op": "MSTORE"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6878": {
      "op": "DUP1"
    },
    "6879": {
      "op": "DUP4"
    },
    "6880": {
      "op": "ADD"
    },
    "6881": {
      "op": "DUP6"
    },
    "6882": {
      "op": "SWAP1"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6885": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6886": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6887": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6888": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SUB",
      "path": "27"
    },
    "6889": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6890": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6891": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "6892": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6893": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6896": {
      "op": "SWAP1"
    },
    "6897": {
      "op": "SWAP3"
    },
    "6898": {
      "op": "ADD"
    },
    "6899": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6900": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6901": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6903": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6904": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "27"
    },
    "6905": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6906": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6913": {
      "op": "SHL"
    },
    "6914": {
      "op": "SUB"
    },
    "6915": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "AND",
      "path": "27"
    },
    "6916": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6923": {
      "op": "SHL"
    },
    "6924": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "OR",
      "path": "27"
    },
    "6925": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6926": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6927": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6928": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6931": {
      "op": "SWAP3"
    },
    "6932": {
      "op": "DUP4"
    },
    "6933": {
      "op": "SWAP3"
    },
    "6934": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6935": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "DUP8",
      "path": "27"
    },
    "6936": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "AND",
      "path": "27"
    },
    "6937": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6938": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B23"
    },
    "6941": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6942": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6943": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2184"
    },
    "6946": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6947": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6948": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6950": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6952": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6953": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6954": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP4",
      "path": "27"
    },
    "6955": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SUB",
      "path": "27"
    },
    "6956": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6957": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6959": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP7",
      "path": "27"
    },
    "6960": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "GAS",
      "path": "27"
    },
    "6961": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "CALL",
      "path": "27"
    },
    "6962": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6963": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "6964": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "6965": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6966": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6967": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6969": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6970": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "EQ",
      "path": "27"
    },
    "6971": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B60"
    },
    "6974": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "6975": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6977": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6978": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6979": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "6980": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "6982": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "NOT",
      "path": "27"
    },
    "6983": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "6985": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6986": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "6987": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "AND",
      "path": "27"
    },
    "6988": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6989": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "6990": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6992": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6993": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6994": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6995": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6996": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "6997": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "6999": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7001": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7002": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "27"
    },
    "7003": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7004": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B65"
    },
    "7007": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7008": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7009": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "7011": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7012": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7013": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7014": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7015": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7016": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7017": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7018": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "27"
    },
    "7019": {
      "branch": 74,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2085
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 52
    },
    "7020": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7021": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7022": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B8F"
    },
    "7025": {
      "branch": 74,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7026": {
      "op": "POP"
    },
    "7027": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7028": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7029": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7030": {
      "branch": 75,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7031": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B8F"
    },
    "7034": {
      "branch": 75,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7035": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "POP",
      "path": "27"
    },
    "7036": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2121,
        2125
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7037": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7038": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7040": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "27"
    },
    "7041": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7042": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7043": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7044": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "27"
    },
    "7045": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7046": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B8F"
    },
    "7049": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7050": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7051": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21F7"
    },
    "7054": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7055": {
      "branch": 76,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7056": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BC0"
    },
    "7059": {
      "branch": 76,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7060": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7062": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7069": {
      "op": "SHL"
    },
    "7070": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7071": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7074": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7076": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7077": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "ADD",
      "path": "27"
    },
    "7078": {
      "op": "MSTORE"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7083": {
      "op": "DUP3"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "op": "MSTORE"
    },
    "7086": {
      "op": "PUSH2",
      "value": "0x5341"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7091": {
      "op": "SHL"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7094": {
      "op": "DUP3"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "op": "MSTORE"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7099": {
      "op": "ADD"
    },
    "7100": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x74F"
    },
    "7103": {
      "op": "JUMP"
    },
    "7104": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7105": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7106": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7107": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7108": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7109": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "27"
    },
    "7110": {
      "fn": "TransferHelper.safeApprove",
      "jump": "o",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7111": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1180,
        1489
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7112": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7114": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7115": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7122": {
      "op": "SHL"
    },
    "7123": {
      "op": "SUB"
    },
    "7124": {
      "op": "DUP5"
    },
    "7125": {
      "op": "DUP2"
    },
    "7126": {
      "op": "AND"
    },
    "7127": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "7129": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7130": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7131": {
      "op": "MSTORE"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7134": {
      "op": "DUP1"
    },
    "7135": {
      "op": "DUP4"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "DUP6"
    },
    "7138": {
      "op": "SWAP1"
    },
    "7139": {
      "op": "MSTORE"
    },
    "7140": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7141": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7142": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7143": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7144": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SUB",
      "path": "27"
    },
    "7145": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7146": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7147": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7148": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7149": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7152": {
      "op": "SWAP1"
    },
    "7153": {
      "op": "SWAP3"
    },
    "7154": {
      "op": "ADD"
    },
    "7155": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7156": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7157": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7159": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7160": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "27"
    },
    "7161": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7162": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "op": "SUB"
    },
    "7171": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "AND",
      "path": "27"
    },
    "7172": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "OR",
      "path": "27"
    },
    "7181": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7182": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7183": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7184": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7187": {
      "op": "SWAP3"
    },
    "7188": {
      "op": "DUP4"
    },
    "7189": {
      "op": "SWAP3"
    },
    "7190": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7191": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "DUP8",
      "path": "27"
    },
    "7192": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "AND",
      "path": "27"
    },
    "7193": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7194": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C23"
    },
    "7197": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7198": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7199": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2184"
    },
    "7202": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7203": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7204": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7206": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7208": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7209": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7210": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7211": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SUB",
      "path": "27"
    },
    "7212": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7213": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7215": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP7",
      "path": "27"
    },
    "7216": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "GAS",
      "path": "27"
    },
    "7217": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "CALL",
      "path": "27"
    },
    "7218": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7219": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7220": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7221": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7222": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7223": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7225": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7226": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "EQ",
      "path": "27"
    },
    "7227": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C60"
    },
    "7230": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7231": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7233": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7234": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7235": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7236": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "7238": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "NOT",
      "path": "27"
    },
    "7239": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "7241": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7242": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7243": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "AND",
      "path": "27"
    },
    "7244": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7245": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7246": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7248": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7249": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7250": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7251": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7252": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "7253": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7255": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7257": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP5",
      "path": "27"
    },
    "7258": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "27"
    },
    "7259": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "7260": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C65"
    },
    "7263": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7264": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7265": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "7267": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7268": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7269": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7270": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7271": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7272": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7273": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7274": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "27"
    },
    "7275": {
      "branch": 77,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1425
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 53
    },
    "7276": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7277": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7278": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C8F"
    },
    "7281": {
      "branch": 77,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7282": {
      "op": "POP"
    },
    "7283": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7284": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7285": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "7286": {
      "branch": 78,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7287": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C8F"
    },
    "7290": {
      "branch": 78,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7291": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "POP",
      "path": "27"
    },
    "7292": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1461,
        1465
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7293": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7294": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "7296": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "27"
    },
    "7297": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7298": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7299": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7300": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "27"
    },
    "7301": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7302": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C8F"
    },
    "7305": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "7306": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7307": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x21F7"
    },
    "7310": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7311": {
      "branch": 79,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7312": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BC0"
    },
    "7315": {
      "branch": 79,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7316": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7318": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7325": {
      "op": "SHL"
    },
    "7326": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7327": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7330": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7332": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7333": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "ADD",
      "path": "27"
    },
    "7334": {
      "op": "MSTORE"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7339": {
      "op": "DUP3"
    },
    "7340": {
      "op": "ADD"
    },
    "7341": {
      "op": "MSTORE"
    },
    "7342": {
      "op": "PUSH2",
      "value": "0x14D5"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "7347": {
      "op": "SHL"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7350": {
      "op": "DUP3"
    },
    "7351": {
      "op": "ADD"
    },
    "7352": {
      "op": "MSTORE"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7355": {
      "op": "ADD"
    },
    "7356": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x74F"
    },
    "7359": {
      "op": "JUMP"
    },
    "7360": {
      "op": "JUMPDEST"
    },
    "7361": {
      "op": "DUP3"
    },
    "7362": {
      "op": "DUP1"
    },
    "7363": {
      "op": "SLOAD"
    },
    "7364": {
      "op": "PUSH2",
      "value": "0x1CCC"
    },
    "7367": {
      "op": "SWAP1"
    },
    "7368": {
      "op": "PUSH2",
      "value": "0x2380"
    },
    "7371": {
      "jump": "i",
      "op": "JUMP"
    },
    "7372": {
      "op": "JUMPDEST"
    },
    "7373": {
      "op": "SWAP1"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7376": {
      "op": "MSTORE"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7381": {
      "op": "KECCAK256"
    },
    "7382": {
      "op": "SWAP1"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7385": {
      "op": "ADD"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7388": {
      "op": "SWAP1"
    },
    "7389": {
      "op": "DIV"
    },
    "7390": {
      "op": "DUP2"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "op": "SWAP3"
    },
    "7393": {
      "op": "DUP3"
    },
    "7394": {
      "op": "PUSH2",
      "value": "0x1CEE"
    },
    "7397": {
      "op": "JUMPI"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7400": {
      "op": "DUP6"
    },
    "7401": {
      "op": "SSTORE"
    },
    "7402": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "7405": {
      "op": "JUMP"
    },
    "7406": {
      "op": "JUMPDEST"
    },
    "7407": {
      "op": "DUP3"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7410": {
      "op": "LT"
    },
    "7411": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7414": {
      "op": "JUMPI"
    },
    "7415": {
      "op": "DUP1"
    },
    "7416": {
      "op": "MLOAD"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7419": {
      "op": "NOT"
    },
    "7420": {
      "op": "AND"
    },
    "7421": {
      "op": "DUP4"
    },
    "7422": {
      "op": "DUP1"
    },
    "7423": {
      "op": "ADD"
    },
    "7424": {
      "op": "OR"
    },
    "7425": {
      "op": "DUP6"
    },
    "7426": {
      "op": "SSTORE"
    },
    "7427": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "7430": {
      "op": "JUMP"
    },
    "7431": {
      "op": "JUMPDEST"
    },
    "7432": {
      "op": "DUP3"
    },
    "7433": {
      "op": "DUP1"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "ADD"
    },
    "7438": {
      "op": "DUP6"
    },
    "7439": {
      "op": "SSTORE"
    },
    "7440": {
      "op": "DUP3"
    },
    "7441": {
      "op": "ISZERO"
    },
    "7442": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "7445": {
      "op": "JUMPI"
    },
    "7446": {
      "op": "SWAP2"
    },
    "7447": {
      "op": "DUP3"
    },
    "7448": {
      "op": "ADD"
    },
    "7449": {
      "op": "JUMPDEST"
    },
    "7450": {
      "op": "DUP3"
    },
    "7451": {
      "op": "DUP2"
    },
    "7452": {
      "op": "GT"
    },
    "7453": {
      "op": "ISZERO"
    },
    "7454": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "7457": {
      "op": "JUMPI"
    },
    "7458": {
      "op": "DUP3"
    },
    "7459": {
      "op": "MLOAD"
    },
    "7460": {
      "op": "DUP3"
    },
    "7461": {
      "op": "SSTORE"
    },
    "7462": {
      "op": "SWAP2"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7465": {
      "op": "ADD"
    },
    "7466": {
      "op": "SWAP2"
    },
    "7467": {
      "op": "SWAP1"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7470": {
      "op": "ADD"
    },
    "7471": {
      "op": "SWAP1"
    },
    "7472": {
      "op": "PUSH2",
      "value": "0x1D19"
    },
    "7475": {
      "op": "JUMP"
    },
    "7476": {
      "op": "JUMPDEST"
    },
    "7477": {
      "op": "POP"
    },
    "7478": {
      "op": "PUSH2",
      "value": "0x1D40"
    },
    "7481": {
      "op": "SWAP3"
    },
    "7482": {
      "op": "SWAP2"
    },
    "7483": {
      "op": "POP"
    },
    "7484": {
      "op": "PUSH2",
      "value": "0x1D44"
    },
    "7487": {
      "jump": "i",
      "op": "JUMP"
    },
    "7488": {
      "op": "JUMPDEST"
    },
    "7489": {
      "op": "POP"
    },
    "7490": {
      "op": "SWAP1"
    },
    "7491": {
      "jump": "o",
      "op": "JUMP"
    },
    "7492": {
      "op": "JUMPDEST"
    },
    "7493": {
      "op": "JUMPDEST"
    },
    "7494": {
      "op": "DUP1"
    },
    "7495": {
      "op": "DUP3"
    },
    "7496": {
      "op": "GT"
    },
    "7497": {
      "op": "ISZERO"
    },
    "7498": {
      "op": "PUSH2",
      "value": "0x1D40"
    },
    "7501": {
      "op": "JUMPI"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7504": {
      "op": "DUP2"
    },
    "7505": {
      "op": "SSTORE"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7508": {
      "op": "ADD"
    },
    "7509": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "7512": {
      "op": "JUMP"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "DUP1"
    },
    "7515": {
      "op": "CALLDATALOAD"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7522": {
      "op": "SHL"
    },
    "7523": {
      "op": "SUB"
    },
    "7524": {
      "op": "DUP2"
    },
    "7525": {
      "op": "AND"
    },
    "7526": {
      "op": "DUP2"
    },
    "7527": {
      "op": "EQ"
    },
    "7528": {
      "op": "PUSH2",
      "value": "0x1D70"
    },
    "7531": {
      "op": "JUMPI"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7534": {
      "op": "DUP1"
    },
    "7535": {
      "op": "REVERT"
    },
    "7536": {
      "op": "JUMPDEST"
    },
    "7537": {
      "op": "SWAP2"
    },
    "7538": {
      "op": "SWAP1"
    },
    "7539": {
      "op": "POP"
    },
    "7540": {
      "jump": "o",
      "op": "JUMP"
    },
    "7541": {
      "op": "JUMPDEST"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7546": {
      "op": "DUP3"
    },
    "7547": {
      "op": "DUP5"
    },
    "7548": {
      "op": "SUB"
    },
    "7549": {
      "op": "SLT"
    },
    "7550": {
      "op": "ISZERO"
    },
    "7551": {
      "op": "PUSH2",
      "value": "0x1D87"
    },
    "7554": {
      "op": "JUMPI"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7557": {
      "op": "DUP1"
    },
    "7558": {
      "op": "REVERT"
    },
    "7559": {
      "op": "JUMPDEST"
    },
    "7560": {
      "op": "PUSH2",
      "value": "0x1D90"
    },
    "7563": {
      "op": "DUP3"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7567": {
      "jump": "i",
      "op": "JUMP"
    },
    "7568": {
      "op": "JUMPDEST"
    },
    "7569": {
      "op": "SWAP4"
    },
    "7570": {
      "op": "SWAP3"
    },
    "7571": {
      "op": "POP"
    },
    "7572": {
      "op": "POP"
    },
    "7573": {
      "op": "POP"
    },
    "7574": {
      "jump": "o",
      "op": "JUMP"
    },
    "7575": {
      "op": "JUMPDEST"
    },
    "7576": {
      "op": "DUP1"
    },
    "7577": {
      "op": "CALLDATALOAD"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7584": {
      "op": "SHL"
    },
    "7585": {
      "op": "SUB"
    },
    "7586": {
      "op": "DUP2"
    },
    "7587": {
      "op": "AND"
    },
    "7588": {
      "op": "DUP2"
    },
    "7589": {
      "op": "EQ"
    },
    "7590": {
      "op": "PUSH2",
      "value": "0x1D70"
    },
    "7593": {
      "op": "JUMPI"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7596": {
      "op": "DUP1"
    },
    "7597": {
      "op": "REVERT"
    },
    "7598": {
      "op": "JUMPDEST"
    },
    "7599": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7606": {
      "op": "SHL"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7609": {
      "op": "MSTORE"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7614": {
      "op": "MSTORE"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7619": {
      "op": "REVERT"
    },
    "7620": {
      "op": "JUMPDEST"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7623": {
      "op": "DUP3"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7626": {
      "op": "DUP4"
    },
    "7627": {
      "op": "ADD"
    },
    "7628": {
      "op": "SLT"
    },
    "7629": {
      "op": "PUSH2",
      "value": "0x1DD5"
    },
    "7632": {
      "op": "JUMPI"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7635": {
      "op": "DUP1"
    },
    "7636": {
      "op": "REVERT"
    },
    "7637": {
      "op": "JUMPDEST"
    },
    "7638": {
      "op": "DUP2"
    },
    "7639": {
      "op": "CALLDATALOAD"
    },
    "7640": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7649": {
      "op": "DUP1"
    },
    "7650": {
      "op": "DUP3"
    },
    "7651": {
      "op": "GT"
    },
    "7652": {
      "op": "ISZERO"
    },
    "7653": {
      "op": "PUSH2",
      "value": "0x1DF0"
    },
    "7656": {
      "op": "JUMPI"
    },
    "7657": {
      "op": "PUSH2",
      "value": "0x1DF0"
    },
    "7660": {
      "op": "PUSH2",
      "value": "0x1DAE"
    },
    "7663": {
      "jump": "i",
      "op": "JUMP"
    },
    "7664": {
      "op": "JUMPDEST"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7667": {
      "op": "MLOAD"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7670": {
      "op": "DUP4"
    },
    "7671": {
      "op": "ADD"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7674": {
      "op": "NOT"
    },
    "7675": {
      "op": "SWAP1"
    },
    "7676": {
      "op": "DUP2"
    },
    "7677": {
      "op": "AND"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7680": {
      "op": "ADD"
    },
    "7681": {
      "op": "AND"
    },
    "7682": {
      "op": "DUP2"
    },
    "7683": {
      "op": "ADD"
    },
    "7684": {
      "op": "SWAP1"
    },
    "7685": {
      "op": "DUP3"
    },
    "7686": {
      "op": "DUP3"
    },
    "7687": {
      "op": "GT"
    },
    "7688": {
      "op": "DUP2"
    },
    "7689": {
      "op": "DUP4"
    },
    "7690": {
      "op": "LT"
    },
    "7691": {
      "op": "OR"
    },
    "7692": {
      "op": "ISZERO"
    },
    "7693": {
      "op": "PUSH2",
      "value": "0x1E18"
    },
    "7696": {
      "op": "JUMPI"
    },
    "7697": {
      "op": "PUSH2",
      "value": "0x1E18"
    },
    "7700": {
      "op": "PUSH2",
      "value": "0x1DAE"
    },
    "7703": {
      "jump": "i",
      "op": "JUMP"
    },
    "7704": {
      "op": "JUMPDEST"
    },
    "7705": {
      "op": "DUP2"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7708": {
      "op": "MSTORE"
    },
    "7709": {
      "op": "DUP4"
    },
    "7710": {
      "op": "DUP2"
    },
    "7711": {
      "op": "MSTORE"
    },
    "7712": {
      "op": "DUP7"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7715": {
      "op": "DUP6"
    },
    "7716": {
      "op": "DUP9"
    },
    "7717": {
      "op": "ADD"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "GT"
    },
    "7720": {
      "op": "ISZERO"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1E31"
    },
    "7724": {
      "op": "JUMPI"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7727": {
      "op": "DUP1"
    },
    "7728": {
      "op": "REVERT"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "DUP4"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7733": {
      "op": "DUP8"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7737": {
      "op": "DUP4"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "op": "CALLDATACOPY"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7744": {
      "op": "DUP6"
    },
    "7745": {
      "op": "DUP4"
    },
    "7746": {
      "op": "ADD"
    },
    "7747": {
      "op": "ADD"
    },
    "7748": {
      "op": "MSTORE"
    },
    "7749": {
      "op": "DUP1"
    },
    "7750": {
      "op": "SWAP5"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "POP"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "op": "POP"
    },
    "7756": {
      "op": "SWAP3"
    },
    "7757": {
      "op": "SWAP2"
    },
    "7758": {
      "op": "POP"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "jump": "o",
      "op": "JUMP"
    },
    "7761": {
      "op": "JUMPDEST"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7764": {
      "op": "DUP1"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7767": {
      "op": "DUP4"
    },
    "7768": {
      "op": "DUP6"
    },
    "7769": {
      "op": "SUB"
    },
    "7770": {
      "op": "SLT"
    },
    "7771": {
      "op": "ISZERO"
    },
    "7772": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7775": {
      "op": "JUMPI"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7778": {
      "op": "DUP1"
    },
    "7779": {
      "op": "REVERT"
    },
    "7780": {
      "op": "JUMPDEST"
    },
    "7781": {
      "op": "PUSH2",
      "value": "0x1E6D"
    },
    "7784": {
      "op": "DUP4"
    },
    "7785": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7788": {
      "jump": "i",
      "op": "JUMP"
    },
    "7789": {
      "op": "JUMPDEST"
    },
    "7790": {
      "op": "SWAP2"
    },
    "7791": {
      "op": "POP"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7794": {
      "op": "DUP4"
    },
    "7795": {
      "op": "ADD"
    },
    "7796": {
      "op": "CALLDATALOAD"
    },
    "7797": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7806": {
      "op": "DUP2"
    },
    "7807": {
      "op": "GT"
    },
    "7808": {
      "op": "ISZERO"
    },
    "7809": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "7812": {
      "op": "JUMPI"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7815": {
      "op": "DUP1"
    },
    "7816": {
      "op": "REVERT"
    },
    "7817": {
      "op": "JUMPDEST"
    },
    "7818": {
      "op": "PUSH2",
      "value": "0x1E95"
    },
    "7821": {
      "op": "DUP6"
    },
    "7822": {
      "op": "DUP3"
    },
    "7823": {
      "op": "DUP7"
    },
    "7824": {
      "op": "ADD"
    },
    "7825": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "7828": {
      "jump": "i",
      "op": "JUMP"
    },
    "7829": {
      "op": "JUMPDEST"
    },
    "7830": {
      "op": "SWAP2"
    },
    "7831": {
      "op": "POP"
    },
    "7832": {
      "op": "POP"
    },
    "7833": {
      "op": "SWAP3"
    },
    "7834": {
      "op": "POP"
    },
    "7835": {
      "op": "SWAP3"
    },
    "7836": {
      "op": "SWAP1"
    },
    "7837": {
      "op": "POP"
    },
    "7838": {
      "jump": "o",
      "op": "JUMP"
    },
    "7839": {
      "op": "JUMPDEST"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7842": {
      "op": "DUP1"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7845": {
      "op": "DUP4"
    },
    "7846": {
      "op": "DUP6"
    },
    "7847": {
      "op": "SUB"
    },
    "7848": {
      "op": "SLT"
    },
    "7849": {
      "op": "ISZERO"
    },
    "7850": {
      "op": "PUSH2",
      "value": "0x1EB2"
    },
    "7853": {
      "op": "JUMPI"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7856": {
      "op": "DUP1"
    },
    "7857": {
      "op": "REVERT"
    },
    "7858": {
      "op": "JUMPDEST"
    },
    "7859": {
      "op": "DUP3"
    },
    "7860": {
      "op": "CALLDATALOAD"
    },
    "7861": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7870": {
      "op": "DUP1"
    },
    "7871": {
      "op": "DUP3"
    },
    "7872": {
      "op": "GT"
    },
    "7873": {
      "op": "ISZERO"
    },
    "7874": {
      "op": "PUSH2",
      "value": "0x1ECA"
    },
    "7877": {
      "op": "JUMPI"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7880": {
      "op": "DUP1"
    },
    "7881": {
      "op": "REVERT"
    },
    "7882": {
      "op": "JUMPDEST"
    },
    "7883": {
      "op": "DUP2"
    },
    "7884": {
      "op": "DUP6"
    },
    "7885": {
      "op": "ADD"
    },
    "7886": {
      "op": "SWAP2"
    },
    "7887": {
      "op": "POP"
    },
    "7888": {
      "op": "DUP6"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7891": {
      "op": "DUP4"
    },
    "7892": {
      "op": "ADD"
    },
    "7893": {
      "op": "SLT"
    },
    "7894": {
      "op": "PUSH2",
      "value": "0x1EDE"
    },
    "7897": {
      "op": "JUMPI"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7900": {
      "op": "DUP1"
    },
    "7901": {
      "op": "REVERT"
    },
    "7902": {
      "op": "JUMPDEST"
    },
    "7903": {
      "op": "DUP2"
    },
    "7904": {
      "op": "CALLDATALOAD"
    },
    "7905": {
      "op": "DUP2"
    },
    "7906": {
      "op": "DUP2"
    },
    "7907": {
      "op": "GT"
    },
    "7908": {
      "op": "ISZERO"
    },
    "7909": {
      "op": "PUSH2",
      "value": "0x1EED"
    },
    "7912": {
      "op": "JUMPI"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7915": {
      "op": "DUP1"
    },
    "7916": {
      "op": "REVERT"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "op": "DUP7"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7921": {
      "op": "DUP3"
    },
    "7922": {
      "op": "DUP6"
    },
    "7923": {
      "op": "ADD"
    },
    "7924": {
      "op": "ADD"
    },
    "7925": {
      "op": "GT"
    },
    "7926": {
      "op": "ISZERO"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x1EFF"
    },
    "7930": {
      "op": "JUMPI"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7933": {
      "op": "DUP1"
    },
    "7934": {
      "op": "REVERT"
    },
    "7935": {
      "op": "JUMPDEST"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7938": {
      "op": "SWAP3"
    },
    "7939": {
      "op": "SWAP1"
    },
    "7940": {
      "op": "SWAP3"
    },
    "7941": {
      "op": "ADD"
    },
    "7942": {
      "op": "SWAP7"
    },
    "7943": {
      "op": "SWAP2"
    },
    "7944": {
      "op": "SWAP6"
    },
    "7945": {
      "op": "POP"
    },
    "7946": {
      "op": "SWAP1"
    },
    "7947": {
      "op": "SWAP4"
    },
    "7948": {
      "op": "POP"
    },
    "7949": {
      "op": "POP"
    },
    "7950": {
      "op": "POP"
    },
    "7951": {
      "op": "POP"
    },
    "7952": {
      "jump": "o",
      "op": "JUMP"
    },
    "7953": {
      "op": "JUMPDEST"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7956": {
      "op": "DUP1"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7961": {
      "op": "DUP5"
    },
    "7962": {
      "op": "DUP7"
    },
    "7963": {
      "op": "SUB"
    },
    "7964": {
      "op": "SLT"
    },
    "7965": {
      "op": "ISZERO"
    },
    "7966": {
      "op": "PUSH2",
      "value": "0x1F26"
    },
    "7969": {
      "op": "JUMPI"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7972": {
      "op": "DUP1"
    },
    "7973": {
      "op": "REVERT"
    },
    "7974": {
      "op": "JUMPDEST"
    },
    "7975": {
      "op": "PUSH2",
      "value": "0x1F2F"
    },
    "7978": {
      "op": "DUP5"
    },
    "7979": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7982": {
      "jump": "i",
      "op": "JUMP"
    },
    "7983": {
      "op": "JUMPDEST"
    },
    "7984": {
      "op": "SWAP3"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7988": {
      "op": "DUP5"
    },
    "7989": {
      "op": "ADD"
    },
    "7990": {
      "op": "CALLDATALOAD"
    },
    "7991": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8000": {
      "op": "DUP2"
    },
    "8001": {
      "op": "GT"
    },
    "8002": {
      "op": "ISZERO"
    },
    "8003": {
      "op": "PUSH2",
      "value": "0x1F4B"
    },
    "8006": {
      "op": "JUMPI"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8009": {
      "op": "DUP1"
    },
    "8010": {
      "op": "REVERT"
    },
    "8011": {
      "op": "JUMPDEST"
    },
    "8012": {
      "op": "PUSH2",
      "value": "0x1F57"
    },
    "8015": {
      "op": "DUP7"
    },
    "8016": {
      "op": "DUP3"
    },
    "8017": {
      "op": "DUP8"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "8022": {
      "jump": "i",
      "op": "JUMP"
    },
    "8023": {
      "op": "JUMPDEST"
    },
    "8024": {
      "op": "SWAP3"
    },
    "8025": {
      "op": "POP"
    },
    "8026": {
      "op": "POP"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8029": {
      "op": "DUP5"
    },
    "8030": {
      "op": "ADD"
    },
    "8031": {
      "op": "CALLDATALOAD"
    },
    "8032": {
      "op": "SWAP1"
    },
    "8033": {
      "op": "POP"
    },
    "8034": {
      "op": "SWAP3"
    },
    "8035": {
      "op": "POP"
    },
    "8036": {
      "op": "SWAP3"
    },
    "8037": {
      "op": "POP"
    },
    "8038": {
      "op": "SWAP3"
    },
    "8039": {
      "jump": "o",
      "op": "JUMP"
    },
    "8040": {
      "op": "JUMPDEST"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8045": {
      "op": "DUP3"
    },
    "8046": {
      "op": "DUP5"
    },
    "8047": {
      "op": "SUB"
    },
    "8048": {
      "op": "SLT"
    },
    "8049": {
      "op": "ISZERO"
    },
    "8050": {
      "op": "PUSH2",
      "value": "0x1F7A"
    },
    "8053": {
      "op": "JUMPI"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8056": {
      "op": "DUP1"
    },
    "8057": {
      "op": "REVERT"
    },
    "8058": {
      "op": "JUMPDEST"
    },
    "8059": {
      "op": "POP"
    },
    "8060": {
      "op": "CALLDATALOAD"
    },
    "8061": {
      "op": "SWAP2"
    },
    "8062": {
      "op": "SWAP1"
    },
    "8063": {
      "op": "POP"
    },
    "8064": {
      "jump": "o",
      "op": "JUMP"
    },
    "8065": {
      "op": "JUMPDEST"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8068": {
      "op": "DUP1"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8073": {
      "op": "DUP5"
    },
    "8074": {
      "op": "DUP7"
    },
    "8075": {
      "op": "SUB"
    },
    "8076": {
      "op": "SLT"
    },
    "8077": {
      "op": "ISZERO"
    },
    "8078": {
      "op": "PUSH2",
      "value": "0x1F96"
    },
    "8081": {
      "op": "JUMPI"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8084": {
      "op": "DUP1"
    },
    "8085": {
      "op": "REVERT"
    },
    "8086": {
      "op": "JUMPDEST"
    },
    "8087": {
      "op": "DUP4"
    },
    "8088": {
      "op": "CALLDATALOAD"
    },
    "8089": {
      "op": "SWAP3"
    },
    "8090": {
      "op": "POP"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8093": {
      "op": "DUP5"
    },
    "8094": {
      "op": "ADD"
    },
    "8095": {
      "op": "CALLDATALOAD"
    },
    "8096": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8105": {
      "op": "DUP2"
    },
    "8106": {
      "op": "GT"
    },
    "8107": {
      "op": "ISZERO"
    },
    "8108": {
      "op": "PUSH2",
      "value": "0x1F4B"
    },
    "8111": {
      "op": "JUMPI"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8114": {
      "op": "DUP1"
    },
    "8115": {
      "op": "REVERT"
    },
    "8116": {
      "op": "JUMPDEST"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8119": {
      "op": "DUP1"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8122": {
      "op": "DUP4"
    },
    "8123": {
      "op": "DUP6"
    },
    "8124": {
      "op": "SUB"
    },
    "8125": {
      "op": "SLT"
    },
    "8126": {
      "op": "ISZERO"
    },
    "8127": {
      "op": "PUSH2",
      "value": "0x1FC7"
    },
    "8130": {
      "op": "JUMPI"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8133": {
      "op": "DUP1"
    },
    "8134": {
      "op": "REVERT"
    },
    "8135": {
      "op": "JUMPDEST"
    },
    "8136": {
      "op": "DUP3"
    },
    "8137": {
      "op": "CALLDATALOAD"
    },
    "8138": {
      "op": "SWAP2"
    },
    "8139": {
      "op": "POP"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8142": {
      "op": "DUP4"
    },
    "8143": {
      "op": "ADD"
    },
    "8144": {
      "op": "CALLDATALOAD"
    },
    "8145": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8154": {
      "op": "DUP2"
    },
    "8155": {
      "op": "GT"
    },
    "8156": {
      "op": "ISZERO"
    },
    "8157": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "8160": {
      "op": "JUMPI"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8163": {
      "op": "DUP1"
    },
    "8164": {
      "op": "REVERT"
    },
    "8165": {
      "op": "JUMPDEST"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8168": {
      "op": "JUMPDEST"
    },
    "8169": {
      "op": "DUP4"
    },
    "8170": {
      "op": "DUP2"
    },
    "8171": {
      "op": "LT"
    },
    "8172": {
      "op": "ISZERO"
    },
    "8173": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "8176": {
      "op": "JUMPI"
    },
    "8177": {
      "op": "DUP2"
    },
    "8178": {
      "op": "DUP2"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "MLOAD"
    },
    "8181": {
      "op": "DUP4"
    },
    "8182": {
      "op": "DUP3"
    },
    "8183": {
      "op": "ADD"
    },
    "8184": {
      "op": "MSTORE"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8187": {
      "op": "ADD"
    },
    "8188": {
      "op": "PUSH2",
      "value": "0x1FE8"
    },
    "8191": {
      "op": "JUMP"
    },
    "8192": {
      "op": "JUMPDEST"
    },
    "8193": {
      "op": "DUP4"
    },
    "8194": {
      "op": "DUP2"
    },
    "8195": {
      "op": "GT"
    },
    "8196": {
      "op": "ISZERO"
    },
    "8197": {
      "op": "PUSH2",
      "value": "0x627"
    },
    "8200": {
      "op": "JUMPI"
    },
    "8201": {
      "op": "POP"
    },
    "8202": {
      "op": "POP"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8205": {
      "op": "SWAP2"
    },
    "8206": {
      "op": "ADD"
    },
    "8207": {
      "op": "MSTORE"
    },
    "8208": {
      "jump": "o",
      "op": "JUMP"
    },
    "8209": {
      "op": "JUMPDEST"
    },
    "8210": {
      "op": "DUP3"
    },
    "8211": {
      "op": "ISZERO"
    },
    "8212": {
      "op": "ISZERO"
    },
    "8213": {
      "op": "DUP2"
    },
    "8214": {
      "op": "MSTORE"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8219": {
      "op": "DUP3"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "op": "MSTORE"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8224": {
      "op": "DUP3"
    },
    "8225": {
      "op": "MLOAD"
    },
    "8226": {
      "op": "DUP1"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8229": {
      "op": "DUP5"
    },
    "8230": {
      "op": "ADD"
    },
    "8231": {
      "op": "MSTORE"
    },
    "8232": {
      "op": "PUSH2",
      "value": "0x2038"
    },
    "8235": {
      "op": "DUP2"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8238": {
      "op": "DUP6"
    },
    "8239": {
      "op": "ADD"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8242": {
      "op": "DUP8"
    },
    "8243": {
      "op": "ADD"
    },
    "8244": {
      "op": "PUSH2",
      "value": "0x1FE5"
    },
    "8247": {
      "jump": "i",
      "op": "JUMP"
    },
    "8248": {
      "op": "JUMPDEST"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8254": {
      "op": "NOT"
    },
    "8255": {
      "op": "AND"
    },
    "8256": {
      "op": "SWAP2"
    },
    "8257": {
      "op": "SWAP1"
    },
    "8258": {
      "op": "SWAP2"
    },
    "8259": {
      "op": "ADD"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8262": {
      "op": "ADD"
    },
    "8263": {
      "op": "SWAP4"
    },
    "8264": {
      "op": "SWAP3"
    },
    "8265": {
      "op": "POP"
    },
    "8266": {
      "op": "POP"
    },
    "8267": {
      "op": "POP"
    },
    "8268": {
      "jump": "o",
      "op": "JUMP"
    },
    "8269": {
      "op": "JUMPDEST"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8272": {
      "op": "DUP1"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8275": {
      "op": "DUP4"
    },
    "8276": {
      "op": "DUP6"
    },
    "8277": {
      "op": "SUB"
    },
    "8278": {
      "op": "SLT"
    },
    "8279": {
      "op": "ISZERO"
    },
    "8280": {
      "op": "PUSH2",
      "value": "0x2060"
    },
    "8283": {
      "op": "JUMPI"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8286": {
      "op": "DUP1"
    },
    "8287": {
      "op": "REVERT"
    },
    "8288": {
      "op": "JUMPDEST"
    },
    "8289": {
      "op": "DUP3"
    },
    "8290": {
      "op": "CALLDATALOAD"
    },
    "8291": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8300": {
      "op": "DUP2"
    },
    "8301": {
      "op": "GT"
    },
    "8302": {
      "op": "ISZERO"
    },
    "8303": {
      "op": "PUSH2",
      "value": "0x2077"
    },
    "8306": {
      "op": "JUMPI"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8309": {
      "op": "DUP1"
    },
    "8310": {
      "op": "REVERT"
    },
    "8311": {
      "op": "JUMPDEST"
    },
    "8312": {
      "op": "PUSH2",
      "value": "0x2083"
    },
    "8315": {
      "op": "DUP6"
    },
    "8316": {
      "op": "DUP3"
    },
    "8317": {
      "op": "DUP7"
    },
    "8318": {
      "op": "ADD"
    },
    "8319": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "8322": {
      "jump": "i",
      "op": "JUMP"
    },
    "8323": {
      "op": "JUMPDEST"
    },
    "8324": {
      "op": "SWAP3"
    },
    "8325": {
      "op": "POP"
    },
    "8326": {
      "op": "POP"
    },
    "8327": {
      "op": "PUSH2",
      "value": "0x2092"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8332": {
      "op": "DUP5"
    },
    "8333": {
      "op": "ADD"
    },
    "8334": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "8337": {
      "jump": "i",
      "op": "JUMP"
    },
    "8338": {
      "op": "JUMPDEST"
    },
    "8339": {
      "op": "SWAP1"
    },
    "8340": {
      "op": "POP"
    },
    "8341": {
      "op": "SWAP3"
    },
    "8342": {
      "op": "POP"
    },
    "8343": {
      "op": "SWAP3"
    },
    "8344": {
      "op": "SWAP1"
    },
    "8345": {
      "op": "POP"
    },
    "8346": {
      "jump": "o",
      "op": "JUMP"
    },
    "8347": {
      "op": "JUMPDEST"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8350": {
      "op": "DUP1"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8355": {
      "op": "DUP5"
    },
    "8356": {
      "op": "DUP7"
    },
    "8357": {
      "op": "SUB"
    },
    "8358": {
      "op": "SLT"
    },
    "8359": {
      "op": "ISZERO"
    },
    "8360": {
      "op": "PUSH2",
      "value": "0x20B0"
    },
    "8363": {
      "op": "JUMPI"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8366": {
      "op": "DUP1"
    },
    "8367": {
      "op": "REVERT"
    },
    "8368": {
      "op": "JUMPDEST"
    },
    "8369": {
      "op": "PUSH2",
      "value": "0x20B9"
    },
    "8372": {
      "op": "DUP5"
    },
    "8373": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "8376": {
      "jump": "i",
      "op": "JUMP"
    },
    "8377": {
      "op": "JUMPDEST"
    },
    "8378": {
      "op": "SWAP3"
    },
    "8379": {
      "op": "POP"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8382": {
      "op": "DUP5"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "op": "CALLDATALOAD"
    },
    "8385": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8394": {
      "op": "DUP2"
    },
    "8395": {
      "op": "GT"
    },
    "8396": {
      "op": "ISZERO"
    },
    "8397": {
      "op": "PUSH2",
      "value": "0x20D5"
    },
    "8400": {
      "op": "JUMPI"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8403": {
      "op": "DUP1"
    },
    "8404": {
      "op": "REVERT"
    },
    "8405": {
      "op": "JUMPDEST"
    },
    "8406": {
      "op": "PUSH2",
      "value": "0x20E1"
    },
    "8409": {
      "op": "DUP7"
    },
    "8410": {
      "op": "DUP3"
    },
    "8411": {
      "op": "DUP8"
    },
    "8412": {
      "op": "ADD"
    },
    "8413": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "8416": {
      "jump": "i",
      "op": "JUMP"
    },
    "8417": {
      "op": "JUMPDEST"
    },
    "8418": {
      "op": "SWAP3"
    },
    "8419": {
      "op": "POP"
    },
    "8420": {
      "op": "POP"
    },
    "8421": {
      "op": "PUSH2",
      "value": "0x20F0"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8426": {
      "op": "DUP6"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "8431": {
      "jump": "i",
      "op": "JUMP"
    },
    "8432": {
      "op": "JUMPDEST"
    },
    "8433": {
      "op": "SWAP1"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "op": "SWAP3"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "op": "SWAP3"
    },
    "8438": {
      "op": "POP"
    },
    "8439": {
      "op": "SWAP3"
    },
    "8440": {
      "jump": "o",
      "op": "JUMP"
    },
    "8441": {
      "op": "JUMPDEST"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8444": {
      "op": "DUP1"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8449": {
      "op": "DUP5"
    },
    "8450": {
      "op": "DUP7"
    },
    "8451": {
      "op": "SUB"
    },
    "8452": {
      "op": "SLT"
    },
    "8453": {
      "op": "ISZERO"
    },
    "8454": {
      "op": "PUSH2",
      "value": "0x210E"
    },
    "8457": {
      "op": "JUMPI"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8460": {
      "op": "DUP1"
    },
    "8461": {
      "op": "REVERT"
    },
    "8462": {
      "op": "JUMPDEST"
    },
    "8463": {
      "op": "DUP4"
    },
    "8464": {
      "op": "CALLDATALOAD"
    },
    "8465": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8474": {
      "op": "DUP2"
    },
    "8475": {
      "op": "GT"
    },
    "8476": {
      "op": "ISZERO"
    },
    "8477": {
      "op": "PUSH2",
      "value": "0x2125"
    },
    "8480": {
      "op": "JUMPI"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8483": {
      "op": "DUP1"
    },
    "8484": {
      "op": "REVERT"
    },
    "8485": {
      "op": "JUMPDEST"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x2131"
    },
    "8489": {
      "op": "DUP7"
    },
    "8490": {
      "op": "DUP3"
    },
    "8491": {
      "op": "DUP8"
    },
    "8492": {
      "op": "ADD"
    },
    "8493": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "8496": {
      "jump": "i",
      "op": "JUMP"
    },
    "8497": {
      "op": "JUMPDEST"
    },
    "8498": {
      "op": "SWAP4"
    },
    "8499": {
      "op": "POP"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8503": {
      "op": "DUP5"
    },
    "8504": {
      "op": "ADD"
    },
    "8505": {
      "op": "CALLDATALOAD"
    },
    "8506": {
      "op": "SWAP2"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "op": "PUSH2",
      "value": "0x20F0"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8513": {
      "op": "DUP6"
    },
    "8514": {
      "op": "ADD"
    },
    "8515": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "8518": {
      "jump": "i",
      "op": "JUMP"
    },
    "8519": {
      "op": "JUMPDEST"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8524": {
      "op": "DUP3"
    },
    "8525": {
      "op": "DUP5"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "op": "SLT"
    },
    "8528": {
      "op": "ISZERO"
    },
    "8529": {
      "op": "PUSH2",
      "value": "0x2159"
    },
    "8532": {
      "op": "JUMPI"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8535": {
      "op": "DUP1"
    },
    "8536": {
      "op": "REVERT"
    },
    "8537": {
      "op": "JUMPDEST"
    },
    "8538": {
      "op": "DUP2"
    },
    "8539": {
      "op": "CALLDATALOAD"
    },
    "8540": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8549": {
      "op": "DUP2"
    },
    "8550": {
      "op": "GT"
    },
    "8551": {
      "op": "ISZERO"
    },
    "8552": {
      "op": "PUSH2",
      "value": "0x2170"
    },
    "8555": {
      "op": "JUMPI"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8558": {
      "op": "DUP1"
    },
    "8559": {
      "op": "REVERT"
    },
    "8560": {
      "op": "JUMPDEST"
    },
    "8561": {
      "op": "PUSH2",
      "value": "0x217C"
    },
    "8564": {
      "op": "DUP5"
    },
    "8565": {
      "op": "DUP3"
    },
    "8566": {
      "op": "DUP6"
    },
    "8567": {
      "op": "ADD"
    },
    "8568": {
      "op": "PUSH2",
      "value": "0x1DC4"
    },
    "8571": {
      "jump": "i",
      "op": "JUMP"
    },
    "8572": {
      "op": "JUMPDEST"
    },
    "8573": {
      "op": "SWAP5"
    },
    "8574": {
      "op": "SWAP4"
    },
    "8575": {
      "op": "POP"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "op": "POP"
    },
    "8578": {
      "op": "POP"
    },
    "8579": {
      "jump": "o",
      "op": "JUMP"
    },
    "8580": {
      "op": "JUMPDEST"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8583": {
      "op": "DUP3"
    },
    "8584": {
      "op": "MLOAD"
    },
    "8585": {
      "op": "PUSH2",
      "value": "0x2196"
    },
    "8588": {
      "op": "DUP2"
    },
    "8589": {
      "op": "DUP5"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8592": {
      "op": "DUP8"
    },
    "8593": {
      "op": "ADD"
    },
    "8594": {
      "op": "PUSH2",
      "value": "0x1FE5"
    },
    "8597": {
      "jump": "i",
      "op": "JUMP"
    },
    "8598": {
      "op": "JUMPDEST"
    },
    "8599": {
      "op": "SWAP2"
    },
    "8600": {
      "op": "SWAP1"
    },
    "8601": {
      "op": "SWAP2"
    },
    "8602": {
      "op": "ADD"
    },
    "8603": {
      "op": "SWAP3"
    },
    "8604": {
      "op": "SWAP2"
    },
    "8605": {
      "op": "POP"
    },
    "8606": {
      "op": "POP"
    },
    "8607": {
      "jump": "o",
      "op": "JUMP"
    },
    "8608": {
      "op": "JUMPDEST"
    },
    "8609": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8616": {
      "op": "SHL"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8619": {
      "op": "MSTORE"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8624": {
      "op": "MSTORE"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8629": {
      "op": "REVERT"
    },
    "8630": {
      "op": "JUMPDEST"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8633": {
      "op": "DUP2"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8636": {
      "op": "NOT"
    },
    "8637": {
      "op": "DIV"
    },
    "8638": {
      "op": "DUP4"
    },
    "8639": {
      "op": "GT"
    },
    "8640": {
      "op": "DUP3"
    },
    "8641": {
      "op": "ISZERO"
    },
    "8642": {
      "op": "ISZERO"
    },
    "8643": {
      "op": "AND"
    },
    "8644": {
      "op": "ISZERO"
    },
    "8645": {
      "op": "PUSH2",
      "value": "0x21D0"
    },
    "8648": {
      "op": "JUMPI"
    },
    "8649": {
      "op": "PUSH2",
      "value": "0x21D0"
    },
    "8652": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "8655": {
      "jump": "i",
      "op": "JUMP"
    },
    "8656": {
      "op": "JUMPDEST"
    },
    "8657": {
      "op": "POP"
    },
    "8658": {
      "op": "MUL"
    },
    "8659": {
      "op": "SWAP1"
    },
    "8660": {
      "jump": "o",
      "op": "JUMP"
    },
    "8661": {
      "op": "JUMPDEST"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8664": {
      "op": "DUP3"
    },
    "8665": {
      "op": "PUSH2",
      "value": "0x21F2"
    },
    "8668": {
      "op": "JUMPI"
    },
    "8669": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8676": {
      "op": "SHL"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8679": {
      "op": "MSTORE"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8684": {
      "op": "MSTORE"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8689": {
      "op": "REVERT"
    },
    "8690": {
      "op": "JUMPDEST"
    },
    "8691": {
      "op": "POP"
    },
    "8692": {
      "op": "DIV"
    },
    "8693": {
      "op": "SWAP1"
    },
    "8694": {
      "jump": "o",
      "op": "JUMP"
    },
    "8695": {
      "op": "JUMPDEST"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8700": {
      "op": "DUP3"
    },
    "8701": {
      "op": "DUP5"
    },
    "8702": {
      "op": "SUB"
    },
    "8703": {
      "op": "SLT"
    },
    "8704": {
      "op": "ISZERO"
    },
    "8705": {
      "op": "PUSH2",
      "value": "0x2209"
    },
    "8708": {
      "op": "JUMPI"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8711": {
      "op": "DUP1"
    },
    "8712": {
      "op": "REVERT"
    },
    "8713": {
      "op": "JUMPDEST"
    },
    "8714": {
      "op": "DUP2"
    },
    "8715": {
      "op": "MLOAD"
    },
    "8716": {
      "op": "DUP1"
    },
    "8717": {
      "op": "ISZERO"
    },
    "8718": {
      "op": "ISZERO"
    },
    "8719": {
      "op": "DUP2"
    },
    "8720": {
      "op": "EQ"
    },
    "8721": {
      "op": "PUSH2",
      "value": "0x1D90"
    },
    "8724": {
      "op": "JUMPI"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8727": {
      "op": "DUP1"
    },
    "8728": {
      "op": "REVERT"
    },
    "8729": {
      "op": "JUMPDEST"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8738": {
      "op": "SHL"
    },
    "8739": {
      "op": "SUB"
    },
    "8740": {
      "op": "DUP1"
    },
    "8741": {
      "op": "DUP4"
    },
    "8742": {
      "op": "AND"
    },
    "8743": {
      "op": "DUP2"
    },
    "8744": {
      "op": "DUP2"
    },
    "8745": {
      "op": "EQ"
    },
    "8746": {
      "op": "ISZERO"
    },
    "8747": {
      "op": "PUSH2",
      "value": "0x2236"
    },
    "8750": {
      "op": "JUMPI"
    },
    "8751": {
      "op": "PUSH2",
      "value": "0x2236"
    },
    "8754": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "8757": {
      "jump": "i",
      "op": "JUMP"
    },
    "8758": {
      "op": "JUMPDEST"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8761": {
      "op": "ADD"
    },
    "8762": {
      "op": "SWAP4"
    },
    "8763": {
      "op": "SWAP3"
    },
    "8764": {
      "op": "POP"
    },
    "8765": {
      "op": "POP"
    },
    "8766": {
      "op": "POP"
    },
    "8767": {
      "jump": "o",
      "op": "JUMP"
    },
    "8768": {
      "op": "JUMPDEST"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8771": {
      "op": "DUP1"
    },
    "8772": {
      "op": "DUP3"
    },
    "8773": {
      "op": "MSTORE"
    },
    "8774": {
      "op": "DUP2"
    },
    "8775": {
      "op": "DUP2"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "MSTORE"
    },
    "8778": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8813": {
      "op": "DUP3"
    },
    "8814": {
      "op": "ADD"
    },
    "8815": {
      "op": "MSTORE"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8818": {
      "op": "ADD"
    },
    "8819": {
      "op": "SWAP1"
    },
    "8820": {
      "jump": "o",
      "op": "JUMP"
    },
    "8821": {
      "op": "JUMPDEST"
    },
    "8822": {
      "op": "DUP1"
    },
    "8823": {
      "op": "MLOAD"
    },
    "8824": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "8835": {
      "op": "DUP2"
    },
    "8836": {
      "op": "AND"
    },
    "8837": {
      "op": "DUP2"
    },
    "8838": {
      "op": "EQ"
    },
    "8839": {
      "op": "PUSH2",
      "value": "0x1D70"
    },
    "8842": {
      "op": "JUMPI"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8845": {
      "op": "DUP1"
    },
    "8846": {
      "op": "REVERT"
    },
    "8847": {
      "op": "JUMPDEST"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8850": {
      "op": "DUP1"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8853": {
      "op": "DUP1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8858": {
      "op": "DUP7"
    },
    "8859": {
      "op": "DUP9"
    },
    "8860": {
      "op": "SUB"
    },
    "8861": {
      "op": "SLT"
    },
    "8862": {
      "op": "ISZERO"
    },
    "8863": {
      "op": "PUSH2",
      "value": "0x22A7"
    },
    "8866": {
      "op": "JUMPI"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8869": {
      "op": "DUP1"
    },
    "8870": {
      "op": "REVERT"
    },
    "8871": {
      "op": "JUMPDEST"
    },
    "8872": {
      "op": "PUSH2",
      "value": "0x22B0"
    },
    "8875": {
      "op": "DUP7"
    },
    "8876": {
      "op": "PUSH2",
      "value": "0x2275"
    },
    "8879": {
      "jump": "i",
      "op": "JUMP"
    },
    "8880": {
      "op": "JUMPDEST"
    },
    "8881": {
      "op": "SWAP5"
    },
    "8882": {
      "op": "POP"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8885": {
      "op": "DUP7"
    },
    "8886": {
      "op": "ADD"
    },
    "8887": {
      "op": "MLOAD"
    },
    "8888": {
      "op": "SWAP4"
    },
    "8889": {
      "op": "POP"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8892": {
      "op": "DUP7"
    },
    "8893": {
      "op": "ADD"
    },
    "8894": {
      "op": "MLOAD"
    },
    "8895": {
      "op": "SWAP3"
    },
    "8896": {
      "op": "POP"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8899": {
      "op": "DUP7"
    },
    "8900": {
      "op": "ADD"
    },
    "8901": {
      "op": "MLOAD"
    },
    "8902": {
      "op": "SWAP2"
    },
    "8903": {
      "op": "POP"
    },
    "8904": {
      "op": "PUSH2",
      "value": "0x22D3"
    },
    "8907": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8909": {
      "op": "DUP8"
    },
    "8910": {
      "op": "ADD"
    },
    "8911": {
      "op": "PUSH2",
      "value": "0x2275"
    },
    "8914": {
      "jump": "i",
      "op": "JUMP"
    },
    "8915": {
      "op": "JUMPDEST"
    },
    "8916": {
      "op": "SWAP1"
    },
    "8917": {
      "op": "POP"
    },
    "8918": {
      "op": "SWAP3"
    },
    "8919": {
      "op": "SWAP6"
    },
    "8920": {
      "op": "POP"
    },
    "8921": {
      "op": "SWAP3"
    },
    "8922": {
      "op": "SWAP6"
    },
    "8923": {
      "op": "SWAP1"
    },
    "8924": {
      "op": "SWAP4"
    },
    "8925": {
      "op": "POP"
    },
    "8926": {
      "jump": "o",
      "op": "JUMP"
    },
    "8927": {
      "op": "JUMPDEST"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8930": {
      "op": "DUP3"
    },
    "8931": {
      "op": "NOT"
    },
    "8932": {
      "op": "DUP3"
    },
    "8933": {
      "op": "GT"
    },
    "8934": {
      "op": "ISZERO"
    },
    "8935": {
      "op": "PUSH2",
      "value": "0x22F2"
    },
    "8938": {
      "op": "JUMPI"
    },
    "8939": {
      "op": "PUSH2",
      "value": "0x22F2"
    },
    "8942": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "8945": {
      "jump": "i",
      "op": "JUMP"
    },
    "8946": {
      "op": "JUMPDEST"
    },
    "8947": {
      "op": "POP"
    },
    "8948": {
      "op": "ADD"
    },
    "8949": {
      "op": "SWAP1"
    },
    "8950": {
      "jump": "o",
      "op": "JUMP"
    },
    "8951": {
      "op": "JUMPDEST"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8960": {
      "op": "SHL"
    },
    "8961": {
      "op": "SUB"
    },
    "8962": {
      "op": "DUP4"
    },
    "8963": {
      "op": "DUP2"
    },
    "8964": {
      "op": "AND"
    },
    "8965": {
      "op": "SWAP1"
    },
    "8966": {
      "op": "DUP4"
    },
    "8967": {
      "op": "AND"
    },
    "8968": {
      "op": "DUP2"
    },
    "8969": {
      "op": "DUP2"
    },
    "8970": {
      "op": "LT"
    },
    "8971": {
      "op": "ISZERO"
    },
    "8972": {
      "op": "PUSH2",
      "value": "0x2317"
    },
    "8975": {
      "op": "JUMPI"
    },
    "8976": {
      "op": "PUSH2",
      "value": "0x2317"
    },
    "8979": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "8982": {
      "jump": "i",
      "op": "JUMP"
    },
    "8983": {
      "op": "JUMPDEST"
    },
    "8984": {
      "op": "SUB"
    },
    "8985": {
      "op": "SWAP4"
    },
    "8986": {
      "op": "SWAP3"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "op": "POP"
    },
    "8989": {
      "op": "POP"
    },
    "8990": {
      "jump": "o",
      "op": "JUMP"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9002": {
      "op": "MSTORE"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9007": {
      "op": "MSTORE"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9012": {
      "op": "REVERT"
    },
    "9013": {
      "op": "JUMPDEST"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9018": {
      "op": "NOT"
    },
    "9019": {
      "op": "DUP3"
    },
    "9020": {
      "op": "EQ"
    },
    "9021": {
      "op": "ISZERO"
    },
    "9022": {
      "op": "PUSH2",
      "value": "0x2349"
    },
    "9025": {
      "op": "JUMPI"
    },
    "9026": {
      "op": "PUSH2",
      "value": "0x2349"
    },
    "9029": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "9032": {
      "jump": "i",
      "op": "JUMP"
    },
    "9033": {
      "op": "JUMPDEST"
    },
    "9034": {
      "op": "POP"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9037": {
      "op": "ADD"
    },
    "9038": {
      "op": "SWAP1"
    },
    "9039": {
      "jump": "o",
      "op": "JUMP"
    },
    "9040": {
      "op": "JUMPDEST"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9045": {
      "op": "DUP3"
    },
    "9046": {
      "op": "DUP5"
    },
    "9047": {
      "op": "SUB"
    },
    "9048": {
      "op": "SLT"
    },
    "9049": {
      "op": "ISZERO"
    },
    "9050": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9053": {
      "op": "JUMPI"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9056": {
      "op": "DUP1"
    },
    "9057": {
      "op": "REVERT"
    },
    "9058": {
      "op": "JUMPDEST"
    },
    "9059": {
      "op": "POP"
    },
    "9060": {
      "op": "MLOAD"
    },
    "9061": {
      "op": "SWAP2"
    },
    "9062": {
      "op": "SWAP1"
    },
    "9063": {
      "op": "POP"
    },
    "9064": {
      "jump": "o",
      "op": "JUMP"
    },
    "9065": {
      "op": "JUMPDEST"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9068": {
      "op": "DUP3"
    },
    "9069": {
      "op": "DUP3"
    },
    "9070": {
      "op": "LT"
    },
    "9071": {
      "op": "ISZERO"
    },
    "9072": {
      "op": "PUSH2",
      "value": "0x237B"
    },
    "9075": {
      "op": "JUMPI"
    },
    "9076": {
      "op": "PUSH2",
      "value": "0x237B"
    },
    "9079": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "9082": {
      "jump": "i",
      "op": "JUMP"
    },
    "9083": {
      "op": "JUMPDEST"
    },
    "9084": {
      "op": "POP"
    },
    "9085": {
      "op": "SUB"
    },
    "9086": {
      "op": "SWAP1"
    },
    "9087": {
      "jump": "o",
      "op": "JUMP"
    },
    "9088": {
      "op": "JUMPDEST"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9091": {
      "op": "DUP2"
    },
    "9092": {
      "op": "DUP2"
    },
    "9093": {
      "op": "SHR"
    },
    "9094": {
      "op": "SWAP1"
    },
    "9095": {
      "op": "DUP3"
    },
    "9096": {
      "op": "AND"
    },
    "9097": {
      "op": "DUP1"
    },
    "9098": {
      "op": "PUSH2",
      "value": "0x2394"
    },
    "9101": {
      "op": "JUMPI"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9104": {
      "op": "DUP3"
    },
    "9105": {
      "op": "AND"
    },
    "9106": {
      "op": "SWAP2"
    },
    "9107": {
      "op": "POP"
    },
    "9108": {
      "op": "JUMPDEST"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9111": {
      "op": "DUP3"
    },
    "9112": {
      "op": "LT"
    },
    "9113": {
      "op": "DUP2"
    },
    "9114": {
      "op": "EQ"
    },
    "9115": {
      "op": "ISZERO"
    },
    "9116": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9119": {
      "op": "JUMPI"
    },
    "9120": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9130": {
      "op": "MSTORE"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9135": {
      "op": "MSTORE"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9140": {
      "op": "REVERT"
    },
    "9141": {
      "op": "JUMPDEST"
    },
    "9142": {
      "op": "POP"
    },
    "9143": {
      "op": "SWAP2"
    },
    "9144": {
      "op": "SWAP1"
    },
    "9145": {
      "op": "POP"
    },
    "9146": {
      "jump": "o",
      "op": "JUMP"
    },
    "9147": {
      "op": "JUMPDEST"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9150": {
      "op": "DUP1"
    },
    "9151": {
      "op": "DUP4"
    },
    "9152": {
      "op": "SLOAD"
    },
    "9153": {
      "op": "DUP2"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9156": {
      "op": "DUP3"
    },
    "9157": {
      "op": "DUP2"
    },
    "9158": {
      "op": "SHR"
    },
    "9159": {
      "op": "SWAP2"
    },
    "9160": {
      "op": "POP"
    },
    "9161": {
      "op": "DUP1"
    },
    "9162": {
      "op": "DUP4"
    },
    "9163": {
      "op": "AND"
    },
    "9164": {
      "op": "DUP1"
    },
    "9165": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9168": {
      "op": "JUMPI"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9171": {
      "op": "DUP4"
    },
    "9172": {
      "op": "AND"
    },
    "9173": {
      "op": "SWAP3"
    },
    "9174": {
      "op": "POP"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9178": {
      "op": "DUP1"
    },
    "9179": {
      "op": "DUP5"
    },
    "9180": {
      "op": "LT"
    },
    "9181": {
      "op": "DUP3"
    },
    "9182": {
      "op": "EQ"
    },
    "9183": {
      "op": "ISZERO"
    },
    "9184": {
      "op": "PUSH2",
      "value": "0x23F7"
    },
    "9187": {
      "op": "JUMPI"
    },
    "9188": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9195": {
      "op": "SHL"
    },
    "9196": {
      "op": "DUP7"
    },
    "9197": {
      "op": "MSTORE"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9202": {
      "op": "MSTORE"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9205": {
      "op": "DUP7"
    },
    "9206": {
      "op": "REVERT"
    },
    "9207": {
      "op": "JUMPDEST"
    },
    "9208": {
      "op": "DUP2"
    },
    "9209": {
      "op": "DUP1"
    },
    "9210": {
      "op": "ISZERO"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x240B"
    },
    "9214": {
      "op": "JUMPI"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9217": {
      "op": "DUP2"
    },
    "9218": {
      "op": "EQ"
    },
    "9219": {
      "op": "PUSH2",
      "value": "0x241C"
    },
    "9222": {
      "op": "JUMPI"
    },
    "9223": {
      "op": "PUSH2",
      "value": "0x2449"
    },
    "9226": {
      "op": "JUMP"
    },
    "9227": {
      "op": "JUMPDEST"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9230": {
      "op": "NOT"
    },
    "9231": {
      "op": "DUP7"
    },
    "9232": {
      "op": "AND"
    },
    "9233": {
      "op": "DUP10"
    },
    "9234": {
      "op": "MSTORE"
    },
    "9235": {
      "op": "DUP5"
    },
    "9236": {
      "op": "DUP10"
    },
    "9237": {
      "op": "ADD"
    },
    "9238": {
      "op": "SWAP7"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "op": "PUSH2",
      "value": "0x2449"
    },
    "9243": {
      "op": "JUMP"
    },
    "9244": {
      "op": "JUMPDEST"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9247": {
      "op": "DUP11"
    },
    "9248": {
      "op": "DUP2"
    },
    "9249": {
      "op": "MSTORE"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9252": {
      "op": "SWAP1"
    },
    "9253": {
      "op": "KECCAK256"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9256": {
      "op": "JUMPDEST"
    },
    "9257": {
      "op": "DUP7"
    },
    "9258": {
      "op": "DUP2"
    },
    "9259": {
      "op": "LT"
    },
    "9260": {
      "op": "ISZERO"
    },
    "9261": {
      "op": "PUSH2",
      "value": "0x2441"
    },
    "9264": {
      "op": "JUMPI"
    },
    "9265": {
      "op": "DUP2"
    },
    "9266": {
      "op": "SLOAD"
    },
    "9267": {
      "op": "DUP12"
    },
    "9268": {
      "op": "DUP3"
    },
    "9269": {
      "op": "ADD"
    },
    "9270": {
      "op": "MSTORE"
    },
    "9271": {
      "op": "SWAP1"
    },
    "9272": {
      "op": "DUP6"
    },
    "9273": {
      "op": "ADD"
    },
    "9274": {
      "op": "SWAP1"
    },
    "9275": {
      "op": "DUP4"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "op": "PUSH2",
      "value": "0x2428"
    },
    "9280": {
      "op": "JUMP"
    },
    "9281": {
      "op": "JUMPDEST"
    },
    "9282": {
      "op": "POP"
    },
    "9283": {
      "op": "POP"
    },
    "9284": {
      "op": "DUP5"
    },
    "9285": {
      "op": "DUP10"
    },
    "9286": {
      "op": "ADD"
    },
    "9287": {
      "op": "SWAP7"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "JUMPDEST"
    },
    "9290": {
      "op": "POP"
    },
    "9291": {
      "op": "SWAP5"
    },
    "9292": {
      "op": "SWAP9"
    },
    "9293": {
      "op": "SWAP8"
    },
    "9294": {
      "op": "POP"
    },
    "9295": {
      "op": "POP"
    },
    "9296": {
      "op": "POP"
    },
    "9297": {
      "op": "POP"
    },
    "9298": {
      "op": "POP"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "op": "POP"
    },
    "9301": {
      "op": "POP"
    },
    "9302": {
      "jump": "o",
      "op": "JUMP"
    },
    "9303": {
      "op": "JUMPDEST"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9308": {
      "op": "DUP3"
    },
    "9309": {
      "op": "AND"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9312": {
      "op": "DUP2"
    },
    "9313": {
      "op": "EQ"
    },
    "9314": {
      "op": "ISZERO"
    },
    "9315": {
      "op": "PUSH2",
      "value": "0x246E"
    },
    "9318": {
      "op": "JUMPI"
    },
    "9319": {
      "op": "PUSH2",
      "value": "0x246E"
    },
    "9322": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "9325": {
      "jump": "i",
      "op": "JUMP"
    },
    "9326": {
      "op": "JUMPDEST"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "SWAP3"
    },
    "9331": {
      "op": "SWAP2"
    },
    "9332": {
      "op": "POP"
    },
    "9333": {
      "op": "POP"
    },
    "9334": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0b9decb893697321e25b32982c4c4ad53f5f18dd",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/DataTypes.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/ILendingPool.sol\";\nimport \"../interfaces/TransferHelper.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"../interfaces/IMoonSquares.sol\";\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract DailyRocket is Ownable, KeeperCompatibleInterface {\n\n    //preferably should use the http get to get the actual close price of an asset rather than aggregator\n    //to confirm during testing phase\n\n\n    //IUniswapV2Router01 public sushiRouter = IUniswapV2Router01(0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506);\n\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(\n        address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)\n    ); // mainnet address, for other addresses: https://docs.aave.com/developers/deployed-contracts/deployed-contract-instances \n    ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n    \n    IMoonSquares public moonSquare;\n    ISwapRouter public immutable swapRouter;\n    uint24 public constant poolFee = 3000;\n\n    uint128 dayCount;//Kepps track of the days\n\n    string[] predictableAssets;//all assets that a user can predict\n    address[] assetPriceAggregators;\n\n    mapping(string => bool) public activeAsset;\n\n    mapping(uint256 => mapping(string => int256)) dayAssetClosePrice; //Closing Price per asset \n\n    mapping(uint256 => uint256) dayCloseTime; //Closing Time per asset\n    \n    address Dai = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n\n    uint256 public contractStartTime; //The contract should start at 0000.00 hours\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetTotalAmount;\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetNoOfWinners;\n    \n    mapping(uint256 => mapping(string => int256[])) public dayAssetPrediction;\n\n    mapping(uint256 => mapping(string => address[])) public dayAssetPredictors;\n\n    event Predicted(address indexed _placer, int256 _prediction);\n    \n    struct Charity {\n        bytes8 name;\n        bytes32 link; //sends people to the charity's official site\n    }\n    \n    mapping (address => Charity) public presentCharities;\n\n    address[] public AcceptedTokens;\n\n    mapping(uint128 => mapping(string => address[])) public dailyAssetWinners;\n\n    //user and their prediction\n    mapping(uint128 => mapping(string => mapping(address => int256))) public dayAssetUserPrediction;\n\n    constructor(\n        address _dai,\n        ISwapRouter _swapRouter, //0xE592427A0AEce92De3Edee1F18E0157C05861564\n        IMoonSquares _moonsqr\n        )\n    {\n        AcceptedTokens.push(_dai);\n        swapRouter = _swapRouter;\n        moonSquare = _moonsqr;\n        contractStartTime = block.timestamp;\n        dayCount = 1;\n        dayCloseTime[dayCount] = contractStartTime + 86400 seconds;//adds a day to the start time. to change to an input later.\n    }//instantiate the token addresses upon deployment\n\n\n    function setNewClosingPrice() internal {\n        for (uint256 i = 0; i < assetPriceAggregators.length; i++){\n            dayAssetClosePrice[dayCount][predictableAssets[i]] = getPrice(i);\n        }\n    }\n\n    function addPaymentToken(address _address) public onlyOwner {\n        AcceptedTokens.push(_address);\n    }\n    \n    function addAssetAndAgg(string memory _asset, address _aggregator) public onlyOwner {\n        predictableAssets.push(_asset);\n        assetPriceAggregators.push(_aggregator);\n        activeAsset[_asset] = true;\n    }\n\n    function predictClosePrice(\n        string memory _asset, \n        int _prediction,\n        address token\n    ) public allowedToken(token)\n    {   \n        require(activeAsset[_asset] == true);\n        if (dayCount > 1) {\n            require(getTime() <= dayCloseTime[dayCount -1] + 64800 seconds);//After this time, one cannot\n        }\n        uint256 amount = 10000000000000000000;//the amount we set for the daily close\n        if (token != Dai) {\n            require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n            //IERC20(token).transferFrom(msg.sender, address(this), uint(amount));\n            TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount);\n\n            // Approve the router to spend the specifed `amountInMaximum` of DAI.\n            TransferHelper.safeApprove(token, address(swapRouter), amount);\n            uint amountInMaximum = 15000000000000000000;\n            ISwapRouter.ExactOutputSingleParams memory params =\n                ISwapRouter.ExactOutputSingleParams({\n                    tokenIn: token,\n                    tokenOut: Dai,\n                    fee: poolFee,\n                    recipient: address(this),\n                    deadline: block.timestamp,\n                    amountOut: amount,\n                    amountInMaximum: amountInMaximum,\n                    sqrtPriceLimitX96: 0\n                });\n\n            // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n            uint amountIn = swapRouter.exactOutputSingle(params);\n\n            // For exact output swaps, the amountInMaximum may not have all been spent.\n            // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n            if (amountIn < amountInMaximum) {\n                TransferHelper.safeApprove(Dai, address(swapRouter), 0);\n                TransferHelper.safeTransfer(Dai, msg.sender, amountInMaximum - amountIn);\n            }\n        } else {\n    \n        require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n        IERC20(Dai).transferFrom(msg.sender, address(this), uint(amount));\n        \n        }\n        dayAssetTotalAmount[dayCount][_asset] += amount;\n        //Updates The prediction mapping\n        dayAssetUserPrediction[dayCount][_asset][msg.sender] = _prediction;\n        //adds to the list of predictions\n        dayAssetPrediction[dayCount][_asset].push(_prediction);\n        //add the sender to the predictors array\n        dayAssetPredictors[dayCount][_asset].push(msg.sender);\n\n        emit Predicted(msg.sender, _prediction);\n    }\n\n    function setNumberOfWinners() private {\n        uint128 day = dayCount;\n        for (uint8 i = 0; i < predictableAssets.length; i++) {\n            require(\n                dayAssetPrediction[day][predictableAssets[i]].length\n                ==\n                dayAssetPredictors[day][predictableAssets[i]].length\n            );\n            for (uint8 p = 0; p < dayAssetPrediction[day][predictableAssets[i]].length; p++) {\n                require(dayAssetPrediction[day][predictableAssets[i]][p] == dayAssetClosePrice[day][predictableAssets[i]]);\n                dailyAssetWinners[day][predictableAssets[i]].push(dayAssetPredictors[day][predictableAssets[i]][p]);\n                dayAssetNoOfWinners[day][predictableAssets[i]] +=1;\n\n                moonSquare.addToWinners(dayAssetPredictors[day][predictableAssets[i]][p]);\n            }\n        }\n    }\n\n\n    function getTime() public view returns(uint){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x6135b13325bfC4B00278B4abC5e20bbce2D6580e);\n        (,,,uint answer,) = priceFeed.latestRoundData();\n         return uint(answer);\n    }\n\n    function getPrice(uint256 _aggindex) public view returns(int){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(assetPriceAggregators[_aggindex]);\n        (,int answer,,,) = priceFeed.latestRoundData();\n         return int(answer);\n    }\n\n    modifier allowedToken(address _token) {\n        for(uint i =0; i < predictableAssets.length; i++) {\n            require(AcceptedTokens[i] == _token);\n        }\n        _;\n    }\n\n    function claimWinnings(uint128 _day, string memory _asset) public {\n        //logic to see if the person had a winning prediction\n        require(dayAssetUserPrediction[_day][_asset][msg.sender] == dayAssetClosePrice[_day][_asset]);\n        uint256 winners = dayAssetNoOfWinners[_day][_asset];\n        IERC20(Dai).transfer(\n            msg.sender, \n            ((dayAssetTotalAmount[_day][_asset]) * 90/100)/winners\n        );\n        \n    }\n\n    function isAwinner(\n        uint128 _day,\n        string memory _asset,\n        address checked\n    ) public view returns(bool){\n        require(dayAssetUserPrediction[_day][_asset][checked] == dayAssetClosePrice[_day][_asset]);\n        return true;\n    }\n    \n    function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        if (dayCloseTime[dayCount] + 86400 seconds == getTime()){\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint256(0)));\n        }\n        if (getTime() > dayCloseTime[dayCount -1] + 64800 seconds) {\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint(1)));\n        }\n        performData = checkData;\n        \n    }\n    \n    function performUpkeep(bytes calldata performData) external override {\n         uint256 decodedValue = abi.decode(performData, (uint256));\n        if (decodedValue == 0) {\n            setNewClosingPrice();\n            setNumberOfWinners();\n            dayCount++;\n        }\n        if (decodedValue == 1) {\n            sendToIba();\n        }\n    }\n    \n    //sends non winnings to an interest bearibg account \n    function sendToIba() private {\n        require(getTime() > dayCloseTime[dayCount -1] + 64800 seconds);\n        for (uint128 i = 0; i < predictableAssets.length; i++) {\n            uint amount = ((dayAssetTotalAmount[dayCount][predictableAssets[i]]) * 10/100);\n            //IERC20(Dai).approve(IBA, amount);\n            IERC20(Dai).approve(address(lendingPool), amount);\n            lendingPool.deposit(\n                Dai,\n                uint(amount),\n                address(moonSquare),\n                0\n            );\n        }\n    }\n\n\n    \n}",
  "sourceMap": "591:9643:16:-:0;;;;;914:137;;;-1:-1:-1;;;;;;914:137:16;1002:42;914:137;;;;;;-1:-1:-1;;;1219:25:16;;1002:42;1219:23;;:25;;;;;591:9643;1002:42;1219:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1179:66;;;-1:-1:-1;;;;;1179:66:16;;;;-1:-1:-1;;;;;;1179:66:16;;;;;;1758:56;;;;;;1772:42;1758:56;;;2733:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:10;867:9:0;:23::i;:::-;2900:14:16;:25;;;;;;;;-1:-1:-1;2900:25:16;;;;;;;;-1:-1:-1;;;;;2900:25:16;;;-1:-1:-1;;;;;;2900:25:16;;;;;;;2935:24;;;;;2969:10;:21;;;;;;;;;;;;;;;3020:15;3000:17;:35;;;3045:8;:12;;-1:-1:-1;;;;;;3045:12:16;;;;;;;3092:33;;3112:13;3092:33;:::i;:::-;3080:8;;-1:-1:-1;;;;;3080:8:16;3067:22;;;;:12;:22;;;;;:58;-1:-1:-1;591:9643:16;;-1:-1:-1;;591:9643:16;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:131:40:-;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:40:o;406:560::-;535:6;543;551;604:2;592:9;583:7;579:23;575:32;572:52;;;620:1;617;610:12;572:52;652:9;646:16;671:31;696:5;671:31;:::i;:::-;771:2;756:18;;750:25;721:5;;-1:-1:-1;784:33:40;750:25;784:33;:::i;:::-;888:2;873:18;;867:25;836:7;;-1:-1:-1;901:33:40;867:25;901:33;:::i;:::-;953:7;943:17;;;406:560;;;;;:::o;971:225::-;1011:3;1042:1;1038:6;1035:1;1032:13;1029:136;;;1087:10;1082:3;1078:20;1075:1;1068:31;1122:4;1119:1;1112:15;1150:4;1147:1;1140:15;1029:136;-1:-1:-1;1181:9:40;;971:225::o;:::-;591:9643:16;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/DailyRocket.sol",
  "type": "contract"
}