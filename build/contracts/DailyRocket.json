{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "_moonsqr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_placer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "Predicted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "activeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "addAssetAndAgg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyAssetWinners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetInfo",
      "outputs": [
        {
          "internalType": "int256",
          "name": "closePrice",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "noOfPlayers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "noOfWinners",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPredictors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dayAssetUserPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "prediction",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isWinner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dayCount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_aggindex",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "checked",
          "type": "address"
        }
      ],
      "name": "isAwinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moonSquare",
      "outputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "predictClosePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "predictableAssets",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presentCharities",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "name",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "link",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "4": "contracts/DailyRocket.sol",
    "6": "interfaces/IERC20.sol",
    "7": "interfaces/ILendingPool.sol",
    "8": "interfaces/ILendingPoolAddressesProvider.sol",
    "9": "interfaces/IMoonSquares.sol"
  },
  "ast": {
    "absolutePath": "contracts/DailyRocket.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        952
      ],
      "Context": [
        1742
      ],
      "DailyRocket": [
        802
      ],
      "DataTypes": [
        1012
      ],
      "IERC20": [
        1820
      ],
      "ILendingPool": [
        1390
      ],
      "ILendingPoolAddressesProvider": [
        1541
      ],
      "IMoonSquares": [
        1549
      ],
      "KeeperCompatibleInterface": [
        971
      ],
      "Ownable": [
        906
      ],
      "TransferHelper": [
        1720
      ]
    },
    "id": 803,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:4"
      },
      {
        "absolutePath": "interfaces/DataTypes.sol",
        "file": "../interfaces/DataTypes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1013,
        "src": "56:37:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1542,
        "src": "94:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1391,
        "src": "152:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/TransferHelper.sol",
        "file": "../interfaces/TransferHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1721,
        "src": "193:42:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoonSquares.sol",
        "file": "../interfaces/IMoonSquares.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1550,
        "src": "236:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 972,
        "src": "278:80:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 953,
        "src": "359:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 907,
        "src": "495:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 906,
              "src": "575:7:4"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "575:7:4"
          },
          {
            "baseName": {
              "id": 12,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 971,
              "src": "584:25:4"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "584:25:4"
          }
        ],
        "canonicalName": "DailyRocket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802,
          971,
          906,
          1742
        ],
        "name": "DailyRocket",
        "nameLocation": "560:11:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "647:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "617:137:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1541",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1541,
                "src": "617:29:4"
              },
              "referencedDeclaration": 1541,
              "src": "617:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1541",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "705:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "697:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 17,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "697:7:4",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 20,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "697:51:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 16,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1541,
                "src": "658:29:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1541_$",
                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                }
              },
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "658:96:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1541",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "775:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "762:66:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$1390",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "ILendingPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1390,
                "src": "762:12:4"
              },
              "referencedDeclaration": 1390,
              "src": "762:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1390",
                "typeString": "contract ILendingPool"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [],
                  "expression": {
                    "argumentTypes": [],
                    "expression": {
                      "id": 26,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "802:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1541",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "getLendingPool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1475,
                    "src": "802:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                      "typeString": "function () view external returns (address)"
                    }
                  },
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "802:25:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 25,
                "name": "ILendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1390,
                "src": "789:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$1390_$",
                  "typeString": "type(contract ILendingPool)"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "789:39:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1390",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd2faa68",
            "id": 33,
            "mutability": "mutable",
            "name": "moonSquare",
            "nameLocation": "859:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "839:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMoonSquares_$1549",
              "typeString": "contract IMoonSquares"
            },
            "typeName": {
              "id": 32,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31,
                "name": "IMoonSquares",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1549,
                "src": "839:12:4"
              },
              "referencedDeclaration": 1549,
              "src": "839:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                "typeString": "contract IMoonSquares"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "266e2a56",
            "id": 35,
            "mutability": "mutable",
            "name": "dayCount",
            "nameLocation": "891:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "876:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 34,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "876:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "151bf852",
            "id": 38,
            "mutability": "mutable",
            "name": "predictableAssets",
            "nameLocation": "947:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "931:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "931:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "931:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "assetPriceAggregators",
            "nameLocation": "1016:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1006:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1006:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40,
              "nodeType": "ArrayTypeName",
              "src": "1006:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ec6f4f41",
            "id": 45,
            "mutability": "mutable",
            "name": "activeAsset",
            "nameLocation": "1075:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1044:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1052:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1044:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 43,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1062:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "DailyRocket.DayInfo",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "closePrice",
                "nameLocation": "1125:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "1118:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 46,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1118:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "noOfPlayers",
                "nameLocation": "1153:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "1145:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1145:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "noOfWinners",
                "nameLocation": "1182:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "1174:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1174:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "totalAmount",
                "nameLocation": "1211:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "1203:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 52,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1203:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DayInfo",
            "nameLocation": "1100:7:4",
            "nodeType": "StructDefinition",
            "scope": 802,
            "src": "1093:136:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "81924dfa",
            "id": 61,
            "mutability": "mutable",
            "name": "dayAssetInfo",
            "nameLocation": "1286:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1235:63:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => struct DailyRocket.DayInfo))"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 55,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1243:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1235:43:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => struct DailyRocket.DayInfo))"
              },
              "valueType": {
                "id": 59,
                "keyType": {
                  "id": 56,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1251:26:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                  "typeString": "mapping(string => struct DailyRocket.DayInfo)"
                },
                "valueType": {
                  "id": 58,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 57,
                    "name": "DayInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 54,
                    "src": "1269:7:4"
                  },
                  "referencedDeclaration": 54,
                  "src": "1269:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DayInfo_$54_storage_ptr",
                    "typeString": "struct DailyRocket.DayInfo"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "dayCloseTime",
            "nameLocation": "1440:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1412:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1420:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1412:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 63,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1431:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "Dai",
            "nameLocation": "1502:3:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1494:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1494:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1508:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0c3d5157",
            "id": 70,
            "mutability": "mutable",
            "name": "contractStartTime",
            "nameLocation": "1572:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1557:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1557:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afa3a617",
            "id": 77,
            "mutability": "mutable",
            "name": "dayAssetPrediction",
            "nameLocation": "1864:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1809:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256[]))"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1817:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1809:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256[]))"
              },
              "valueType": {
                "id": 75,
                "keyType": {
                  "id": 72,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1836:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1828:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                  "typeString": "mapping(string => int256[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 73,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ArrayTypeName",
                  "src": "1846:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                    "typeString": "int256[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f90f0b7",
            "id": 84,
            "mutability": "mutable",
            "name": "dayAssetPredictors",
            "nameLocation": "1945:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "1889:74:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 83,
              "keyType": {
                "id": 78,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1897:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1889:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 82,
                "keyType": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1916:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1908:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81,
                  "nodeType": "ArrayTypeName",
                  "src": "1926:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 90,
            "name": "Predicted",
            "nameLocation": "1976:9:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_placer",
                  "nameLocation": "2002:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1986:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "2018:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2011:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:45:4"
            },
            "src": "1970:61:4"
          },
          {
            "canonicalName": "DailyRocket.Charity",
            "id": 95,
            "members": [
              {
                "constant": false,
                "id": 92,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "2073:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 95,
                "src": "2066:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 91,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2066:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "2095:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 95,
                "src": "2087:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 93,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2087:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Charity",
            "nameLocation": "2048:7:4",
            "nodeType": "StructDefinition",
            "scope": 802,
            "src": "2041:111:4",
            "visibility": "public"
          },
          {
            "canonicalName": "DailyRocket.Prediction",
            "id": 102,
            "members": [
              {
                "constant": false,
                "id": 97,
                "mutability": "mutable",
                "name": "prediction",
                "nameLocation": "2192:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 102,
                "src": "2185:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 96,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2185:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 99,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "2220:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 102,
                "src": "2212:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2212:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "isWinner",
                "nameLocation": "2239:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 102,
                "src": "2234:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 100,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2234:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prediction",
            "nameLocation": "2164:10:4",
            "nodeType": "StructDefinition",
            "scope": 802,
            "src": "2157:97:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "126df02b",
            "id": 107,
            "mutability": "mutable",
            "name": "presentCharities",
            "nameLocation": "2300:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "2264:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$95_storage_$",
              "typeString": "mapping(address => struct DailyRocket.Charity)"
            },
            "typeName": {
              "id": 106,
              "keyType": {
                "id": 103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2273:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2264:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$95_storage_$",
                "typeString": "mapping(address => struct DailyRocket.Charity)"
              },
              "valueType": {
                "id": 105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 104,
                  "name": "Charity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "2284:7:4"
                },
                "referencedDeclaration": 95,
                "src": "2284:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Charity_$95_storage_ptr",
                  "typeString": "struct DailyRocket.Charity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ce529a",
            "id": 114,
            "mutability": "mutable",
            "name": "dailyAssetWinners",
            "nameLocation": "2379:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "2323:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint128 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 113,
              "keyType": {
                "id": 108,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2331:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2323:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint128 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 112,
                "keyType": {
                  "id": 109,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2350:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2342:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 111,
                  "nodeType": "ArrayTypeName",
                  "src": "2360:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2aba3f0",
            "id": 123,
            "mutability": "mutable",
            "name": "dayAssetUserPrediction",
            "nameLocation": "2512:22:4",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "2435:99:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
              "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
            },
            "typeName": {
              "id": 122,
              "keyType": {
                "id": 115,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2443:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2435:69:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
                "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
              },
              "valueType": {
                "id": 121,
                "keyType": {
                  "id": 116,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2462:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2454:49:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$",
                  "typeString": "mapping(string => mapping(address => struct DailyRocket.Prediction))"
                },
                "valueType": {
                  "id": 120,
                  "keyType": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2472:30:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$",
                    "typeString": "mapping(address => struct DailyRocket.Prediction)"
                  },
                  "valueType": {
                    "id": 119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 118,
                      "name": "Prediction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 102,
                      "src": "2491:10:4"
                    },
                    "referencedDeclaration": 102,
                    "src": "2491:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$102_storage_ptr",
                      "typeString": "struct DailyRocket.Prediction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "2622:270:4",
              "statements": [
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "moonSquare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2669:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 130,
                      "name": "_moonsqr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "2682:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "src": "2669:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:21:4"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133,
                      "name": "contractStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2700:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 134,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2720:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2720:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2700:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:35:4"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2745:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2756:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2745:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:12:4"
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 142,
                        "name": "dayCloseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2767:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 144,
                      "indexExpression": {
                        "id": 143,
                        "name": "dayCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2780:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2767:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 145,
                        "name": "contractStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2792:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2812:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "2792:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2767:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:58:4"
                }
              ]
            },
            "id": 151,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_moonsqr",
                  "nameLocation": "2599:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2586:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                    "typeString": "contract IMoonSquares"
                  },
                  "typeName": {
                    "id": 125,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 124,
                      "name": "IMoonSquares",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1549,
                      "src": "2586:12:4"
                    },
                    "referencedDeclaration": 1549,
                    "src": "2586:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2552:65:4"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2622:0:4"
            },
            "scope": 802,
            "src": "2541:351:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "2987:168:4",
              "statements": [
                {
                  "body": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "3055:94:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 165,
                                  "name": "dayAssetInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "3069:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                  }
                                },
                                "id": 170,
                                "indexExpression": {
                                  "id": 166,
                                  "name": "dayCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "3082:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3069:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                  "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                }
                              },
                              "id": 171,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 167,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "3092:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 169,
                                "indexExpression": {
                                  "id": 168,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 155,
                                  "src": "3110:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3092:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3069:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                "typeString": "struct DailyRocket.DayInfo storage ref"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "closePrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "3069:55:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 174,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 155,
                                "src": "3136:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 173,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "3127:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3127:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3069:69:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "3069:69:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 158,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "3017:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 159,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3021:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3021:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3017:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "initializationExpression": {
                    "assignments": [
                      155
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3010:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 179,
                        "src": "3002:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3002:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 157,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3014:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3002:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3051:3:4",
                      "subExpression": {
                        "id": 162,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3051:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ExpressionStatement",
                    "src": "3051:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2997:152:4"
                }
              ]
            },
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewClosingPrice",
            "nameLocation": "2957:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:2:4"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:4"
            },
            "scope": 802,
            "src": "2948:207:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "3249:132:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "3282:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 190,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3259:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3259:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "_aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3326:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3299:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3299:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3299:39:4"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 202,
                        "name": "activeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3348:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "id": 203,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "3360:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3348:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3370:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3348:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:26:4"
                }
              ]
            },
            "functionSelector": "81688c64",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 187,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 849,
                  "src": "3239:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3239:9:4"
              }
            ],
            "name": "addAssetAndAgg",
            "nameLocation": "3174:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3203:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "3189:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "3219:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "3211:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:43:4"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:0:4"
            },
            "scope": 802,
            "src": "3165:216:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "3487:981:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 217,
                            "name": "activeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3508:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 219,
                          "indexExpression": {
                            "id": 218,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "3520:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3508:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3531:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3508:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3500:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:36:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 224,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3550:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3561:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3550:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 241,
                  "nodeType": "IfStatement",
                  "src": "3546:135:4",
                  "trueBody": {
                    "id": 240,
                    "nodeType": "Block",
                    "src": "3564:117:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 228,
                                  "name": "getTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 481,
                                  "src": "3586:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3586:9:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 230,
                                    "name": "dayCloseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "3599:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 234,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 231,
                                      "name": "dayCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35,
                                      "src": "3612:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3622:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3612:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3599:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3634383030",
                                  "id": 235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3627:13:4",
                                  "subdenomination": "seconds",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64800_by_1",
                                    "typeString": "int_const 64800"
                                  },
                                  "value": "64800"
                                },
                                "src": "3599:41:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3586:54:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3578:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3578:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "3578:63:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3698:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "3690:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3690:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "hexValue": "3130303030303030303030303030303030303030",
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3707:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3690:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 251,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3811:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3811:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 255,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3831:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$802",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$802",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3823:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 253,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3823:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3823:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 248,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "3796:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 247,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "3789:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1820_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3789:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1820",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1779,
                            "src": "3789:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3789:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 260,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "3846:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3841:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 258,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3841:4:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3841:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3789:64:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3781:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3781:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3781:73:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3889:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3889:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3909:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DailyRocket_$802",
                              "typeString": "contract DailyRocket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DailyRocket_$802",
                              "typeString": "contract DailyRocket"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3901:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3901:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3901:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 277,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3921:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3916:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 275,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3916:4:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3916:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "3871:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 265,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "3864:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1820_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3864:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1820",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1801,
                      "src": "3864:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3864:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "3864:65:4"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "dayAssetInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "3948:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "id": 282,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3961:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3948:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                            "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                          }
                        },
                        "id": 285,
                        "indexExpression": {
                          "id": 283,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "3971:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3948:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                          "typeString": "struct DailyRocket.DayInfo storage ref"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "3948:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "3994:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3948:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:52:4"
                },
                {
                  "expression": {
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 290,
                            "name": "dayAssetUserPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "4051:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
                              "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "id": 291,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4074:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4051:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$",
                            "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                          }
                        },
                        "id": 296,
                        "indexExpression": {
                          "id": 292,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "4084:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4051:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$",
                          "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4092:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4092:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4051:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$102_storage",
                        "typeString": "struct DailyRocket.Prediction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 299,
                          "name": "_prediction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "4130:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 300,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "4155:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4155:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4178:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 298,
                        "name": "Prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "4106:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prediction_$102_storage_ptr_$",
                          "typeString": "type(struct DailyRocket.Prediction storage pointer)"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4106:87:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$102_memory_ptr",
                        "typeString": "struct DailyRocket.Prediction memory"
                      }
                    },
                    "src": "4051:142:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$102_storage",
                      "typeString": "struct DailyRocket.Prediction storage ref"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "4051:142:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4287:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 306,
                            "name": "dayAssetPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "4245:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "id": 307,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4264:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4245:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                            "typeString": "mapping(string memory => int256[] storage ref)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "id": 308,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "4274:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4245:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                          "typeString": "int256[] storage ref"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4245:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_int256_$dyn_storage_ptr_$_t_int256_$returns$__$bound_to$_t_array$_t_int256_$dyn_storage_ptr_$",
                        "typeString": "function (int256[] storage pointer,int256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4245:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4245:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 321,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4400:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4400:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 315,
                            "name": "dayAssetPredictors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "4358:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                            }
                          },
                          "id": 318,
                          "indexExpression": {
                            "id": 316,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4377:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4358:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 319,
                        "indexExpression": {
                          "id": 317,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "4387:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4358:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4358:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4358:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4358:53:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4437:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4437:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 328,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4449:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 325,
                      "name": "Predicted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "4427:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4427:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "EmitStatement",
                  "src": "4422:39:4"
                }
              ]
            },
            "functionSelector": "e4d5d7d6",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictClosePrice",
            "nameLocation": "3396:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3437:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3423:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3423:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "3458:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3454:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3413:62:4"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:0:4"
            },
            "scope": 802,
            "src": "3387:1081:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "4512:903:4",
              "statements": [
                {
                  "assignments": [
                    336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "4530:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "4522:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4522:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "id": 337,
                    "name": "dayCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "4536:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4522:22:4"
                },
                {
                  "body": {
                    "id": 454,
                    "nodeType": "Block",
                    "src": "4607:802:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 351,
                                      "name": "dayAssetPrediction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 77,
                                      "src": "4646:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                      }
                                    },
                                    "id": 353,
                                    "indexExpression": {
                                      "id": 352,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4665:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4646:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                      "typeString": "mapping(string memory => int256[] storage ref)"
                                    }
                                  },
                                  "id": 357,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 354,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4670:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 356,
                                    "indexExpression": {
                                      "id": 355,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "4688:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4670:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4646:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                    "typeString": "int256[] storage ref"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4646:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 359,
                                      "name": "dayAssetPredictors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 84,
                                      "src": "4734:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                      }
                                    },
                                    "id": 361,
                                    "indexExpression": {
                                      "id": 360,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4753:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4734:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(string memory => address[] storage ref)"
                                    }
                                  },
                                  "id": 365,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 362,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4758:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 364,
                                    "indexExpression": {
                                      "id": 363,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "4776:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4758:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4734:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4734:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4646:140:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 350,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4621:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4621:179:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "4621:179:4"
                      },
                      {
                        "body": {
                          "id": 452,
                          "nodeType": "Block",
                          "src": "4895:504:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 388,
                                            "name": "dayAssetPrediction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77,
                                            "src": "4942:18:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                            }
                                          },
                                          "id": 390,
                                          "indexExpression": {
                                            "id": 389,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 336,
                                            "src": "4961:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4942:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                            "typeString": "mapping(string memory => int256[] storage ref)"
                                          }
                                        },
                                        "id": 394,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 391,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "4966:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 393,
                                          "indexExpression": {
                                            "id": 392,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 340,
                                            "src": "4984:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4966:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4942:45:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                          "typeString": "int256[] storage ref"
                                        }
                                      },
                                      "id": 396,
                                      "indexExpression": {
                                        "id": 395,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "4988:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4942:48:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 397,
                                            "name": "dayAssetInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "5034:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                            }
                                          },
                                          "id": 399,
                                          "indexExpression": {
                                            "id": 398,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 336,
                                            "src": "5047:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5034:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                            "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                          }
                                        },
                                        "id": 403,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 400,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "5052:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 402,
                                          "indexExpression": {
                                            "id": 401,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 340,
                                            "src": "5070:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5052:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5034:39:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                          "typeString": "struct DailyRocket.DayInfo storage ref"
                                        }
                                      },
                                      "id": 404,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "closePrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 47,
                                      "src": "5034:50:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "4942:142:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 387,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4913:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4913:189:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 407,
                              "nodeType": "ExpressionStatement",
                              "src": "4913:189:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 416,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 84,
                                          "src": "5170:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 418,
                                        "indexExpression": {
                                          "id": 417,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 336,
                                          "src": "5189:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5170:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 422,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 419,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "5194:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 421,
                                        "indexExpression": {
                                          "id": 420,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 340,
                                          "src": "5212:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5194:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5170:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 424,
                                    "indexExpression": {
                                      "id": 423,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 371,
                                      "src": "5216:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5170:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 408,
                                        "name": "dailyAssetWinners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 114,
                                        "src": "5120:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => address[] storage ref))"
                                        }
                                      },
                                      "id": 413,
                                      "indexExpression": {
                                        "id": 409,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 336,
                                        "src": "5138:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5120:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(string memory => address[] storage ref)"
                                      }
                                    },
                                    "id": 414,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 410,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "5143:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 412,
                                      "indexExpression": {
                                        "id": 411,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 340,
                                        "src": "5161:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5143:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5120:44:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5120:49:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5120:99:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 426,
                              "nodeType": "ExpressionStatement",
                              "src": "5120:99:4"
                            },
                            {
                              "expression": {
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 427,
                                        "name": "dayAssetInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61,
                                        "src": "5237:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                        }
                                      },
                                      "id": 432,
                                      "indexExpression": {
                                        "id": 428,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 336,
                                        "src": "5250:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5237:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                        "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                      }
                                    },
                                    "id": 433,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 429,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "5255:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 431,
                                      "indexExpression": {
                                        "id": 430,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 340,
                                        "src": "5273:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5255:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5237:39:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                      "typeString": "struct DailyRocket.DayInfo storage ref"
                                    }
                                  },
                                  "id": 434,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "noOfWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "5237:51:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5291:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5237:55:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 437,
                              "nodeType": "ExpressionStatement",
                              "src": "5237:55:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 441,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 84,
                                          "src": "5335:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 443,
                                        "indexExpression": {
                                          "id": 442,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 336,
                                          "src": "5354:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5335:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 447,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 444,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "5359:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 446,
                                        "indexExpression": {
                                          "id": 445,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 340,
                                          "src": "5377:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5359:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5335:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 449,
                                    "indexExpression": {
                                      "id": 448,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 371,
                                      "src": "5381:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5335:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 438,
                                    "name": "moonSquare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "5311:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                                      "typeString": "contract IMoonSquares"
                                    }
                                  },
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addToWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1548,
                                  "src": "5311:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5311:73:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 451,
                              "nodeType": "ExpressionStatement",
                              "src": "5311:73:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 374,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "4832:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 375,
                                  "name": "dayAssetPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77,
                                  "src": "4836:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                  }
                                },
                                "id": 377,
                                "indexExpression": {
                                  "id": 376,
                                  "name": "day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "4855:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4836:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                  "typeString": "mapping(string memory => int256[] storage ref)"
                                }
                              },
                              "id": 381,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 378,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "4860:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 380,
                                "indexExpression": {
                                  "id": 379,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 340,
                                  "src": "4878:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4860:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4836:45:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                "typeString": "int256[] storage ref"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4836:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4832:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 453,
                        "initializationExpression": {
                          "assignments": [
                            371
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 371,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "4825:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 453,
                              "src": "4819:7:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 370,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "4819:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 373,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4829:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4819:11:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4890:3:4",
                            "subExpression": {
                              "id": 384,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "4890:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 386,
                          "nodeType": "ExpressionStatement",
                          "src": "4890:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "4814:585:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 343,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4572:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 344,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "4576:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4576:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4572:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 455,
                  "initializationExpression": {
                    "assignments": [
                      340
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4565:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4559:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4559:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 342,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4569:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4559:11:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4602:3:4",
                      "subExpression": {
                        "id": 347,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "4602:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 349,
                    "nodeType": "ExpressionStatement",
                    "src": "4602:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4554:855:4"
                }
              ]
            },
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberOfWinners",
            "nameLocation": "4483:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4501:2:4"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4512:0:4"
            },
            "scope": 802,
            "src": "4474:941:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "5466:203:4",
              "statements": [
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5498:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "5476:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 463,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 462,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 952,
                          "src": "5476:21:4"
                        },
                        "referencedDeclaration": 952,
                        "src": "5476:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 468,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5532:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 465,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "5510:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$952_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5510:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5476:99:4"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    470,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "5594:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "5589:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 469,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5589:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 474,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 471,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "5605:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "5605:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5605:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5585:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 477,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "5655:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5650:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5650:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5650:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "5643:19:4"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "5431:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:2:4"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5461:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5460:6:4"
            },
            "scope": 802,
            "src": "5422:247:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "5736:191:4",
              "statements": [
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5768:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "5746:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 489,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 488,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 952,
                          "src": "5746:21:4"
                        },
                        "referencedDeclaration": 952,
                        "src": "5746:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 492,
                          "name": "assetPriceAggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "5802:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 494,
                        "indexExpression": {
                          "id": 493,
                          "name": "_aggindex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "5824:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5802:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 491,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "5780:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$952_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5780:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5746:89:4"
                },
                {
                  "assignments": [
                    null,
                    498,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "5851:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "5847:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 497,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "5847:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 499,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "5864:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$952",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "5864:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5845:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "5913:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5909:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "5909:3:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5909:11:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 487,
                  "id": 507,
                  "nodeType": "Return",
                  "src": "5902:18:4"
                }
              ]
            },
            "functionSelector": "e7572230",
            "id": 509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "5684:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "_aggindex",
                  "nameLocation": "5701:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5693:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5693:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5692:19:4"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5732:3:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5731:5:4"
            },
            "scope": 802,
            "src": "5675:252:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "5999:475:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 517,
                                  "name": "dayAssetUserPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 123,
                                  "src": "6079:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
                                    "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                  }
                                },
                                "id": 519,
                                "indexExpression": {
                                  "id": 518,
                                  "name": "_day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "6102:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6079:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                }
                              },
                              "id": 521,
                              "indexExpression": {
                                "id": 520,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "6108:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6079:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$",
                                "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                              }
                            },
                            "id": 524,
                            "indexExpression": {
                              "expression": {
                                "id": 522,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6116:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6116:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6079:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prediction_$102_storage",
                              "typeString": "struct DailyRocket.Prediction storage ref"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prediction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "6079:59:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 526,
                                "name": "dayAssetInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "6142:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                }
                              },
                              "id": 528,
                              "indexExpression": {
                                "id": 527,
                                "name": "_day",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "6155:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6142:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                              }
                            },
                            "id": 530,
                            "indexExpression": {
                              "id": 529,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "6161:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6142:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                              "typeString": "struct DailyRocket.DayInfo storage ref"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closePrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47,
                          "src": "6142:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "6079:100:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6071:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:109:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "6071:109:4"
                },
                {
                  "assignments": [
                    536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "6198:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "6190:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6190:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 537,
                          "name": "dayAssetInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "6208:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                          }
                        },
                        "id": 539,
                        "indexExpression": {
                          "id": 538,
                          "name": "_day",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "6221:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6208:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                          "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                        }
                      },
                      "id": 541,
                      "indexExpression": {
                        "id": 540,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "6227:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6208:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                        "typeString": "struct DailyRocket.DayInfo storage ref"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "noOfWinners",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51,
                    "src": "6208:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6190:56:4"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 544,
                              "name": "dayAssetUserPrediction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "6256:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
                                "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                              }
                            },
                            "id": 549,
                            "indexExpression": {
                              "id": 545,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6279:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6256:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$",
                              "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                            }
                          },
                          "id": 550,
                          "indexExpression": {
                            "id": 546,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "6285:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6256:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$",
                            "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                          }
                        },
                        "id": 551,
                        "indexExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6293:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6293:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6256:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prediction_$102_storage",
                          "typeString": "struct DailyRocket.Prediction storage ref"
                        }
                      },
                      "id": 552,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "6256:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6316:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6256:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "6256:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6364:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6364:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 562,
                                            "name": "dayAssetInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "6391:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                            }
                                          },
                                          "id": 564,
                                          "indexExpression": {
                                            "id": 563,
                                            "name": "_day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 511,
                                            "src": "6404:4:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6391:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                            "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                          }
                                        },
                                        "id": 566,
                                        "indexExpression": {
                                          "id": 565,
                                          "name": "_asset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 513,
                                          "src": "6410:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6391:26:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                          "typeString": "struct DailyRocket.DayInfo storage ref"
                                        }
                                      },
                                      "id": 567,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 53,
                                      "src": "6391:38:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 568,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6390:40:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3930",
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6433:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_90_by_1",
                                    "typeString": "int_const 90"
                                  },
                                  "value": "90"
                                },
                                "src": "6390:45:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6436:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6390:49:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 573,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6389:51:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 574,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "6441:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6389:59:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 557,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "6337:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 556,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "6330:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1820_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6330:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1820",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1769,
                      "src": "6330:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:128:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:128:4"
                }
              ]
            },
            "functionSelector": "1cc87d88",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWinnings",
            "nameLocation": "5942:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "5964:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5956:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5956:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "5984:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5970:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5970:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5955:36:4"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5999:0:4"
            },
            "scope": 802,
            "src": "5933:541:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "6607:323:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 590,
                            "name": "dayAssetInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "6620:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                            }
                          },
                          "id": 592,
                          "indexExpression": {
                            "id": 591,
                            "name": "_day",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "6633:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6620:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                            "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                          }
                        },
                        "id": 594,
                        "indexExpression": {
                          "id": 593,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "6639:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6620:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                          "typeString": "struct DailyRocket.DayInfo storage ref"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "6620:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6661:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6620:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "6706:218:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 602,
                                        "name": "dayAssetUserPrediction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 123,
                                        "src": "6745:22:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                        }
                                      },
                                      "id": 604,
                                      "indexExpression": {
                                        "id": 603,
                                        "name": "_day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 581,
                                        "src": "6768:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6745:28:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$_$",
                                        "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                      }
                                    },
                                    "id": 606,
                                    "indexExpression": {
                                      "id": 605,
                                      "name": "_asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 583,
                                      "src": "6774:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6745:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$102_storage_$",
                                      "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                                    }
                                  },
                                  "id": 608,
                                  "indexExpression": {
                                    "id": 607,
                                    "name": "checked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 585,
                                    "src": "6782:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6745:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prediction_$102_storage",
                                    "typeString": "struct DailyRocket.Prediction storage ref"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "prediction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 97,
                                "src": "6745:56:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 610,
                                      "name": "dayAssetInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61,
                                      "src": "6837:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                      }
                                    },
                                    "id": 612,
                                    "indexExpression": {
                                      "id": 611,
                                      "name": "_day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 581,
                                      "src": "6850:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6837:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                      "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                    }
                                  },
                                  "id": 614,
                                  "indexExpression": {
                                    "id": 613,
                                    "name": "_asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 583,
                                    "src": "6856:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6837:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                    "typeString": "struct DailyRocket.DayInfo storage ref"
                                  }
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "closePrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "6837:37:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "6745:129:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 601,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6720:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6720:168:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "6720:168:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6909:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 589,
                        "id": 620,
                        "nodeType": "Return",
                        "src": "6902:11:4"
                      }
                    ]
                  },
                  "id": 622,
                  "nodeType": "IfStatement",
                  "src": "6617:307:4",
                  "trueBody": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "6664:37:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6685:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 589,
                        "id": 599,
                        "nodeType": "Return",
                        "src": "6678:12:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "85afa270",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAwinner",
            "nameLocation": "6489:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "6516:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6508:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6508:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "6544:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6530:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6530:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "checked",
                  "nameLocation": "6568:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6560:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6560:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6498:83:4"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6602:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6602:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6601:6:4"
            },
            "scope": 802,
            "src": "6480:450:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              964
            ],
            "body": {
              "id": 688,
              "nodeType": "Block",
              "src": "7064:381:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 634,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "7078:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 636,
                        "indexExpression": {
                          "id": 635,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "7091:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7078:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7103:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "7078:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 639,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "7120:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7120:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7078:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 657,
                  "nodeType": "IfStatement",
                  "src": "7074:157:4",
                  "trueBody": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "7130:101:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 642,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "7144:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7159:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7144:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "7144:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7185:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7216:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7208:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 649,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7208:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7208:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 647,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7191:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7191:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7191:28:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 654,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7184:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 633,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "7177:43:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 658,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "7244:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7244:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 660,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "7256:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 664,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 661,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "7269:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7279:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7269:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7256:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3634383030",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7284:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64800_by_1",
                          "typeString": "int_const 64800"
                        },
                        "value": "64800"
                      },
                      "src": "7256:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7244:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 683,
                  "nodeType": "IfStatement",
                  "src": "7240:157:4",
                  "trueBody": {
                    "id": 682,
                    "nodeType": "Block",
                    "src": "7299:98:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 668,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "7313:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7328:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7313:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "7313:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7354:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 677,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7382:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7377:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 675,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7377:4:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7377:7:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 673,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7360:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7360:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7360:25:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 680,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7353:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 633,
                        "id": 681,
                        "nodeType": "Return",
                        "src": "7346:40:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 684,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "7406:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 685,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "7420:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "7406:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "7406:23:4"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "6949:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 628,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7001:8:4"
            },
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "6976:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 689,
                  "src": "6961:24:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6961:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6960:26:4"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "7024:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 689,
                  "src": "7019:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7019:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "7051:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 689,
                  "src": "7038:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7038:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7018:45:4"
            },
            "scope": 802,
            "src": "6940:505:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              970
            ],
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "7524:278:4",
              "statements": [
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "decodedValue",
                      "nameLocation": "7543:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 727,
                      "src": "7535:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7535:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 699,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7569:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7583:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7583:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 702,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7582:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 697,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7558:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7558:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7558:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7535:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 705,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "7606:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7622:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7606:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 718,
                  "nodeType": "IfStatement",
                  "src": "7602:126:4",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "7625:103:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 708,
                            "name": "setNewClosingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "7639:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7639:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "7639:20:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 711,
                            "name": "setNumberOfWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "7673:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7673:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "7673:20:4"
                      },
                      {
                        "expression": {
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7707:10:4",
                          "subExpression": {
                            "id": 714,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "7707:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "7707:10:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 719,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "7741:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7757:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7741:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 726,
                  "nodeType": "IfStatement",
                  "src": "7737:59:4",
                  "trueBody": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "7760:36:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 722,
                            "name": "sendToIba",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "7774:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7774:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "7774:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "7464:13:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 693,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7515:8:4"
            },
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "7493:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "7478:26:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7478:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7477:28:4"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7524:0:4"
            },
            "scope": 802,
            "src": "7455:347:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "7898:468:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 732,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "7916:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7916:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 734,
                              "name": "dayCloseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "7928:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 738,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 735,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "7941:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7951:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7941:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7928:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3634383030",
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7956:13:4",
                            "subdenomination": "seconds",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64800_by_1",
                              "typeString": "int_const 64800"
                            },
                            "value": "64800"
                          },
                          "src": "7928:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7916:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7908:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:62:4"
                },
                {
                  "body": {
                    "id": 798,
                    "nodeType": "Block",
                    "src": "8035:325:4",
                    "statements": [
                      {
                        "assignments": [
                          756
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 756,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "8054:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 798,
                            "src": "8049:11:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 755,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8049:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 771,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 757,
                                            "name": "dayAssetInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "8065:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => struct DailyRocket.DayInfo storage ref))"
                                            }
                                          },
                                          "id": 759,
                                          "indexExpression": {
                                            "id": 758,
                                            "name": "dayCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35,
                                            "src": "8078:8:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8065:22:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DayInfo_$54_storage_$",
                                            "typeString": "mapping(string memory => struct DailyRocket.DayInfo storage ref)"
                                          }
                                        },
                                        "id": 763,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 760,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "8088:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 762,
                                          "indexExpression": {
                                            "id": 761,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 745,
                                            "src": "8106:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8088:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8065:44:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DayInfo_$54_storage",
                                          "typeString": "struct DailyRocket.DayInfo storage ref"
                                        }
                                      },
                                      "id": 764,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 53,
                                      "src": "8065:56:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 765,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8064:58:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8125:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "8064:63:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8128:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8064:67:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 770,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8063:69:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8049:83:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 778,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "8174:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1390",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1390",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8166:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 776,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8166:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8166:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 780,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "8188:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 773,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "8153:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 772,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "8146:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1820_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1820",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1789,
                            "src": "8146:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8146:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "8146:49:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 786,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "8246:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 789,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 756,
                                  "src": "8272:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8267:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 787,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8267:4:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8267:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 793,
                                  "name": "moonSquare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "8305:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                                    "typeString": "contract IMoonSquares"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1549",
                                    "typeString": "contract IMoonSquares"
                                  }
                                ],
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8297:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 791,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8297:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8297:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8334:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 783,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "8209:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$1390",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1165,
                            "src": "8209:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8209:140:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "8209:140:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 748,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "8000:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 749,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "8004:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8004:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8000:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 799,
                  "initializationExpression": {
                    "assignments": [
                      745
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7993:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "7985:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7985:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 747,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7997:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7985:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8030:3:4",
                      "subExpression": {
                        "id": 752,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "8030:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 754,
                    "nodeType": "ExpressionStatement",
                    "src": "8030:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "7980:380:4"
                }
              ]
            },
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToIba",
            "nameLocation": "7878:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7887:2:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7898:0:4"
            },
            "scope": 802,
            "src": "7869:497:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 803,
        "src": "551:7824:4",
        "usedErrors": []
      }
    ],
    "src": "31:8344:4"
  },
  "bytecode": "",
  "bytecodeSha1": "a1768fe42fa7471af762c4069e93ea353e351feb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "DailyRocket",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "60": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.checkUpkeep": {
          "50": [
            7078,
            7129,
            false
          ],
          "51": [
            7244,
            7297,
            false
          ]
        },
        "DailyRocket.claimWinnings": {
          "47": [
            6079,
            6179,
            true
          ]
        },
        "DailyRocket.isAwinner": {
          "52": [
            6745,
            6874,
            true
          ]
        },
        "DailyRocket.performUpkeep": {
          "48": [
            7606,
            7623,
            false
          ],
          "49": [
            7741,
            7758,
            false
          ]
        },
        "DailyRocket.predictClosePrice": {
          "53": [
            3508,
            3535,
            true
          ],
          "54": [
            3550,
            3562,
            false
          ],
          "55": [
            3586,
            3640,
            true
          ],
          "56": [
            3789,
            3853,
            true
          ]
        },
        "DailyRocket.sendToIba": {
          "59": [
            7916,
            7969,
            true
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "57": [
            4646,
            4786,
            true
          ],
          "58": [
            4942,
            5084,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "45": [
            2131,
            2148
          ],
          "46": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "30": [
            1926,
            1999
          ],
          "31": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "13": [
            659,
            676
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.addAssetAndAgg": {
          "15": [
            3259,
            3289
          ],
          "16": [
            3299,
            3338
          ],
          "17": [
            3348,
            3374
          ]
        },
        "DailyRocket.checkUpkeep": {
          "8": [
            7177,
            7220
          ],
          "9": [
            7144,
            7163
          ],
          "10": [
            7313,
            7332
          ],
          "11": [
            7346,
            7386
          ],
          "12": [
            7406,
            7429
          ]
        },
        "DailyRocket.claimWinnings": {
          "1": [
            6071,
            6180
          ],
          "2": [
            6256,
            6320
          ],
          "3": [
            6330,
            6458
          ]
        },
        "DailyRocket.isAwinner": {
          "18": [
            6678,
            6690
          ],
          "19": [
            6720,
            6888
          ],
          "20": [
            6902,
            6913
          ]
        },
        "DailyRocket.performUpkeep": {
          "4": [
            7639,
            7659
          ],
          "5": [
            7673,
            7693
          ],
          "6": [
            7707,
            7717
          ],
          "7": [
            7774,
            7785
          ]
        },
        "DailyRocket.predictClosePrice": {
          "21": [
            3500,
            3536
          ],
          "22": [
            3578,
            3641
          ],
          "23": [
            3781,
            3854
          ],
          "24": [
            3864,
            3929
          ],
          "25": [
            3948,
            4000
          ],
          "26": [
            4051,
            4193
          ],
          "27": [
            4245,
            4299
          ],
          "28": [
            4358,
            4411
          ],
          "29": [
            4422,
            4461
          ]
        },
        "DailyRocket.sendToIba": {
          "41": [
            7908,
            7970
          ],
          "42": [
            8146,
            8195
          ],
          "43": [
            8209,
            8349
          ],
          "44": [
            8030,
            8033
          ]
        },
        "DailyRocket.setNewClosingPrice": {
          "32": [
            3069,
            3138
          ],
          "33": [
            3051,
            3054
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "34": [
            4621,
            4800
          ],
          "35": [
            4913,
            5102
          ],
          "36": [
            5120,
            5219
          ],
          "37": [
            5237,
            5292
          ],
          "38": [
            5311,
            5384
          ],
          "39": [
            4890,
            4893
          ],
          "40": [
            4602,
            4605
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IMoonSquares",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c806381688c64116100b8578063c2aba3f01161007c578063c2aba3f01461035e578063e4d5d7d6146103cf578063e7572230146103e2578063ec6f4f41146103f5578063f2fde38b14610423578063fd2faa681461043657600080fd5b806381688c641461029357806381924dfa146102a657806385afa270146103175780638da5cb5b1461033a578063afa3a6171461034b57600080fd5b80634585e33b1161010a5780634585e33b1461021157806347ce529a14610224578063557ed1ba1461024f5780635f90f0b7146102575780636e04ff0d1461026a578063715018a61461028b57600080fd5b80630c3d515714610147578063126df02b14610163578063151bf852146101b15780631cc87d88146101d1578063266e2a56146101e6575b600080fd5b610150600b5481565b6040519081526020015b60405180910390f35b610191610171366004611873565b600e602052600090815260409020805460019091015460c09190911b9082565b604080516001600160c01b0319909316835260208301919091520161015a565b6101c46101bf36600461188e565b610449565b60405161015a91906118ff565b6101e46101df3660046119cc565b6104f5565b005b6004546101f9906001600160801b031681565b6040516001600160801b03909116815260200161015a565b6101e461021f366004611a1a565b6106fb565b610237610232366004611a8c565b610775565b6040516001600160a01b03909116815260200161015a565b6101506107c9565b610237610265366004611ae3565b610852565b61027d610278366004611a1a565b610889565b60405161015a929190611b16565b6101e4610999565b6101e46102a1366004611b39565b6109d8565b6102f76102b4366004611b87565b6008602090815260009283526040909220815180830184018051928152908401929093019190912091528054600182015460028301546003909301549192909184565b60408051948552602085019390935291830152606082015260800161015a565b61032a610325366004611bb8565b610ac7565b604051901515815260200161015a565b6000546001600160a01b0316610237565b610150610359366004611ae3565b610ba1565b6103b261036c366004611bb8565b6010602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290208054600182015460029092015490919060ff1683565b60408051938452602084019290925215159082015260600161015a565b6101e46103dd366004611c16565b610bee565b6101506103f036600461188e565b610f43565b61032a610403366004611c5b565b805160208183018101805160078252928201919093012091525460ff1681565b6101e4610431366004611873565b610fea565b600354610237906001600160a01b031681565b6005818154811061045957600080fd5b90600052602060002001600091509050805461047490611c90565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090611c90565b80156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b505050505081565b6001600160801b03821660009081526008602052604090819020905161051c908390611ccb565b908152604080519182900360209081018320546001600160801b038616600090815260109092529190209091610553908490611ccb565b908152604080516020928190038301902033600090815292529020541461057957600080fd5b6001600160801b038216600090815260086020526040808220905161059f908490611ccb565b9081526020016040518091039020600201549050600160106000856001600160801b03166001600160801b03168152602001908152602001600020836040516105e89190611ccb565b9081526040805160209281900383018120336000818152918552838220600201805460ff191696151596909617909555600a546001600160801b03891682526008909452919091206001600160a01b039092169263a9059cbb9290918591606491610654908990611ccb565b908152602001604051809103902060030154605a6106729190611cfd565b61067c9190611d1c565b6106869190611d1c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f59190611d3e565b50505050565b60006107098284018461188e565b90508061075f57610718611085565b610720611102565b600480546001600160801b031690600061073983611d60565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550505b806001141561077057610770611583565b505050565b600f60209081526000848152604090208351808501830180519281529083019285019290922091528054829081106107ac57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b600080736135b13325bfc4b00278b4abc5e20bbce2d6580e90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190611da1565b509695505050505050565b600d60209081526000848152604090208351808501830180519281529083019285019290922091528054829081106107ac57600080fd5b600060606108956107c9565b6004546001600160801b03166000908152600960205260409020546108bd9062015180611df1565b14156108ee576040805160006020820152600193508391015b60405160208183030381529060405291509150610992565b60045460099060009061090c906001906001600160801b0316611e09565b6001600160801b031681526020019081526020016000205461fd206109319190611df1565b6109396107c9565b111561095857600191506001806040516020016108d691815260200190565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b9250929050565b6000546001600160a01b031633146109cc5760405162461bcd60e51b81526004016109c390611e31565b60405180910390fd5b6109d6600061176e565b565b6000546001600160a01b03163314610a025760405162461bcd60e51b81526004016109c390611e31565b600580546001810182556000919091528251610a45917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0019060208501906117be565b5060068054600180820183556000929092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038416179055604051600790610aa3908590611ccb565b908152604051908190036020019020805491151560ff199092169190911790555050565b6001600160801b0383166000908152600860205260408082209051610aed908590611ccb565b90815260405190819003602001902054610b0957506000610b9a565b6001600160801b038416600090815260086020526040908190209051610b30908590611ccb565b908152604080519182900360209081018320546001600160801b038816600090815260109092529190209091610b67908690611ccb565b90815260408051602092819003830190206001600160a01b0386166000908152925290205414610b9657600080fd5b5060015b9392505050565b600c6020908152600084815260409020835180850183018051928152908301928501929092209152805482908110610bd857600080fd5b9060005260206000200160009250925050505481565b600782604051610bfe9190611ccb565b9081526040519081900360200190205460ff161515600114610c1f57600080fd5b60045460016001600160801b039091161115610c8b57600454600990600090610c53906001906001600160801b0316611e09565b6001600160801b031681526020019081526020016000205461fd20610c789190611df1565b610c806107c9565b1115610c8b57600080fd5b600a54604051636eb1769f60e11b8152336004820152306024820152678ac7230489e800009182916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d099190611e66565b1015610d1457600080fd5b600a546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190611d3e565b506004546001600160801b0316600090815260086020526040908190209051829190610dbc908690611ccb565b90815260200160405180910390206003016000828254610ddc9190611df1565b925050819055506040518060600160405280838152602001610dfc6107c9565b8152600060209182018190526004546001600160801b0316815260109091526040908190209051610e2e908690611ccb565b908152604080516020928190038301812033600090815290845282812085518155858501516001820155948301516002909501805460ff1916951515959095179094556004546001600160801b03168452600c90925290912090610e93908590611ccb565b90815260408051918290036020908101832080546001810182556000918252828220018690556004546001600160801b03168152600d9091522090610ed9908590611ccb565b908152604051602091819003820181208054600181018255600091825290839020018054336001600160a01b03199091168117909155848252917f10fe2ed8f3daa306f14de54294a550f0f7dec5e7138f0cf277eac43bc95aab6f910160405180910390a2505050565b60008060068381548110610f5957610f59611e7f565b9060005260206000200160009054906101000a90046001600160a01b031690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190611da1565b5091979650505050505050565b6000546001600160a01b031633146110145760405162461bcd60e51b81526004016109c390611e31565b6001600160a01b0381166110795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c3565b6110828161176e565b50565b60005b6006548110156110825761109b81610f43565b6004546001600160801b0316600090815260086020526040902060058054849081106110c9576110c9611e7f565b906000526020600020016040516110e09190611e95565b90815260405190819003602001902055806110fa81611f31565b915050611088565b6004546001600160801b031660005b60055460ff8216101561157f576001600160801b0382166000908152600d602052604090206005805460ff841690811061114d5761114d611e7f565b906000526020600020016040516111649190611e95565b908152602001604051809103902080549050600c6000846001600160801b0316815260200190815260200160002060058360ff16815481106111a8576111a8611e7f565b906000526020600020016040516111bf9190611e95565b90815260405190819003602001902054146111d957600080fd5b60005b6001600160801b0383166000908152600c602052604090206005805460ff851690811061120b5761120b611e7f565b906000526020600020016040516112229190611e95565b9081526040519081900360200190205460ff8216101561156c576001600160801b03831660009081526008602052604090206005805460ff851690811061126b5761126b611e7f565b906000526020600020016040516112829190611e95565b908152602001604051809103902060000154600c6000856001600160801b0316815260200190815260200160002060058460ff16815481106112c6576112c6611e7f565b906000526020600020016040516112dd9190611e95565b90815260200160405180910390208260ff16815481106112ff576112ff611e7f565b90600052602060002001541461131457600080fd5b6001600160801b0383166000908152600f602052604090206005805460ff851690811061134357611343611e7f565b9060005260206000200160405161135a9190611e95565b9081526020016040518091039020600d6000856001600160801b0316815260200190815260200160002060058460ff168154811061139a5761139a611e7f565b906000526020600020016040516113b19190611e95565b90815260200160405180910390208260ff16815481106113d3576113d3611e7f565b60009182526020808320909101548354600181810186559484528284200180546001600160a01b0319166001600160a01b039092169190911790556001600160801b038616825260089052604090206005805460ff861690811061143957611439611e7f565b906000526020600020016040516114509190611e95565b908152602001604051809103902060020160008282546114709190611df1565b90915550506003546001600160801b0384166000908152600d60205260409020600580546001600160a01b0390931692638ebfa8ae92919060ff87169081106114bb576114bb611e7f565b906000526020600020016040516114d29190611e95565b90815260200160405180910390208360ff16815481106114f4576114f4611e7f565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b50505050808061156490611f4c565b9150506111dc565b508061157781611f4c565b915050611111565b5050565b6004546009906000906115a1906001906001600160801b0316611e09565b6001600160801b031681526020019081526020016000205461fd206115c69190611df1565b6115ce6107c9565b116115d857600080fd5b60005b6005546001600160801b0382161015611082576004546001600160801b03908116600090815260086020526040812060058054929360649390861690811061162557611625611e7f565b9060005260206000200160405161163c9190611e95565b908152602001604051809103902060030154600a61165a9190611cfd565b6116649190611d1c565b600a5460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af11580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190611d3e565b50600254600a5460035460405163e8eda9df60e01b81526001600160a01b0392831660048201526024810185905290821660448201526000606482015291169063e8eda9df90608401600060405180830381600087803b15801561174257600080fd5b505af1158015611756573d6000803e3d6000fd5b5050505050808061176690611d60565b9150506115db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546117ca90611c90565b90600052602060002090601f0160209004810192826117ec5760008555611832565b82601f1061180557805160ff1916838001178555611832565b82800160010185558215611832579182015b82811115611832578251825591602001919060010190611817565b5061183e929150611842565b5090565b5b8082111561183e5760008155600101611843565b80356001600160a01b038116811461186e57600080fd5b919050565b60006020828403121561188557600080fd5b610b9a82611857565b6000602082840312156118a057600080fd5b5035919050565b60005b838110156118c25781810151838201526020016118aa565b838111156106f55750506000910152565b600081518084526118eb8160208601602086016118a7565b601f01601f19169290920160200192915050565b602081526000610b9a60208301846118d3565b80356001600160801b038116811461186e57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261195057600080fd5b813567ffffffffffffffff8082111561196b5761196b611929565b604051601f8301601f19908116603f0116810190828211818310171561199357611993611929565b816040528381528660208588010111156119ac57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156119df57600080fd5b6119e883611912565b9150602083013567ffffffffffffffff811115611a0457600080fd5b611a108582860161193f565b9150509250929050565b60008060208385031215611a2d57600080fd5b823567ffffffffffffffff80821115611a4557600080fd5b818501915085601f830112611a5957600080fd5b813581811115611a6857600080fd5b866020828501011115611a7a57600080fd5b60209290920196919550909350505050565b600080600060608486031215611aa157600080fd5b611aaa84611912565b9250602084013567ffffffffffffffff811115611ac657600080fd5b611ad28682870161193f565b925050604084013590509250925092565b600080600060608486031215611af857600080fd5b83359250602084013567ffffffffffffffff811115611ac657600080fd5b8215158152604060208201526000611b3160408301846118d3565b949350505050565b60008060408385031215611b4c57600080fd5b823567ffffffffffffffff811115611b6357600080fd5b611b6f8582860161193f565b925050611b7e60208401611857565b90509250929050565b60008060408385031215611b9a57600080fd5b82359150602083013567ffffffffffffffff811115611a0457600080fd5b600080600060608486031215611bcd57600080fd5b611bd684611912565b9250602084013567ffffffffffffffff811115611bf257600080fd5b611bfe8682870161193f565b925050611c0d60408501611857565b90509250925092565b60008060408385031215611c2957600080fd5b823567ffffffffffffffff811115611c4057600080fd5b611c4c8582860161193f565b95602094909401359450505050565b600060208284031215611c6d57600080fd5b813567ffffffffffffffff811115611c8457600080fd5b611b318482850161193f565b600181811c90821680611ca457607f821691505b60208210811415611cc557634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611cdd8184602087016118a7565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d1757611d17611ce7565b500290565b600082611d3957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611d5057600080fd5b81518015158114610b9a57600080fd5b60006001600160801b0380831681811415611d7d57611d7d611ce7565b6001019392505050565b805169ffffffffffffffffffff8116811461186e57600080fd5b600080600080600060a08688031215611db957600080fd5b611dc286611d87565b9450602086015193506040860151925060608601519150611de560808701611d87565b90509295509295909350565b60008219821115611e0457611e04611ce7565b500190565b60006001600160801b0383811690831681811015611e2957611e29611ce7565b039392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611e7857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c915080831680611eb157607f831692505b6020808410821415611ed157634e487b7160e01b86526022600452602486fd5b818015611ee55760018114611ef657611f23565b60ff19861689528489019650611f23565b60008a81526020902060005b86811015611f1b5781548b820152908501908301611f02565b505084890196505b509498975050505050505050565b6000600019821415611f4557611f45611ce7565b5060010190565b600060ff821660ff811415611f6357611f63611ce7565b6001019291505056fea2646970667358221220522c2ea185ec9ed172daebb475bc353215dcf5afca6aadd5a9da88e74874ccc264736f6c634300080b0033",
  "deployedSourceMap": "551:7824:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:32;;;;;;;;;160:25:11;;;148:2;133:18;1557:32:4;;;;;;;;2264:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;755:41:11;;;737:60;;828:2;813:18;;806:34;;;;710:18;2264:52:4;565:281:11;931:33:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5933:541::-;;;;;;:::i;:::-;;:::i;:::-;;876:23;;;;;-1:-1:-1;;;;;876:23:4;;;;;;-1:-1:-1;;;;;3401:47:11;;;3383:66;;3371:2;3356:18;876:23:4;3237:218:11;7455:347:4;;;;;;:::i;:::-;;:::i;2323:73::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4689:32:11;;;4671:51;;4659:2;4644:18;2323:73:4;4525:203:11;5422:247:4;;;:::i;1889:74::-;;;;;;:::i;:::-;;:::i;6940:505::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;3165:216:4:-;;;;;;:::i;:::-;;:::i;1235:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6525:25:11;;;6581:2;6566:18;;6559:34;;;;6609:18;;;6602:34;6667:2;6652:18;;6645:34;6512:3;6497:19;1235:63:4;6296:389:11;6480:450:4;;;;;;:::i;:::-;;:::i;:::-;;;7330:14:11;;7323:22;7305:41;;7293:2;7278:18;6480:450:4;7165:187:11;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1809:73:4;;;;;;:::i;:::-;;:::i;2435:99::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7731:25:11;;;7787:2;7772:18;;7765:34;;;;7842:14;7835:22;7815:18;;;7808:50;7719:2;7704:18;2435:99:4;7537:327:11;3387:1081:4;;;;;;:::i;:::-;;:::i;5675:252::-;;;;;;:::i;:::-;;:::i;1044:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:189:0;;;;;;:::i;:::-;;:::i;839:30:4:-;;;;;-1:-1:-1;;;;;839:30:4;;;931:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5933:541::-;-1:-1:-1;;;;;6142:18:4;;;;;;:12;:18;;;;;;;:26;;;;6161:6;;6142:26;:::i;:::-;;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;6079:28:4;;6142:37;6079:28;;;:22;:28;;;;;;6142:37;;6079:36;;6108:6;;6079:36;:::i;:::-;;;;;;;;;;;;;;;;6116:10;6079:48;;;;;;;;:59;:100;6071:109;;;;;;-1:-1:-1;;;;;6208:18:4;;6190:15;6208:18;;;:12;:18;;;;;;:26;;;;6227:6;;6208:26;:::i;:::-;;;;;;;;;;;;;:38;;;6190:56;;6316:4;6256:22;:28;6279:4;-1:-1:-1;;;;;6256:28:4;-1:-1:-1;;;;;6256:28:4;;;;;;;;;;;;6285:6;6256:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6293:10;6256:48;;;;;;;;;;:57;;:64;;-1:-1:-1;;6256:64:4;;;;;;;;;;;6337:3;;-1:-1:-1;;;;;6391:18:4;;;;:12;:18;;;;;;;-1:-1:-1;;;;;6337:3:4;;;;6330:20;;6293:10;;6441:7;;6436:3;;6391:26;;6410:6;;6391:26;:::i;:::-;;;;;;;;;;;;;:38;;;6433:2;6390:45;;;;:::i;:::-;:49;;;;:::i;:::-;6389:59;;;;:::i;:::-;6330:128;;-1:-1:-1;;;;;;6330:128:4;;;;;;;-1:-1:-1;;;;;10204:32:11;;;6330:128:4;;;10186:51:11;10253:18;;;10246:34;10159:18;;6330:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5999:475;5933:541;;:::o;7455:347::-;7535:20;7558:34;;;;7569:11;7558:34;:::i;:::-;7535:57;-1:-1:-1;7606:17:4;7602:126;;7639:20;:18;:20::i;:::-;7673;:18;:20::i;:::-;7707:8;:10;;-1:-1:-1;;;;;7707:10:4;;:8;:10;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7707:10:4;;;;;-1:-1:-1;;;;;7707:10:4;;;;;;;7602:126;7741:12;7757:1;7741:17;7737:59;;;7774:11;:9;:11::i;:::-;7524:278;7455:347;;:::o;2323:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2323:73:4;;-1:-1:-1;2323:73:4;;-1:-1:-1;;2323:73:4:o;5422:247::-;5461:4;5476:31;5532:42;5476:99;;5589:11;5605:9;-1:-1:-1;;;;;5605:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5585:47:4;5422:247;-1:-1:-1;;;;;;5422:247:4:o;1889:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6940:505;7019:17;7038:24;7120:9;:7;:9::i;:::-;7091:8;;-1:-1:-1;;;;;7091:8:4;7078:22;;;;:12;:22;;;;;;:38;;7103:13;7078:38;:::i;:::-;:51;7074:157;;;7191:28;;;7216:1;7191:28;;;11728:19:11;7159:4:4;;-1:-1:-1;7159:4:4;;11763:12:11;7191:28:4;;;;;;;;;;;;;7177:43;;;;;;7074:157;7269:8;;7256:12;;:25;;7269:11;;7279:1;;-1:-1:-1;;;;;7269:8:4;:11;:::i;:::-;-1:-1:-1;;;;;7256:25:4;;;;;;;;;;;;;7284:13;7256:41;;;;:::i;:::-;7244:9;:7;:9::i;:::-;:53;7240:157;;;7328:4;7313:19;;7354:4;7382:1;7360:25;;;;;;11728:19:11;;11772:2;11763:12;;11599:182;7240:157:4;7420:9;;7406:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7406:23:4;;-1:-1:-1;;;;6940:505:4;;;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3165:216:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3259:17:4::1;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3259:30:4;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3299:21:4::1;:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3299:39:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;3299:39:4::1;-1:-1:-1::0;;;;;3299:39:4;::::1;;::::0;;3348:19:::1;::::0;:11:::1;::::0;:19:::1;::::0;3360:6;;3348:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;3348:26:4;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3165:216:4:o;6480:450::-;-1:-1:-1;;;;;6620:18:4;;6602:4;6620:18;;;:12;:18;;;;;;:26;;;;6639:6;;6620:26;:::i;:::-;;;;;;;;;;;;;;:37;6617:307;;-1:-1:-1;6685:5:4;6678:12;;6617:307;-1:-1:-1;;;;;6837:18:4;;;;;;:12;:18;;;;;;;:26;;;;6856:6;;6837:26;:::i;:::-;;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;6745:28:4;;6837:37;6745:28;;;:22;:28;;;;;;6837:37;;6745:36;;6774:6;;6745:36;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6745:45:4;;;;;;;;;;:56;:129;6720:168;;;;;;-1:-1:-1;6909:4:4;6617:307;6480:450;;;;;:::o;1809:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3387:1081::-;3508:11;3520:6;3508:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:27;;:19;:27;3500:36;;;;;;3550:8;;3561:1;-1:-1:-1;;;;;3550:8:4;;;:12;3546:135;;;3612:8;;3599:12;;:25;;3612:11;;3622:1;;-1:-1:-1;;;;;3612:8:4;:11;:::i;:::-;-1:-1:-1;;;;;3599:25:4;;;;;;;;;;;;;3627:13;3599:41;;;;:::i;:::-;3586:9;:7;:9::i;:::-;:54;;3578:63;;;;;;3796:3;;3789:48;;-1:-1:-1;;;3789:48:4;;3811:10;3789:48;;;12610:34:11;3831:4:4;12660:18:11;;;12653:43;3707:20:4;;;;-1:-1:-1;;;;;3796:3:4;;;;3789:21;;12545:18:11;;3789:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;3781:73;;;;;;3871:3;;3864:65;;-1:-1:-1;;;3864:65:4;;3889:10;3864:65;;;13136:34:11;3909:4:4;13186:18:11;;;13179:43;13238:18;;;13231:34;;;-1:-1:-1;;;;;3871:3:4;;;;3864:24;;13071:18:11;;3864:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3961:8:4;;-1:-1:-1;;;;;3961:8:4;3948:22;;;;:12;:22;;;;;;;:30;;3994:6;;3948:22;:30;;3971:6;;3948:30;:::i;:::-;;;;;;;;;;;;;:42;;;:52;;;;;;;:::i;:::-;;;;;;;;4106:87;;;;;;;;4130:11;4106:87;;;;4155:9;:7;:9::i;:::-;4106:87;;4178:5;4106:87;;;;;;;4074:8;;-1:-1:-1;;;;;4074:8:4;4051:32;;:22;:32;;;;;;;;:40;;;;4084:6;;4051:40;:::i;:::-;;;;;;;;;;;;;;;;4092:10;4051:52;;;;;;;;;;:142;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4051:142:4;;;;;;;;;;;4264:8;;-1:-1:-1;;;;;4264:8:4;4245:28;;:18;:28;;;;;;;:36;;4274:6;;4245:36;:::i;:::-;;;;;;;;;;;;;;;;;:54;;;;;;;-1:-1:-1;4245:54:4;;;;;;;;;;4377:8;;-1:-1:-1;;;;;4377:8:4;4358:28;;:18;:28;;;;;:36;;4387:6;;4358:36;:::i;:::-;;;;;;;;;;;;;;;:53;;;;;;;-1:-1:-1;4358:53:4;;;;;;;;;;4400:10;-1:-1:-1;;;;;;4358:53:4;;;;;;;;160:25:11;;;4400:10:4;4427:34;;133:18:11;4427:34:4;;;;;;;3487:981;3387:1081;;:::o;5675:252::-;5732:3;5746:31;5802:21;5824:9;5802:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5802:32:4;5746:89;;5847:10;5864:9;-1:-1:-1;;;;;5864:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5845:46:4;;5675:252;-1:-1:-1;;;;;;;5675:252:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;13610:2:11;1926:73:0::1;::::0;::::1;13592:21:11::0;13649:2;13629:18;;;13622:30;13688:34;13668:18;;;13661:62;-1:-1:-1;;;13739:18:11;;;13732:36;13785:19;;1926:73:0::1;13408:402:11::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2948:207:4:-;3002:9;2997:152;3021:21;:28;3017:32;;2997:152;;;3127:11;3136:1;3127:8;:11::i;:::-;3082:8;;-1:-1:-1;;;;;3082:8:4;3069:22;;;;:12;:22;;;;;3092:17;:20;;3110:1;;3092:20;;;;;;:::i;:::-;;;;;;;;3069:44;;;;;;:::i;:::-;;;;;;;;;;;;;;:69;3051:3;;;;:::i;:::-;;;;2997:152;;4474:941;4536:8;;-1:-1:-1;;;;;4536:8:4;4522:11;4554:855;4576:17;:24;4572:28;;;;4554:855;;;-1:-1:-1;;;;;4734:23:4;;;;;;:18;:23;;;;;4758:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4734:45;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;4646:18;:23;4665:3;-1:-1:-1;;;;;4646:23:4;;;;;;;;;;;;4670:17;4688:1;4670:20;;;;;;;;;;:::i;:::-;;;;;;;;4646:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;:140;4621:179;;;;;;4819:7;4814:585;-1:-1:-1;;;;;4836:23:4;;;;;;:18;:23;;;;;4860:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4836:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;4832:56;;;;4814:585;;;-1:-1:-1;;;;;5034:17:4;;;;;;:12;:17;;;;;5052;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;5034:39;;;;;;:::i;:::-;;;;;;;;;;;;;:50;;;4942:18;:23;4961:3;-1:-1:-1;;;;;4942:23:4;;;;;;;;;;;;4966:17;4984:1;4966:20;;;;;;;;;;:::i;:::-;;;;;;;;4942:45;;;;;;:::i;:::-;;;;;;;;;;;;;4988:1;4942:48;;;;;;;;;;:::i;:::-;;;;;;;;;:142;4913:189;;;;;;-1:-1:-1;;;;;5120:22:4;;;;;;:17;:22;;;;;5143:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;5120:44;;;;;;:::i;:::-;;;;;;;;;;;;;5170:18;:23;5189:3;-1:-1:-1;;;;;5170:23:4;;;;;;;;;;;;5194:17;5212:1;5194:20;;;;;;;;;;:::i;:::-;;;;;;;;5170:45;;;;;;:::i;:::-;;;;;;;;;;;;;5216:1;5170:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5120:99;;5170:48;5120:99;;;;;;;;;;;;;;-1:-1:-1;;;;;;5120:99:4;-1:-1:-1;;;;;5170:48:4;;;5120:99;;;;;;-1:-1:-1;;;;;5237:17:4;;;;:12;:17;;;;;5255;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;5237:39;;;;;;:::i;:::-;;;;;;;;;;;;;:51;;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;;5311:10:4;;-1:-1:-1;;;;;5335:23:4;;5311:10;5335:23;;;:18;:23;;;;;5359:17;:20;;-1:-1:-1;;;;;5311:10:4;;;;:23;;5335;5359:17;:20;;;;;;;;;;:::i;:::-;;;;;;;;5335:45;;;;;;:::i;:::-;;;;;;;;;;;;;5381:1;5335:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;5311:73;;;;;;-1:-1:-1;;;;;;5311:73:4;;;-1:-1:-1;;;;;5335:48:4;;;5311:73;;;4671:51:11;4644:18;;5311:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4890:3;;;;;:::i;:::-;;;;4814:585;;;-1:-1:-1;4602:3:4;;;;:::i;:::-;;;;4554:855;;;;4512:903;4474:941::o;7869:497::-;7941:8;;7928:12;;:25;;7941:11;;7951:1;;-1:-1:-1;;;;;7941:8:4;:11;:::i;:::-;-1:-1:-1;;;;;7928:25:4;;;;;;;;;;;;;7956:13;7928:41;;;;:::i;:::-;7916:9;:7;:9::i;:::-;:53;7908:62;;;;;;7985:9;7980:380;8004:17;:24;-1:-1:-1;;;;;8000:28:4;;;7980:380;;;8078:8;;-1:-1:-1;;;;;8078:8:4;;;8049:11;8065:22;;;:12;:22;;;;;8088:17;:20;;8049:11;;8128:3;;8088:20;;;;;;;;;;:::i;:::-;;;;;;;;8065:44;;;;;;:::i;:::-;;;;;;;;;;;;;:56;;;8125:2;8064:63;;;;:::i;:::-;:67;;;;:::i;:::-;8153:3;;8174:11;;8146:49;;-1:-1:-1;;;8146:49:4;;-1:-1:-1;;;;;8174:11:4;;;8146:49;;;10186:51:11;10253:18;;;10246:34;;;8049:83:4;;-1:-1:-1;8153:3:4;;8146:19;;10159:18:11;;8146:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8209:11:4;;8246:3;;8305:10;;8209:140;;-1:-1:-1;;;8209:140:4;;-1:-1:-1;;;;;8246:3:4;;;8209:140;;;15641:34:11;15691:18;;;15684:34;;;8305:10:4;;;15734:18:11;;;15727:43;8209:11:4;15786:18:11;;;15779:47;8209:11:4;;;:19;;15575::11;;8209:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8035:325;8030:3;;;;;:::i;:::-;;;;7980:380;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:173:11;264:20;;-1:-1:-1;;;;;313:31:11;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;851:180::-;910:6;963:2;951:9;942:7;938:23;934:32;931:52;;;979:1;976;969:12;931:52;-1:-1:-1;1002:23:11;;851:180;-1:-1:-1;851:180:11:o;1036:258::-;1108:1;1118:113;1132:6;1129:1;1126:13;1118:113;;;1208:11;;;1202:18;1189:11;;;1182:39;1154:2;1147:10;1118:113;;;1249:6;1246:1;1243:13;1240:48;;;-1:-1:-1;;1284:1:11;1266:16;;1259:27;1036:258::o;1299:::-;1341:3;1379:5;1373:12;1406:6;1401:3;1394:19;1422:63;1478:6;1471:4;1466:3;1462:14;1455:4;1448:5;1444:16;1422:63;:::i;:::-;1539:2;1518:15;-1:-1:-1;;1514:29:11;1505:39;;;;1546:4;1501:50;;1299:258;-1:-1:-1;;1299:258:11:o;1562:220::-;1711:2;1700:9;1693:21;1674:4;1731:45;1772:2;1761:9;1757:18;1749:6;1731:45;:::i;1787:188::-;1855:20;;-1:-1:-1;;;;;1904:46:11;;1894:57;;1884:85;;1965:1;1962;1955:12;1980:127;2041:10;2036:3;2032:20;2029:1;2022:31;2072:4;2069:1;2062:15;2096:4;2093:1;2086:15;2112:719;2155:5;2208:3;2201:4;2193:6;2189:17;2185:27;2175:55;;2226:1;2223;2216:12;2175:55;2262:6;2249:20;2288:18;2325:2;2321;2318:10;2315:36;;;2331:18;;:::i;:::-;2406:2;2400:9;2374:2;2460:13;;-1:-1:-1;;2456:22:11;;;2480:2;2452:31;2448:40;2436:53;;;2504:18;;;2524:22;;;2501:46;2498:72;;;2550:18;;:::i;:::-;2590:10;2586:2;2579:22;2625:2;2617:6;2610:18;2671:3;2664:4;2659:2;2651:6;2647:15;2643:26;2640:35;2637:55;;;2688:1;2685;2678:12;2637:55;2752:2;2745:4;2737:6;2733:17;2726:4;2718:6;2714:17;2701:54;2799:1;2792:4;2787:2;2779:6;2775:15;2771:26;2764:37;2819:6;2810:15;;;;;;2112:719;;;;:::o;2836:396::-;2914:6;2922;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;3014:29;3033:9;3014:29;:::i;:::-;3004:39;;3094:2;3083:9;3079:18;3066:32;3121:18;3113:6;3110:30;3107:50;;;3153:1;3150;3143:12;3107:50;3176;3218:7;3209:6;3198:9;3194:22;3176:50;:::i;:::-;3166:60;;;2836:396;;;;;:::o;3460:591::-;3530:6;3538;3591:2;3579:9;3570:7;3566:23;3562:32;3559:52;;;3607:1;3604;3597:12;3559:52;3647:9;3634:23;3676:18;3717:2;3709:6;3706:14;3703:34;;;3733:1;3730;3723:12;3703:34;3771:6;3760:9;3756:22;3746:32;;3816:7;3809:4;3805:2;3801:13;3797:27;3787:55;;3838:1;3835;3828:12;3787:55;3878:2;3865:16;3904:2;3896:6;3893:14;3890:34;;;3920:1;3917;3910:12;3890:34;3965:7;3960:2;3951:6;3947:2;3943:15;3939:24;3936:37;3933:57;;;3986:1;3983;3976:12;3933:57;4017:2;4009:11;;;;;4039:6;;-1:-1:-1;3460:591:11;;-1:-1:-1;;;;3460:591:11:o;4056:464::-;4143:6;4151;4159;4212:2;4200:9;4191:7;4187:23;4183:32;4180:52;;;4228:1;4225;4218:12;4180:52;4251:29;4270:9;4251:29;:::i;:::-;4241:39;;4331:2;4320:9;4316:18;4303:32;4358:18;4350:6;4347:30;4344:50;;;4390:1;4387;4380:12;4344:50;4413;4455:7;4446:6;4435:9;4431:22;4413:50;:::i;:::-;4403:60;;;4510:2;4499:9;4495:18;4482:32;4472:42;;4056:464;;;;;:::o;4733:458::-;4820:6;4828;4836;4889:2;4877:9;4868:7;4864:23;4860:32;4857:52;;;4905:1;4902;4895:12;4857:52;4941:9;4928:23;4918:33;;5002:2;4991:9;4987:18;4974:32;5029:18;5021:6;5018:30;5015:50;;;5061:1;5058;5051:12;5196:299;5379:6;5372:14;5365:22;5354:9;5347:41;5424:2;5419;5408:9;5404:18;5397:30;5328:4;5444:45;5485:2;5474:9;5470:18;5462:6;5444:45;:::i;:::-;5436:53;5196:299;-1:-1:-1;;;;5196:299:11:o;5500:396::-;5578:6;5586;5639:2;5627:9;5618:7;5614:23;5610:32;5607:52;;;5655:1;5652;5645:12;5607:52;5695:9;5682:23;5728:18;5720:6;5717:30;5714:50;;;5760:1;5757;5750:12;5714:50;5783;5825:7;5816:6;5805:9;5801:22;5783:50;:::i;:::-;5773:60;;;5852:38;5886:2;5875:9;5871:18;5852:38;:::i;:::-;5842:48;;5500:396;;;;;:::o;5901:390::-;5979:6;5987;6040:2;6028:9;6019:7;6015:23;6011:32;6008:52;;;6056:1;6053;6046:12;6008:52;6092:9;6079:23;6069:33;;6153:2;6142:9;6138:18;6125:32;6180:18;6172:6;6169:30;6166:50;;;6212:1;6209;6202:12;6690:470;6777:6;6785;6793;6846:2;6834:9;6825:7;6821:23;6817:32;6814:52;;;6862:1;6859;6852:12;6814:52;6885:29;6904:9;6885:29;:::i;:::-;6875:39;;6965:2;6954:9;6950:18;6937:32;6992:18;6984:6;6981:30;6978:50;;;7024:1;7021;7014:12;6978:50;7047;7089:7;7080:6;7069:9;7065:22;7047:50;:::i;:::-;7037:60;;;7116:38;7150:2;7139:9;7135:18;7116:38;:::i;:::-;7106:48;;6690:470;;;;;:::o;7869:389::-;7946:6;7954;8007:2;7995:9;7986:7;7982:23;7978:32;7975:52;;;8023:1;8020;8013:12;7975:52;8063:9;8050:23;8096:18;8088:6;8085:30;8082:50;;;8128:1;8125;8118:12;8082:50;8151;8193:7;8184:6;8173:9;8169:22;8151:50;:::i;:::-;8141:60;8248:2;8233:18;;;;8220:32;;-1:-1:-1;;;;7869:389:11:o;8263:322::-;8332:6;8385:2;8373:9;8364:7;8360:23;8356:32;8353:52;;;8401:1;8398;8391:12;8353:52;8441:9;8428:23;8474:18;8466:6;8463:30;8460:50;;;8506:1;8503;8496:12;8460:50;8529;8571:7;8562:6;8551:9;8547:22;8529:50;:::i;8819:380::-;8898:1;8894:12;;;;8941;;;8962:61;;9016:4;9008:6;9004:17;8994:27;;8962:61;9069:2;9061:6;9058:14;9038:18;9035:38;9032:161;;;9115:10;9110:3;9106:20;9103:1;9096:31;9150:4;9147:1;9140:15;9178:4;9175:1;9168:15;9032:161;;8819:380;;;:::o;9204:276::-;9335:3;9373:6;9367:13;9389:53;9435:6;9430:3;9423:4;9415:6;9411:17;9389:53;:::i;:::-;9458:16;;;;;9204:276;-1:-1:-1;;9204:276:11:o;9485:127::-;9546:10;9541:3;9537:20;9534:1;9527:31;9577:4;9574:1;9567:15;9601:4;9598:1;9591:15;9617:168;9657:7;9723:1;9719;9715:6;9711:14;9708:1;9705:21;9700:1;9693:9;9686:17;9682:45;9679:71;;;9730:18;;:::i;:::-;-1:-1:-1;9770:9:11;;9617:168::o;9790:217::-;9830:1;9856;9846:132;;9900:10;9895:3;9891:20;9888:1;9881:31;9935:4;9932:1;9925:15;9963:4;9960:1;9953:15;9846:132;-1:-1:-1;9992:9:11;;9790:217::o;10291:277::-;10358:6;10411:2;10399:9;10390:7;10386:23;10382:32;10379:52;;;10427:1;10424;10417:12;10379:52;10459:9;10453:16;10512:5;10505:13;10498:21;10491:5;10488:32;10478:60;;10534:1;10531;10524:12;10573:226;10612:3;-1:-1:-1;;;;;10709:2:11;10702:5;10698:14;10736:2;10727:7;10724:15;10721:41;;;10742:18;;:::i;:::-;10791:1;10778:15;;10573:226;-1:-1:-1;;;10573:226:11:o;10804:179::-;10882:13;;10935:22;10924:34;;10914:45;;10904:73;;10973:1;10970;10963:12;10988:473;11091:6;11099;11107;11115;11123;11176:3;11164:9;11155:7;11151:23;11147:33;11144:53;;;11193:1;11190;11183:12;11144:53;11216:39;11245:9;11216:39;:::i;:::-;11206:49;;11295:2;11284:9;11280:18;11274:25;11264:35;;11339:2;11328:9;11324:18;11318:25;11308:35;;11383:2;11372:9;11368:18;11362:25;11352:35;;11406:49;11450:3;11439:9;11435:19;11406:49;:::i;:::-;11396:59;;10988:473;;;;;;;;:::o;11466:128::-;11506:3;11537:1;11533:6;11530:1;11527:13;11524:39;;;11543:18;;:::i;:::-;-1:-1:-1;11579:9:11;;11466:128::o;11786:246::-;11826:4;-1:-1:-1;;;;;11939:10:11;;;;11909;;11961:12;;;11958:38;;;11976:18;;:::i;:::-;12013:13;;11786:246;-1:-1:-1;;;11786:246:11:o;12037:356::-;12239:2;12221:21;;;12258:18;;;12251:30;12317:34;12312:2;12297:18;;12290:62;12384:2;12369:18;;12037:356::o;12707:184::-;12777:6;12830:2;12818:9;12809:7;12805:23;12801:32;12798:52;;;12846:1;12843;12836:12;12798:52;-1:-1:-1;12869:16:11;;12707:184;-1:-1:-1;12707:184:11:o;13276:127::-;13337:10;13332:3;13328:20;13325:1;13318:31;13368:4;13365:1;13358:15;13392:4;13389:1;13382:15;13941:1099;14069:3;14098:1;14131:6;14125:13;14161:3;14183:1;14211:9;14207:2;14203:18;14193:28;;14271:2;14260:9;14256:18;14293;14283:61;;14337:4;14329:6;14325:17;14315:27;;14283:61;14363:2;14411;14403:6;14400:14;14380:18;14377:38;14374:165;;;-1:-1:-1;;;14438:33:11;;14494:4;14491:1;14484:15;14524:4;14445:3;14512:17;14374:165;14555:18;14582:104;;;;14700:1;14695:320;;;;14548:467;;14582:104;-1:-1:-1;;14615:24:11;;14603:37;;14660:16;;;;-1:-1:-1;14582:104:11;;14695:320;13888:1;13881:14;;;13925:4;13912:18;;14790:1;14804:165;14818:6;14815:1;14812:13;14804:165;;;14896:14;;14883:11;;;14876:35;14939:16;;;;14833:10;;14804:165;;;14808:3;;14998:6;14993:3;14989:16;14982:23;;14548:467;-1:-1:-1;15031:3:11;;13941:1099;-1:-1:-1;;;;;;;;13941:1099:11:o;15045:135::-;15084:3;-1:-1:-1;;15105:17:11;;15102:43;;;15125:18;;:::i;:::-;-1:-1:-1;15172:1:11;15161:13;;15045:135::o;15185:175::-;15222:3;15266:4;15259:5;15255:16;15295:4;15286:7;15283:17;15280:43;;;15303:18;;:::i;:::-;15352:1;15339:15;;15185:175;-1:-1:-1;;15185:175:11:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    551,
    8375
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81688C64 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC2ABA3F0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC2ABA3F0 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xE4D5D7D6 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xEC6F4F41 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xFD2FAA68 EQ PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81688C64 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x81924DFA EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x85AFA270 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xAFA3A617 EQ PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x47CE529A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x5F90F0B7 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3D5157 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x126DF02B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x151BF852 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x1CC87D88 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x266E2A56 EQ PUSH2 0x1E6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x188E JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x150 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP3 SWAP2 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x999 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x237 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE3 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x150 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x188E JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST PUSH2 0x32A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x237 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x51C SWAP1 DUP4 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SWAP1 SWAP2 PUSH2 0x553 SWAP1 DUP5 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x59F SWAP1 DUP5 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 DUP6 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x654 SWAP1 DUP10 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x5A PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x709 DUP3 DUP5 ADD DUP5 PUSH2 0x188E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x75F JUMPI PUSH2 0x718 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x720 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x0 PUSH2 0x739 DUP4 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x770 JUMPI PUSH2 0x770 PUSH2 0x1583 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP DUP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x823 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x895 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8BD SWAP1 PUSH3 0x15180 PUSH2 0x1DF1 JUMP JUMPDEST EQ ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP4 POP DUP4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP SWAP2 POP PUSH2 0x992 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x90C SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x939 PUSH2 0x7C9 JUMP JUMPDEST GT ISZERO PUSH2 0x958 JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D6 PUSH1 0x0 PUSH2 0x176E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH2 0xA45 SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x17BE JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x7 SWAP1 PUSH2 0xAA3 SWAP1 DUP6 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xAED SWAP1 DUP6 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xB09 JUMPI POP PUSH1 0x0 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xB30 SWAP1 DUP6 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SWAP1 SWAP2 PUSH2 0xB67 SWAP1 DUP7 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0xB96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC53 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0x7C9 JUMP JUMPDEST GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x8AC7230489E80000 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0xDBC SWAP1 DUP7 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDFC PUSH2 0x7C9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xE2E SWAP1 DUP7 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP5 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0xE93 SWAP1 DUP6 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 PUSH2 0xED9 SWAP1 DUP6 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP5 DUP3 MSTORE SWAP2 PUSH32 0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF59 JUMPI PUSH2 0xF59 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDD SWAP2 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x176E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x109B DUP2 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x10C9 JUMPI PUSH2 0x10C9 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x10FA DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x157F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1164 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH1 0xC PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x11A8 JUMPI PUSH2 0x11A8 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x11BF SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD EQ PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x156C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x126B JUMPI PUSH2 0x126B PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1282 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x12C6 JUMPI PUSH2 0x12C6 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x12FF JUMPI PUSH2 0x12FF PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ PUSH2 0x1314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xD PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x139A JUMPI PUSH2 0x139A PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x13B1 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x13D3 JUMPI PUSH2 0x13D3 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1450 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8EBFA8AE SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14F4 JUMPI PUSH2 0x14F4 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1555 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1564 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11DC JUMP JUMPDEST POP DUP1 PUSH2 0x1577 DUP2 PUSH2 0x1F4C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1111 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x15A1 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x15C6 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x15CE PUSH2 0x7C9 JUMP JUMPDEST GT PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND LT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x64 SWAP4 SWAP1 DUP7 AND SWAP1 DUP2 LT PUSH2 0x1625 JUMPI PUSH2 0x1625 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xA PUSH2 0x165A SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1756 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x1766 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17CA SWAP1 PUSH2 0x1C90 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17EC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1832 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1805 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1832 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1832 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1832 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1817 JUMP JUMPDEST POP PUSH2 0x183E SWAP3 SWAP2 POP PUSH2 0x1842 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1843 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9A DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18C2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6F5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x18EB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18D3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x196B JUMPI PUSH2 0x196B PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1993 PUSH2 0x1929 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x19AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E8 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A10 DUP6 DUP3 DUP7 ADD PUSH2 0x193F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAA DUP5 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD2 DUP7 DUP3 DUP8 ADD PUSH2 0x193F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1B31 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x193F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1B7E PUSH1 0x20 DUP5 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD6 DUP5 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BFE DUP7 DUP3 DUP8 ADD PUSH2 0x193F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C0D PUSH1 0x40 DUP6 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C4C DUP6 DUP3 DUP7 ADD PUSH2 0x193F JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B31 DUP5 DUP3 DUP6 ADD PUSH2 0x193F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1CDD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x18A7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D17 JUMPI PUSH2 0x1D17 PUSH2 0x1CE7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7D PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC2 DUP7 PUSH2 0x1D87 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1DE5 PUSH1 0x80 DUP8 ADD PUSH2 0x1D87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x1CE7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1E29 JUMPI PUSH2 0x1E29 PUSH2 0x1CE7 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1EB1 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1ED1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1EF6 JUMPI PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1F1B JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1F02 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F45 PUSH2 0x1CE7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F63 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0x2C 0x2E LOG1 DUP6 0xEC SWAP15 0xD1 PUSH19 0xDAEBB475BC353215DCF5AFCA6AADD5A9DA88E7 BASEFEE PUSH21 0xCCC264736F6C634300080B00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81688C64"
    },
    "38": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "49": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "60": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35E"
    },
    "64": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE4D5D7D6"
    },
    "71": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CF"
    },
    "75": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE7572230"
    },
    "82": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E2"
    },
    "86": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xEC6F4F41"
    },
    "93": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F5"
    },
    "97": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x423"
    },
    "108": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD2FAA68"
    },
    "115": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x436"
    },
    "119": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "REVERT",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81688C64"
    },
    "131": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x293"
    },
    "135": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81924DFA"
    },
    "142": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A6"
    },
    "146": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85AFA270"
    },
    "153": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x317"
    },
    "157": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33A"
    },
    "168": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAFA3A617"
    },
    "175": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34B"
    },
    "179": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "180": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "183": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "REVERT",
      "path": "4"
    },
    "184": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4585E33B"
    },
    "191": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "GT",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4585E33B"
    },
    "202": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x211"
    },
    "206": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x47CE529A"
    },
    "213": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x224"
    },
    "217": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x557ED1BA"
    },
    "224": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24F"
    },
    "228": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5F90F0B7"
    },
    "235": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x257"
    },
    "239": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E04FF0D"
    },
    "246": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "247": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26A"
    },
    "250": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "251": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "257": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "258": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28B"
    },
    "261": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "262": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "265": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "REVERT",
      "path": "4"
    },
    "266": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC3D5157"
    },
    "273": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x126DF02B"
    },
    "284": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x163"
    },
    "288": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x151BF852"
    },
    "295": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B1"
    },
    "299": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1CC87D88"
    },
    "306": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1"
    },
    "310": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x266E2A56"
    },
    "317": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "EQ",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E6"
    },
    "321": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "322": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        551,
        8375
      ],
      "op": "REVERT",
      "path": "4"
    },
    "327": {
      "offset": [
        1557,
        1589
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "328": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150"
    },
    "331": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "333": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "334": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "DUP2",
      "path": "4"
    },
    "335": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "JUMP",
      "path": "4"
    },
    "336": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "337": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "339": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "345": {
      "op": "ADD"
    },
    "346": {
      "offset": [
        1557,
        1589
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "347": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "349": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "350": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "DUP1",
      "path": "4"
    },
    "351": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "352": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "SUB",
      "path": "4"
    },
    "353": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "354": {
      "fn": null,
      "offset": [
        1557,
        1589
      ],
      "op": "RETURN",
      "path": "4"
    },
    "355": {
      "offset": [
        2264,
        2316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "356": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x191"
    },
    "359": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x171"
    },
    "362": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "363": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "365": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1873"
    },
    "368": {
      "fn": null,
      "jump": "i",
      "offset": [
        2264,
        2316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "369": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "370": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "372": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "374": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "375": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "377": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "378": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "DUP2",
      "path": "4"
    },
    "379": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "380": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "382": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "383": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "384": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "DUP1",
      "path": "4"
    },
    "385": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "386": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "388": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "389": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "390": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "ADD",
      "path": "4"
    },
    "391": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "392": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC0"
    },
    "394": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "395": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "396": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "397": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SHL",
      "path": "4"
    },
    "398": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "399": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "DUP3",
      "path": "4"
    },
    "400": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "401": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "402": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "404": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "DUP1",
      "path": "4"
    },
    "405": {
      "fn": null,
      "offset": [
        2264,
        2316
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "op": "NOT"
    },
    "415": {
      "op": "SWAP1"
    },
    "416": {
      "op": "SWAP4"
    },
    "417": {
      "op": "AND"
    },
    "418": {
      "op": "DUP4"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "DUP4"
    },
    "423": {
      "op": "ADD"
    },
    "424": {
      "op": "SWAP2"
    },
    "425": {
      "op": "SWAP1"
    },
    "426": {
      "op": "SWAP2"
    },
    "427": {
      "op": "MSTORE"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "offset": [
        2264,
        2316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "432": {
      "op": "JUMP"
    },
    "433": {
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "434": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C4"
    },
    "437": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BF"
    },
    "440": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "441": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "443": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188E"
    },
    "446": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "447": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "448": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x449"
    },
    "451": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "452": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "453": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "455": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "456": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "459": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "460": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "461": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18FF"
    },
    "464": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "465": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "466": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "469": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF"
    },
    "472": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "473": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "475": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19CC"
    },
    "478": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "479": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "480": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F5"
    },
    "483": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "485": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "STOP",
      "path": "4"
    },
    "486": {
      "offset": [
        876,
        899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "487": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "489": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "490": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F9"
    },
    "493": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "op": "SUB"
    },
    "502": {
      "offset": [
        876,
        899
      ],
      "op": "AND",
      "path": "4"
    },
    "503": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "504": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "505": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "506": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "508": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "op": "SWAP1"
    },
    "518": {
      "op": "SWAP2"
    },
    "519": {
      "op": "AND"
    },
    "520": {
      "op": "DUP2"
    },
    "521": {
      "op": "MSTORE"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "offset": [
        876,
        899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "528": {
      "op": "JUMP"
    },
    "529": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "530": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "533": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "536": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "537": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "539": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A1A"
    },
    "542": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMP",
      "path": "4"
    },
    "543": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "544": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6FB"
    },
    "547": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMP",
      "path": "4"
    },
    "548": {
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "549": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "552": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x232"
    },
    "555": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "556": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "558": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A8C"
    },
    "561": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "562": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "563": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x775"
    },
    "566": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "567": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "568": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "570": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "SWAP1"
    },
    "580": {
      "op": "SWAP2"
    },
    "581": {
      "op": "AND"
    },
    "582": {
      "op": "DUP2"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "590": {
      "op": "JUMP"
    },
    "591": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5422,
        5669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "592": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5422,
        5669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150"
    },
    "595": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5422,
        5669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "598": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        5422,
        5669
      ],
      "op": "JUMP",
      "path": "4"
    },
    "599": {
      "offset": [
        1889,
        1963
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "600": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "603": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "606": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "607": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "609": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AE3"
    },
    "612": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1889,
        1963
      ],
      "op": "JUMP",
      "path": "4"
    },
    "613": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x852"
    },
    "617": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1889,
        1963
      ],
      "op": "JUMP",
      "path": "4"
    },
    "618": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "619": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27D"
    },
    "622": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x278"
    },
    "625": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "626": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "628": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A1A"
    },
    "631": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMP",
      "path": "4"
    },
    "632": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "633": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x889"
    },
    "636": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMP",
      "path": "4"
    },
    "637": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "638": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "640": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "641": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "644": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "645": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "646": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "647": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B16"
    },
    "650": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMP",
      "path": "4"
    },
    "651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x999"
    },
    "658": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "659": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "660": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "663": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A1"
    },
    "666": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "667": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "669": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B39"
    },
    "672": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMP",
      "path": "4"
    },
    "673": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "674": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D8"
    },
    "677": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMP",
      "path": "4"
    },
    "678": {
      "offset": [
        1235,
        1298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "679": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F7"
    },
    "682": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B4"
    },
    "685": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "686": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "688": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B87"
    },
    "691": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        1235,
        1298
      ],
      "op": "JUMP",
      "path": "4"
    },
    "692": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "693": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "695": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "697": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "698": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "699": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "700": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "702": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "703": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP4",
      "path": "4"
    },
    "704": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "705": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "707": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "708": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "709": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "710": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "711": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "712": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "713": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP4",
      "path": "4"
    },
    "714": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "715": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP5",
      "path": "4"
    },
    "716": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "717": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "718": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "719": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "720": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "721": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "722": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "723": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP5",
      "path": "4"
    },
    "724": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "725": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "726": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "727": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "728": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "729": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "730": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "731": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "732": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "733": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "734": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "735": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "736": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "737": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "739": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP3",
      "path": "4"
    },
    "740": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "741": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "742": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "744": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP4",
      "path": "4"
    },
    "745": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "746": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "747": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "749": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "750": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "751": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "ADD",
      "path": "4"
    },
    "752": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "753": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "754": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "755": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "756": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "757": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP5",
      "path": "4"
    },
    "758": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "JUMP",
      "path": "4"
    },
    "759": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "760": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "762": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "763": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        1235,
        1298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "764": {
      "op": "SWAP5"
    },
    "765": {
      "op": "DUP6"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "769": {
      "op": "DUP6"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "op": "SWAP4"
    },
    "772": {
      "op": "SWAP1"
    },
    "773": {
      "op": "SWAP4"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "SWAP2"
    },
    "776": {
      "op": "DUP4"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "op": "MSTORE"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "781": {
      "op": "DUP3"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "offset": [
        1235,
        1298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "790": {
      "op": "JUMP"
    },
    "791": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "792": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A"
    },
    "795": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x325"
    },
    "798": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "799": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "801": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BB8"
    },
    "804": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMP",
      "path": "4"
    },
    "805": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "806": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC7"
    },
    "809": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMP",
      "path": "4"
    },
    "810": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "811": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "813": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "814": {
      "op": "SWAP1"
    },
    "815": {
      "op": "ISZERO"
    },
    "816": {
      "op": "ISZERO"
    },
    "817": {
      "op": "DUP2"
    },
    "818": {
      "op": "MSTORE"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "825": {
      "op": "JUMP"
    },
    "826": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "829": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "843": {
      "offset": [
        1809,
        1882
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150"
    },
    "847": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x359"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AE3"
    },
    "856": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMP",
      "path": "4"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBA1"
    },
    "861": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMP",
      "path": "4"
    },
    "862": {
      "offset": [
        2435,
        2534
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "863": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B2"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "872": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BB8"
    },
    "875": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2435,
        2534
      ],
      "op": "JUMP",
      "path": "4"
    },
    "876": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "882": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP2",
      "path": "4"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "887": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP5",
      "path": "4"
    },
    "888": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "891": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP1",
      "path": "4"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP6",
      "path": "4"
    },
    "893": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "894": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP5",
      "path": "4"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "896": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP1",
      "path": "4"
    },
    "897": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP7",
      "path": "4"
    },
    "898": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "899": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP5",
      "path": "4"
    },
    "900": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP1",
      "path": "4"
    },
    "902": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "903": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "904": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP2",
      "path": "4"
    },
    "905": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "906": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "907": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP5",
      "path": "4"
    },
    "908": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "909": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "910": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP5",
      "path": "4"
    },
    "911": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "912": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "913": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "914": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "915": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "916": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "917": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "918": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "919": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "920": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "921": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP3",
      "path": "4"
    },
    "922": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "923": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "924": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "925": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP1",
      "path": "4"
    },
    "926": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "927": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "929": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP3",
      "path": "4"
    },
    "930": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "931": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "932": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "934": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "935": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "936": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "ADD",
      "path": "4"
    },
    "937": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "938": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "939": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "940": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "941": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "943": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "AND",
      "path": "4"
    },
    "944": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP4",
      "path": "4"
    },
    "945": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "JUMP",
      "path": "4"
    },
    "946": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "949": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "DUP1",
      "path": "4"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        2435,
        2534
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "951": {
      "op": "SWAP4"
    },
    "952": {
      "op": "DUP5"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "956": {
      "op": "DUP5"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "op": "SWAP3"
    },
    "959": {
      "op": "SWAP1"
    },
    "960": {
      "op": "SWAP3"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "ISZERO"
    },
    "963": {
      "op": "ISZERO"
    },
    "964": {
      "op": "SWAP1"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "offset": [
        2435,
        2534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "976": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "979": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DD"
    },
    "982": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "983": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "985": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C16"
    },
    "988": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "989": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "990": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBEE"
    },
    "993": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "994": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "995": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150"
    },
    "998": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F0"
    },
    "1001": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1002": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1004": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188E"
    },
    "1007": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1008": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1009": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF43"
    },
    "1012": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1013": {
      "offset": [
        1044,
        1086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1014": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A"
    },
    "1017": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x403"
    },
    "1020": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1021": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1023": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C5B"
    },
    "1026": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1027": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1028": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1029": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1030": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1032": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1033": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1034": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1035": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1036": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1037": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1038": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1039": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1041": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1042": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1043": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1044": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1045": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1046": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1047": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1048": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1049": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1050": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1051": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1052": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1053": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1054": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1056": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "AND",
      "path": "4"
    },
    "1057": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1058": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "1066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1873"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "1077": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1078": {
      "offset": [
        839,
        869
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "1085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "offset": [
        839,
        869
      ],
      "op": "AND",
      "path": "4"
    },
    "1095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1097": {
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "LT",
      "path": "4"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x459"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x474"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C90"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DIV",
      "path": "4"
    },
    "1150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MUL",
      "path": "4"
    },
    "1151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A0"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C90"
    },
    "1183": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4ED"
    },
    "1190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "LT",
      "path": "4"
    },
    "1195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C2"
    },
    "1198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DIV",
      "path": "4"
    },
    "1206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MUL",
      "path": "4"
    },
    "1207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4ED"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "GT",
      "path": "4"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D0"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SUB",
      "path": "4"
    },
    "1255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "AND",
      "path": "4"
    },
    "1258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1268": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1269": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 1
    },
    "1279": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "AND",
      "path": "4"
    },
    "1280": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1282": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1283": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1284": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1285": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1287": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1289": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1290": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1292": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1293": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1294": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1295": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6160
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1296": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1297": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1298": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51C"
    },
    "1301": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1302": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6161,
        6167
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1303": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6161,
        6167
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1304": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "1307": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6142,
        6168
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1308": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1309": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1310": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1311": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1312": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1314": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1315": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1316": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1317": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1318": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1319": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SUB",
      "path": "4"
    },
    "1320": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1322": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1323": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1324": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "ADD",
      "path": "4"
    },
    "1325": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1326": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6168
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1327": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6179
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "SUB"
    },
    "1336": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1337": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "AND",
      "path": "4"
    },
    "1338": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1340": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1341": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1342": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1343": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6101
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "1345": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1346": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1347": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1348": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1349": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1350": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6107
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1351": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6179
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1352": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6142,
        6179
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1353": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x553"
    },
    "1356": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1357": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6108,
        6114
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1358": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6108,
        6114
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1359": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "1362": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6079,
        6115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1363": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1364": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1365": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1366": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1367": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1369": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1370": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1371": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1373": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1374": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1375": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1376": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SUB",
      "path": "4"
    },
    "1377": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1378": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "ADD",
      "path": "4"
    },
    "1379": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1380": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6115
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1381": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6116,
        6126
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1382": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1384": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1385": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1386": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1387": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1388": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1389": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1390": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6127
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1391": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6138
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1392": {
      "branch": 47,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6079,
        6179
      ],
      "op": "EQ",
      "path": "4"
    },
    "1393": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x579"
    },
    "1396": {
      "branch": 47,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1397": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1399": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1400": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1401": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6071,
        6180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "op": "SUB"
    },
    "1410": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1411": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "AND",
      "path": "4"
    },
    "1412": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6190,
        6205
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1414": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1415": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1416": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1417": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1419": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1421": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1422": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1424": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1425": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1426": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6226
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1427": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1428": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1429": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59F"
    },
    "1432": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1433": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6227,
        6233
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1434": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6227,
        6233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1435": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "1438": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6208,
        6234
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1439": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1440": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1441": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1442": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1443": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1445": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "ADD",
      "path": "4"
    },
    "1446": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1448": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1449": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1450": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1451": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SUB",
      "path": "4"
    },
    "1452": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1453": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6234
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1454": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6246
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1456": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6246
      ],
      "op": "ADD",
      "path": "4"
    },
    "1457": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6208,
        6246
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1458": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6190,
        6246
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1459": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6190,
        6246
      ],
      "op": "POP",
      "path": "4"
    },
    "1460": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6316,
        6320
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "1462": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "1464": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1466": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6279,
        6283
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "AND",
      "path": "4"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "AND",
      "path": "4"
    },
    "1485": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1486": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1487": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1489": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "ADD",
      "path": "4"
    },
    "1490": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1492": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1493": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1495": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "ADD",
      "path": "4"
    },
    "1496": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1498": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6284
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6285,
        6291
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1500": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1502": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1503": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E8"
    },
    "1506": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1507": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1508": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "1511": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6256,
        6292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1513": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1514": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1516": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1518": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1519": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1520": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1522": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1523": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1524": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "SUB",
      "path": "4"
    },
    "1526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1527": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "ADD",
      "path": "4"
    },
    "1528": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1529": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6292
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6293,
        6303
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1531": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1533": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1534": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1535": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1536": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1537": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1538": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1540": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1541": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6304
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1542": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1544": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6313
      ],
      "op": "ADD",
      "path": "4"
    },
    "1545": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1549": {
      "op": "NOT"
    },
    "1550": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "AND",
      "path": "4"
    },
    "1551": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1552": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1553": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1554": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1555": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1556": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1557": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "OR",
      "path": "4"
    },
    "1558": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1559": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1560": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6256,
        6320
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1561": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0xA"
    },
    "1563": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1573": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "AND",
      "path": "4"
    },
    "1574": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1575": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1576": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6403
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1578": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1579": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1580": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1581": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1582": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1583": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1584": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6409
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "SUB"
    },
    "1593": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1594": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1595": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "AND",
      "path": "4"
    },
    "1596": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6337,
        6340
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1597": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6350
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1602": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6350
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1603": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6293,
        6303
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1604": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6293,
        6303
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1605": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6441,
        6448
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1606": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6441,
        6448
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1607": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6436,
        6439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1609": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6436,
        6439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1610": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x654"
    },
    "1613": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1614": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6410,
        6416
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1615": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6410,
        6416
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1616": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "1619": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6391,
        6417
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1620": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1621": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1622": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1623": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1624": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1626": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "ADD",
      "path": "4"
    },
    "1627": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1629": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1630": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1631": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1632": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "SUB",
      "path": "4"
    },
    "1633": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1634": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6417
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1635": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1637": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6429
      ],
      "op": "ADD",
      "path": "4"
    },
    "1638": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6391,
        6429
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1639": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6433,
        6435
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5A"
    },
    "1641": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6435
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x672"
    },
    "1644": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6435
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1645": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6435
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1646": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6435
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CFD"
    },
    "1649": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6390,
        6435
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1650": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6435
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1651": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x67C"
    },
    "1654": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1655": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1656": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1C"
    },
    "1659": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6390,
        6439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1660": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6390,
        6439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1661": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6389,
        6448
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x686"
    },
    "1664": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6389,
        6448
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1665": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6389,
        6448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1666": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6389,
        6448
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1C"
    },
    "1669": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6389,
        6448
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1670": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6389,
        6448
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1671": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1673": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "op": "NOT"
    },
    "1683": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1685": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1686": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1687": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SHL",
      "path": "4"
    },
    "1688": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "AND",
      "path": "4"
    },
    "1689": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1690": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "op": "SWAP1"
    },
    "1700": {
      "op": "SWAP3"
    },
    "1701": {
      "op": "AND"
    },
    "1702": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1704": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1705": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ADD",
      "path": "4"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1717": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1719": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1720": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1721": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1722": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SUB",
      "path": "4"
    },
    "1723": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1724": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1726": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1727": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "GAS",
      "path": "4"
    },
    "1728": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "CALL",
      "path": "4"
    },
    "1729": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1730": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1731": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1732": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6D1"
    },
    "1735": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1736": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1737": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1739": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1740": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1741": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1742": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1744": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1745": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1746": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1747": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1748": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1749": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1750": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1752": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1753": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1754": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1756": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "NOT",
      "path": "4"
    },
    "1757": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1759": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1760": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ADD",
      "path": "4"
    },
    "1761": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "AND",
      "path": "4"
    },
    "1762": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1763": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ADD",
      "path": "4"
    },
    "1764": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1765": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1767": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1768": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1769": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1770": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "ADD",
      "path": "4"
    },
    "1771": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1772": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F5"
    },
    "1775": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1776": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1777": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D3E"
    },
    "1780": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6330,
        6458
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1781": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1782": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6330,
        6458
      ],
      "op": "POP",
      "path": "4"
    },
    "1783": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5999,
        6474
      ],
      "op": "POP",
      "path": "4"
    },
    "1784": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "POP",
      "path": "4"
    },
    "1785": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5933,
        6474
      ],
      "op": "POP",
      "path": "4"
    },
    "1786": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "o",
      "offset": [
        5933,
        6474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1787": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1788": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7535,
        7555
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1790": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x709"
    },
    "1793": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1794": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1795": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1796": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7569,
        7580
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1797": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188E"
    },
    "1800": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7558,
        7592
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1801": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7558,
        7592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1802": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7535,
        7592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "branch": 48,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7606,
        7623
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1805": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7602,
        7728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x75F"
    },
    "1808": {
      "branch": 48,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7602,
        7728
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1809": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7639,
        7659
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x718"
    },
    "1812": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7639,
        7657
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1085"
    },
    "1815": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7639,
        7659
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1816": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7639,
        7659
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1817": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7673,
        7693
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x720"
    },
    "1820": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7673,
        7691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1102"
    },
    "1823": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7673,
        7693
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1824": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7673,
        7693
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1825": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7715
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x4"
    },
    "1827": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1828": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "AND",
      "path": "4"
    },
    "1838": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1839": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1841": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x739"
    },
    "1844": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1845": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "1848": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7707,
        7717
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1849": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1850": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1851": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1852": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1855": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "EXP",
      "path": "4"
    },
    "1856": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1857": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1858": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "MUL",
      "path": "4"
    },
    "1868": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "NOT",
      "path": "4"
    },
    "1869": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "AND",
      "path": "4"
    },
    "1870": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1871": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "op": "SUB"
    },
    "1880": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "AND",
      "path": "4"
    },
    "1881": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "MUL",
      "path": "4"
    },
    "1882": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "OR",
      "path": "4"
    },
    "1883": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1884": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1885": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "POP",
      "path": "4"
    },
    "1886": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7707,
        7717
      ],
      "op": "POP",
      "path": "4"
    },
    "1887": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7602,
        7728
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1888": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7741,
        7753
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1889": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7757,
        7758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1891": {
      "branch": 49,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7741,
        7758
      ],
      "op": "EQ",
      "path": "4"
    },
    "1892": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7737,
        7796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1893": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7737,
        7796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x770"
    },
    "1896": {
      "branch": 49,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7737,
        7796
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1897": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 7,
      "value": "0x770"
    },
    "1900": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7774,
        7783
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1583"
    },
    "1903": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7774,
        7785
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1904": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7774,
        7785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1905": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7524,
        7802
      ],
      "op": "POP",
      "path": "4"
    },
    "1906": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "POP",
      "path": "4"
    },
    "1907": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7455,
        7802
      ],
      "op": "POP",
      "path": "4"
    },
    "1908": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        7455,
        7802
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1909": {
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1910": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "1912": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1914": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1915": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1916": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1917": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1919": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1920": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1921": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1922": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1924": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1925": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1926": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1927": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1928": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1929": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1930": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "ADD",
      "path": "4"
    },
    "1931": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1932": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "ADD",
      "path": "4"
    },
    "1933": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1934": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1935": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1936": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1937": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1938": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1939": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1940": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "ADD",
      "path": "4"
    },
    "1941": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1942": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1943": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "ADD",
      "path": "4"
    },
    "1944": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1945": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1946": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1947": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1948": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1949": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1950": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1951": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1952": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1953": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1954": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1955": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "LT",
      "path": "4"
    },
    "1956": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7AC"
    },
    "1959": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1960": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1962": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1963": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1964": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1965": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1967": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1968": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1969": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1970": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1972": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1973": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1974": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1975": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "ADD",
      "path": "4"
    },
    "1976": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "offset": [
        2323,
        2396
      ],
      "op": "AND",
      "path": "4"
    },
    "1986": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "offset": [
        2323,
        2396
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1989": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2323,
        2396
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "jump": "o",
      "offset": [
        2323,
        2396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1993": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5422,
        5669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1994": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5461,
        5465
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1996": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5476,
        5507
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1997": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5532,
        5574
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E"
    },
    "2018": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5476,
        5575
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2019": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5476,
        5575
      ],
      "op": "POP",
      "path": "4"
    },
    "2020": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5589,
        5600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2022": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5614
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "op": "SUB"
    },
    "2031": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5630
      ],
      "op": "AND",
      "path": "4"
    },
    "2032": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5630
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2037": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2039": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2040": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2041": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2046": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "AND",
      "path": "4"
    },
    "2047": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2049": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "SHL",
      "path": "4"
    },
    "2050": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2051": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2052": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2054": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ADD",
      "path": "4"
    },
    "2055": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2057": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2059": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2060": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2061": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2062": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "SUB",
      "path": "4"
    },
    "2063": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2064": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2065": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "GAS",
      "path": "4"
    },
    "2066": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2067": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2068": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2069": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2070": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x823"
    },
    "2073": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2074": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2075": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2077": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2078": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2079": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2080": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2082": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2083": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2084": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "POP",
      "path": "4"
    },
    "2085": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "POP",
      "path": "4"
    },
    "2086": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "POP",
      "path": "4"
    },
    "2087": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "POP",
      "path": "4"
    },
    "2088": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2090": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2091": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2092": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2094": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "NOT",
      "path": "4"
    },
    "2095": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2097": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2098": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ADD",
      "path": "4"
    },
    "2099": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "AND",
      "path": "4"
    },
    "2100": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2101": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ADD",
      "path": "4"
    },
    "2102": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2103": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2105": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2106": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "POP",
      "path": "4"
    },
    "2107": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2108": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "ADD",
      "path": "4"
    },
    "2109": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2110": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x847"
    },
    "2113": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2114": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2115": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA1"
    },
    "2118": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        5605,
        5632
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2119": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5605,
        5632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2120": {
      "op": "POP"
    },
    "2121": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5585,
        5632
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2122": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5422,
        5669
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "fn": "DailyRocket.getTime",
      "jump": "o",
      "offset": [
        5422,
        5669
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2130": {
      "offset": [
        1889,
        1963
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2131": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "2133": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2135": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2136": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2137": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2138": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2140": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2141": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2142": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2143": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2145": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2146": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2147": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2148": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2149": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2150": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2151": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "ADD",
      "path": "4"
    },
    "2152": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2153": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "ADD",
      "path": "4"
    },
    "2154": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2155": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2156": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2157": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2158": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2159": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2160": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2161": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "ADD",
      "path": "4"
    },
    "2162": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2163": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2164": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "ADD",
      "path": "4"
    },
    "2165": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2166": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2167": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2168": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2169": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2170": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2171": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2172": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2173": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2174": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2175": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2176": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "LT",
      "path": "4"
    },
    "2177": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7AC"
    },
    "2180": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2181": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2183": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2184": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1889,
        1963
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2185": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2186": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7019,
        7036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2188": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7038,
        7062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2190": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7120,
        7129
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x895"
    },
    "2193": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7120,
        7127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "2196": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        7120,
        7129
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2197": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7120,
        7129
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2198": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7091,
        7099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2200": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7091,
        7099
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "op": "SUB"
    },
    "2209": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7091,
        7099
      ],
      "op": "AND",
      "path": "4"
    },
    "2210": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2212": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2213": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2214": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2215": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7090
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2217": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2219": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2220": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2222": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2223": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2224": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7100
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2225": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8BD"
    },
    "2228": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7116
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2229": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7103,
        7116
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x15180"
    },
    "2233": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "2236": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        7078,
        7116
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2237": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2238": {
      "branch": 50,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7078,
        7129
      ],
      "op": "EQ",
      "path": "4"
    },
    "2239": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7074,
        7231
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2240": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7074,
        7231
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8EE"
    },
    "2243": {
      "branch": 50,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7074,
        7231
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2244": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x40"
    },
    "2246": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2247": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2248": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7216,
        7217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2250": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2252": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2253": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "ADD",
      "path": "4"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7159,
        7163
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x1"
    },
    "2257": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7159,
        7163
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2258": {
      "op": "POP"
    },
    "2259": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7159,
        7163
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2260": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7159,
        7163
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2261": {
      "op": "ADD"
    },
    "2262": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2263": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2265": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2266": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2268": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2269": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2270": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "SUB",
      "path": "4"
    },
    "2271": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "SUB",
      "path": "4"
    },
    "2272": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2273": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2274": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2275": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2277": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7191,
        7219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2278": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2279": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "POP",
      "path": "4"
    },
    "2280": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2281": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "POP",
      "path": "4"
    },
    "2282": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x992"
    },
    "2285": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7177,
        7220
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2286": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7074,
        7231
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2287": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2289": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7277
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2290": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7268
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2292": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7268
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2293": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2295": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2296": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7280
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90C"
    },
    "2299": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7280
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2300": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7279,
        7280
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2302": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7279,
        7280
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "op": "SUB"
    },
    "2311": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7277
      ],
      "op": "AND",
      "path": "4"
    },
    "2312": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7280
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E09"
    },
    "2315": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        7269,
        7280
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2316": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7269,
        7280
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "AND",
      "path": "4"
    },
    "2326": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2327": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2328": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2330": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "ADD",
      "path": "4"
    },
    "2331": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2332": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2333": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2334": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2336": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "ADD",
      "path": "4"
    },
    "2337": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2339": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2340": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7281
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2341": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7284,
        7297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "2344": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x931"
    },
    "2347": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7297
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2348": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7297
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2349": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "2352": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        7256,
        7297
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2353": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7256,
        7297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2354": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7244,
        7253
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x939"
    },
    "2357": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7244,
        7251
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "2360": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        7244,
        7253
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2361": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7244,
        7253
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2362": {
      "branch": 51,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7244,
        7297
      ],
      "op": "GT",
      "path": "4"
    },
    "2363": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7240,
        7397
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2364": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7240,
        7397
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x958"
    },
    "2367": {
      "branch": 51,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7240,
        7397
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2368": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7328,
        7332
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x1"
    },
    "2370": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7313,
        7332
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2371": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7313,
        7332
      ],
      "op": "POP",
      "path": "4"
    },
    "2372": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7354,
        7358
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "2374": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7382,
        7383
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2375": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2377": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2378": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2380": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "ADD",
      "path": "4"
    },
    "2381": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D6"
    },
    "2384": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7360,
        7385
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "op": "SWAP1"
    },
    "2391": {
      "op": "JUMP"
    },
    "2392": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7240,
        7397
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2393": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7420,
        7429
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 12
    },
    "2394": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7420,
        7429
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2395": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2396": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2397": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2399": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "ADD",
      "path": "4"
    },
    "2400": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2402": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2403": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2404": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DIV",
      "path": "4"
    },
    "2405": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "MUL",
      "path": "4"
    },
    "2406": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2408": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "ADD",
      "path": "4"
    },
    "2409": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2411": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2412": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2413": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2414": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "ADD",
      "path": "4"
    },
    "2415": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2417": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2418": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2419": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2420": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2421": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2422": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2423": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2424": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2425": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2426": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2428": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "ADD",
      "path": "4"
    },
    "2429": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2430": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2431": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2432": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2433": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2434": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "2435": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2437": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2438": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "ADD",
      "path": "4"
    },
    "2439": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2440": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2441": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2442": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2443": {
      "op": "POP"
    },
    "2444": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2445": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7406,
        7429
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2451": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2452": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "POP",
      "path": "4"
    },
    "2453": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2454": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2455": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6940,
        7445
      ],
      "op": "POP",
      "path": "4"
    },
    "2456": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "o",
      "offset": [
        6940,
        7445
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2457": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2458": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2460": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2470": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 13
    },
    "2471": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2472": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CC"
    },
    "2475": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2476": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2478": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2487": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2488": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2490": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2491": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "2494": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2495": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E31"
    },
    "2498": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2499": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2500": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2502": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2503": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2504": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2505": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "2506": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2507": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2508": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x9D6"
    },
    "2512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2514": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176E"
    },
    "2517": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2518": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2519": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2520": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2521": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2523": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2530": {
      "op": "SHL"
    },
    "2531": {
      "op": "SUB"
    },
    "2532": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2533": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2534": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2535": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA02"
    },
    "2538": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2539": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2541": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2550": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2551": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2553": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2554": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "2557": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2558": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E31"
    },
    "2561": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2562": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2563": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3276
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x5"
    },
    "2565": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2566": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2567": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2569": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2570": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "ADD",
      "path": "4"
    },
    "2571": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2572": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2575": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2576": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2577": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2578": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2579": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2580": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2581": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA45"
    },
    "2584": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2585": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2618": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "ADD",
      "path": "4"
    },
    "2619": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2620": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2622": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2623": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "ADD",
      "path": "4"
    },
    "2624": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2625": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17BE"
    },
    "2628": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3259,
        3289
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2629": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3259,
        3289
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3320
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x6"
    },
    "2633": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2634": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2635": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2637": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2638": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2639": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "ADD",
      "path": "4"
    },
    "2640": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2641": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2644": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2645": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2646": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2647": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2648": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2681": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "ADD",
      "path": "4"
    },
    "2682": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2683": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "op": "SUB"
    },
    "2692": {
      "op": "NOT"
    },
    "2693": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "AND",
      "path": "4"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2703": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "AND",
      "path": "4"
    },
    "2704": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "OR",
      "path": "4"
    },
    "2705": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2706": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3299,
        3338
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2707": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x40"
    },
    "2709": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2710": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2712": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3359
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2713": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAA3"
    },
    "2716": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2717": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3360,
        3366
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2718": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3360,
        3366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2719": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "2722": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3348,
        3367
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2723": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2724": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2725": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2726": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2727": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2729": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2730": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2731": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2732": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2733": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SUB",
      "path": "4"
    },
    "2734": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2736": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "ADD",
      "path": "4"
    },
    "2737": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2738": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3367
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2739": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2740": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2741": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2742": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2743": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2746": {
      "op": "NOT"
    },
    "2747": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2748": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2749": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "AND",
      "path": "4"
    },
    "2750": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2751": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2752": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2753": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "OR",
      "path": "4"
    },
    "2754": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2755": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3348,
        3374
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2756": {
      "op": "POP"
    },
    "2757": {
      "op": "POP"
    },
    "2758": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        3165,
        3381
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2759": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "op": "SUB"
    },
    "2768": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2769": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "AND",
      "path": "4"
    },
    "2770": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6602,
        6606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2772": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2773": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2774": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2775": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2777": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2779": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2780": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2782": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2783": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2784": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6638
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2785": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2786": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2787": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAED"
    },
    "2790": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2791": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6639,
        6645
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2792": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6639,
        6645
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2793": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "2796": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6620,
        6646
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2797": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2798": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2799": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2800": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2801": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2803": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2804": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2805": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2806": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2807": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SUB",
      "path": "4"
    },
    "2808": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2810": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "ADD",
      "path": "4"
    },
    "2811": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2812": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6646
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2813": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6620,
        6657
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2814": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6617,
        6924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB09"
    },
    "2817": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6617,
        6924
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6685,
        6690
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x0"
    },
    "2821": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6678,
        6690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9A"
    },
    "2824": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6678,
        6690
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2825": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6617,
        6924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "op": "SUB"
    },
    "2834": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 19
    },
    "2835": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "AND",
      "path": "4"
    },
    "2836": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2838": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2839": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2840": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2841": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2843": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2845": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2846": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2848": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2849": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2850": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2851": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6855
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2852": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2853": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2854": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB30"
    },
    "2857": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2858": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6856,
        6862
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2859": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6856,
        6862
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2860": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "2863": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6837,
        6863
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2864": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2865": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2866": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2867": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2868": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2870": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2871": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2872": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2873": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2874": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2875": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SUB",
      "path": "4"
    },
    "2876": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2878": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2879": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2880": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "ADD",
      "path": "4"
    },
    "2881": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2882": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6863
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2883": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6874
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2893": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "AND",
      "path": "4"
    },
    "2894": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6874
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2896": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2897": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2898": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2899": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "2901": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2902": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2903": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2904": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2905": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2906": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6773
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2907": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6874
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2908": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6837,
        6874
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2909": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB67"
    },
    "2912": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2913": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6774,
        6780
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2914": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6774,
        6780
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2915": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "2918": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6745,
        6781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2919": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2920": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2921": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2922": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2923": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2925": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2926": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2927": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2929": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2930": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2931": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2932": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SUB",
      "path": "4"
    },
    "2933": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2934": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "ADD",
      "path": "4"
    },
    "2935": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2936": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6781
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2946": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "AND",
      "path": "4"
    },
    "2947": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2949": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2950": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2951": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2952": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2953": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2954": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2955": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6790
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2956": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6801
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2957": {
      "branch": 52,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6745,
        6874
      ],
      "op": "EQ",
      "path": "4"
    },
    "2958": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB96"
    },
    "2961": {
      "branch": 52,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2962": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2964": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2965": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2966": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6720,
        6888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2967": {
      "op": "POP"
    },
    "2968": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6909,
        6913
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x1"
    },
    "2970": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6617,
        6924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2971": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2972": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2973": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "POP",
      "path": "4"
    },
    "2974": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "POP",
      "path": "4"
    },
    "2975": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6480,
        6930
      ],
      "op": "POP",
      "path": "4"
    },
    "2976": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        6480,
        6930
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2977": {
      "offset": [
        1809,
        1882
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2978": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "2980": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2982": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2983": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2984": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2985": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2987": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2988": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2989": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2990": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2992": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2993": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2994": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2995": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2996": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2997": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2998": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "ADD",
      "path": "4"
    },
    "2999": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3000": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "ADD",
      "path": "4"
    },
    "3001": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3002": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3003": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3004": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3005": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3006": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3007": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3008": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "ADD",
      "path": "4"
    },
    "3009": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3010": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3011": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "ADD",
      "path": "4"
    },
    "3012": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3013": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3014": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3015": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3016": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3017": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3018": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3019": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3020": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3021": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3022": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3023": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "LT",
      "path": "4"
    },
    "3024": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD8"
    },
    "3027": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3028": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3030": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3031": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3032": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3033": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3034": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3036": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3037": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3039": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3041": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3042": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "ADD",
      "path": "4"
    },
    "3043": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3045": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3046": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "POP",
      "path": "4"
    },
    "3047": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3048": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "POP",
      "path": "4"
    },
    "3049": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "POP",
      "path": "4"
    },
    "3050": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "POP",
      "path": "4"
    },
    "3051": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3052": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1809,
        1882
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3053": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        1809,
        1882
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3055": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3519
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 21,
      "value": "0x7"
    },
    "3057": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3520,
        3526
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3058": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBFE"
    },
    "3064": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3065": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3066": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "3069": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3508,
        3527
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3070": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3071": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3078": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3080": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SUB",
      "path": "4"
    },
    "3081": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3083": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "ADD",
      "path": "4"
    },
    "3084": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3085": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3086": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3087": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "3089": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "AND",
      "path": "4"
    },
    "3090": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3535
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3535
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3092": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3094": {
      "branch": 53,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3508,
        3535
      ],
      "op": "EQ",
      "path": "4"
    },
    "3095": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC1F"
    },
    "3098": {
      "branch": 53,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3099": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3101": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3102": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3103": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3500,
        3536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3104": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3106": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3558
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3107": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3561,
        3562
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3115": {
      "op": "SHL"
    },
    "3116": {
      "op": "SUB"
    },
    "3117": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3118": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3558
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3119": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3558
      ],
      "op": "AND",
      "path": "4"
    },
    "3120": {
      "branch": 54,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3550,
        3562
      ],
      "op": "GT",
      "path": "4"
    },
    "3121": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3546,
        3681
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3122": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3546,
        3681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC8B"
    },
    "3125": {
      "branch": 54,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3546,
        3681
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3126": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3620
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 22,
      "value": "0x4"
    },
    "3128": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3620
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3129": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "3131": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3132": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC53"
    },
    "3138": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3139": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3622,
        3623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3141": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3622,
        3623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "op": "SUB"
    },
    "3150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3620
      ],
      "op": "AND",
      "path": "4"
    },
    "3151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E09"
    },
    "3154": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3612,
        3623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3155": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3612,
        3623
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3162": {
      "op": "SHL"
    },
    "3163": {
      "op": "SUB"
    },
    "3164": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "AND",
      "path": "4"
    },
    "3165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3167": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "ADD",
      "path": "4"
    },
    "3170": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3172": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3173": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3175": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "ADD",
      "path": "4"
    },
    "3176": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3178": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3179": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3624
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3180": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3627,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "3183": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC78"
    },
    "3186": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3187": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "3191": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3599,
        3640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3192": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3599,
        3640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3193": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3586,
        3595
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC80"
    },
    "3196": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3586,
        3593
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "3199": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3586,
        3595
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3200": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3586,
        3595
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3201": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3586,
        3640
      ],
      "op": "GT",
      "path": "4"
    },
    "3202": {
      "branch": 55,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3586,
        3640
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3203": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC8B"
    },
    "3206": {
      "branch": 55,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3207": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3209": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3210": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3211": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3578,
        3641
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3212": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0xA"
    },
    "3214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3215": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3217": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3218": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3225": {
      "op": "SHL"
    },
    "3226": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3227": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3228": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3811,
        3821
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3231": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3232": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ADD",
      "path": "4"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3831,
        3835
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3707,
        3727
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0x8AC7230489E80000"
    },
    "3249": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3707,
        3727
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3250": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3707,
        3727
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3707,
        3727
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3258": {
      "op": "SHL"
    },
    "3259": {
      "op": "SUB"
    },
    "3260": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3262": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "AND",
      "path": "4"
    },
    "3263": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3796,
        3799
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3264": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3810
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "3269": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3810
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3275": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3277": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3278": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3280": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "SUB",
      "path": "4"
    },
    "3281": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3282": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3283": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "GAS",
      "path": "4"
    },
    "3284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3285": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3286": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3287": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE5"
    },
    "3291": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3292": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3293": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3295": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3297": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3298": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "POP",
      "path": "4"
    },
    "3303": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "POP",
      "path": "4"
    },
    "3304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "POP",
      "path": "4"
    },
    "3305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "POP",
      "path": "4"
    },
    "3306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3309": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3310": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3312": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "NOT",
      "path": "4"
    },
    "3313": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3316": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ADD",
      "path": "4"
    },
    "3317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "AND",
      "path": "4"
    },
    "3318": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3319": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ADD",
      "path": "4"
    },
    "3320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3321": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3324": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "POP",
      "path": "4"
    },
    "3325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3326": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "ADD",
      "path": "4"
    },
    "3327": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3328": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD09"
    },
    "3331": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3332": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3333": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E66"
    },
    "3336": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3789,
        3837
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3337": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3853
      ],
      "op": "LT",
      "path": "4"
    },
    "3339": {
      "branch": 56,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3789,
        3853
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD14"
    },
    "3343": {
      "branch": 56,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3344": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3347": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3781,
        3854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3349": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0xA"
    },
    "3351": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3352": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3354": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3355": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3364": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3365": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3889,
        3899
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3366": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ADD",
      "path": "4"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3909,
        3913
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3374": {
      "op": "DUP3"
    },
    "3375": {
      "op": "ADD"
    },
    "3376": {
      "op": "MSTORE"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3379": {
      "op": "DUP2"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "op": "DUP4"
    },
    "3382": {
      "op": "SWAP1"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3390": {
      "op": "SHL"
    },
    "3391": {
      "op": "SUB"
    },
    "3392": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3393": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3394": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "AND",
      "path": "4"
    },
    "3395": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3871,
        3874
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3396": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3888
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "3401": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3888
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3407": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3409": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3410": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3411": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3412": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "SUB",
      "path": "4"
    },
    "3413": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3414": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3416": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3417": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "GAS",
      "path": "4"
    },
    "3418": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "CALL",
      "path": "4"
    },
    "3419": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3420": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3421": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3422": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD6B"
    },
    "3425": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3426": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3427": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3429": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3430": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3431": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3432": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3434": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3435": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3436": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "POP",
      "path": "4"
    },
    "3437": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "POP",
      "path": "4"
    },
    "3438": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "POP",
      "path": "4"
    },
    "3439": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "POP",
      "path": "4"
    },
    "3440": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3442": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3443": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3444": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3446": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "NOT",
      "path": "4"
    },
    "3447": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3449": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3450": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ADD",
      "path": "4"
    },
    "3451": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "AND",
      "path": "4"
    },
    "3452": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3453": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ADD",
      "path": "4"
    },
    "3454": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3455": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3457": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3458": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "POP",
      "path": "4"
    },
    "3459": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3460": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "ADD",
      "path": "4"
    },
    "3461": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3462": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD8F"
    },
    "3465": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3466": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3467": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D3E"
    },
    "3470": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3864,
        3929
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3864,
        3929
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3961,
        3969
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x4"
    },
    "3475": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3961,
        3969
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3482": {
      "op": "SHL"
    },
    "3483": {
      "op": "SUB"
    },
    "3484": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3961,
        3969
      ],
      "op": "AND",
      "path": "4"
    },
    "3485": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3487": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3488": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3489": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3490": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "3492": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3494": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3495": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3497": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3498": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3499": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3500": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3501": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3503": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3994,
        4000
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3504": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3994,
        4000
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3505": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3506": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDBC"
    },
    "3509": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3510": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3971,
        3977
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3511": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3971,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3512": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "3515": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3948,
        3978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3516": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3517": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3518": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3519": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3520": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "ADD",
      "path": "4"
    },
    "3523": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3525": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3526": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3527": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3528": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SUB",
      "path": "4"
    },
    "3529": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3978
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3531": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "3533": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3990
      ],
      "op": "ADD",
      "path": "4"
    },
    "3534": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        3990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3536": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3537": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3538": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3539": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDDC"
    },
    "3542": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3543": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3544": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "3547": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3948,
        4000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3548": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3549": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3550": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "POP",
      "path": "4"
    },
    "3551": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "POP",
      "path": "4"
    },
    "3552": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3553": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3554": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3555": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3948,
        4000
      ],
      "op": "POP",
      "path": "4"
    },
    "3556": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x40"
    },
    "3558": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3559": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3560": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3562": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3563": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3565": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3566": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3567": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4130,
        4141
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3568": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3569": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3570": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3572": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3573": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4155,
        4164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDFC"
    },
    "3576": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4155,
        4162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "3579": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4155,
        4164
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3580": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4155,
        4164
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3581": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3582": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3583": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4178,
        4183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3585": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3587": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3588": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3589": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3590": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3591": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3592": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4106,
        4193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3593": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4074,
        4082
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3595": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4074,
        4082
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3602": {
      "op": "SHL"
    },
    "3603": {
      "op": "SUB"
    },
    "3604": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4074,
        4082
      ],
      "op": "AND",
      "path": "4"
    },
    "3605": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3606": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3607": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "3609": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3610": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3611": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3612": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3614": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3615": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3616": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3617": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4083
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3618": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3619": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3620": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE2E"
    },
    "3623": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3624": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4084,
        4090
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3625": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4084,
        4090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3626": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "3629": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4051,
        4091
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3630": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3631": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3632": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3633": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3634": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3636": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3637": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3638": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3640": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3641": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3642": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3643": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "SUB",
      "path": "4"
    },
    "3644": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3645": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "ADD",
      "path": "4"
    },
    "3646": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3647": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4091
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3648": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4092,
        4102
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3649": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3651": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3652": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3653": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3654": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3655": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3656": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3657": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3658": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3659": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4103
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3660": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3661": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3662": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3663": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3664": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3665": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3666": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3667": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3668": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3670": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3671": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3672": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3673": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3674": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3675": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3676": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3677": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3679": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3680": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3681": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ADD",
      "path": "4"
    },
    "3682": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3683": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3686": {
      "op": "NOT"
    },
    "3687": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "AND",
      "path": "4"
    },
    "3688": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3689": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3690": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3691": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3692": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3693": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3694": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "OR",
      "path": "4"
    },
    "3695": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3696": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3697": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4051,
        4193
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3698": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4264,
        4272
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 27,
      "value": "0x4"
    },
    "3700": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4264,
        4272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4264,
        4272
      ],
      "op": "AND",
      "path": "4"
    },
    "3710": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3711": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3712": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "3714": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3715": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3716": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3717": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3718": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3719": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3720": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3721": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE93"
    },
    "3724": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3725": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4274,
        4280
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3726": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4274,
        4280
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3727": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "3730": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4245,
        4281
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3731": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3732": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3733": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3734": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3735": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3737": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3738": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3739": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3740": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3741": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3742": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SUB",
      "path": "4"
    },
    "3743": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3745": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3746": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3747": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "ADD",
      "path": "4"
    },
    "3748": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3749": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4281
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3750": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3751": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3752": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3754": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3755": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "ADD",
      "path": "4"
    },
    "3756": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3757": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3761": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3762": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3763": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3764": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3765": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3766": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "ADD",
      "path": "4"
    },
    "3767": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3768": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3769": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4245,
        4299
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3770": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4377,
        4385
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 28,
      "value": "0x4"
    },
    "3772": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4377,
        4385
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4377,
        4385
      ],
      "op": "AND",
      "path": "4"
    },
    "3782": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3783": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3784": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4376
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "3786": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3787": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3788": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3789": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3790": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3791": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED9"
    },
    "3794": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3795": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4387,
        4393
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3796": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4387,
        4393
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3797": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CCB"
    },
    "3800": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4358,
        4394
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3801": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3802": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3803": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3804": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3805": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3807": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3808": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3810": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3811": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3812": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3813": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "SUB",
      "path": "4"
    },
    "3814": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3815": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "ADD",
      "path": "4"
    },
    "3816": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3817": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4394
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3818": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3819": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3820": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3822": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3823": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "ADD",
      "path": "4"
    },
    "3824": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3825": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3829": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3830": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3831": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3832": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3833": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3834": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3835": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "ADD",
      "path": "4"
    },
    "3836": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3837": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3838": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4400,
        4410
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "op": "NOT"
    },
    "3848": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3849": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3850": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "AND",
      "path": "4"
    },
    "3851": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3852": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "OR",
      "path": "4"
    },
    "3853": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3854": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3855": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4358,
        4411
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3856": {
      "op": "DUP5"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "MSTORE"
    },
    "3859": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4400,
        4410
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3860": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 29,
      "value": "0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F"
    },
    "3893": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3897": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3898": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "SUB",
      "path": "4"
    },
    "3901": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4427,
        4461
      ],
      "op": "LOG2",
      "path": "4"
    },
    "3903": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3487,
        4468
      ],
      "op": "POP",
      "path": "4"
    },
    "3904": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "POP",
      "path": "4"
    },
    "3905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3387,
        4468
      ],
      "op": "POP",
      "path": "4"
    },
    "3906": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "o",
      "offset": [
        3387,
        4468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3907": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3908": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5732,
        5735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3910": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5746,
        5777
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3911": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3913": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5824,
        5833
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3914": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3915": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3916": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3917": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "LT",
      "path": "4"
    },
    "3918": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF59"
    },
    "3921": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3922": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF59"
    },
    "3925": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "3928": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5802,
        5834
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3929": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3930": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3931": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3933": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3934": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3936": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3938": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3939": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3940": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3942": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3943": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3944": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3945": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "3948": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "EXP",
      "path": "4"
    },
    "3949": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3950": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "DIV",
      "path": "4"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "op": "SUB"
    },
    "3959": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5802,
        5834
      ],
      "op": "AND",
      "path": "4"
    },
    "3960": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5746,
        5835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3961": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5746,
        5835
      ],
      "op": "POP",
      "path": "4"
    },
    "3962": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5847,
        5857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3964": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5873
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3971": {
      "op": "SHL"
    },
    "3972": {
      "op": "SUB"
    },
    "3973": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5889
      ],
      "op": "AND",
      "path": "4"
    },
    "3974": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5889
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "3979": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3981": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3982": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3983": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "3988": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "AND",
      "path": "4"
    },
    "3989": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "3991": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "SHL",
      "path": "4"
    },
    "3992": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3993": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3994": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3996": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ADD",
      "path": "4"
    },
    "3997": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "3999": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4001": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4002": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4003": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4004": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "SUB",
      "path": "4"
    },
    "4005": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4006": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4007": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "GAS",
      "path": "4"
    },
    "4008": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "4009": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4010": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4011": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4012": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFB9"
    },
    "4015": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4016": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4017": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4019": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4020": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4021": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4022": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4024": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4025": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4026": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "POP",
      "path": "4"
    },
    "4027": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "POP",
      "path": "4"
    },
    "4028": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "POP",
      "path": "4"
    },
    "4029": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "POP",
      "path": "4"
    },
    "4030": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4032": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4033": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4034": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4036": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "NOT",
      "path": "4"
    },
    "4037": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4039": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4040": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ADD",
      "path": "4"
    },
    "4041": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "AND",
      "path": "4"
    },
    "4042": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4043": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ADD",
      "path": "4"
    },
    "4044": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4045": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4047": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4048": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "POP",
      "path": "4"
    },
    "4049": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4050": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "ADD",
      "path": "4"
    },
    "4051": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4052": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFDD"
    },
    "4055": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4056": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4057": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA1"
    },
    "4060": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5864,
        5891
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4061": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5864,
        5891
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5845,
        5891
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4064": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5845,
        5891
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4065": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5675,
        5927
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "fn": "DailyRocket.getPrice",
      "jump": "o",
      "offset": [
        5675,
        5927
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4075": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4077": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4087": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4088": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4089": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1014"
    },
    "4092": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4093": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4095": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4104": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4105": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4107": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4108": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "4111": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4112": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E31"
    },
    "4115": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4116": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4123": {
      "op": "SHL"
    },
    "4124": {
      "op": "SUB"
    },
    "4125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 30
    },
    "4126": {
      "branch": 60,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1079"
    },
    "4130": {
      "branch": 60,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4192": {
      "op": "DUP3"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "ADD"
    },
    "4209": {
      "op": "MSTORE"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C3"
    },
    "4216": {
      "op": "JUMP"
    },
    "4217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x1082"
    },
    "4221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176E"
    },
    "4225": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4228": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4229": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2948,
        3155
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4230": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3002,
        3011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4232": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4233": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3021,
        3042
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "4235": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3021,
        3049
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4236": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3017,
        3049
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4237": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3017,
        3049
      ],
      "op": "LT",
      "path": "4"
    },
    "4238": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4239": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1082"
    },
    "4242": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4243": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3127,
        3138
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0x109B"
    },
    "4246": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3136,
        3137
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4247": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3127,
        3135
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF43"
    },
    "4250": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3127,
        3138
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4251": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3127,
        3138
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4252": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3082,
        3090
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4254": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3082,
        3090
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3082,
        3090
      ],
      "op": "AND",
      "path": "4"
    },
    "4264": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4266": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4267": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4268": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4269": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4271": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4273": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4274": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4276": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4277": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3091
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4278": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4280": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4281": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4282": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3110,
        3111
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4283": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3110,
        3111
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4284": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4285": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "LT",
      "path": "4"
    },
    "4286": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C9"
    },
    "4289": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4290": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C9"
    },
    "4293": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4296": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3092,
        3112
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4297": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4298": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4299": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4301": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4302": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4304": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4306": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4307": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3092,
        3112
      ],
      "op": "ADD",
      "path": "4"
    },
    "4308": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4310": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4311": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E0"
    },
    "4314": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4315": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4316": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4319": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3069,
        3113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4320": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4321": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4322": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4323": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4324": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4326": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4327": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4328": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4329": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4330": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SUB",
      "path": "4"
    },
    "4331": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4333": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "ADD",
      "path": "4"
    },
    "4334": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4335": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3113
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4336": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3069,
        3138
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4337": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 33
    },
    "4338": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10FA"
    },
    "4341": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4342": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F31"
    },
    "4345": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3051,
        3054
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4346": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4347": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4348": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "POP",
      "path": "4"
    },
    "4349": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3051,
        3054
      ],
      "op": "POP",
      "path": "4"
    },
    "4350": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1088"
    },
    "4353": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2997,
        3149
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4354": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4474,
        5415
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4355": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4536,
        4544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4536,
        4544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4536,
        4544
      ],
      "op": "AND",
      "path": "4"
    },
    "4367": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4522,
        4533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4369": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4370": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4576,
        4593
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4372": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4576,
        4600
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4373": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4572,
        4600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4375": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4572,
        4600
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4376": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4572,
        4600
      ],
      "op": "AND",
      "path": "4"
    },
    "4377": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4572,
        4600
      ],
      "op": "LT",
      "path": "4"
    },
    "4378": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157F"
    },
    "4382": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4389": {
      "op": "SHL"
    },
    "4390": {
      "op": "SUB"
    },
    "4391": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 34
    },
    "4392": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "AND",
      "path": "4"
    },
    "4393": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4395": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4396": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4397": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4398": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "4400": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4402": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4403": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4405": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4406": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4757
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4407": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4409": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4410": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4413": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4414": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "AND",
      "path": "4"
    },
    "4415": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4416": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4417": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "LT",
      "path": "4"
    },
    "4418": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114D"
    },
    "4421": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4422": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114D"
    },
    "4425": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4428": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4758,
        4778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4429": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4430": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4431": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4434": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4436": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4438": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4439": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4758,
        4778
      ],
      "op": "ADD",
      "path": "4"
    },
    "4440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4442": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4443": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1164"
    },
    "4446": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4448": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4451": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4734,
        4779
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4452": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4453": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4454": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4456": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4458": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "ADD",
      "path": "4"
    },
    "4459": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4461": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4463": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4464": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SUB",
      "path": "4"
    },
    "4465": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4466": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4779
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4467": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4786
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4468": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4786
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4469": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4786
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4470": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4734,
        4786
      ],
      "op": "POP",
      "path": "4"
    },
    "4471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "4473": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4665,
        4668
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4482": {
      "op": "SHL"
    },
    "4483": {
      "op": "SUB"
    },
    "4484": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "AND",
      "path": "4"
    },
    "4485": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4486": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4487": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4489": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "ADD",
      "path": "4"
    },
    "4490": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4491": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4492": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4493": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4495": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "ADD",
      "path": "4"
    },
    "4496": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4498": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4669
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4499": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4501": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4688,
        4689
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4504": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "AND",
      "path": "4"
    },
    "4505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4508": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "LT",
      "path": "4"
    },
    "4509": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A8"
    },
    "4512": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4513": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A8"
    },
    "4516": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4519": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4670,
        4690
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4520": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4521": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4522": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4524": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4525": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4527": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4529": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4530": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4670,
        4690
      ],
      "op": "ADD",
      "path": "4"
    },
    "4531": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4533": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4534": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11BF"
    },
    "4537": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4538": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4539": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4542": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4646,
        4691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4543": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4544": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4546": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4547": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4549": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4550": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4551": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4552": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4553": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SUB",
      "path": "4"
    },
    "4554": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4556": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "ADD",
      "path": "4"
    },
    "4557": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4558": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4691
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4559": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4698
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4560": {
      "branch": 57,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4646,
        4786
      ],
      "op": "EQ",
      "path": "4"
    },
    "4561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11D9"
    },
    "4564": {
      "branch": 57,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4565": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4567": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4568": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4569": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4621,
        4800
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4819,
        4826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4572": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "SUB"
    },
    "4581": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4582": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "AND",
      "path": "4"
    },
    "4583": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4585": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4586": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4587": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4588": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "4590": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4592": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4593": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4595": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4596": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4859
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4599": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4600": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4604": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "AND",
      "path": "4"
    },
    "4605": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4606": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4607": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "LT",
      "path": "4"
    },
    "4608": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120B"
    },
    "4611": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4612": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120B"
    },
    "4615": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4618": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4860,
        4880
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4619": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4620": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4621": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4623": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4624": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4626": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4628": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4629": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4860,
        4880
      ],
      "op": "ADD",
      "path": "4"
    },
    "4630": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4632": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4633": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1222"
    },
    "4636": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4637": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4638": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4641": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4836,
        4881
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4642": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4643": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4644": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4645": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4646": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4648": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4649": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4650": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4651": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4652": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SUB",
      "path": "4"
    },
    "4653": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4655": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "ADD",
      "path": "4"
    },
    "4656": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4657": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4881
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4658": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4836,
        4888
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4659": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4832,
        4888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4661": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4832,
        4888
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4662": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4832,
        4888
      ],
      "op": "AND",
      "path": "4"
    },
    "4663": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4832,
        4888
      ],
      "op": "LT",
      "path": "4"
    },
    "4664": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4665": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156C"
    },
    "4668": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4675": {
      "op": "SHL"
    },
    "4676": {
      "op": "SUB"
    },
    "4677": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 35
    },
    "4678": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "AND",
      "path": "4"
    },
    "4679": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4681": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4682": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4683": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4684": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5046
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4686": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4688": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4689": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4691": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4692": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5051
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4693": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5069
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4695": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4696": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4697": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4699": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4700": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "AND",
      "path": "4"
    },
    "4701": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4702": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4703": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "LT",
      "path": "4"
    },
    "4704": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126B"
    },
    "4707": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4708": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126B"
    },
    "4711": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4714": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5052,
        5072
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4715": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4716": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4717": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4719": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4720": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4722": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4724": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4725": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5052,
        5072
      ],
      "op": "ADD",
      "path": "4"
    },
    "4726": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4728": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4729": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1282"
    },
    "4732": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4733": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4734": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4737": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5034,
        5073
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4738": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4739": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4740": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4741": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4742": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4744": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "ADD",
      "path": "4"
    },
    "4745": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4747": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4748": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4749": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4750": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SUB",
      "path": "4"
    },
    "4751": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4752": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5073
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4753": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5084
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4755": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5084
      ],
      "op": "ADD",
      "path": "4"
    },
    "4756": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5034,
        5084
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4757": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "4759": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4761": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4961,
        4964
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4768": {
      "op": "SHL"
    },
    "4769": {
      "op": "SUB"
    },
    "4770": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "AND",
      "path": "4"
    },
    "4771": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4772": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4773": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4775": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "ADD",
      "path": "4"
    },
    "4776": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4777": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4778": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4779": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4781": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "ADD",
      "path": "4"
    },
    "4782": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4784": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4965
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4785": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4787": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4984,
        4985
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4788": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4790": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "AND",
      "path": "4"
    },
    "4791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4792": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4793": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4794": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "LT",
      "path": "4"
    },
    "4795": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C6"
    },
    "4798": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4799": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C6"
    },
    "4802": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4805": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4966,
        4986
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4806": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4807": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4808": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4810": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4811": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4813": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4815": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4816": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4966,
        4986
      ],
      "op": "ADD",
      "path": "4"
    },
    "4817": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4819": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12DD"
    },
    "4823": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4824": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4825": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4828": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4942,
        4987
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4829": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4830": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4831": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4832": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4833": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4835": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "ADD",
      "path": "4"
    },
    "4836": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4838": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4839": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4840": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4841": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SUB",
      "path": "4"
    },
    "4842": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4987
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4844": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4988,
        4989
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4845": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4847": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "AND",
      "path": "4"
    },
    "4848": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4849": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4850": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4851": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "LT",
      "path": "4"
    },
    "4852": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12FF"
    },
    "4855": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4856": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12FF"
    },
    "4859": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4862": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4942,
        4990
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4863": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4864": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4865": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4867": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4868": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4870": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4872": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4873": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "ADD",
      "path": "4"
    },
    "4874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        4990
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4875": {
      "branch": 58,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4942,
        5084
      ],
      "op": "EQ",
      "path": "4"
    },
    "4876": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1314"
    },
    "4879": {
      "branch": 58,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4880": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4882": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4913,
        5102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4891": {
      "op": "SHL"
    },
    "4892": {
      "op": "SUB"
    },
    "4893": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 36
    },
    "4894": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "AND",
      "path": "4"
    },
    "4895": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4897": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4898": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4899": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4900": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "4902": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4904": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4905": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4907": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5142
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4911": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4912": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4913": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4915": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4916": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "AND",
      "path": "4"
    },
    "4917": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4918": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4919": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "LT",
      "path": "4"
    },
    "4920": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1343"
    },
    "4923": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4924": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1343"
    },
    "4927": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "4930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5143,
        5163
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4931": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4932": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4933": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4935": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4936": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4940": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4941": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5143,
        5163
      ],
      "op": "ADD",
      "path": "4"
    },
    "4942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4944": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "4948": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4949": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4950": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "4953": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5120,
        5164
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4954": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4955": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4956": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4957": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4958": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4960": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "ADD",
      "path": "4"
    },
    "4961": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4963": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4964": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4965": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4966": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SUB",
      "path": "4"
    },
    "4967": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4968": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5164
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4969": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "4971": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4973": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5189,
        5192
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "SUB"
    },
    "4982": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "AND",
      "path": "4"
    },
    "4983": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4984": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4985": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4987": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "ADD",
      "path": "4"
    },
    "4988": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4989": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4990": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4991": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4993": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "ADD",
      "path": "4"
    },
    "4994": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4996": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5193
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4997": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5211
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4999": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5212,
        5213
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5000": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5002": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "AND",
      "path": "4"
    },
    "5003": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5005": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5006": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "LT",
      "path": "4"
    },
    "5007": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139A"
    },
    "5010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139A"
    },
    "5014": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5017": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5194,
        5214
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5018": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5019": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5020": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5022": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5023": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5025": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5027": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5028": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5194,
        5214
      ],
      "op": "ADD",
      "path": "4"
    },
    "5029": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5031": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5032": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13B1"
    },
    "5035": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5036": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5037": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "5040": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5170,
        5215
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5041": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5042": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5043": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5044": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5045": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5047": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "ADD",
      "path": "4"
    },
    "5048": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5050": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5051": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5052": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5053": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SUB",
      "path": "4"
    },
    "5054": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5055": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5215
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5056": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5216,
        5217
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5057": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5059": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "AND",
      "path": "4"
    },
    "5060": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5061": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5062": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5063": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "LT",
      "path": "4"
    },
    "5064": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13D3"
    },
    "5067": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5068": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13D3"
    },
    "5071": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5074": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5170,
        5218
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5075": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5076": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5078": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5079": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5080": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5081": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5083": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5084": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5085": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5086": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5087": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5088": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "ADD",
      "path": "4"
    },
    "5089": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5090": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5091": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5092": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5094": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5095": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5096": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "ADD",
      "path": "4"
    },
    "5097": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5098": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5099": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5100": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5101": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5102": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5103": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5104": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5105": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "ADD",
      "path": "4"
    },
    "5106": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5107": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5114": {
      "op": "SHL"
    },
    "5115": {
      "op": "SUB"
    },
    "5116": {
      "op": "NOT"
    },
    "5117": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "AND",
      "path": "4"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5124": {
      "op": "SHL"
    },
    "5125": {
      "op": "SUB"
    },
    "5126": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5127": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5128": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5170,
        5218
      ],
      "op": "AND",
      "path": "4"
    },
    "5129": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5130": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5131": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5132": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "OR",
      "path": "4"
    },
    "5133": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5134": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5120,
        5219
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "SUB"
    },
    "5143": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "DUP7",
      "path": "4",
      "statement": 37
    },
    "5144": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "AND",
      "path": "4"
    },
    "5145": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5146": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5147": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "5149": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5150": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5151": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5153": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5154": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5254
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5155": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5157": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5158": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5159": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5161": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5162": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "AND",
      "path": "4"
    },
    "5163": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5164": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5165": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "LT",
      "path": "4"
    },
    "5166": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1439"
    },
    "5169": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5170": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1439"
    },
    "5173": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5176": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5255,
        5275
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5177": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5178": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5179": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5181": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5182": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5184": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5186": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5187": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5255,
        5275
      ],
      "op": "ADD",
      "path": "4"
    },
    "5188": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5190": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5191": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1450"
    },
    "5194": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5195": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5196": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "5199": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5237,
        5276
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5200": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5201": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5202": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5203": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5204": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5206": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "ADD",
      "path": "4"
    },
    "5207": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5209": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5210": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5211": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5212": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SUB",
      "path": "4"
    },
    "5213": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5214": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5276
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5215": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "5217": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5288
      ],
      "op": "ADD",
      "path": "4"
    },
    "5218": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5220": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5221": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5222": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5223": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1470"
    },
    "5226": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5227": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "5231": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5237,
        5292
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5232": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5233": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5234": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5235": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5237,
        5292
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5236": {
      "op": "POP"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 38,
      "value": "0x3"
    },
    "5240": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "op": "SUB"
    },
    "5249": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5250": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "AND",
      "path": "4"
    },
    "5251": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5253": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5254": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5255": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5256": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5353
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "5258": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5261": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5263": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5376
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5268": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5275": {
      "op": "SHL"
    },
    "5276": {
      "op": "SUB"
    },
    "5277": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5278": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5279": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "AND",
      "path": "4"
    },
    "5280": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5321
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5281": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5334
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8EBFA8AE"
    },
    "5286": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5334
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5287": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5358
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5376
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5291": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5292": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "AND",
      "path": "4"
    },
    "5293": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5294": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5295": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "LT",
      "path": "4"
    },
    "5296": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14BB"
    },
    "5299": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5300": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14BB"
    },
    "5303": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5306": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5359,
        5379
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5307": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5311": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5314": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5316": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5317": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5359,
        5379
      ],
      "op": "ADD",
      "path": "4"
    },
    "5318": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5320": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5321": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D2"
    },
    "5324": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5325": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5326": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "5329": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5335,
        5380
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5330": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5331": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5332": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5333": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5336": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "ADD",
      "path": "4"
    },
    "5337": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5339": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5340": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5341": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5342": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SUB",
      "path": "4"
    },
    "5343": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5344": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5380
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5345": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5381,
        5382
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5346": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "AND",
      "path": "4"
    },
    "5349": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5350": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5351": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5352": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "LT",
      "path": "4"
    },
    "5353": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F4"
    },
    "5356": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F4"
    },
    "5360": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5363": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5335,
        5383
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5364": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5365": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5367": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5368": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5369": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5370": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5372": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5373": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5374": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5375": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "ADD",
      "path": "4"
    },
    "5376": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5377": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5380": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "5382": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5383": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5384": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "SHL",
      "path": "4"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5391": {
      "op": "SHL"
    },
    "5392": {
      "op": "SUB"
    },
    "5393": {
      "op": "NOT"
    },
    "5394": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "AND",
      "path": "4"
    },
    "5395": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5396": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5403": {
      "op": "SHL"
    },
    "5404": {
      "op": "SUB"
    },
    "5405": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5406": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5407": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5335,
        5383
      ],
      "op": "AND",
      "path": "4"
    },
    "5408": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5410": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "ADD",
      "path": "4"
    },
    "5412": {
      "op": "MSTORE"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5418": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5420": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5421": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5422": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5423": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "SUB",
      "path": "4"
    },
    "5424": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5425": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5427": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5428": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5429": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "5430": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5431": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5432": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1541"
    },
    "5436": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5437": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5439": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5441": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5442": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "POP",
      "path": "4"
    },
    "5443": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "GAS",
      "path": "4"
    },
    "5444": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "CALL",
      "path": "4"
    },
    "5445": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5446": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5448": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1555"
    },
    "5451": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5452": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5453": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5456": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5457": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5458": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5460": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5461": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "POP",
      "path": "4"
    },
    "5463": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "POP",
      "path": "4"
    },
    "5464": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "POP",
      "path": "4"
    },
    "5465": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5311,
        5384
      ],
      "op": "POP",
      "path": "4"
    },
    "5466": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 39
    },
    "5467": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5468": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1564"
    },
    "5471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5472": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F4C"
    },
    "5475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4890,
        4893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5476": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5477": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "POP",
      "path": "4"
    },
    "5479": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4890,
        4893
      ],
      "op": "POP",
      "path": "4"
    },
    "5480": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11DC"
    },
    "5483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5484": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4814,
        5399
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 40
    },
    "5487": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1577"
    },
    "5490": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5491": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F4C"
    },
    "5494": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4602,
        4605
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5495": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5496": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5497": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "POP",
      "path": "4"
    },
    "5498": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4605
      ],
      "op": "POP",
      "path": "4"
    },
    "5499": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1111"
    },
    "5502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5503": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5504": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4554,
        5409
      ],
      "op": "POP",
      "path": "4"
    },
    "5505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4512,
        5415
      ],
      "op": "POP",
      "path": "4"
    },
    "5506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "o",
      "offset": [
        4474,
        5415
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5507": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        8366
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5508": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7949
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 41,
      "value": "0x4"
    },
    "5510": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7949
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5511": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7940
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "5513": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5514": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5516": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5517": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A1"
    },
    "5520": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5521": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7951,
        7952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5523": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7951,
        7952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "op": "SUB"
    },
    "5532": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7949
      ],
      "op": "AND",
      "path": "4"
    },
    "5533": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E09"
    },
    "5536": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7941,
        7952
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5537": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7952
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5544": {
      "op": "SHL"
    },
    "5545": {
      "op": "SUB"
    },
    "5546": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "AND",
      "path": "4"
    },
    "5547": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5548": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5549": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5551": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "ADD",
      "path": "4"
    },
    "5552": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5553": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5554": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5555": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5557": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "ADD",
      "path": "4"
    },
    "5558": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5560": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5561": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7953
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5562": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7956,
        7969
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "5565": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7969
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15C6"
    },
    "5568": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7969
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5569": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7969
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5570": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7969
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF1"
    },
    "5573": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7928,
        7969
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5574": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7928,
        7969
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5575": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7916,
        7925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15CE"
    },
    "5578": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7916,
        7923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C9"
    },
    "5581": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7916,
        7925
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5582": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7916,
        7925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5583": {
      "branch": 59,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7916,
        7969
      ],
      "op": "GT",
      "path": "4"
    },
    "5584": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D8"
    },
    "5587": {
      "branch": 59,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5588": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5590": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5591": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5592": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7908,
        7970
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5593": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7985,
        7994
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5595": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5596": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8004,
        8021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5598": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8004,
        8028
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5605": {
      "op": "SHL"
    },
    "5606": {
      "op": "SUB"
    },
    "5607": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8028
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5608": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8028
      ],
      "op": "AND",
      "path": "4"
    },
    "5609": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8028
      ],
      "op": "LT",
      "path": "4"
    },
    "5610": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5611": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1082"
    },
    "5614": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5615": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8078,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5617": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8078,
        8086
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "op": "SUB"
    },
    "5626": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8078,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5627": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8078,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5628": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8078,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "5629": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8049,
        8060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5631": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5632": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5633": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5634": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8077
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "5636": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5638": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5639": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5641": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5642": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8087
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5643": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8105
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5645": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5646": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5647": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8049,
        8060
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5648": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8049,
        8060
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5649": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8128,
        8131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "5651": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8128,
        8131
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5652": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5653": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5654": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "AND",
      "path": "4"
    },
    "5655": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5656": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5657": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "LT",
      "path": "4"
    },
    "5658": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1625"
    },
    "5661": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5662": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1625"
    },
    "5665": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7F"
    },
    "5668": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8088,
        8108
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5669": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5670": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5671": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5673": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5674": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5676": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5678": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5679": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8088,
        8108
      ],
      "op": "ADD",
      "path": "4"
    },
    "5680": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5682": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5683": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x163C"
    },
    "5686": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5687": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5688": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E95"
    },
    "5691": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8065,
        8109
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5692": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5693": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5694": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5695": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5696": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5698": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "ADD",
      "path": "4"
    },
    "5699": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5701": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5702": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5703": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5704": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SUB",
      "path": "4"
    },
    "5705": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5706": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8109
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5707": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5709": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8121
      ],
      "op": "ADD",
      "path": "4"
    },
    "5710": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8065,
        8121
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5711": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8125,
        8127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "5713": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165A"
    },
    "5716": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8127
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5717": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5718": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8127
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CFD"
    },
    "5721": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8064,
        8127
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5722": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8127
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5723": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1664"
    },
    "5726": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8131
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5727": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8131
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5728": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1C"
    },
    "5731": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8064,
        8131
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5732": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8064,
        8131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5733": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8153,
        8156
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 42,
      "value": "0xA"
    },
    "5735": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8153,
        8156
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5736": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8174,
        8185
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "5738": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8174,
        8185
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5739": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5741": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5742": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5749": {
      "op": "SHL"
    },
    "5750": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5751": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "op": "SUB"
    },
    "5760": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8174,
        8185
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5761": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8174,
        8185
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5762": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8174,
        8185
      ],
      "op": "AND",
      "path": "4"
    },
    "5763": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5765": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5766": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ADD",
      "path": "4"
    },
    "5767": {
      "op": "MSTORE"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5770": {
      "op": "DUP2"
    },
    "5771": {
      "op": "ADD"
    },
    "5772": {
      "op": "DUP5"
    },
    "5773": {
      "op": "SWAP1"
    },
    "5774": {
      "op": "MSTORE"
    },
    "5775": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8049,
        8132
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5776": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8049,
        8132
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8153,
        8156
      ],
      "op": "AND",
      "path": "4"
    },
    "5779": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8153,
        8156
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5780": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8165
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "5785": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8165
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5788": {
      "op": "ADD"
    },
    "5789": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5791": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5793": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5794": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5795": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5796": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "SUB",
      "path": "4"
    },
    "5797": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5798": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5800": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5801": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "GAS",
      "path": "4"
    },
    "5802": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "CALL",
      "path": "4"
    },
    "5803": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5804": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5805": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5806": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16BB"
    },
    "5809": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5810": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5811": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5813": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5814": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5815": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5816": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5818": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5819": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5820": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "POP",
      "path": "4"
    },
    "5821": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "POP",
      "path": "4"
    },
    "5822": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "POP",
      "path": "4"
    },
    "5823": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "POP",
      "path": "4"
    },
    "5824": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5826": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5827": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5828": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5830": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "NOT",
      "path": "4"
    },
    "5831": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5833": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5834": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ADD",
      "path": "4"
    },
    "5835": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "AND",
      "path": "4"
    },
    "5836": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5837": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ADD",
      "path": "4"
    },
    "5838": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5839": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5841": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5842": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "POP",
      "path": "4"
    },
    "5843": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5844": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "ADD",
      "path": "4"
    },
    "5845": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5846": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16DF"
    },
    "5849": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5850": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5851": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D3E"
    },
    "5854": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8146,
        8195
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5855": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8146,
        8195
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5856": {
      "op": "POP"
    },
    "5857": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x2"
    },
    "5859": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5860": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8246,
        8249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "5862": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8246,
        8249
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5863": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8305,
        8315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5865": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8305,
        8315
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5866": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5868": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5869": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5876": {
      "op": "SHL"
    },
    "5877": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5878": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5885": {
      "op": "SHL"
    },
    "5886": {
      "op": "SUB"
    },
    "5887": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8246,
        8249
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5888": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8246,
        8249
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5889": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8246,
        8249
      ],
      "op": "AND",
      "path": "4"
    },
    "5890": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5892": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5893": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "ADD",
      "path": "4"
    },
    "5894": {
      "op": "MSTORE"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5897": {
      "op": "DUP2"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "DUP6"
    },
    "5900": {
      "op": "SWAP1"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8305,
        8315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5903": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8305,
        8315
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5904": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8305,
        8315
      ],
      "op": "AND",
      "path": "4"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5907": {
      "op": "DUP3"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "MSTORE"
    },
    "5910": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5914": {
      "op": "DUP3"
    },
    "5915": {
      "op": "ADD"
    },
    "5916": {
      "op": "MSTORE"
    },
    "5917": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5918": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "AND",
      "path": "4"
    },
    "5919": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8220
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5920": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8228
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE8EDA9DF"
    },
    "5925": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8228
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5928": {
      "op": "ADD"
    },
    "5929": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5931": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5933": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5934": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5935": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5936": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "SUB",
      "path": "4"
    },
    "5937": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5938": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5940": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5941": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5942": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "5943": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5944": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5945": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5946": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1742"
    },
    "5949": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5950": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5952": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5953": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5954": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5955": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "POP",
      "path": "4"
    },
    "5956": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "GAS",
      "path": "4"
    },
    "5957": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "CALL",
      "path": "4"
    },
    "5958": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5959": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5960": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5961": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1756"
    },
    "5964": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5965": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5966": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5968": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5969": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5970": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5971": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5973": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5974": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5975": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "POP",
      "path": "4"
    },
    "5976": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "POP",
      "path": "4"
    },
    "5977": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "POP",
      "path": "4"
    },
    "5978": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8209,
        8349
      ],
      "op": "POP",
      "path": "4"
    },
    "5979": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8035,
        8360
      ],
      "op": "POP",
      "path": "4"
    },
    "5980": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 44
    },
    "5981": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5982": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1766"
    },
    "5985": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5986": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D60"
    },
    "5989": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        8030,
        8033
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5990": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5991": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5992": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "POP",
      "path": "4"
    },
    "5993": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8030,
        8033
      ],
      "op": "POP",
      "path": "4"
    },
    "5994": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15DB"
    },
    "5997": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7980,
        8360
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5998": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5999": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6001": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6002": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "op": "SUB"
    },
    "6011": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 45
    },
    "6012": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6013": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6020": {
      "op": "SHL"
    },
    "6021": {
      "op": "SUB"
    },
    "6022": {
      "op": "NOT"
    },
    "6023": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6024": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6025": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6026": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6027": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6028": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6029": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "6031": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6032": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6033": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6034": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6035": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6036": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6037": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6038": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6039": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6072": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6073": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6074": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6075": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6076": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6077": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6078": {
      "op": "JUMPDEST"
    },
    "6079": {
      "op": "DUP3"
    },
    "6080": {
      "op": "DUP1"
    },
    "6081": {
      "op": "SLOAD"
    },
    "6082": {
      "op": "PUSH2",
      "value": "0x17CA"
    },
    "6085": {
      "op": "SWAP1"
    },
    "6086": {
      "op": "PUSH2",
      "value": "0x1C90"
    },
    "6089": {
      "jump": "i",
      "op": "JUMP"
    },
    "6090": {
      "op": "JUMPDEST"
    },
    "6091": {
      "op": "SWAP1"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6094": {
      "op": "MSTORE"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6099": {
      "op": "KECCAK256"
    },
    "6100": {
      "op": "SWAP1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6103": {
      "op": "ADD"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6106": {
      "op": "SWAP1"
    },
    "6107": {
      "op": "DIV"
    },
    "6108": {
      "op": "DUP2"
    },
    "6109": {
      "op": "ADD"
    },
    "6110": {
      "op": "SWAP3"
    },
    "6111": {
      "op": "DUP3"
    },
    "6112": {
      "op": "PUSH2",
      "value": "0x17EC"
    },
    "6115": {
      "op": "JUMPI"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6118": {
      "op": "DUP6"
    },
    "6119": {
      "op": "SSTORE"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6123": {
      "op": "JUMP"
    },
    "6124": {
      "op": "JUMPDEST"
    },
    "6125": {
      "op": "DUP3"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6128": {
      "op": "LT"
    },
    "6129": {
      "op": "PUSH2",
      "value": "0x1805"
    },
    "6132": {
      "op": "JUMPI"
    },
    "6133": {
      "op": "DUP1"
    },
    "6134": {
      "op": "MLOAD"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6137": {
      "op": "NOT"
    },
    "6138": {
      "op": "AND"
    },
    "6139": {
      "op": "DUP4"
    },
    "6140": {
      "op": "DUP1"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "OR"
    },
    "6143": {
      "op": "DUP6"
    },
    "6144": {
      "op": "SSTORE"
    },
    "6145": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6148": {
      "op": "JUMP"
    },
    "6149": {
      "op": "JUMPDEST"
    },
    "6150": {
      "op": "DUP3"
    },
    "6151": {
      "op": "DUP1"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "DUP6"
    },
    "6157": {
      "op": "SSTORE"
    },
    "6158": {
      "op": "DUP3"
    },
    "6159": {
      "op": "ISZERO"
    },
    "6160": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6163": {
      "op": "JUMPI"
    },
    "6164": {
      "op": "SWAP2"
    },
    "6165": {
      "op": "DUP3"
    },
    "6166": {
      "op": "ADD"
    },
    "6167": {
      "op": "JUMPDEST"
    },
    "6168": {
      "op": "DUP3"
    },
    "6169": {
      "op": "DUP2"
    },
    "6170": {
      "op": "GT"
    },
    "6171": {
      "op": "ISZERO"
    },
    "6172": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6175": {
      "op": "JUMPI"
    },
    "6176": {
      "op": "DUP3"
    },
    "6177": {
      "op": "MLOAD"
    },
    "6178": {
      "op": "DUP3"
    },
    "6179": {
      "op": "SSTORE"
    },
    "6180": {
      "op": "SWAP2"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6183": {
      "op": "ADD"
    },
    "6184": {
      "op": "SWAP2"
    },
    "6185": {
      "op": "SWAP1"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "SWAP1"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x1817"
    },
    "6193": {
      "op": "JUMP"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "op": "PUSH2",
      "value": "0x183E"
    },
    "6199": {
      "op": "SWAP3"
    },
    "6200": {
      "op": "SWAP2"
    },
    "6201": {
      "op": "POP"
    },
    "6202": {
      "op": "PUSH2",
      "value": "0x1842"
    },
    "6205": {
      "jump": "i",
      "op": "JUMP"
    },
    "6206": {
      "op": "JUMPDEST"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "op": "SWAP1"
    },
    "6209": {
      "jump": "o",
      "op": "JUMP"
    },
    "6210": {
      "op": "JUMPDEST"
    },
    "6211": {
      "op": "JUMPDEST"
    },
    "6212": {
      "op": "DUP1"
    },
    "6213": {
      "op": "DUP3"
    },
    "6214": {
      "op": "GT"
    },
    "6215": {
      "op": "ISZERO"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x183E"
    },
    "6219": {
      "op": "JUMPI"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6222": {
      "op": "DUP2"
    },
    "6223": {
      "op": "SSTORE"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6226": {
      "op": "ADD"
    },
    "6227": {
      "op": "PUSH2",
      "value": "0x1843"
    },
    "6230": {
      "op": "JUMP"
    },
    "6231": {
      "op": "JUMPDEST"
    },
    "6232": {
      "op": "DUP1"
    },
    "6233": {
      "op": "CALLDATALOAD"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "op": "DUP2"
    },
    "6243": {
      "op": "AND"
    },
    "6244": {
      "op": "DUP2"
    },
    "6245": {
      "op": "EQ"
    },
    "6246": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "6249": {
      "op": "JUMPI"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6252": {
      "op": "DUP1"
    },
    "6253": {
      "op": "REVERT"
    },
    "6254": {
      "op": "JUMPDEST"
    },
    "6255": {
      "op": "SWAP2"
    },
    "6256": {
      "op": "SWAP1"
    },
    "6257": {
      "op": "POP"
    },
    "6258": {
      "jump": "o",
      "op": "JUMP"
    },
    "6259": {
      "op": "JUMPDEST"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6264": {
      "op": "DUP3"
    },
    "6265": {
      "op": "DUP5"
    },
    "6266": {
      "op": "SUB"
    },
    "6267": {
      "op": "SLT"
    },
    "6268": {
      "op": "ISZERO"
    },
    "6269": {
      "op": "PUSH2",
      "value": "0x1885"
    },
    "6272": {
      "op": "JUMPI"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6275": {
      "op": "DUP1"
    },
    "6276": {
      "op": "REVERT"
    },
    "6277": {
      "op": "JUMPDEST"
    },
    "6278": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "6281": {
      "op": "DUP3"
    },
    "6282": {
      "op": "PUSH2",
      "value": "0x1857"
    },
    "6285": {
      "jump": "i",
      "op": "JUMP"
    },
    "6286": {
      "op": "JUMPDEST"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6291": {
      "op": "DUP3"
    },
    "6292": {
      "op": "DUP5"
    },
    "6293": {
      "op": "SUB"
    },
    "6294": {
      "op": "SLT"
    },
    "6295": {
      "op": "ISZERO"
    },
    "6296": {
      "op": "PUSH2",
      "value": "0x18A0"
    },
    "6299": {
      "op": "JUMPI"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6302": {
      "op": "DUP1"
    },
    "6303": {
      "op": "REVERT"
    },
    "6304": {
      "op": "JUMPDEST"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "CALLDATALOAD"
    },
    "6307": {
      "op": "SWAP2"
    },
    "6308": {
      "op": "SWAP1"
    },
    "6309": {
      "op": "POP"
    },
    "6310": {
      "jump": "o",
      "op": "JUMP"
    },
    "6311": {
      "op": "JUMPDEST"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6314": {
      "op": "JUMPDEST"
    },
    "6315": {
      "op": "DUP4"
    },
    "6316": {
      "op": "DUP2"
    },
    "6317": {
      "op": "LT"
    },
    "6318": {
      "op": "ISZERO"
    },
    "6319": {
      "op": "PUSH2",
      "value": "0x18C2"
    },
    "6322": {
      "op": "JUMPI"
    },
    "6323": {
      "op": "DUP2"
    },
    "6324": {
      "op": "DUP2"
    },
    "6325": {
      "op": "ADD"
    },
    "6326": {
      "op": "MLOAD"
    },
    "6327": {
      "op": "DUP4"
    },
    "6328": {
      "op": "DUP3"
    },
    "6329": {
      "op": "ADD"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "PUSH2",
      "value": "0x18AA"
    },
    "6337": {
      "op": "JUMP"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "DUP4"
    },
    "6340": {
      "op": "DUP2"
    },
    "6341": {
      "op": "GT"
    },
    "6342": {
      "op": "ISZERO"
    },
    "6343": {
      "op": "PUSH2",
      "value": "0x6F5"
    },
    "6346": {
      "op": "JUMPI"
    },
    "6347": {
      "op": "POP"
    },
    "6348": {
      "op": "POP"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6351": {
      "op": "SWAP2"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "op": "MSTORE"
    },
    "6354": {
      "jump": "o",
      "op": "JUMP"
    },
    "6355": {
      "op": "JUMPDEST"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6358": {
      "op": "DUP2"
    },
    "6359": {
      "op": "MLOAD"
    },
    "6360": {
      "op": "DUP1"
    },
    "6361": {
      "op": "DUP5"
    },
    "6362": {
      "op": "MSTORE"
    },
    "6363": {
      "op": "PUSH2",
      "value": "0x18EB"
    },
    "6366": {
      "op": "DUP2"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6369": {
      "op": "DUP7"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6373": {
      "op": "DUP7"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "op": "PUSH2",
      "value": "0x18A7"
    },
    "6378": {
      "jump": "i",
      "op": "JUMP"
    },
    "6379": {
      "op": "JUMPDEST"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6382": {
      "op": "ADD"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6385": {
      "op": "NOT"
    },
    "6386": {
      "op": "AND"
    },
    "6387": {
      "op": "SWAP3"
    },
    "6388": {
      "op": "SWAP1"
    },
    "6389": {
      "op": "SWAP3"
    },
    "6390": {
      "op": "ADD"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6393": {
      "op": "ADD"
    },
    "6394": {
      "op": "SWAP3"
    },
    "6395": {
      "op": "SWAP2"
    },
    "6396": {
      "op": "POP"
    },
    "6397": {
      "op": "POP"
    },
    "6398": {
      "jump": "o",
      "op": "JUMP"
    },
    "6399": {
      "op": "JUMPDEST"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6402": {
      "op": "DUP2"
    },
    "6403": {
      "op": "MSTORE"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6406": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6411": {
      "op": "DUP4"
    },
    "6412": {
      "op": "ADD"
    },
    "6413": {
      "op": "DUP5"
    },
    "6414": {
      "op": "PUSH2",
      "value": "0x18D3"
    },
    "6417": {
      "jump": "i",
      "op": "JUMP"
    },
    "6418": {
      "op": "JUMPDEST"
    },
    "6419": {
      "op": "DUP1"
    },
    "6420": {
      "op": "CALLDATALOAD"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6427": {
      "op": "SHL"
    },
    "6428": {
      "op": "SUB"
    },
    "6429": {
      "op": "DUP2"
    },
    "6430": {
      "op": "AND"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "EQ"
    },
    "6433": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "6436": {
      "op": "JUMPI"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6439": {
      "op": "DUP1"
    },
    "6440": {
      "op": "REVERT"
    },
    "6441": {
      "op": "JUMPDEST"
    },
    "6442": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6452": {
      "op": "MSTORE"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6457": {
      "op": "MSTORE"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6462": {
      "op": "REVERT"
    },
    "6463": {
      "op": "JUMPDEST"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6466": {
      "op": "DUP3"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6469": {
      "op": "DUP4"
    },
    "6470": {
      "op": "ADD"
    },
    "6471": {
      "op": "SLT"
    },
    "6472": {
      "op": "PUSH2",
      "value": "0x1950"
    },
    "6475": {
      "op": "JUMPI"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6478": {
      "op": "DUP1"
    },
    "6479": {
      "op": "REVERT"
    },
    "6480": {
      "op": "JUMPDEST"
    },
    "6481": {
      "op": "DUP2"
    },
    "6482": {
      "op": "CALLDATALOAD"
    },
    "6483": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6492": {
      "op": "DUP1"
    },
    "6493": {
      "op": "DUP3"
    },
    "6494": {
      "op": "GT"
    },
    "6495": {
      "op": "ISZERO"
    },
    "6496": {
      "op": "PUSH2",
      "value": "0x196B"
    },
    "6499": {
      "op": "JUMPI"
    },
    "6500": {
      "op": "PUSH2",
      "value": "0x196B"
    },
    "6503": {
      "op": "PUSH2",
      "value": "0x1929"
    },
    "6506": {
      "jump": "i",
      "op": "JUMP"
    },
    "6507": {
      "op": "JUMPDEST"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6510": {
      "op": "MLOAD"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6513": {
      "op": "DUP4"
    },
    "6514": {
      "op": "ADD"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6517": {
      "op": "NOT"
    },
    "6518": {
      "op": "SWAP1"
    },
    "6519": {
      "op": "DUP2"
    },
    "6520": {
      "op": "AND"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6523": {
      "op": "ADD"
    },
    "6524": {
      "op": "AND"
    },
    "6525": {
      "op": "DUP2"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "op": "SWAP1"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "DUP3"
    },
    "6530": {
      "op": "GT"
    },
    "6531": {
      "op": "DUP2"
    },
    "6532": {
      "op": "DUP4"
    },
    "6533": {
      "op": "LT"
    },
    "6534": {
      "op": "OR"
    },
    "6535": {
      "op": "ISZERO"
    },
    "6536": {
      "op": "PUSH2",
      "value": "0x1993"
    },
    "6539": {
      "op": "JUMPI"
    },
    "6540": {
      "op": "PUSH2",
      "value": "0x1993"
    },
    "6543": {
      "op": "PUSH2",
      "value": "0x1929"
    },
    "6546": {
      "jump": "i",
      "op": "JUMP"
    },
    "6547": {
      "op": "JUMPDEST"
    },
    "6548": {
      "op": "DUP2"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6551": {
      "op": "MSTORE"
    },
    "6552": {
      "op": "DUP4"
    },
    "6553": {
      "op": "DUP2"
    },
    "6554": {
      "op": "MSTORE"
    },
    "6555": {
      "op": "DUP7"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6558": {
      "op": "DUP6"
    },
    "6559": {
      "op": "DUP9"
    },
    "6560": {
      "op": "ADD"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "op": "GT"
    },
    "6563": {
      "op": "ISZERO"
    },
    "6564": {
      "op": "PUSH2",
      "value": "0x19AC"
    },
    "6567": {
      "op": "JUMPI"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6570": {
      "op": "DUP1"
    },
    "6571": {
      "op": "REVERT"
    },
    "6572": {
      "op": "JUMPDEST"
    },
    "6573": {
      "op": "DUP4"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6576": {
      "op": "DUP8"
    },
    "6577": {
      "op": "ADD"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6580": {
      "op": "DUP4"
    },
    "6581": {
      "op": "ADD"
    },
    "6582": {
      "op": "CALLDATACOPY"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6587": {
      "op": "DUP6"
    },
    "6588": {
      "op": "DUP4"
    },
    "6589": {
      "op": "ADD"
    },
    "6590": {
      "op": "ADD"
    },
    "6591": {
      "op": "MSTORE"
    },
    "6592": {
      "op": "DUP1"
    },
    "6593": {
      "op": "SWAP5"
    },
    "6594": {
      "op": "POP"
    },
    "6595": {
      "op": "POP"
    },
    "6596": {
      "op": "POP"
    },
    "6597": {
      "op": "POP"
    },
    "6598": {
      "op": "POP"
    },
    "6599": {
      "op": "SWAP3"
    },
    "6600": {
      "op": "SWAP2"
    },
    "6601": {
      "op": "POP"
    },
    "6602": {
      "op": "POP"
    },
    "6603": {
      "jump": "o",
      "op": "JUMP"
    },
    "6604": {
      "op": "JUMPDEST"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6607": {
      "op": "DUP1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6610": {
      "op": "DUP4"
    },
    "6611": {
      "op": "DUP6"
    },
    "6612": {
      "op": "SUB"
    },
    "6613": {
      "op": "SLT"
    },
    "6614": {
      "op": "ISZERO"
    },
    "6615": {
      "op": "PUSH2",
      "value": "0x19DF"
    },
    "6618": {
      "op": "JUMPI"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6621": {
      "op": "DUP1"
    },
    "6622": {
      "op": "REVERT"
    },
    "6623": {
      "op": "JUMPDEST"
    },
    "6624": {
      "op": "PUSH2",
      "value": "0x19E8"
    },
    "6627": {
      "op": "DUP4"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x1912"
    },
    "6631": {
      "jump": "i",
      "op": "JUMP"
    },
    "6632": {
      "op": "JUMPDEST"
    },
    "6633": {
      "op": "SWAP2"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6637": {
      "op": "DUP4"
    },
    "6638": {
      "op": "ADD"
    },
    "6639": {
      "op": "CALLDATALOAD"
    },
    "6640": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6649": {
      "op": "DUP2"
    },
    "6650": {
      "op": "GT"
    },
    "6651": {
      "op": "ISZERO"
    },
    "6652": {
      "op": "PUSH2",
      "value": "0x1A04"
    },
    "6655": {
      "op": "JUMPI"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6658": {
      "op": "DUP1"
    },
    "6659": {
      "op": "REVERT"
    },
    "6660": {
      "op": "JUMPDEST"
    },
    "6661": {
      "op": "PUSH2",
      "value": "0x1A10"
    },
    "6664": {
      "op": "DUP6"
    },
    "6665": {
      "op": "DUP3"
    },
    "6666": {
      "op": "DUP7"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "6671": {
      "jump": "i",
      "op": "JUMP"
    },
    "6672": {
      "op": "JUMPDEST"
    },
    "6673": {
      "op": "SWAP2"
    },
    "6674": {
      "op": "POP"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "op": "SWAP3"
    },
    "6677": {
      "op": "POP"
    },
    "6678": {
      "op": "SWAP3"
    },
    "6679": {
      "op": "SWAP1"
    },
    "6680": {
      "op": "POP"
    },
    "6681": {
      "jump": "o",
      "op": "JUMP"
    },
    "6682": {
      "op": "JUMPDEST"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6685": {
      "op": "DUP1"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6688": {
      "op": "DUP4"
    },
    "6689": {
      "op": "DUP6"
    },
    "6690": {
      "op": "SUB"
    },
    "6691": {
      "op": "SLT"
    },
    "6692": {
      "op": "ISZERO"
    },
    "6693": {
      "op": "PUSH2",
      "value": "0x1A2D"
    },
    "6696": {
      "op": "JUMPI"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6699": {
      "op": "DUP1"
    },
    "6700": {
      "op": "REVERT"
    },
    "6701": {
      "op": "JUMPDEST"
    },
    "6702": {
      "op": "DUP3"
    },
    "6703": {
      "op": "CALLDATALOAD"
    },
    "6704": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6713": {
      "op": "DUP1"
    },
    "6714": {
      "op": "DUP3"
    },
    "6715": {
      "op": "GT"
    },
    "6716": {
      "op": "ISZERO"
    },
    "6717": {
      "op": "PUSH2",
      "value": "0x1A45"
    },
    "6720": {
      "op": "JUMPI"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6723": {
      "op": "DUP1"
    },
    "6724": {
      "op": "REVERT"
    },
    "6725": {
      "op": "JUMPDEST"
    },
    "6726": {
      "op": "DUP2"
    },
    "6727": {
      "op": "DUP6"
    },
    "6728": {
      "op": "ADD"
    },
    "6729": {
      "op": "SWAP2"
    },
    "6730": {
      "op": "POP"
    },
    "6731": {
      "op": "DUP6"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6734": {
      "op": "DUP4"
    },
    "6735": {
      "op": "ADD"
    },
    "6736": {
      "op": "SLT"
    },
    "6737": {
      "op": "PUSH2",
      "value": "0x1A59"
    },
    "6740": {
      "op": "JUMPI"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6743": {
      "op": "DUP1"
    },
    "6744": {
      "op": "REVERT"
    },
    "6745": {
      "op": "JUMPDEST"
    },
    "6746": {
      "op": "DUP2"
    },
    "6747": {
      "op": "CALLDATALOAD"
    },
    "6748": {
      "op": "DUP2"
    },
    "6749": {
      "op": "DUP2"
    },
    "6750": {
      "op": "GT"
    },
    "6751": {
      "op": "ISZERO"
    },
    "6752": {
      "op": "PUSH2",
      "value": "0x1A68"
    },
    "6755": {
      "op": "JUMPI"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6758": {
      "op": "DUP1"
    },
    "6759": {
      "op": "REVERT"
    },
    "6760": {
      "op": "JUMPDEST"
    },
    "6761": {
      "op": "DUP7"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6764": {
      "op": "DUP3"
    },
    "6765": {
      "op": "DUP6"
    },
    "6766": {
      "op": "ADD"
    },
    "6767": {
      "op": "ADD"
    },
    "6768": {
      "op": "GT"
    },
    "6769": {
      "op": "ISZERO"
    },
    "6770": {
      "op": "PUSH2",
      "value": "0x1A7A"
    },
    "6773": {
      "op": "JUMPI"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6776": {
      "op": "DUP1"
    },
    "6777": {
      "op": "REVERT"
    },
    "6778": {
      "op": "JUMPDEST"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6781": {
      "op": "SWAP3"
    },
    "6782": {
      "op": "SWAP1"
    },
    "6783": {
      "op": "SWAP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "SWAP7"
    },
    "6786": {
      "op": "SWAP2"
    },
    "6787": {
      "op": "SWAP6"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "op": "SWAP1"
    },
    "6790": {
      "op": "SWAP4"
    },
    "6791": {
      "op": "POP"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "op": "POP"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "jump": "o",
      "op": "JUMP"
    },
    "6796": {
      "op": "JUMPDEST"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6799": {
      "op": "DUP1"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6804": {
      "op": "DUP5"
    },
    "6805": {
      "op": "DUP7"
    },
    "6806": {
      "op": "SUB"
    },
    "6807": {
      "op": "SLT"
    },
    "6808": {
      "op": "ISZERO"
    },
    "6809": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6812": {
      "op": "JUMPI"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6815": {
      "op": "DUP1"
    },
    "6816": {
      "op": "REVERT"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "PUSH2",
      "value": "0x1AAA"
    },
    "6821": {
      "op": "DUP5"
    },
    "6822": {
      "op": "PUSH2",
      "value": "0x1912"
    },
    "6825": {
      "jump": "i",
      "op": "JUMP"
    },
    "6826": {
      "op": "JUMPDEST"
    },
    "6827": {
      "op": "SWAP3"
    },
    "6828": {
      "op": "POP"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6831": {
      "op": "DUP5"
    },
    "6832": {
      "op": "ADD"
    },
    "6833": {
      "op": "CALLDATALOAD"
    },
    "6834": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6843": {
      "op": "DUP2"
    },
    "6844": {
      "op": "GT"
    },
    "6845": {
      "op": "ISZERO"
    },
    "6846": {
      "op": "PUSH2",
      "value": "0x1AC6"
    },
    "6849": {
      "op": "JUMPI"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6852": {
      "op": "DUP1"
    },
    "6853": {
      "op": "REVERT"
    },
    "6854": {
      "op": "JUMPDEST"
    },
    "6855": {
      "op": "PUSH2",
      "value": "0x1AD2"
    },
    "6858": {
      "op": "DUP7"
    },
    "6859": {
      "op": "DUP3"
    },
    "6860": {
      "op": "DUP8"
    },
    "6861": {
      "op": "ADD"
    },
    "6862": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "6865": {
      "jump": "i",
      "op": "JUMP"
    },
    "6866": {
      "op": "JUMPDEST"
    },
    "6867": {
      "op": "SWAP3"
    },
    "6868": {
      "op": "POP"
    },
    "6869": {
      "op": "POP"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6872": {
      "op": "DUP5"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "CALLDATALOAD"
    },
    "6875": {
      "op": "SWAP1"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "SWAP3"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "SWAP3"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "SWAP3"
    },
    "6882": {
      "jump": "o",
      "op": "JUMP"
    },
    "6883": {
      "op": "JUMPDEST"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6886": {
      "op": "DUP1"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6891": {
      "op": "DUP5"
    },
    "6892": {
      "op": "DUP7"
    },
    "6893": {
      "op": "SUB"
    },
    "6894": {
      "op": "SLT"
    },
    "6895": {
      "op": "ISZERO"
    },
    "6896": {
      "op": "PUSH2",
      "value": "0x1AF8"
    },
    "6899": {
      "op": "JUMPI"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6902": {
      "op": "DUP1"
    },
    "6903": {
      "op": "REVERT"
    },
    "6904": {
      "op": "JUMPDEST"
    },
    "6905": {
      "op": "DUP4"
    },
    "6906": {
      "op": "CALLDATALOAD"
    },
    "6907": {
      "op": "SWAP3"
    },
    "6908": {
      "op": "POP"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6911": {
      "op": "DUP5"
    },
    "6912": {
      "op": "ADD"
    },
    "6913": {
      "op": "CALLDATALOAD"
    },
    "6914": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6923": {
      "op": "DUP2"
    },
    "6924": {
      "op": "GT"
    },
    "6925": {
      "op": "ISZERO"
    },
    "6926": {
      "op": "PUSH2",
      "value": "0x1AC6"
    },
    "6929": {
      "op": "JUMPI"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6932": {
      "op": "DUP1"
    },
    "6933": {
      "op": "REVERT"
    },
    "6934": {
      "op": "JUMPDEST"
    },
    "6935": {
      "op": "DUP3"
    },
    "6936": {
      "op": "ISZERO"
    },
    "6937": {
      "op": "ISZERO"
    },
    "6938": {
      "op": "DUP2"
    },
    "6939": {
      "op": "MSTORE"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6944": {
      "op": "DUP3"
    },
    "6945": {
      "op": "ADD"
    },
    "6946": {
      "op": "MSTORE"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6949": {
      "op": "PUSH2",
      "value": "0x1B31"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6954": {
      "op": "DUP4"
    },
    "6955": {
      "op": "ADD"
    },
    "6956": {
      "op": "DUP5"
    },
    "6957": {
      "op": "PUSH2",
      "value": "0x18D3"
    },
    "6960": {
      "jump": "i",
      "op": "JUMP"
    },
    "6961": {
      "op": "JUMPDEST"
    },
    "6962": {
      "op": "SWAP5"
    },
    "6963": {
      "op": "SWAP4"
    },
    "6964": {
      "op": "POP"
    },
    "6965": {
      "op": "POP"
    },
    "6966": {
      "op": "POP"
    },
    "6967": {
      "op": "POP"
    },
    "6968": {
      "jump": "o",
      "op": "JUMP"
    },
    "6969": {
      "op": "JUMPDEST"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6972": {
      "op": "DUP1"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6975": {
      "op": "DUP4"
    },
    "6976": {
      "op": "DUP6"
    },
    "6977": {
      "op": "SUB"
    },
    "6978": {
      "op": "SLT"
    },
    "6979": {
      "op": "ISZERO"
    },
    "6980": {
      "op": "PUSH2",
      "value": "0x1B4C"
    },
    "6983": {
      "op": "JUMPI"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6986": {
      "op": "DUP1"
    },
    "6987": {
      "op": "REVERT"
    },
    "6988": {
      "op": "JUMPDEST"
    },
    "6989": {
      "op": "DUP3"
    },
    "6990": {
      "op": "CALLDATALOAD"
    },
    "6991": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7000": {
      "op": "DUP2"
    },
    "7001": {
      "op": "GT"
    },
    "7002": {
      "op": "ISZERO"
    },
    "7003": {
      "op": "PUSH2",
      "value": "0x1B63"
    },
    "7006": {
      "op": "JUMPI"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7009": {
      "op": "DUP1"
    },
    "7010": {
      "op": "REVERT"
    },
    "7011": {
      "op": "JUMPDEST"
    },
    "7012": {
      "op": "PUSH2",
      "value": "0x1B6F"
    },
    "7015": {
      "op": "DUP6"
    },
    "7016": {
      "op": "DUP3"
    },
    "7017": {
      "op": "DUP7"
    },
    "7018": {
      "op": "ADD"
    },
    "7019": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "7022": {
      "jump": "i",
      "op": "JUMP"
    },
    "7023": {
      "op": "JUMPDEST"
    },
    "7024": {
      "op": "SWAP3"
    },
    "7025": {
      "op": "POP"
    },
    "7026": {
      "op": "POP"
    },
    "7027": {
      "op": "PUSH2",
      "value": "0x1B7E"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7032": {
      "op": "DUP5"
    },
    "7033": {
      "op": "ADD"
    },
    "7034": {
      "op": "PUSH2",
      "value": "0x1857"
    },
    "7037": {
      "jump": "i",
      "op": "JUMP"
    },
    "7038": {
      "op": "JUMPDEST"
    },
    "7039": {
      "op": "SWAP1"
    },
    "7040": {
      "op": "POP"
    },
    "7041": {
      "op": "SWAP3"
    },
    "7042": {
      "op": "POP"
    },
    "7043": {
      "op": "SWAP3"
    },
    "7044": {
      "op": "SWAP1"
    },
    "7045": {
      "op": "POP"
    },
    "7046": {
      "jump": "o",
      "op": "JUMP"
    },
    "7047": {
      "op": "JUMPDEST"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7050": {
      "op": "DUP1"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7053": {
      "op": "DUP4"
    },
    "7054": {
      "op": "DUP6"
    },
    "7055": {
      "op": "SUB"
    },
    "7056": {
      "op": "SLT"
    },
    "7057": {
      "op": "ISZERO"
    },
    "7058": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "7061": {
      "op": "JUMPI"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7064": {
      "op": "DUP1"
    },
    "7065": {
      "op": "REVERT"
    },
    "7066": {
      "op": "JUMPDEST"
    },
    "7067": {
      "op": "DUP3"
    },
    "7068": {
      "op": "CALLDATALOAD"
    },
    "7069": {
      "op": "SWAP2"
    },
    "7070": {
      "op": "POP"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7073": {
      "op": "DUP4"
    },
    "7074": {
      "op": "ADD"
    },
    "7075": {
      "op": "CALLDATALOAD"
    },
    "7076": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7085": {
      "op": "DUP2"
    },
    "7086": {
      "op": "GT"
    },
    "7087": {
      "op": "ISZERO"
    },
    "7088": {
      "op": "PUSH2",
      "value": "0x1A04"
    },
    "7091": {
      "op": "JUMPI"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7094": {
      "op": "DUP1"
    },
    "7095": {
      "op": "REVERT"
    },
    "7096": {
      "op": "JUMPDEST"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7099": {
      "op": "DUP1"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7104": {
      "op": "DUP5"
    },
    "7105": {
      "op": "DUP7"
    },
    "7106": {
      "op": "SUB"
    },
    "7107": {
      "op": "SLT"
    },
    "7108": {
      "op": "ISZERO"
    },
    "7109": {
      "op": "PUSH2",
      "value": "0x1BCD"
    },
    "7112": {
      "op": "JUMPI"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7115": {
      "op": "DUP1"
    },
    "7116": {
      "op": "REVERT"
    },
    "7117": {
      "op": "JUMPDEST"
    },
    "7118": {
      "op": "PUSH2",
      "value": "0x1BD6"
    },
    "7121": {
      "op": "DUP5"
    },
    "7122": {
      "op": "PUSH2",
      "value": "0x1912"
    },
    "7125": {
      "jump": "i",
      "op": "JUMP"
    },
    "7126": {
      "op": "JUMPDEST"
    },
    "7127": {
      "op": "SWAP3"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7131": {
      "op": "DUP5"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "CALLDATALOAD"
    },
    "7134": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7143": {
      "op": "DUP2"
    },
    "7144": {
      "op": "GT"
    },
    "7145": {
      "op": "ISZERO"
    },
    "7146": {
      "op": "PUSH2",
      "value": "0x1BF2"
    },
    "7149": {
      "op": "JUMPI"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7152": {
      "op": "DUP1"
    },
    "7153": {
      "op": "REVERT"
    },
    "7154": {
      "op": "JUMPDEST"
    },
    "7155": {
      "op": "PUSH2",
      "value": "0x1BFE"
    },
    "7158": {
      "op": "DUP7"
    },
    "7159": {
      "op": "DUP3"
    },
    "7160": {
      "op": "DUP8"
    },
    "7161": {
      "op": "ADD"
    },
    "7162": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "7165": {
      "jump": "i",
      "op": "JUMP"
    },
    "7166": {
      "op": "JUMPDEST"
    },
    "7167": {
      "op": "SWAP3"
    },
    "7168": {
      "op": "POP"
    },
    "7169": {
      "op": "POP"
    },
    "7170": {
      "op": "PUSH2",
      "value": "0x1C0D"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7175": {
      "op": "DUP6"
    },
    "7176": {
      "op": "ADD"
    },
    "7177": {
      "op": "PUSH2",
      "value": "0x1857"
    },
    "7180": {
      "jump": "i",
      "op": "JUMP"
    },
    "7181": {
      "op": "JUMPDEST"
    },
    "7182": {
      "op": "SWAP1"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "op": "SWAP3"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "op": "SWAP3"
    },
    "7187": {
      "op": "POP"
    },
    "7188": {
      "op": "SWAP3"
    },
    "7189": {
      "jump": "o",
      "op": "JUMP"
    },
    "7190": {
      "op": "JUMPDEST"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7193": {
      "op": "DUP1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7196": {
      "op": "DUP4"
    },
    "7197": {
      "op": "DUP6"
    },
    "7198": {
      "op": "SUB"
    },
    "7199": {
      "op": "SLT"
    },
    "7200": {
      "op": "ISZERO"
    },
    "7201": {
      "op": "PUSH2",
      "value": "0x1C29"
    },
    "7204": {
      "op": "JUMPI"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7207": {
      "op": "DUP1"
    },
    "7208": {
      "op": "REVERT"
    },
    "7209": {
      "op": "JUMPDEST"
    },
    "7210": {
      "op": "DUP3"
    },
    "7211": {
      "op": "CALLDATALOAD"
    },
    "7212": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7221": {
      "op": "DUP2"
    },
    "7222": {
      "op": "GT"
    },
    "7223": {
      "op": "ISZERO"
    },
    "7224": {
      "op": "PUSH2",
      "value": "0x1C40"
    },
    "7227": {
      "op": "JUMPI"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7230": {
      "op": "DUP1"
    },
    "7231": {
      "op": "REVERT"
    },
    "7232": {
      "op": "JUMPDEST"
    },
    "7233": {
      "op": "PUSH2",
      "value": "0x1C4C"
    },
    "7236": {
      "op": "DUP6"
    },
    "7237": {
      "op": "DUP3"
    },
    "7238": {
      "op": "DUP7"
    },
    "7239": {
      "op": "ADD"
    },
    "7240": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "7243": {
      "jump": "i",
      "op": "JUMP"
    },
    "7244": {
      "op": "JUMPDEST"
    },
    "7245": {
      "op": "SWAP6"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7248": {
      "op": "SWAP5"
    },
    "7249": {
      "op": "SWAP1"
    },
    "7250": {
      "op": "SWAP5"
    },
    "7251": {
      "op": "ADD"
    },
    "7252": {
      "op": "CALLDATALOAD"
    },
    "7253": {
      "op": "SWAP5"
    },
    "7254": {
      "op": "POP"
    },
    "7255": {
      "op": "POP"
    },
    "7256": {
      "op": "POP"
    },
    "7257": {
      "op": "POP"
    },
    "7258": {
      "jump": "o",
      "op": "JUMP"
    },
    "7259": {
      "op": "JUMPDEST"
    },
    "7260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7264": {
      "op": "DUP3"
    },
    "7265": {
      "op": "DUP5"
    },
    "7266": {
      "op": "SUB"
    },
    "7267": {
      "op": "SLT"
    },
    "7268": {
      "op": "ISZERO"
    },
    "7269": {
      "op": "PUSH2",
      "value": "0x1C6D"
    },
    "7272": {
      "op": "JUMPI"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7275": {
      "op": "DUP1"
    },
    "7276": {
      "op": "REVERT"
    },
    "7277": {
      "op": "JUMPDEST"
    },
    "7278": {
      "op": "DUP2"
    },
    "7279": {
      "op": "CALLDATALOAD"
    },
    "7280": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7289": {
      "op": "DUP2"
    },
    "7290": {
      "op": "GT"
    },
    "7291": {
      "op": "ISZERO"
    },
    "7292": {
      "op": "PUSH2",
      "value": "0x1C84"
    },
    "7295": {
      "op": "JUMPI"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7298": {
      "op": "DUP1"
    },
    "7299": {
      "op": "REVERT"
    },
    "7300": {
      "op": "JUMPDEST"
    },
    "7301": {
      "op": "PUSH2",
      "value": "0x1B31"
    },
    "7304": {
      "op": "DUP5"
    },
    "7305": {
      "op": "DUP3"
    },
    "7306": {
      "op": "DUP6"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "7311": {
      "jump": "i",
      "op": "JUMP"
    },
    "7312": {
      "op": "JUMPDEST"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "DUP2"
    },
    "7316": {
      "op": "DUP2"
    },
    "7317": {
      "op": "SHR"
    },
    "7318": {
      "op": "SWAP1"
    },
    "7319": {
      "op": "DUP3"
    },
    "7320": {
      "op": "AND"
    },
    "7321": {
      "op": "DUP1"
    },
    "7322": {
      "op": "PUSH2",
      "value": "0x1CA4"
    },
    "7325": {
      "op": "JUMPI"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7328": {
      "op": "DUP3"
    },
    "7329": {
      "op": "AND"
    },
    "7330": {
      "op": "SWAP2"
    },
    "7331": {
      "op": "POP"
    },
    "7332": {
      "op": "JUMPDEST"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7335": {
      "op": "DUP3"
    },
    "7336": {
      "op": "LT"
    },
    "7337": {
      "op": "DUP2"
    },
    "7338": {
      "op": "EQ"
    },
    "7339": {
      "op": "ISZERO"
    },
    "7340": {
      "op": "PUSH2",
      "value": "0x1CC5"
    },
    "7343": {
      "op": "JUMPI"
    },
    "7344": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7351": {
      "op": "SHL"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7354": {
      "op": "MSTORE"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7359": {
      "op": "MSTORE"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7364": {
      "op": "REVERT"
    },
    "7365": {
      "op": "JUMPDEST"
    },
    "7366": {
      "op": "POP"
    },
    "7367": {
      "op": "SWAP2"
    },
    "7368": {
      "op": "SWAP1"
    },
    "7369": {
      "op": "POP"
    },
    "7370": {
      "jump": "o",
      "op": "JUMP"
    },
    "7371": {
      "op": "JUMPDEST"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7374": {
      "op": "DUP3"
    },
    "7375": {
      "op": "MLOAD"
    },
    "7376": {
      "op": "PUSH2",
      "value": "0x1CDD"
    },
    "7379": {
      "op": "DUP2"
    },
    "7380": {
      "op": "DUP5"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7383": {
      "op": "DUP8"
    },
    "7384": {
      "op": "ADD"
    },
    "7385": {
      "op": "PUSH2",
      "value": "0x18A7"
    },
    "7388": {
      "jump": "i",
      "op": "JUMP"
    },
    "7389": {
      "op": "JUMPDEST"
    },
    "7390": {
      "op": "SWAP2"
    },
    "7391": {
      "op": "SWAP1"
    },
    "7392": {
      "op": "SWAP2"
    },
    "7393": {
      "op": "ADD"
    },
    "7394": {
      "op": "SWAP3"
    },
    "7395": {
      "op": "SWAP2"
    },
    "7396": {
      "op": "POP"
    },
    "7397": {
      "op": "POP"
    },
    "7398": {
      "jump": "o",
      "op": "JUMP"
    },
    "7399": {
      "op": "JUMPDEST"
    },
    "7400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7407": {
      "op": "SHL"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7410": {
      "op": "MSTORE"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7415": {
      "op": "MSTORE"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7420": {
      "op": "REVERT"
    },
    "7421": {
      "op": "JUMPDEST"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7424": {
      "op": "DUP2"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7427": {
      "op": "NOT"
    },
    "7428": {
      "op": "DIV"
    },
    "7429": {
      "op": "DUP4"
    },
    "7430": {
      "op": "GT"
    },
    "7431": {
      "op": "DUP3"
    },
    "7432": {
      "op": "ISZERO"
    },
    "7433": {
      "op": "ISZERO"
    },
    "7434": {
      "op": "AND"
    },
    "7435": {
      "op": "ISZERO"
    },
    "7436": {
      "op": "PUSH2",
      "value": "0x1D17"
    },
    "7439": {
      "op": "JUMPI"
    },
    "7440": {
      "op": "PUSH2",
      "value": "0x1D17"
    },
    "7443": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "7446": {
      "jump": "i",
      "op": "JUMP"
    },
    "7447": {
      "op": "JUMPDEST"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "op": "MUL"
    },
    "7450": {
      "op": "SWAP1"
    },
    "7451": {
      "jump": "o",
      "op": "JUMP"
    },
    "7452": {
      "op": "JUMPDEST"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7455": {
      "op": "DUP3"
    },
    "7456": {
      "op": "PUSH2",
      "value": "0x1D39"
    },
    "7459": {
      "op": "JUMPI"
    },
    "7460": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7467": {
      "op": "SHL"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7475": {
      "op": "MSTORE"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7480": {
      "op": "REVERT"
    },
    "7481": {
      "op": "JUMPDEST"
    },
    "7482": {
      "op": "POP"
    },
    "7483": {
      "op": "DIV"
    },
    "7484": {
      "op": "SWAP1"
    },
    "7485": {
      "jump": "o",
      "op": "JUMP"
    },
    "7486": {
      "op": "JUMPDEST"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7491": {
      "op": "DUP3"
    },
    "7492": {
      "op": "DUP5"
    },
    "7493": {
      "op": "SUB"
    },
    "7494": {
      "op": "SLT"
    },
    "7495": {
      "op": "ISZERO"
    },
    "7496": {
      "op": "PUSH2",
      "value": "0x1D50"
    },
    "7499": {
      "op": "JUMPI"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7502": {
      "op": "DUP1"
    },
    "7503": {
      "op": "REVERT"
    },
    "7504": {
      "op": "JUMPDEST"
    },
    "7505": {
      "op": "DUP2"
    },
    "7506": {
      "op": "MLOAD"
    },
    "7507": {
      "op": "DUP1"
    },
    "7508": {
      "op": "ISZERO"
    },
    "7509": {
      "op": "ISZERO"
    },
    "7510": {
      "op": "DUP2"
    },
    "7511": {
      "op": "EQ"
    },
    "7512": {
      "op": "PUSH2",
      "value": "0xB9A"
    },
    "7515": {
      "op": "JUMPI"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7518": {
      "op": "DUP1"
    },
    "7519": {
      "op": "REVERT"
    },
    "7520": {
      "op": "JUMPDEST"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7529": {
      "op": "SHL"
    },
    "7530": {
      "op": "SUB"
    },
    "7531": {
      "op": "DUP1"
    },
    "7532": {
      "op": "DUP4"
    },
    "7533": {
      "op": "AND"
    },
    "7534": {
      "op": "DUP2"
    },
    "7535": {
      "op": "DUP2"
    },
    "7536": {
      "op": "EQ"
    },
    "7537": {
      "op": "ISZERO"
    },
    "7538": {
      "op": "PUSH2",
      "value": "0x1D7D"
    },
    "7541": {
      "op": "JUMPI"
    },
    "7542": {
      "op": "PUSH2",
      "value": "0x1D7D"
    },
    "7545": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "7548": {
      "jump": "i",
      "op": "JUMP"
    },
    "7549": {
      "op": "JUMPDEST"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7552": {
      "op": "ADD"
    },
    "7553": {
      "op": "SWAP4"
    },
    "7554": {
      "op": "SWAP3"
    },
    "7555": {
      "op": "POP"
    },
    "7556": {
      "op": "POP"
    },
    "7557": {
      "op": "POP"
    },
    "7558": {
      "jump": "o",
      "op": "JUMP"
    },
    "7559": {
      "op": "JUMPDEST"
    },
    "7560": {
      "op": "DUP1"
    },
    "7561": {
      "op": "MLOAD"
    },
    "7562": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7573": {
      "op": "DUP2"
    },
    "7574": {
      "op": "AND"
    },
    "7575": {
      "op": "DUP2"
    },
    "7576": {
      "op": "EQ"
    },
    "7577": {
      "op": "PUSH2",
      "value": "0x186E"
    },
    "7580": {
      "op": "JUMPI"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7583": {
      "op": "DUP1"
    },
    "7584": {
      "op": "REVERT"
    },
    "7585": {
      "op": "JUMPDEST"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7588": {
      "op": "DUP1"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7591": {
      "op": "DUP1"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7596": {
      "op": "DUP7"
    },
    "7597": {
      "op": "DUP9"
    },
    "7598": {
      "op": "SUB"
    },
    "7599": {
      "op": "SLT"
    },
    "7600": {
      "op": "ISZERO"
    },
    "7601": {
      "op": "PUSH2",
      "value": "0x1DB9"
    },
    "7604": {
      "op": "JUMPI"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7607": {
      "op": "DUP1"
    },
    "7608": {
      "op": "REVERT"
    },
    "7609": {
      "op": "JUMPDEST"
    },
    "7610": {
      "op": "PUSH2",
      "value": "0x1DC2"
    },
    "7613": {
      "op": "DUP7"
    },
    "7614": {
      "op": "PUSH2",
      "value": "0x1D87"
    },
    "7617": {
      "jump": "i",
      "op": "JUMP"
    },
    "7618": {
      "op": "JUMPDEST"
    },
    "7619": {
      "op": "SWAP5"
    },
    "7620": {
      "op": "POP"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7623": {
      "op": "DUP7"
    },
    "7624": {
      "op": "ADD"
    },
    "7625": {
      "op": "MLOAD"
    },
    "7626": {
      "op": "SWAP4"
    },
    "7627": {
      "op": "POP"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7630": {
      "op": "DUP7"
    },
    "7631": {
      "op": "ADD"
    },
    "7632": {
      "op": "MLOAD"
    },
    "7633": {
      "op": "SWAP3"
    },
    "7634": {
      "op": "POP"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7637": {
      "op": "DUP7"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "MLOAD"
    },
    "7640": {
      "op": "SWAP2"
    },
    "7641": {
      "op": "POP"
    },
    "7642": {
      "op": "PUSH2",
      "value": "0x1DE5"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7647": {
      "op": "DUP8"
    },
    "7648": {
      "op": "ADD"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1D87"
    },
    "7652": {
      "jump": "i",
      "op": "JUMP"
    },
    "7653": {
      "op": "JUMPDEST"
    },
    "7654": {
      "op": "SWAP1"
    },
    "7655": {
      "op": "POP"
    },
    "7656": {
      "op": "SWAP3"
    },
    "7657": {
      "op": "SWAP6"
    },
    "7658": {
      "op": "POP"
    },
    "7659": {
      "op": "SWAP3"
    },
    "7660": {
      "op": "SWAP6"
    },
    "7661": {
      "op": "SWAP1"
    },
    "7662": {
      "op": "SWAP4"
    },
    "7663": {
      "op": "POP"
    },
    "7664": {
      "jump": "o",
      "op": "JUMP"
    },
    "7665": {
      "op": "JUMPDEST"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7668": {
      "op": "DUP3"
    },
    "7669": {
      "op": "NOT"
    },
    "7670": {
      "op": "DUP3"
    },
    "7671": {
      "op": "GT"
    },
    "7672": {
      "op": "ISZERO"
    },
    "7673": {
      "op": "PUSH2",
      "value": "0x1E04"
    },
    "7676": {
      "op": "JUMPI"
    },
    "7677": {
      "op": "PUSH2",
      "value": "0x1E04"
    },
    "7680": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "7683": {
      "jump": "i",
      "op": "JUMP"
    },
    "7684": {
      "op": "JUMPDEST"
    },
    "7685": {
      "op": "POP"
    },
    "7686": {
      "op": "ADD"
    },
    "7687": {
      "op": "SWAP1"
    },
    "7688": {
      "jump": "o",
      "op": "JUMP"
    },
    "7689": {
      "op": "JUMPDEST"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7698": {
      "op": "SHL"
    },
    "7699": {
      "op": "SUB"
    },
    "7700": {
      "op": "DUP4"
    },
    "7701": {
      "op": "DUP2"
    },
    "7702": {
      "op": "AND"
    },
    "7703": {
      "op": "SWAP1"
    },
    "7704": {
      "op": "DUP4"
    },
    "7705": {
      "op": "AND"
    },
    "7706": {
      "op": "DUP2"
    },
    "7707": {
      "op": "DUP2"
    },
    "7708": {
      "op": "LT"
    },
    "7709": {
      "op": "ISZERO"
    },
    "7710": {
      "op": "PUSH2",
      "value": "0x1E29"
    },
    "7713": {
      "op": "JUMPI"
    },
    "7714": {
      "op": "PUSH2",
      "value": "0x1E29"
    },
    "7717": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "7720": {
      "jump": "i",
      "op": "JUMP"
    },
    "7721": {
      "op": "JUMPDEST"
    },
    "7722": {
      "op": "SUB"
    },
    "7723": {
      "op": "SWAP4"
    },
    "7724": {
      "op": "SWAP3"
    },
    "7725": {
      "op": "POP"
    },
    "7726": {
      "op": "POP"
    },
    "7727": {
      "op": "POP"
    },
    "7728": {
      "jump": "o",
      "op": "JUMP"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7732": {
      "op": "DUP1"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "MSTORE"
    },
    "7735": {
      "op": "DUP2"
    },
    "7736": {
      "op": "DUP2"
    },
    "7737": {
      "op": "ADD"
    },
    "7738": {
      "op": "MSTORE"
    },
    "7739": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7774": {
      "op": "DUP3"
    },
    "7775": {
      "op": "ADD"
    },
    "7776": {
      "op": "MSTORE"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7779": {
      "op": "ADD"
    },
    "7780": {
      "op": "SWAP1"
    },
    "7781": {
      "jump": "o",
      "op": "JUMP"
    },
    "7782": {
      "op": "JUMPDEST"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7787": {
      "op": "DUP3"
    },
    "7788": {
      "op": "DUP5"
    },
    "7789": {
      "op": "SUB"
    },
    "7790": {
      "op": "SLT"
    },
    "7791": {
      "op": "ISZERO"
    },
    "7792": {
      "op": "PUSH2",
      "value": "0x1E78"
    },
    "7795": {
      "op": "JUMPI"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7798": {
      "op": "DUP1"
    },
    "7799": {
      "op": "REVERT"
    },
    "7800": {
      "op": "JUMPDEST"
    },
    "7801": {
      "op": "POP"
    },
    "7802": {
      "op": "MLOAD"
    },
    "7803": {
      "op": "SWAP2"
    },
    "7804": {
      "op": "SWAP1"
    },
    "7805": {
      "op": "POP"
    },
    "7806": {
      "jump": "o",
      "op": "JUMP"
    },
    "7807": {
      "op": "JUMPDEST"
    },
    "7808": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7815": {
      "op": "SHL"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7818": {
      "op": "MSTORE"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7823": {
      "op": "MSTORE"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7828": {
      "op": "REVERT"
    },
    "7829": {
      "op": "JUMPDEST"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7832": {
      "op": "DUP1"
    },
    "7833": {
      "op": "DUP4"
    },
    "7834": {
      "op": "SLOAD"
    },
    "7835": {
      "op": "DUP2"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7838": {
      "op": "DUP3"
    },
    "7839": {
      "op": "DUP2"
    },
    "7840": {
      "op": "SHR"
    },
    "7841": {
      "op": "SWAP2"
    },
    "7842": {
      "op": "POP"
    },
    "7843": {
      "op": "DUP1"
    },
    "7844": {
      "op": "DUP4"
    },
    "7845": {
      "op": "AND"
    },
    "7846": {
      "op": "DUP1"
    },
    "7847": {
      "op": "PUSH2",
      "value": "0x1EB1"
    },
    "7850": {
      "op": "JUMPI"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7853": {
      "op": "DUP4"
    },
    "7854": {
      "op": "AND"
    },
    "7855": {
      "op": "SWAP3"
    },
    "7856": {
      "op": "POP"
    },
    "7857": {
      "op": "JUMPDEST"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7860": {
      "op": "DUP1"
    },
    "7861": {
      "op": "DUP5"
    },
    "7862": {
      "op": "LT"
    },
    "7863": {
      "op": "DUP3"
    },
    "7864": {
      "op": "EQ"
    },
    "7865": {
      "op": "ISZERO"
    },
    "7866": {
      "op": "PUSH2",
      "value": "0x1ED1"
    },
    "7869": {
      "op": "JUMPI"
    },
    "7870": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7877": {
      "op": "SHL"
    },
    "7878": {
      "op": "DUP7"
    },
    "7879": {
      "op": "MSTORE"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7884": {
      "op": "MSTORE"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7887": {
      "op": "DUP7"
    },
    "7888": {
      "op": "REVERT"
    },
    "7889": {
      "op": "JUMPDEST"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "DUP1"
    },
    "7892": {
      "op": "ISZERO"
    },
    "7893": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "7896": {
      "op": "JUMPI"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7899": {
      "op": "DUP2"
    },
    "7900": {
      "op": "EQ"
    },
    "7901": {
      "op": "PUSH2",
      "value": "0x1EF6"
    },
    "7904": {
      "op": "JUMPI"
    },
    "7905": {
      "op": "PUSH2",
      "value": "0x1F23"
    },
    "7908": {
      "op": "JUMP"
    },
    "7909": {
      "op": "JUMPDEST"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7912": {
      "op": "NOT"
    },
    "7913": {
      "op": "DUP7"
    },
    "7914": {
      "op": "AND"
    },
    "7915": {
      "op": "DUP10"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "DUP5"
    },
    "7918": {
      "op": "DUP10"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "op": "SWAP7"
    },
    "7921": {
      "op": "POP"
    },
    "7922": {
      "op": "PUSH2",
      "value": "0x1F23"
    },
    "7925": {
      "op": "JUMP"
    },
    "7926": {
      "op": "JUMPDEST"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7929": {
      "op": "DUP11"
    },
    "7930": {
      "op": "DUP2"
    },
    "7931": {
      "op": "MSTORE"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7934": {
      "op": "SWAP1"
    },
    "7935": {
      "op": "KECCAK256"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7938": {
      "op": "JUMPDEST"
    },
    "7939": {
      "op": "DUP7"
    },
    "7940": {
      "op": "DUP2"
    },
    "7941": {
      "op": "LT"
    },
    "7942": {
      "op": "ISZERO"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x1F1B"
    },
    "7946": {
      "op": "JUMPI"
    },
    "7947": {
      "op": "DUP2"
    },
    "7948": {
      "op": "SLOAD"
    },
    "7949": {
      "op": "DUP12"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "MSTORE"
    },
    "7953": {
      "op": "SWAP1"
    },
    "7954": {
      "op": "DUP6"
    },
    "7955": {
      "op": "ADD"
    },
    "7956": {
      "op": "SWAP1"
    },
    "7957": {
      "op": "DUP4"
    },
    "7958": {
      "op": "ADD"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x1F02"
    },
    "7962": {
      "op": "JUMP"
    },
    "7963": {
      "op": "JUMPDEST"
    },
    "7964": {
      "op": "POP"
    },
    "7965": {
      "op": "POP"
    },
    "7966": {
      "op": "DUP5"
    },
    "7967": {
      "op": "DUP10"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "SWAP7"
    },
    "7970": {
      "op": "POP"
    },
    "7971": {
      "op": "JUMPDEST"
    },
    "7972": {
      "op": "POP"
    },
    "7973": {
      "op": "SWAP5"
    },
    "7974": {
      "op": "SWAP9"
    },
    "7975": {
      "op": "SWAP8"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "op": "POP"
    },
    "7979": {
      "op": "POP"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "op": "POP"
    },
    "7984": {
      "jump": "o",
      "op": "JUMP"
    },
    "7985": {
      "op": "JUMPDEST"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7990": {
      "op": "NOT"
    },
    "7991": {
      "op": "DUP3"
    },
    "7992": {
      "op": "EQ"
    },
    "7993": {
      "op": "ISZERO"
    },
    "7994": {
      "op": "PUSH2",
      "value": "0x1F45"
    },
    "7997": {
      "op": "JUMPI"
    },
    "7998": {
      "op": "PUSH2",
      "value": "0x1F45"
    },
    "8001": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "8004": {
      "jump": "i",
      "op": "JUMP"
    },
    "8005": {
      "op": "JUMPDEST"
    },
    "8006": {
      "op": "POP"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8009": {
      "op": "ADD"
    },
    "8010": {
      "op": "SWAP1"
    },
    "8011": {
      "jump": "o",
      "op": "JUMP"
    },
    "8012": {
      "op": "JUMPDEST"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8017": {
      "op": "DUP3"
    },
    "8018": {
      "op": "AND"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8021": {
      "op": "DUP2"
    },
    "8022": {
      "op": "EQ"
    },
    "8023": {
      "op": "ISZERO"
    },
    "8024": {
      "op": "PUSH2",
      "value": "0x1F63"
    },
    "8027": {
      "op": "JUMPI"
    },
    "8028": {
      "op": "PUSH2",
      "value": "0x1F63"
    },
    "8031": {
      "op": "PUSH2",
      "value": "0x1CE7"
    },
    "8034": {
      "jump": "i",
      "op": "JUMP"
    },
    "8035": {
      "op": "JUMPDEST"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "SWAP3"
    },
    "8040": {
      "op": "SWAP2"
    },
    "8041": {
      "op": "POP"
    },
    "8042": {
      "op": "POP"
    },
    "8043": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "37f76c0d078a9951af3cdabff62fd3cd22019691",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/DataTypes.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/ILendingPool.sol\";\nimport \"../interfaces/TransferHelper.sol\";\nimport \"../interfaces/IMoonSquares.sol\";\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract DailyRocket is Ownable, KeeperCompatibleInterface {\n\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(\n        address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)\n    );  \n    ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n    \n    IMoonSquares public moonSquare;\n\n    uint128 public dayCount;//Kepps track of the days\n\n    string[] public predictableAssets;//all assets that a user can predict\n    address[] assetPriceAggregators;\n\n    mapping(string => bool) public activeAsset;\n\n    struct DayInfo {\n        int256 closePrice;\n        uint256 noOfPlayers;\n        uint256 noOfWinners;\n        uint256 totalAmount;\n    }\n\n    mapping(uint => mapping(string => DayInfo)) public dayAssetInfo;\n\n    //mapping(uint256 => mapping(string => int256)) public dayAssetClosePrice; //Closing Price per asset \n\n    mapping(uint256 => uint256) dayCloseTime; //Closing Time for every asset\n    \n    address Dai = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n\n    uint256 public contractStartTime; //The contract should start at 0000.00 hours\n\n    //mapping(uint256 => mapping(string => uint256)) public dayAssetTotalAmount;\n\n    //mapping(uint256 => mapping(string => uint256)) public dayAssetNoOfWinners;\n    \n    mapping(uint256 => mapping(string => int256[])) public dayAssetPrediction;\n\n    mapping(uint256 => mapping(string => address[])) public dayAssetPredictors;\n\n    event Predicted(address indexed _placer, int256 _prediction);\n    \n    struct Charity {\n        bytes8 name;\n        bytes32 link; //sends people to the charity's official site\n    }\n    struct Prediction {\n        int256 prediction;\n        uint256 time;\n        bool isWinner;\n    }\n    \n    mapping (address => Charity) public presentCharities;\n\n    mapping(uint128 => mapping(string => address[])) public dailyAssetWinners;\n\n    //user and their prediction\n    mapping(uint128 => mapping(string => mapping(address => Prediction))) public dayAssetUserPrediction;\n\n    constructor(\n        //address _dai,\n        IMoonSquares _moonsqr\n        )\n    {\n        //AcceptedTokens.push(_dai);\n        moonSquare = _moonsqr;\n        contractStartTime = block.timestamp;\n        dayCount = 1;\n        dayCloseTime[dayCount] = contractStartTime + 86400 seconds;//adds a day to the start time. to change to an input later.\n    }//instantiate the token addresses upon deployment\n\n\n    function setNewClosingPrice() internal {\n        for (uint256 i = 0; i < assetPriceAggregators.length; i++){\n            dayAssetInfo[dayCount][predictableAssets[i]].closePrice = getPrice(i);\n        }\n    }\n    \n    function addAssetAndAgg(string memory _asset, address _aggregator) public onlyOwner {\n        predictableAssets.push(_asset);\n        assetPriceAggregators.push(_aggregator);\n        activeAsset[_asset] = true;\n    }\n\n    function predictClosePrice(\n        string memory _asset, \n        int _prediction\n    ) public\n    {   \n        require(activeAsset[_asset] == true);\n        if (dayCount > 1) {\n            require(getTime() <= dayCloseTime[dayCount -1] + 64800 seconds);//After this time, one cannot\n        }\n        uint256 amount = 10000000000000000000;//the amount we set for the daily close\n    \n        require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n        IERC20(Dai).transferFrom(msg.sender, address(this), uint(amount));\n        \n        dayAssetInfo[dayCount][_asset].totalAmount += amount;\n        //Updates The prediction mapping\n        dayAssetUserPrediction[dayCount][_asset][msg.sender] = Prediction(\n            _prediction,\n            getTime(),\n            false\n        );\n        //adds to the list of predictions\n        dayAssetPrediction[dayCount][_asset].push(_prediction);\n        //add the sender to the predictors array\n        dayAssetPredictors[dayCount][_asset].push(msg.sender);\n\n        emit Predicted(msg.sender, _prediction);\n    }\n\n    function setNumberOfWinners() private {\n        uint128 day = dayCount;\n        for (uint8 i = 0; i < predictableAssets.length; i++) {\n            require(\n                dayAssetPrediction[day][predictableAssets[i]].length\n                ==\n                dayAssetPredictors[day][predictableAssets[i]].length\n            );\n            for (uint8 p = 0; p < dayAssetPrediction[day][predictableAssets[i]].length; p++) {\n                require(\n                    dayAssetPrediction[day][predictableAssets[i]][p]\n                    ==\n                    dayAssetInfo[day][predictableAssets[i]].closePrice\n                );\n                dailyAssetWinners[day][predictableAssets[i]].push(dayAssetPredictors[day][predictableAssets[i]][p]);\n                dayAssetInfo[day][predictableAssets[i]].noOfWinners +=1;\n\n                moonSquare.addToWinners(dayAssetPredictors[day][predictableAssets[i]][p]);\n            }\n        }\n    }\n\n\n    function getTime() public view returns(uint){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x6135b13325bfC4B00278B4abC5e20bbce2D6580e);\n        (,,,uint answer,) = priceFeed.latestRoundData();\n         return uint(answer);\n    }\n\n    function getPrice(uint256 _aggindex) public view returns(int){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(assetPriceAggregators[_aggindex]);\n        (,int answer,,,) = priceFeed.latestRoundData();\n         return int(answer);\n    }\n\n    function claimWinnings(uint128 _day, string memory _asset) public {\n        //logic to see if the person had a winning prediction\n        require(dayAssetUserPrediction[_day][_asset][msg.sender].prediction == dayAssetInfo[_day][_asset].closePrice);\n        uint256 winners = dayAssetInfo[_day][_asset].noOfWinners;\n        dayAssetUserPrediction[_day][_asset][msg.sender].isWinner = true;\n        IERC20(Dai).transfer(\n            msg.sender, \n            ((dayAssetInfo[_day][_asset].totalAmount) * 90/100)/winners\n        );\n        \n    }\n\n    function isAwinner(\n        uint128 _day,\n        string memory _asset,\n        address checked\n    ) public view returns(bool){\n        if(dayAssetInfo[_day][_asset].closePrice == 0) {\n            return false;\n        }else {\n            require(\n                dayAssetUserPrediction[_day][_asset][checked].prediction\n                ==\n                dayAssetInfo[_day][_asset].closePrice\n            );\n            return true;\n        }\n    }\n    \n    function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        if (dayCloseTime[dayCount] + 86400 seconds == getTime()){\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint256(0)));\n        }\n        if (getTime() > dayCloseTime[dayCount -1] + 64800 seconds) {\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint(1)));\n        }\n        performData = checkData;\n        \n    }\n    \n    function performUpkeep(bytes calldata performData) external override {\n         uint256 decodedValue = abi.decode(performData, (uint256));\n        if (decodedValue == 0) {\n            setNewClosingPrice();\n            setNumberOfWinners();\n            dayCount++;\n        }\n        if (decodedValue == 1) {\n            sendToIba();\n        }\n    }\n    \n    //sends non winnings to an interest bearibg account \n    function sendToIba() private {\n        require(getTime() > dayCloseTime[dayCount -1] + 64800 seconds);\n        for (uint128 i = 0; i < predictableAssets.length; i++) {\n            uint amount = ((dayAssetInfo[dayCount][predictableAssets[i]].totalAmount) * 10/100);\n            IERC20(Dai).approve(address(lendingPool), amount);\n            lendingPool.deposit(\n                Dai,\n                uint(amount),\n                address(moonSquare),\n                0\n            );\n        }\n    }\n\n\n    \n}",
  "sourceMap": "551:7824:4:-:0;;;;;617:137;;;-1:-1:-1;;;;;;617:137:4;705:42;617:137;;;;;;-1:-1:-1;;;802:25:4;;705:42;802:23;;:25;;;;;551:7824;705:42;802:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;762:66;;;-1:-1:-1;;;;;762:66:4;;;;-1:-1:-1;;;;;;762:66:4;;;;;;1494:56;;;;;;1508:42;1494:56;;;2541:351;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:1;867:9:0;:23::i;:::-;2669:10:4;:21;;-1:-1:-1;;;;;;2669:21:4;-1:-1:-1;;;;;2669:21:4;;;;;2720:15;2700:17;:35;;;2745:8;:12;;-1:-1:-1;;;;;;2745:12:4;-1:-1:-1;2745:12:4;;;2792:33;;2812:13;2792:33;:::i;:::-;2780:8;;-1:-1:-1;;;;;2780:8:4;2767:22;;;;:12;:22;;;;;:58;-1:-1:-1;551:7824:4;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:11:o;683:225::-;723:3;754:1;750:6;747:1;744:13;741:136;;;799:10;794:3;790:20;787:1;780:31;834:4;831:1;824:15;862:4;859:1;852:15;741:136;-1:-1:-1;893:9:11;;683:225::o;:::-;551:7824:4;;;;;;",
  "sourcePath": "contracts/DailyRocket.sol",
  "type": "contract"
}