{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        },
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "contract IMoonSquares",
          "name": "_moonsqr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_placer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "Predicted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AcceptedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "activeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "addAssetAndAgg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyAssetWinners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetNoOfWinners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPredictors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dayAssetUserPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_aggindex",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moonSquare",
      "outputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "predictClosePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presentCharities",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "name",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "link",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "10": "interfaces/ISwapRouter.sol",
    "12": "interfaces/TransferHelper.sol",
    "2": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "4": "contracts/DailyRocket.sol",
    "6": "interfaces/IERC20.sol",
    "7": "interfaces/ILendingPool.sol",
    "8": "interfaces/ILendingPoolAddressesProvider.sol",
    "9": "interfaces/IMoonSquares.sol"
  },
  "ast": {
    "absolutePath": "contracts/DailyRocket.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1056
      ],
      "Context": [
        1946
      ],
      "DailyRocket": [
        906
      ],
      "DataTypes": [
        1116
      ],
      "IERC20": [
        2038
      ],
      "ILendingPool": [
        1494
      ],
      "ILendingPoolAddressesProvider": [
        1645
      ],
      "IMoonSquares": [
        1653
      ],
      "ISwapRouter": [
        1753
      ],
      "IUniswapV3SwapCallback": [
        1960
      ],
      "KeeperCompatibleInterface": [
        1075
      ],
      "Ownable": [
        1010
      ],
      "TransferHelper": [
        1924
      ]
    },
    "id": 907,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:4"
      },
      {
        "absolutePath": "interfaces/DataTypes.sol",
        "file": "../interfaces/DataTypes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1117,
        "src": "56:37:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1646,
        "src": "94:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1495,
        "src": "152:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/TransferHelper.sol",
        "file": "../interfaces/TransferHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1925,
        "src": "193:42:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISwapRouter.sol",
        "file": "../interfaces/ISwapRouter.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1754,
        "src": "236:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoonSquares.sol",
        "file": "../interfaces/IMoonSquares.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1654,
        "src": "276:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1076,
        "src": "318:80:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1057,
        "src": "399:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 907,
        "sourceUnit": 1011,
        "src": "535:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1010,
              "src": "615:7:4"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "615:7:4"
          },
          {
            "baseName": {
              "id": 13,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1075,
              "src": "624:25:4"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "624:25:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 906,
        "linearizedBaseContracts": [
          906,
          1075,
          1010,
          1946
        ],
        "name": "DailyRocket",
        "nameLocation": "600:11:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "944:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "914:137:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1645",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1645,
                "src": "914:29:4"
              },
              "referencedDeclaration": 1645,
              "src": "914:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1645",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "994:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 18,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:4",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 21,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "994:51:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 17,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1645,
                "src": "955:29:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1645_$",
                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                }
              },
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "955:96:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1645",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "1192:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1179:66:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$1494",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "ILendingPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1494,
                "src": "1179:12:4"
              },
              "referencedDeclaration": 1494,
              "src": "1179:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1494",
                "typeString": "contract ILendingPool"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [],
                  "expression": {
                    "argumentTypes": [],
                    "expression": {
                      "id": 27,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1219:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1645",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "getLendingPool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1579,
                    "src": "1219:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                      "typeString": "function () view external returns (address)"
                    }
                  },
                  "id": 29,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1219:25:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 26,
                "name": "ILendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1494,
                "src": "1206:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$1494_$",
                  "typeString": "type(contract ILendingPool)"
                }
              },
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1206:39:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1494",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd2faa68",
            "id": 34,
            "mutability": "mutable",
            "name": "moonSquare",
            "nameLocation": "1276:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1256:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMoonSquares_$1653",
              "typeString": "contract IMoonSquares"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "IMoonSquares",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1653,
                "src": "1256:12:4"
              },
              "referencedDeclaration": 1653,
              "src": "1256:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                "typeString": "contract IMoonSquares"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 37,
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "1321:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1292:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$1753",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1753,
                "src": "1292:11:4"
              },
              "referencedDeclaration": 1753,
              "src": "1292:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 40,
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "1360:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1337:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 38,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1337:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1370:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "dayCount",
            "nameLocation": "1389:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1381:16:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 41,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1381:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "predictableAssets",
            "nameLocation": "1438:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1429:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1429:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1429:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "assetPriceAggregators",
            "nameLocation": "1507:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1497:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1497:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1497:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ec6f4f41",
            "id": 52,
            "mutability": "mutable",
            "name": "activeAsset",
            "nameLocation": "1566:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1535:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1543:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1535:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 50,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1553:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "dayAssetClosePrice",
            "nameLocation": "1630:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1584:64:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256))"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1592:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1584:45:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256))"
              },
              "valueType": {
                "id": 56,
                "keyType": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1611:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1603:25:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                  "typeString": "mapping(string => int256)"
                },
                "valueType": {
                  "id": 55,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1621:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "dayCloseTime",
            "nameLocation": "1710:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1682:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1690:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1682:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1701:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "Dai",
            "nameLocation": "1766:3:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1758:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 63,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1758:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1772:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0c3d5157",
            "id": 67,
            "mutability": "mutable",
            "name": "contractStartTime",
            "nameLocation": "1836:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1821:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1821:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80f79702",
            "id": 73,
            "mutability": "mutable",
            "name": "dayAssetTotalAmount",
            "nameLocation": "1959:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1905:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1913:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1905:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 71,
                "keyType": {
                  "id": 69,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1932:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1924:26:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 70,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1942:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63168475",
            "id": 79,
            "mutability": "mutable",
            "name": "dayAssetNoOfWinners",
            "nameLocation": "2039:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "1985:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1993:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1985:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 77,
                "keyType": {
                  "id": 75,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2012:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2004:26:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2022:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afa3a617",
            "id": 86,
            "mutability": "mutable",
            "name": "dayAssetPrediction",
            "nameLocation": "2124:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2069:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256[]))"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2077:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2069:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256[]))"
              },
              "valueType": {
                "id": 84,
                "keyType": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2096:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2088:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                  "typeString": "mapping(string => int256[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 82,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ArrayTypeName",
                  "src": "2106:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                    "typeString": "int256[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f90f0b7",
            "id": 93,
            "mutability": "mutable",
            "name": "dayAssetPredictors",
            "nameLocation": "2205:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2149:74:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 92,
              "keyType": {
                "id": 87,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2157:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2149:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 91,
                "keyType": {
                  "id": 88,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2176:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2168:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ArrayTypeName",
                  "src": "2186:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 99,
            "name": "Predicted",
            "nameLocation": "2236:9:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_placer",
                  "nameLocation": "2262:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2246:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "2278:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "2271:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:45:4"
            },
            "src": "2230:61:4"
          },
          {
            "canonicalName": "DailyRocket.Charity",
            "id": 104,
            "members": [
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "2333:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2326:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 100,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2326:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "2355:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2347:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 102,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2347:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Charity",
            "nameLocation": "2308:7:4",
            "nodeType": "StructDefinition",
            "scope": 906,
            "src": "2301:111:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "126df02b",
            "id": 109,
            "mutability": "mutable",
            "name": "presentCharities",
            "nameLocation": "2458:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2422:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
              "typeString": "mapping(address => struct DailyRocket.Charity)"
            },
            "typeName": {
              "id": 108,
              "keyType": {
                "id": 105,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2431:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2422:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$104_storage_$",
                "typeString": "mapping(address => struct DailyRocket.Charity)"
              },
              "valueType": {
                "id": 107,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 106,
                  "name": "Charity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "2442:7:4"
                },
                "referencedDeclaration": 104,
                "src": "2442:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Charity_$104_storage_ptr",
                  "typeString": "struct DailyRocket.Charity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a128671",
            "id": 112,
            "mutability": "mutable",
            "name": "AcceptedTokens",
            "nameLocation": "2498:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2481:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 110,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2481:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 111,
              "nodeType": "ArrayTypeName",
              "src": "2481:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ce529a",
            "id": 119,
            "mutability": "mutable",
            "name": "dailyAssetWinners",
            "nameLocation": "2575:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2519:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint128 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 118,
              "keyType": {
                "id": 113,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2527:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2519:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint128 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 117,
                "keyType": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2546:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2538:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 116,
                  "nodeType": "ArrayTypeName",
                  "src": "2556:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2aba3f0",
            "id": 127,
            "mutability": "mutable",
            "name": "dayAssetUserPrediction",
            "nameLocation": "2704:22:4",
            "nodeType": "VariableDeclaration",
            "scope": 906,
            "src": "2631:95:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
              "typeString": "mapping(uint128 => mapping(string => mapping(address => int256)))"
            },
            "typeName": {
              "id": 126,
              "keyType": {
                "id": 120,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2639:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2631:65:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                "typeString": "mapping(uint128 => mapping(string => mapping(address => int256)))"
              },
              "valueType": {
                "id": 125,
                "keyType": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2658:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2650:45:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                  "typeString": "mapping(string => mapping(address => int256))"
                },
                "valueType": {
                  "id": 124,
                  "keyType": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2668:26:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                    "typeString": "mapping(address => int256)"
                  },
                  "valueType": {
                    "id": 123,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2890:302:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2920:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2900:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2900:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:25:4"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2935:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "2948:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "2935:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:24:4"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "moonSquare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2969:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_moonsqr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2982:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "src": "2969:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:21:4"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "contractStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3000:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 153,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3020:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3020:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3000:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:35:4"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3045:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3056:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3045:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:12:4"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "dayCloseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3067:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "dayCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3080:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3067:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 164,
                        "name": "contractStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3092:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3112:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "3092:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3067:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:58:4"
                }
              ]
            },
            "id": 170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_dai",
                  "nameLocation": "2762:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2754:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "2788:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2776:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130,
                      "name": "ISwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1753,
                      "src": "2776:11:4"
                    },
                    "referencedDeclaration": 1753,
                    "src": "2776:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_moonsqr",
                  "nameLocation": "2867:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2854:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                    "typeString": "contract IMoonSquares"
                  },
                  "typeName": {
                    "id": 134,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 133,
                      "name": "IMoonSquares",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1653,
                      "src": "2854:12:4"
                    },
                    "referencedDeclaration": 1653,
                    "src": "2854:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2744:141:4"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2890:0:4"
            },
            "scope": 906,
            "src": "2733:459:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "3287:163:4",
              "statements": [
                {
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "3355:89:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 184,
                                "name": "dayAssetClosePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "3369:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                  "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                }
                              },
                              "id": 189,
                              "indexExpression": {
                                "id": 185,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3388:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3369:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                "typeString": "mapping(string memory => int256)"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 186,
                                "name": "predictableAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "3398:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 188,
                              "indexExpression": {
                                "id": 187,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "3416:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3398:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3369:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 192,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "3431:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 191,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "3422:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3422:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3369:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 195,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:64:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 177,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "3317:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 178,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3321:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3321:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3317:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "initializationExpression": {
                    "assignments": [
                      174
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3310:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "3302:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3302:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 176,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3314:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3302:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3351:3:4",
                      "subExpression": {
                        "id": 181,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3351:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 183,
                    "nodeType": "ExpressionStatement",
                    "src": "3351:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3297:147:4"
                }
              ]
            },
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewClosingPrice",
            "nameLocation": "3257:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:2:4"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3287:0:4"
            },
            "scope": 906,
            "src": "3248:202:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3516:46:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3546:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 206,
                        "name": "AcceptedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3526:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3526:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:29:4"
                }
              ]
            },
            "functionSelector": "4a7dc8e0",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 203,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 953,
                  "src": "3506:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3506:9:4"
              }
            ],
            "name": "addPaymentToken",
            "nameLocation": "3465:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3489:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3481:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3480:18:4"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3516:0:4"
            },
            "scope": 906,
            "src": "3456:106:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3656:132:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3689:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 222,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3666:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3666:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "_aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3733:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 228,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3706:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3706:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:39:4"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 234,
                        "name": "activeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3755:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 236,
                      "indexExpression": {
                        "id": 235,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3767:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3755:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3777:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3755:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:26:4"
                }
              ]
            },
            "functionSelector": "81688c64",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 953,
                  "src": "3646:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3646:9:4"
              }
            ],
            "name": "addAssetAndAgg",
            "nameLocation": "3581:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3610:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3596:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "3626:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3618:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3595:43:4"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3656:0:4"
            },
            "scope": 906,
            "src": "3572:216:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "3937:2548:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 254,
                            "name": "activeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3958:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "id": 255,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3970:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3958:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3981:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3958:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3950:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:36:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 261,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4000:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4011:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4000:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "IfStatement",
                  "src": "3996:135:4",
                  "trueBody": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "4014:117:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 265,
                                  "name": "getTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "4036:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4036:9:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 267,
                                    "name": "dayCloseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "4049:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 271,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 268,
                                      "name": "dayCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "4062:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 269,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4072:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "4062:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4049:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3634383030",
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4077:13:4",
                                  "subdenomination": "seconds",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64800_by_1",
                                    "typeString": "int_const 64800"
                                  },
                                  "value": "64800"
                                },
                                "src": "4049:41:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4036:54:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 264,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4028:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4028:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 276,
                        "nodeType": "ExpressionStatement",
                        "src": "4028:63:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 280,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4148:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "4140:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4140:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "hexValue": "3130303030303030303030303030303030303030",
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4157:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4140:37:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "4230:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 284,
                      "name": "Dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4239:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4230:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "5854:183:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 394,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5899:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5899:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 398,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5919:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$906",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$906",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5911:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 396,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5911:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5911:13:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 391,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "5884:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 390,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2038,
                                      "src": "5877:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2038_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5877:11:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2038",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1997,
                                  "src": "5877:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5877:48:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 403,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "5934:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5929:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 401,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5929:4:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5929:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5877:64:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 389,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5869:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5869:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "5869:73:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5977:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5977:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 416,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5997:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5989:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 414,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5989:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5989:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 420,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "6009:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6004:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6004:4:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6004:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 409,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "5959:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 408,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2038,
                                "src": "5952:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2038_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5952:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2038",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2019,
                            "src": "5952:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5952:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "5952:65:4"
                      }
                    ]
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "4226:1811:4",
                  "trueBody": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "4244:1604:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 291,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4288:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4288:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 295,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4308:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DailyRocket_$906",
                                          "typeString": "contract DailyRocket"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DailyRocket_$906",
                                          "typeString": "contract DailyRocket"
                                        }
                                      ],
                                      "id": 294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4300:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 293,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4300:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4300:13:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 288,
                                        "name": "Dai",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "4273:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 287,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2038,
                                      "src": "4266:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2038_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4266:11:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2038",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1997,
                                  "src": "4266:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4266:48:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 300,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "4323:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4318:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 298,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4318:4:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4318:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4266:64:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 286,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4258:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "4258:73:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 308,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4460:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 309,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4467:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4467:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 313,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4487:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4479:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 311,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4479:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4479:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 315,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "4494:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 305,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "4428:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1924_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1805,
                            "src": "4428:31:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4428:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "4428:73:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 321,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4625:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 324,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "4640:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4632:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 322,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4632:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4632:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 326,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "4653:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 318,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "4598:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1924_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1897,
                            "src": "4598:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4598:62:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "4598:62:4"
                      },
                      {
                        "assignments": [
                          330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 330,
                            "mutability": "mutable",
                            "name": "amountInMaximum",
                            "nameLocation": "4679:15:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "4674:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4674:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 332,
                        "initialValue": {
                          "hexValue": "3135303030303030303030303030303030303030",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4697:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15000000000000000000_by_1",
                            "typeString": "int_const 15000000000000000000"
                          },
                          "value": "15000000000000000000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4674:43:4"
                      },
                      {
                        "assignments": [
                          337
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 337,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "4774:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "4731:49:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$1723_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                            },
                            "typeName": {
                              "id": 336,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 335,
                                "name": "ISwapRouter.ExactOutputSingleParams",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1723,
                                "src": "4731:35:4"
                              },
                              "referencedDeclaration": 1723,
                              "src": "4731:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$1723_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 353,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 340,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4866:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 341,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4903:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 342,
                              "name": "poolFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4933:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 345,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4981:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$906",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4973:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 343,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4973:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4973:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 347,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5018:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5018:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 349,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "5066:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 350,
                              "name": "amountInMaximum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "5111:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5167:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 338,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1753,
                              "src": "4799:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1753_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ExactOutputSingleParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1723,
                            "src": "4799:35:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$1723_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountOut",
                            "amountInMaximum",
                            "sqrtPriceLimitX96"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4799:388:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$1723_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4731:456:4"
                      },
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "5313:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 388,
                            "src": "5308:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5308:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 360,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 358,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5353:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$1723_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExactOutputSingleParams_$1723_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                              }
                            ],
                            "expression": {
                              "id": 356,
                              "name": "swapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "5324:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                                "typeString": "contract ISwapRouter"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exactOutputSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1732,
                            "src": "5324:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$1723_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5324:36:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5308:52:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 361,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "5632:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 362,
                            "name": "amountInMaximum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "5643:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5632:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 387,
                        "nodeType": "IfStatement",
                        "src": "5628:210:4",
                        "trueBody": {
                          "id": 386,
                          "nodeType": "Block",
                          "src": "5660:178:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 367,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5705:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 370,
                                        "name": "swapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "5718:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISwapRouter_$1753",
                                          "typeString": "contract ISwapRouter"
                                        }
                                      ],
                                      "id": 369,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5710:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 368,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5710:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5710:19:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5731:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 364,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "5678:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1924_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeApprove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1897,
                                  "src": "5678:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5678:55:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 374,
                              "nodeType": "ExpressionStatement",
                              "src": "5678:55:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 378,
                                    "name": "Dai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5779:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 379,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5784:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5784:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 381,
                                      "name": "amountInMaximum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "5796:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 382,
                                      "name": "amountIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 355,
                                      "src": "5814:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5796:26:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 375,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "5751:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1924_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1851,
                                  "src": "5751:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5751:72:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 385,
                              "nodeType": "ExpressionStatement",
                              "src": "5751:72:4"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "dayAssetTotalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6046:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "id": 427,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6066:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6046:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "id": 428,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6076:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6046:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "6087:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6046:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:47:4"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 434,
                            "name": "dayAssetUserPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "6144:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                              "typeString": "mapping(uint128 => mapping(string memory => mapping(address => int256)))"
                            }
                          },
                          "id": 439,
                          "indexExpression": {
                            "id": 435,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6167:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6144:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                            "typeString": "mapping(string memory => mapping(address => int256))"
                          }
                        },
                        "id": 440,
                        "indexExpression": {
                          "id": 436,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6177:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6144:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "expression": {
                          "id": 437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6185:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6185:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6144:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 442,
                      "name": "_prediction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "6199:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "6144:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6304:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 445,
                            "name": "dayAssetPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "6262:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                            }
                          },
                          "id": 448,
                          "indexExpression": {
                            "id": 446,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6281:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6262:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                            "typeString": "mapping(string memory => int256[] storage ref)"
                          }
                        },
                        "id": 449,
                        "indexExpression": {
                          "id": 447,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6291:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6262:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                          "typeString": "int256[] storage ref"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6262:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_int256_$dyn_storage_ptr_$_t_int256_$returns$__$bound_to$_t_array$_t_int256_$dyn_storage_ptr_$",
                        "typeString": "function (int256[] storage pointer,int256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6262:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "6262:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6417:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6417:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 454,
                            "name": "dayAssetPredictors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "6375:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "id": 455,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6394:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6375:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 458,
                        "indexExpression": {
                          "id": 456,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6404:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6375:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6375:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6375:53:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6454:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6454:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6466:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 464,
                      "name": "Predicted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "6444:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "EmitStatement",
                  "src": "6439:39:4"
                }
              ]
            },
            "functionSelector": "be331a64",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 250,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 247,
                    "src": "3926:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "allowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 673,
                  "src": "3913:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3913:19:4"
              }
            ],
            "name": "predictClosePrice",
            "nameLocation": "3803:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3844:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3830:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "3865:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3861:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3894:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "3886:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3886:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3820:85:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:4"
            },
            "scope": 906,
            "src": "3794:2691:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "6529:815:4",
              "statements": [
                {
                  "assignments": [
                    475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "6547:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "6539:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6539:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "id": 476,
                    "name": "dayCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "6553:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6539:22:4"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "6624:714:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 490,
                                      "name": "dayAssetPrediction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86,
                                      "src": "6663:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                      }
                                    },
                                    "id": 492,
                                    "indexExpression": {
                                      "id": 491,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6682:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6663:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                      "typeString": "mapping(string memory => int256[] storage ref)"
                                    }
                                  },
                                  "id": 496,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 493,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6687:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 495,
                                    "indexExpression": {
                                      "id": 494,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "6705:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6687:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6663:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                    "typeString": "int256[] storage ref"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6663:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 498,
                                      "name": "dayAssetPredictors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 93,
                                      "src": "6751:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                      }
                                    },
                                    "id": 500,
                                    "indexExpression": {
                                      "id": 499,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6770:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6751:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(string memory => address[] storage ref)"
                                    }
                                  },
                                  "id": 504,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 501,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "6775:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 503,
                                    "indexExpression": {
                                      "id": 502,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "6793:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6775:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6751:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6751:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6663:140:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 489,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6638:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6638:179:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "6638:179:4"
                      },
                      {
                        "body": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6912:416:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 527,
                                            "name": "dayAssetPrediction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "6938:18:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                            }
                                          },
                                          "id": 529,
                                          "indexExpression": {
                                            "id": 528,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 475,
                                            "src": "6957:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6938:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                            "typeString": "mapping(string memory => int256[] storage ref)"
                                          }
                                        },
                                        "id": 533,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 530,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45,
                                            "src": "6962:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 532,
                                          "indexExpression": {
                                            "id": 531,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 479,
                                            "src": "6980:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6962:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6938:45:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                          "typeString": "int256[] storage ref"
                                        }
                                      },
                                      "id": 535,
                                      "indexExpression": {
                                        "id": 534,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 510,
                                        "src": "6984:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6938:48:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 536,
                                          "name": "dayAssetClosePrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58,
                                          "src": "6990:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                          }
                                        },
                                        "id": 538,
                                        "indexExpression": {
                                          "id": 537,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7009:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6990:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                          "typeString": "mapping(string memory => int256)"
                                        }
                                      },
                                      "id": 542,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 539,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7014:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 541,
                                        "indexExpression": {
                                          "id": 540,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7032:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7014:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6990:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "6938:97:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 526,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6930:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6930:106:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 545,
                              "nodeType": "ExpressionStatement",
                              "src": "6930:106:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 554,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7104:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 556,
                                        "indexExpression": {
                                          "id": 555,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7123:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7104:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 560,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 557,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7128:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 559,
                                        "indexExpression": {
                                          "id": 558,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7146:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7128:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7104:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 562,
                                    "indexExpression": {
                                      "id": 561,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "7150:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7104:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 546,
                                        "name": "dailyAssetWinners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 119,
                                        "src": "7054:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => address[] storage ref))"
                                        }
                                      },
                                      "id": 551,
                                      "indexExpression": {
                                        "id": 547,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "7072:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7054:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(string memory => address[] storage ref)"
                                      }
                                    },
                                    "id": 552,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 548,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "7077:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 550,
                                      "indexExpression": {
                                        "id": 549,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 479,
                                        "src": "7095:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7077:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7054:44:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 553,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7054:49:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7054:99:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 564,
                              "nodeType": "ExpressionStatement",
                              "src": "7054:99:4"
                            },
                            {
                              "expression": {
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 565,
                                      "name": "dayAssetNoOfWinners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "7171:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                      }
                                    },
                                    "id": 570,
                                    "indexExpression": {
                                      "id": 566,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "7191:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7171:24:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 571,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 567,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "7196:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 569,
                                    "indexExpression": {
                                      "id": 568,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 479,
                                      "src": "7214:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7196:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7171:46:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7220:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7171:50:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 574,
                              "nodeType": "ExpressionStatement",
                              "src": "7171:50:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 578,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 93,
                                          "src": "7264:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 580,
                                        "indexExpression": {
                                          "id": 579,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "7283:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7264:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 584,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 581,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "7288:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 583,
                                        "indexExpression": {
                                          "id": 582,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 479,
                                          "src": "7306:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7288:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7264:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 586,
                                    "indexExpression": {
                                      "id": 585,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "7310:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7264:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 575,
                                    "name": "moonSquare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "7240:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                                      "typeString": "contract IMoonSquares"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addToWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1652,
                                  "src": "7240:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7240:73:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 588,
                              "nodeType": "ExpressionStatement",
                              "src": "7240:73:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 513,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "6849:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 514,
                                  "name": "dayAssetPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "6853:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                  }
                                },
                                "id": 516,
                                "indexExpression": {
                                  "id": 515,
                                  "name": "day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "6872:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6853:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                  "typeString": "mapping(string memory => int256[] storage ref)"
                                }
                              },
                              "id": 520,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 517,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "6877:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 519,
                                "indexExpression": {
                                  "id": 518,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "6895:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6877:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6853:45:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                "typeString": "int256[] storage ref"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6853:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6849:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 590,
                        "initializationExpression": {
                          "assignments": [
                            510
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 510,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "6842:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 590,
                              "src": "6836:7:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 509,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6836:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 512,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6846:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6836:11:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6907:3:4",
                            "subExpression": {
                              "id": 523,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "6907:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 525,
                          "nodeType": "ExpressionStatement",
                          "src": "6907:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "6831:497:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 482,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6589:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 483,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6593:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6593:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6589:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 592,
                  "initializationExpression": {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6582:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "6576:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 481,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6586:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6576:11:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6619:3:4",
                      "subExpression": {
                        "id": 486,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "6619:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 488,
                    "nodeType": "ExpressionStatement",
                    "src": "6619:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "6571:767:4"
                }
              ]
            },
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberOfWinners",
            "nameLocation": "6500:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6518:2:4"
            },
            "returnParameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6529:0:4"
            },
            "scope": 906,
            "src": "6491:853:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "7395:203:4",
              "statements": [
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7427:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "7405:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 599,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1056,
                          "src": "7405:21:4"
                        },
                        "referencedDeclaration": 1056,
                        "src": "7405:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7461:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 602,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "7439:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1056_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7439:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7405:99:4"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    607,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7523:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 617,
                      "src": "7518:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7518:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 608,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "7534:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "7534:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7534:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7514:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 614,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7584:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7579:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7579:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7579:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "7572:19:4"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "id": 618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "7360:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7367:2:4"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "7390:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7389:6:4"
            },
            "scope": 906,
            "src": "7351:247:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "7665:191:4",
              "statements": [
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7697:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "7675:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 625,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1056,
                          "src": "7675:21:4"
                        },
                        "referencedDeclaration": 1056,
                        "src": "7675:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 629,
                          "name": "assetPriceAggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "7731:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 631,
                        "indexExpression": {
                          "id": 630,
                          "name": "_aggindex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "7753:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7731:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 628,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "7709:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1056_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7709:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7675:89:4"
                },
                {
                  "assignments": [
                    null,
                    635,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "7780:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "7776:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7776:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 639,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 636,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "7793:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1056",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "7793:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7793:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7774:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 642,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "7842:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7838:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "7838:3:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:11:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 624,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "7831:18:4"
                }
              ]
            },
            "functionSelector": "e7572230",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "7613:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_aggindex",
                  "nameLocation": "7630:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7622:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7622:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7621:19:4"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7661:3:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7660:5:4"
            },
            "scope": 906,
            "src": "7604:252:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "7900:138:4",
              "statements": [
                {
                  "body": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "7960:61:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 662,
                                  "name": "AcceptedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "7982:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 664,
                                "indexExpression": {
                                  "id": 663,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 651,
                                  "src": "7997:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7982:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 665,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "8003:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7982:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7974:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7974:36:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "7974:36:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 654,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "7925:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 655,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "7929:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7929:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7925:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 670,
                  "initializationExpression": {
                    "assignments": [
                      651
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7919:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7914:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7914:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 653,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7922:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7914:9:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7955:3:4",
                      "subExpression": {
                        "id": 658,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "7955:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 660,
                    "nodeType": "ExpressionStatement",
                    "src": "7955:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "7910:111:4"
                },
                {
                  "id": 671,
                  "nodeType": "PlaceholderStatement",
                  "src": "8030:1:4"
                }
              ]
            },
            "id": 673,
            "name": "allowedToken",
            "nameLocation": "7871:12:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7892:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "7884:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7884:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7883:16:4"
            },
            "src": "7862:176:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8110:375:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 681,
                                "name": "dayAssetUserPrediction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "8190:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$_$",
                                  "typeString": "mapping(uint128 => mapping(string memory => mapping(address => int256)))"
                                }
                              },
                              "id": 683,
                              "indexExpression": {
                                "id": 682,
                                "name": "_day",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 675,
                                "src": "8213:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8190:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_int256_$_$",
                                "typeString": "mapping(string memory => mapping(address => int256))"
                              }
                            },
                            "id": 685,
                            "indexExpression": {
                              "id": 684,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8219:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8190:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 688,
                          "indexExpression": {
                            "expression": {
                              "id": 686,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8227:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8227:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8190:48:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 689,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "8242:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "id": 690,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8261:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8242:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 693,
                          "indexExpression": {
                            "id": 692,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "8267:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8242:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8190:84:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8182:93:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "8182:93:4"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "8293:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "8285:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 697,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8285:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 699,
                        "name": "dayAssetNoOfWinners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "8303:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                        }
                      },
                      "id": 701,
                      "indexExpression": {
                        "id": 700,
                        "name": "_day",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "8323:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8303:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 703,
                    "indexExpression": {
                      "id": 702,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8329:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8303:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8285:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8380:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8380:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 711,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "8407:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 713,
                                        "indexExpression": {
                                          "id": 712,
                                          "name": "_day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 675,
                                          "src": "8427:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8407:25:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 715,
                                      "indexExpression": {
                                        "id": 714,
                                        "name": "_asset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 677,
                                        "src": "8433:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8407:33:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 716,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8406:35:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3930",
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8444:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_90_by_1",
                                    "typeString": "int_const 90"
                                  },
                                  "value": "90"
                                },
                                "src": "8406:40:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8447:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8406:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 721,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8405:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 722,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "8452:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8405:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 706,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "8353:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 705,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2038,
                          "src": "8346:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2038_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8346:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2038",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1987,
                      "src": "8346:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8346:123:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "8346:123:4"
                }
              ]
            },
            "functionSelector": "1cc87d88",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWinnings",
            "nameLocation": "8053:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "8075:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8067:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "8067:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8095:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8081:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8081:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8066:36:4"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8110:0:4"
            },
            "scope": 906,
            "src": "8044:441:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1068
            ],
            "body": {
              "id": 791,
              "nodeType": "Block",
              "src": "8619:381:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 737,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "8633:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 739,
                        "indexExpression": {
                          "id": 738,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "8646:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8633:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8658:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "8633:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 742,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "8675:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8675:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8633:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 760,
                  "nodeType": "IfStatement",
                  "src": "8629:157:4",
                  "trueBody": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "8685:101:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 745,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "8699:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8714:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8699:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "ExpressionStatement",
                        "src": "8699:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8740:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 754,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8771:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8763:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 752,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8763:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8763:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 750,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8746:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8746:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8746:28:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 757,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8739:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 736,
                        "id": 758,
                        "nodeType": "Return",
                        "src": "8732:43:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 761,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "8799:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8799:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 763,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "8811:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 764,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "8824:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8834:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8824:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8811:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3634383030",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8839:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64800_by_1",
                          "typeString": "int_const 64800"
                        },
                        "value": "64800"
                      },
                      "src": "8811:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8799:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 786,
                  "nodeType": "IfStatement",
                  "src": "8795:157:4",
                  "trueBody": {
                    "id": 785,
                    "nodeType": "Block",
                    "src": "8854:98:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 771,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "8868:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8883:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8868:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 774,
                        "nodeType": "ExpressionStatement",
                        "src": "8868:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8909:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8937:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8932:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 778,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8932:4:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8932:7:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 776,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8915:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8915:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8915:25:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 783,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8908:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 736,
                        "id": 784,
                        "nodeType": "Return",
                        "src": "8901:40:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 787,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "8961:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 788,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "8975:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "8961:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "8961:23:4"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 792,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "8504:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 731,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8556:8:4"
            },
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "8531:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "8516:24:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:26:4"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "8579:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "8574:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8574:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "8606:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "8593:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8593:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8573:45:4"
            },
            "scope": 906,
            "src": "8495:505:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1074
            ],
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "9079:278:4",
              "statements": [
                {
                  "assignments": [
                    799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "decodedValue",
                      "nameLocation": "9098:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 830,
                      "src": "9090:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9090:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 807,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "9124:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9138:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 803,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9138:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 805,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9137:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 800,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9113:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "9113:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9113:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9090:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 808,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "9161:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9177:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9161:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 821,
                  "nodeType": "IfStatement",
                  "src": "9157:126:4",
                  "trueBody": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "9180:103:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 811,
                            "name": "setNewClosingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "9194:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9194:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 813,
                        "nodeType": "ExpressionStatement",
                        "src": "9194:20:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 814,
                            "name": "setNumberOfWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "9228:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9228:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "9228:20:4"
                      },
                      {
                        "expression": {
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9262:10:4",
                          "subExpression": {
                            "id": 817,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "9262:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "9262:10:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 822,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "9296:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9312:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9296:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "IfStatement",
                  "src": "9292:59:4",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "9315:36:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 825,
                            "name": "sendToIba",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "9329:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9329:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "9329:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "9019:13:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 796,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9070:8:4"
            },
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "9048:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "9033:26:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9033:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9032:28:4"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9079:0:4"
            },
            "scope": 906,
            "src": "9010:347:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "9463:511:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 837,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "9481:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9481:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 839,
                              "name": "dayCloseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "9493:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 843,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 840,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "9506:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9516:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9506:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9493:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3634383030",
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9521:13:4",
                            "subdenomination": "seconds",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64800_by_1",
                              "typeString": "int_const 64800"
                            },
                            "value": "64800"
                          },
                          "src": "9493:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9481:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9473:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9473:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "9473:62:4"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "9600:368:4",
                    "statements": [
                      {
                        "assignments": [
                          861
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 861,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9619:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "9614:11:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 860,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9614:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 875,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 862,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73,
                                          "src": "9630:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 864,
                                        "indexExpression": {
                                          "id": 863,
                                          "name": "dayCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 42,
                                          "src": "9650:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9630:29:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 868,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 865,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45,
                                          "src": "9660:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 867,
                                        "indexExpression": {
                                          "id": 866,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 850,
                                          "src": "9678:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9660:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9630:51:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 869,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9629:53:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9685:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "9629:58:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9688:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "9629:62:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 874,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9628:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9614:78:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 882,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "9782:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1494",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1494",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9774:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 880,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9774:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9774:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 884,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "9796:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 877,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "9761:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 876,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2038,
                                "src": "9754:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2038_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9754:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2038",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2007,
                            "src": "9754:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9754:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "9754:49:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 890,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "9854:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 893,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 861,
                                  "src": "9880:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9875:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 891,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9875:4:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9875:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 897,
                                  "name": "moonSquare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "9913:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                                    "typeString": "contract IMoonSquares"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1653",
                                    "typeString": "contract IMoonSquares"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9905:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9905:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9905:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9942:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 887,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "9817:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$1494",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1269,
                            "src": "9817:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9817:140:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "9817:140:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 853,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "9565:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 854,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "9569:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9569:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9565:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 903,
                  "initializationExpression": {
                    "assignments": [
                      850
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9558:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "9550:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "9550:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 852,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9562:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9550:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9595:3:4",
                      "subExpression": {
                        "id": 857,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "9595:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 859,
                    "nodeType": "ExpressionStatement",
                    "src": "9595:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "9545:423:4"
                }
              ]
            },
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 833,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 953,
                  "src": "9453:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "9453:9:4"
              }
            ],
            "name": "sendToIba",
            "nameLocation": "9433:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9442:2:4"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9463:0:4"
            },
            "scope": 906,
            "src": "9424:550:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 907,
        "src": "591:9392:4",
        "usedErrors": []
      }
    ],
    "src": "31:9952:4"
  },
  "bytecode": "",
  "bytecodeSha1": "3949ee7d28a6545552aa1a61578da8f2521b8e77",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "DailyRocket",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "67": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "12": {
        "TransferHelper.safeApprove": {
          "71": [
            2078,
            2085,
            false
          ],
          "72": [
            2090,
            2106,
            true
          ],
          "73": [
            2110,
            2134,
            true
          ]
        },
        "TransferHelper.safeTransfer": {
          "74": [
            1418,
            1425,
            false
          ],
          "75": [
            1430,
            1446,
            true
          ],
          "76": [
            1450,
            1474,
            true
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "68": [
            816,
            823,
            false
          ],
          "69": [
            828,
            844,
            true
          ],
          "70": [
            848,
            872,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.checkUpkeep": {
          "55": [
            8633,
            8684,
            false
          ],
          "56": [
            8799,
            8852,
            false
          ]
        },
        "DailyRocket.claimWinnings": {
          "52": [
            8190,
            8274,
            true
          ]
        },
        "DailyRocket.performUpkeep": {
          "53": [
            9161,
            9178,
            false
          ],
          "54": [
            9296,
            9313,
            false
          ]
        },
        "DailyRocket.predictClosePrice": {
          "57": [
            3958,
            3985,
            true
          ],
          "58": [
            4000,
            4012,
            false
          ],
          "59": [
            4036,
            4090,
            true
          ],
          "60": [
            4230,
            4242,
            false
          ],
          "61": [
            4266,
            4330,
            true
          ],
          "62": [
            5632,
            5658,
            false
          ],
          "63": [
            5877,
            5941,
            true
          ]
        },
        "DailyRocket.sendToIba": {
          "66": [
            9481,
            9534,
            true
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "64": [
            6663,
            6803,
            true
          ],
          "65": [
            6938,
            7035,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "47": [
            2131,
            2148
          ],
          "48": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "32": [
            1926,
            1999
          ],
          "33": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "10": {},
      "12": {
        "TransferHelper.safeApprove": {
          "50": [
            2070,
            2142
          ]
        },
        "TransferHelper.safeTransfer": {
          "51": [
            1410,
            1482
          ]
        },
        "TransferHelper.safeTransferFrom": {
          "49": [
            808,
            881
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.addAssetAndAgg": {
          "15": [
            3666,
            3696
          ],
          "16": [
            3706,
            3745
          ],
          "17": [
            3755,
            3781
          ]
        },
        "DailyRocket.addPaymentToken": {
          "8": [
            3526,
            3555
          ]
        },
        "DailyRocket.checkUpkeep": {
          "9": [
            8732,
            8775
          ],
          "10": [
            8699,
            8718
          ],
          "11": [
            8868,
            8887
          ],
          "12": [
            8901,
            8941
          ],
          "13": [
            8961,
            8984
          ]
        },
        "DailyRocket.claimWinnings": {
          "1": [
            8182,
            8275
          ],
          "2": [
            8346,
            8469
          ]
        },
        "DailyRocket.performUpkeep": {
          "3": [
            9194,
            9214
          ],
          "4": [
            9228,
            9248
          ],
          "5": [
            9262,
            9272
          ],
          "6": [
            9329,
            9340
          ]
        },
        "DailyRocket.predictClosePrice": {
          "18": [
            3950,
            3986
          ],
          "19": [
            4028,
            4091
          ],
          "20": [
            4258,
            4331
          ],
          "21": [
            4428,
            4501
          ],
          "22": [
            4598,
            4660
          ],
          "23": [
            5678,
            5733
          ],
          "24": [
            5751,
            5823
          ],
          "25": [
            5869,
            5942
          ],
          "26": [
            5952,
            6017
          ],
          "27": [
            6046,
            6093
          ],
          "28": [
            6144,
            6210
          ],
          "29": [
            6262,
            6316
          ],
          "30": [
            6375,
            6428
          ],
          "31": [
            6439,
            6478
          ]
        },
        "DailyRocket.sendToIba": {
          "43": [
            9473,
            9535
          ],
          "44": [
            9754,
            9803
          ],
          "45": [
            9817,
            9957
          ],
          "46": [
            9595,
            9598
          ]
        },
        "DailyRocket.setNewClosingPrice": {
          "34": [
            3369,
            3433
          ],
          "35": [
            3351,
            3354
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "36": [
            6638,
            6817
          ],
          "37": [
            6930,
            7036
          ],
          "38": [
            7054,
            7153
          ],
          "39": [
            7171,
            7221
          ],
          "40": [
            7240,
            7313
          ],
          "41": [
            6907,
            6910
          ],
          "42": [
            6619,
            6622
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IMoonSquares",
    "ISwapRouter",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "TransferHelper"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "591:9392:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:37;;1370:4;1337:37;;;;;14429:8:13;14417:21;;;14399:40;;14387:2;14372:18;1337:37:4;;;;;;;;1821:32;;;;;;;;;11658:25:13;;;11646:2;11631:18;1821:32:4;11514:175:13;2422:52:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10961:41:13;;;10943:60;;11034:2;11019:18;;11012:34;;;;10916:18;2422:52:4;10771:281:13;8044:441:4;;;;;;:::i;:::-;;:::i;:::-;;9010:347;;;;;;:::i;:::-;;:::i;2519:73::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8628:32:13;;;8610:51;;8598:2;8583:18;2519:73:4;8464:203:13;2481:31:4;;;;;;:::i;:::-;;:::i;3456:106::-;;;;;;:::i;:::-;;:::i;7351:247::-;;;:::i;2149:74::-;;;;;;:::i;:::-;;:::i;1985:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8495:505;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;1905:73:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:216;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;2069:73:4;;;;;;:::i;:::-;;:::i;3794:2691::-;;;;;;:::i;:::-;;:::i;2631:95::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:39;;;;;7604:252;;;;;;:::i;:::-;;:::i;1535:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10277:14:13;;10270:22;10252:41;;10240:2;10225:18;1535:42:4;10112:187:13;1846:189:0;;;;;;:::i;:::-;;:::i;1256:30:4:-;;;;;-1:-1:-1;;;;;1256:30:4;;;8044:441;-1:-1:-1;;;;;8242:24:4;;;;;;:18;:24;;;;;;;:32;;;;8267:6;;8242:32;:::i;:::-;;;;;;;;;;;;;;8190:22;:28;8213:4;-1:-1:-1;;;;;8190:28:4;-1:-1:-1;;;;;8190:28:4;;;;;;;;;;;;8219:6;8190:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8227:10;8190:48;;;;;;;;;:84;8182:93;;;;;;-1:-1:-1;;;;;8303:25:4;;8285:15;8303:25;;;:19;:25;;;;;;:33;;;;8329:6;;8303:33;:::i;:::-;;;;;;;;;;;;;;8285:51;;8353:3;;;;;;;;;-1:-1:-1;;;;;8353:3:4;-1:-1:-1;;;;;8346:20:4;;8380:10;8452:7;8447:3;8407:19;:25;8427:4;-1:-1:-1;;;;;8407:25:4;;;;;;;;;;;;8433:6;8407:33;;;;;;:::i;:::-;;;;;;;;;;;;;;8444:2;8406:40;;;;:::i;:::-;:44;;;;:::i;:::-;8405:54;;;;:::i;:::-;8346:123;;-1:-1:-1;;;;;;8346:123:4;;;;;;;-1:-1:-1;;;;;9553:32:13;;;8346:123:4;;;9535:51:13;9602:18;;;9595:34;9508:18;;8346:123:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8110:375;8044:441;;:::o;9010:347::-;9090:20;9113:34;;;;9124:11;9113:34;:::i;:::-;9090:57;-1:-1:-1;9161:17:4;9157:126;;9194:20;:18;:20::i;:::-;9228;:18;:20::i;:::-;9262:8;:10;;-1:-1:-1;;;;;9262:10:4;;:8;:10;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9262:10:4;;;;;-1:-1:-1;;;;;9262:10:4;;;;;;;9157:126;9296:12;9312:1;9296:17;9292:59;;;9329:11;:9;:11::i;:::-;9079:278;9010:347;;:::o;2519:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2519:73:4;;-1:-1:-1;2519:73:4;;-1:-1:-1;;2519:73:4:o;2481:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2481:31:4;;-1:-1:-1;2481:31:4;:::o;3456:106::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;3526:14:4::1;:29:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3526:29:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;3526:29:4::1;-1:-1:-1::0;;;;;3526:29:4;;;::::1;::::0;;;::::1;::::0;;3456:106::o;7351:247::-;7390:4;7405:31;7461:42;7405:99;;7518:11;7534:9;-1:-1:-1;;;;;7534:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7514:47:4;7351:247;-1:-1:-1;;;;;;7351:247:4:o;2149:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8495:505;8574:17;8593:24;8675:9;:7;:9::i;:::-;8646:8;;-1:-1:-1;;;;;8646:8:4;8633:22;;;;:12;:22;;;;;;:38;;8658:13;8633:38;:::i;:::-;:51;8629:157;;;8746:28;;;8771:1;8746:28;;;8406:19:13;8714:4:4;;-1:-1:-1;8714:4:4;;8441:12:13;8746:28:4;;;;;;;;;;;;;8732:43;;;;;;8629:157;8824:8;;8811:12;;:25;;8824:11;;8834:1;;-1:-1:-1;;;;;8824:8:4;:11;:::i;:::-;-1:-1:-1;;;;;8811:25:4;;;;;;;;;;;;;8839:13;8811:41;;;;:::i;:::-;8799:9;:7;:9::i;:::-;:53;8795:157;;;8883:4;8868:19;;8909:4;8937:1;8915:25;;;;;;8406:19:13;;8450:2;8441:12;;8277:182;8795:157:4;8975:9;;8961:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8961:23:4;;-1:-1:-1;;;;8495:505:4;;;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3572:216:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3666:17:4::1;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3666:30:4;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3706:21:4::1;:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3706:39:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;3706:39:4::1;-1:-1:-1::0;;;;;3706:39:4;::::1;;::::0;;3755:19:::1;::::0;:11:::1;::::0;:19:::1;::::0;3767:6;;3755:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;3755:26:4;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3572:216:4:o;2069:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3794:2691::-;3926:5;7914:6;7910:111;7929:17;:24;7925:28;;7910:111;;;8003:6;-1:-1:-1;;;;;7982:27:4;:14;7997:1;7982:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7982:17:4;:27;7974:36;;;;;;7955:3;;;;:::i;:::-;;;;7910:111;;;;3958:11:::1;3970:6;3958:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:27;;:19:::0;:27:::1;3950:36;;;::::0;::::1;;4000:8;::::0;4011:1:::1;-1:-1:-1::0;;;;;4000:8:4;;::::1;:12;3996:135;;;4062:8;::::0;4049:12:::1;::::0;:25:::1;::::0;4062:11:::1;::::0;4072:1:::1;::::0;-1:-1:-1;;;;;4062:8:4::1;:11;:::i;:::-;-1:-1:-1::0;;;;;4049:25:4::1;;;;;;;;;;;;;4077:13;4049:41;;;;:::i;:::-;4036:9;:7;:9::i;:::-;:54;;4028:63;;;::::0;::::1;;4239:3;::::0;4157:20:::1;::::0;-1:-1:-1;;;;;4230:12:4;;::::1;4239:3:::0;::::1;4230:12;4226:1811;;4273:3;::::0;4266:48:::1;::::0;-1:-1:-1;;;4266:48:4;;4288:10:::1;4266:48;::::0;::::1;8884:34:13::0;4308:4:4::1;8934:18:13::0;;;8927:43;4323:6:4;;-1:-1:-1;;;;;4273:3:4::1;::::0;4266:21:::1;::::0;8819:18:13;;4266:48:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;4258:73;;;::::0;::::1;;4428;4460:5;4467:10;4487:4;4494:6;4428:31;:73::i;:::-;4598:62;4625:5;4640:10;4653:6;4598:26;:62::i;:::-;4799:388;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4799:388:4;;::::1;::::0;;4903:3:::1;::::0;;::::1;4799:388;::::0;::::1;::::0;;;1370:4:::1;4799:388:::0;;;;;;4981:4:::1;4799:388:::0;;;;;;5018:15:::1;4799:388:::0;;;;;;;;;;;;4697:20:::1;4799:388:::0;;;;;;-1:-1:-1;4799:388:4;;;;;;5324:36;;-1:-1:-1;;;5324:36:4;;13742:13:13;;13738:22;;5324:36:4::1;::::0;::::1;13720:41:13::0;13803:24;;13799:33;;13777:20;;;13770:63;13875:24;;13901:8;13871:39;13849:20;;;13842:69;13953:24;;13949:33;;13927:20;;;13920:63;14021:24;;13999:20;;;13992:54;14084:24;14062:20;;;14055:54;14147:24;;14125:20;;;14118:54;14214:24;;14210:33;;14188:20;;;14181:63;-1:-1:-1;5324:10:4::1;:28;::::0;::::1;::::0;13654:19:13;;5324:36:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5308:52;;5643:15;5632:8;:26;5628:210;;;5705:3;::::0;5678:55:::1;::::0;-1:-1:-1;;;;;5705:3:4::1;5718:10;5705:3;5678:26;:55::i;:::-;5779:3;::::0;5751:72:::1;::::0;-1:-1:-1;;;;;5779:3:4::1;5784:10;5796:26;5814:8:::0;5796:15;:26:::1;:::i;:::-;5751:27;:72::i;:::-;4244:1604;;;4226:1811;;;5884:3;::::0;5877:48:::1;::::0;-1:-1:-1;;;5877:48:4;;5899:10:::1;5877:48;::::0;::::1;8884:34:13::0;5919:4:4::1;8934:18:13::0;;;8927:43;5934:6:4;;-1:-1:-1;;;;;5884:3:4::1;::::0;5877:21:::1;::::0;8819:18:13;;5877:48:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;5869:73;;;::::0;::::1;;5959:3;::::0;5952:65:::1;::::0;-1:-1:-1;;;5952:65:4;;5977:10:::1;5952:65;::::0;::::1;9221:34:13::0;5997:4:4::1;9271:18:13::0;;;9264:43;9323:18;;;9316:34;;;-1:-1:-1;;;;;5959:3:4;;::::1;::::0;5952:24:::1;::::0;9156:18:13;;5952:65:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4226:1811;6066:8;::::0;-1:-1:-1;;;;;6066:8:4::1;6046:29;::::0;;;:19:::1;:29;::::0;;;;;;:37;;6087:6;;6046:29;:37:::1;::::0;6076:6;;6046:37:::1;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6167:8:4::1;::::0;-1:-1:-1;;;;;6167:8:4::1;6144:32;::::0;;;:22:::1;:32;::::0;;;;;;:40;;6199:11;;6144:32;:40:::1;::::0;6177:6;;6144:40:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;6185:10:::1;6144:52;::::0;;;;;;;;;:66;;;;6281:8:::1;::::0;-1:-1:-1;;;;;6281:8:4::1;6262:28:::0;;:18:::1;:28:::0;;;;;;:36:::1;::::0;6291:6;;6262:36:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:54;;::::1;::::0;::::1;::::0;;-1:-1:-1;6262:54:4;;;;;;::::1;::::0;;;6394:8:::1;::::0;-1:-1:-1;;;;;6394:8:4::1;6375:28:::0;;:18:::1;:28:::0;;;;;:36:::1;::::0;6404:6;;6375:36:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:53;;::::1;::::0;::::1;::::0;;-1:-1:-1;6375:53:4;;;;;;;::::1;::::0;;6417:10:::1;-1:-1:-1::0;;;;;;6375:53:4;;::::1;::::0;::::1;::::0;;;11658:25:13;;;6417:10:4;6444:34:::1;::::0;11631:18:13;6444:34:4::1;;;;;;;3937:2548;3794:2691:::0;;;;:::o;7604:252::-;7661:3;7675:31;7731:21;7753:9;7731:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7731:32:4;7675:89;;7776:10;7793:9;-1:-1:-1;;;;;7793:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7774:46:4;;7604:252;-1:-1:-1;;;;;;;7604:252:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;12226:2:13;1926:73:0::1;::::0;::::1;12208:21:13::0;12265:2;12245:18;;;12238:30;12304:34;12284:18;;;12277:62;-1:-1:-1;;;12355:18:13;;;12348:36;12401:19;;1926:73:0::1;12024:402:13::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3248:202:4:-;3302:9;3297:147;3321:21;:28;3317:32;;3297:147;;;3422:11;3431:1;3422:8;:11::i;:::-;3388:8;;-1:-1:-1;;;;;3388:8:4;3369:28;;;;:18;:28;;;;;3398:17;:20;;3416:1;;3398:20;;;;;;:::i;:::-;;;;;;;;3369:50;;;;;;:::i;:::-;;;;;;;;;;;;;;:64;3351:3;;;;:::i;:::-;;;;3297:147;;6491:853;6553:8;;-1:-1:-1;;;;;6553:8:4;6539:11;6571:767;6593:17;:24;6589:28;;;;6571:767;;;-1:-1:-1;;;;;6751:23:4;;;;;;:18;:23;;;;;6775:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6751:45;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;6663:18;:23;6682:3;-1:-1:-1;;;;;6663:23:4;;;;;;;;;;;;6687:17;6705:1;6687:20;;;;;;;;;;:::i;:::-;;;;;;;;6663:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;:140;6638:179;;;;;;6836:7;6831:497;-1:-1:-1;;;;;6853:23:4;;;;;;:18;:23;;;;;6877:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6853:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;6849:56;;;;6831:497;;;-1:-1:-1;;;;;6990:23:4;;;;;;:18;:23;;;;;7014:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;6990:45;;;;;;:::i;:::-;;;;;;;;;;;;;;6938:18;:23;6957:3;-1:-1:-1;;;;;6938:23:4;;;;;;;;;;;;6962:17;6980:1;6962:20;;;;;;;;;;:::i;:::-;;;;;;;;6938:45;;;;;;:::i;:::-;;;;;;;;;;;;;6984:1;6938:48;;;;;;;;;;:::i;:::-;;;;;;;;;:97;6930:106;;;;;;-1:-1:-1;;;;;7054:22:4;;;;;;:17;:22;;;;;7077:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7054:44;;;;;;:::i;:::-;;;;;;;;;;;;;7104:18;:23;7123:3;-1:-1:-1;;;;;7104:23:4;;;;;;;;;;;;7128:17;7146:1;7128:20;;;;;;;;;;:::i;:::-;;;;;;;;7104:45;;;;;;:::i;:::-;;;;;;;;;;;;;7150:1;7104:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7054:99;;7104:48;7054:99;;;;;;;;;;;;;;-1:-1:-1;;;;;;7054:99:4;-1:-1:-1;;;;;7104:48:4;;;7054:99;;;;;;-1:-1:-1;;;;;7171:24:4;;;;:19;:24;;;;;7196:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;7171:46;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;7240:10:4;;-1:-1:-1;;;;;7264:23:4;;7240:10;7264:23;;;:18;:23;;;;;7288:17;:20;;-1:-1:-1;;;;;7240:10:4;;;;:23;;7264;7288:17;:20;;;;;;;;;;:::i;:::-;;;;;;;;7264:45;;;;;;:::i;:::-;;;;;;;;;;;;;7310:1;7264:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;7240:73;;;;;;-1:-1:-1;;;;;;7240:73:4;;;-1:-1:-1;;;;;7264:48:4;;;7240:73;;;8610:51:13;8583:18;;7240:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6907:3;;;;;:::i;:::-;;;;6831:497;;;-1:-1:-1;6619:3:4;;;;:::i;:::-;;;;6571:767;;;;6529:815;6491:853::o;9424:550::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;9506:8:4::1;::::0;9493:12:::1;::::0;:25:::1;::::0;9506:11:::1;::::0;9516:1:::1;::::0;-1:-1:-1;;;;;9506:8:4::1;:11;:::i;:::-;-1:-1:-1::0;;;;;9493:25:4::1;;;;;;;;;;;;;9521:13;9493:41;;;;:::i;:::-;9481:9;:7;:9::i;:::-;:53;9473:62;;;::::0;::::1;;9550:9;9545:423;9569:17;:24:::0;-1:-1:-1;;;;;9565:28:4;::::1;;9545:423;;;9650:8;::::0;-1:-1:-1;;;;;9650:8:4;;::::1;9614:11;9630:29:::0;;;:19:::1;:29;::::0;;;;9660:17:::1;:20:::0;;9614:11;;9688:3:::1;::::0;9660:20;;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;9630:51;;;;;;:::i;:::-;;;;;;;;;;;;;;9685:2;9629:58;;;;:::i;:::-;:62;;;;:::i;:::-;9761:3;::::0;9782:11:::1;::::0;9754:49:::1;::::0;-1:-1:-1;;;9754:49:4;;-1:-1:-1;;;;;9782:11:4;;::::1;9754:49;::::0;::::1;9535:51:13::0;9602:18;;;9595:34;;;9614:78:4;;-1:-1:-1;9761:3:4::1;::::0;9754:19:::1;::::0;9508:18:13;;9754:49:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9817:11:4::1;::::0;9854:3:::1;::::0;9913:10:::1;::::0;9817:140:::1;::::0;-1:-1:-1;;;9817:140:4;;-1:-1:-1;;;;;9854:3:4;;::::1;9817:140;::::0;::::1;9916:34:13::0;9966:18;;;9959:34;;;9913:10:4;;::::1;10009:18:13::0;;;10002:43;9817:11:4::1;10061:18:13::0;;;10054:47;9817:11:4;::::1;::::0;:19:::1;::::0;9850::13;;9817:140:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9600:368;9595:3;;;;;:::i;:::-;;;;9545:423;;2041:169:0::0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;530:358:12:-;728:69;;;-1:-1:-1;;;;;9239:15:13;;;728:69:12;;;9221:34:13;9291:15;;;9271:18;;;9264:43;9323:18;;;;9316:34;;;728:69:12;;;;;;;;;;9156:18:13;;;;728:69:12;;;;;;;-1:-1:-1;;;;;728:69:12;-1:-1:-1;;;728:69:12;;;717:81;;-1:-1:-1;;;;717:10:12;;;;:81;;728:69;717:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:129;;;;816:7;:57;;;;-1:-1:-1;828:11:12;;:16;;:44;;;859:4;848:24;;;;;;;;;;;;:::i;:::-;808:73;;;;-1:-1:-1;;;808:73:12;;13324:2:13;808:73:12;;;13306:21:13;13363:1;13343:18;;;13336:29;-1:-1:-1;;;13381:18:13;;;13374:33;13424:18;;808:73:12;13122:326:13;808:73:12;659:229;;530:358;;;;:::o;1842:307::-;2001:58;;;-1:-1:-1;;;;;9553:32:13;;;2001:58:12;;;9535:51:13;9602:18;;;;9595:34;;;2001:58:12;;;;;;;;;;9508:18:13;;;;2001:58:12;;;;;;;-1:-1:-1;;;;;2001:58:12;-1:-1:-1;;;2001:58:12;;;1990:70;;-1:-1:-1;;;;1990:10:12;;;;:70;;2001:58;1990:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:106;;;;2078:7;:57;;;;-1:-1:-1;2090:11:12;;:16;;:44;;;2121:4;2110:24;;;;;;;;;;;;:::i;:::-;2070:72;;;;-1:-1:-1;;;2070:72:12;;11896:2:13;2070:72:12;;;11878:21:13;11935:1;11915:18;;;11908:29;-1:-1:-1;;;11953:18:13;;;11946:32;11995:18;;2070:72:12;11694:325:13;2070:72:12;1944:205;;1842:307;;;:::o;1180:309::-;1340:59;;;-1:-1:-1;;;;;9553:32:13;;;1340:59:12;;;9535:51:13;9602:18;;;;9595:34;;;1340:59:12;;;;;;;;;;9508:18:13;;;;1340:59:12;;;;;;;-1:-1:-1;;;;;1340:59:12;-1:-1:-1;;;1340:59:12;;;1329:71;;-1:-1:-1;;;;1329:10:12;;;;:71;;1340:59;1329:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:107;;;;1418:7;:57;;;;-1:-1:-1;1430:11:12;;:16;;:44;;;1461:4;1450:24;;;;;;;;;;;;:::i;:::-;1410:72;;;;-1:-1:-1;;;1410:72:12;;12633:2:13;1410:72:12;;;12615:21:13;12672:1;12652:18;;;12645:29;-1:-1:-1;;;12690:18:13;;;12683:32;12732:18;;1410:72:12;12431:325:13;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:13;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:719::-;235:5;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;342:6;329:20;368:18;405:2;401;398:10;395:36;;;411:18;;:::i;:::-;486:2;480:9;454:2;540:13;;-1:-1:-1;;536:22:13;;;560:2;532:31;528:40;516:53;;;584:18;;;604:22;;;581:46;578:72;;;630:18;;:::i;:::-;670:10;666:2;659:22;705:2;697:6;690:18;751:3;744:4;739:2;731:6;727:15;723:26;720:35;717:55;;;768:1;765;758:12;717:55;832:2;825:4;817:6;813:17;806:4;798:6;794:17;781:54;879:1;872:4;867:2;859:6;855:15;851:26;844:37;899:6;890:15;;;;;;192:719;;;;:::o;916:188::-;984:20;;-1:-1:-1;;;;;1033:46:13;;1023:57;;1013:85;;1094:1;1091;1084:12;1109:179;1187:13;;1240:22;1229:34;;1219:45;;1209:73;;1278:1;1275;1268:12;1293:186;1352:6;1405:2;1393:9;1384:7;1380:23;1376:32;1373:52;;;1421:1;1418;1411:12;1373:52;1444:29;1463:9;1444:29;:::i;:::-;1434:39;1293:186;-1:-1:-1;;;1293:186:13:o;1484:277::-;1551:6;1604:2;1592:9;1583:7;1579:23;1575:32;1572:52;;;1620:1;1617;1610:12;1572:52;1652:9;1646:16;1705:5;1698:13;1691:21;1684:5;1681:32;1671:60;;1727:1;1724;1717:12;1766:591;1836:6;1844;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;1953:9;1940:23;1982:18;2023:2;2015:6;2012:14;2009:34;;;2039:1;2036;2029:12;2009:34;2077:6;2066:9;2062:22;2052:32;;2122:7;2115:4;2111:2;2107:13;2103:27;2093:55;;2144:1;2141;2134:12;2093:55;2184:2;2171:16;2210:2;2202:6;2199:14;2196:34;;;2226:1;2223;2216:12;2196:34;2271:7;2266:2;2257:6;2253:2;2249:15;2245:24;2242:37;2239:57;;;2292:1;2289;2282:12;2239:57;2323:2;2315:11;;;;;2345:6;;-1:-1:-1;1766:591:13;;-1:-1:-1;;;;1766:591:13:o;2362:322::-;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;2540:9;2527:23;2573:18;2565:6;2562:30;2559:50;;;2605:1;2602;2595:12;2559:50;2628;2670:7;2661:6;2650:9;2646:22;2628:50;:::i;:::-;2618:60;2362:322;-1:-1:-1;;;;2362:322:13:o;2689:396::-;2767:6;2775;2828:2;2816:9;2807:7;2803:23;2799:32;2796:52;;;2844:1;2841;2834:12;2796:52;2884:9;2871:23;2917:18;2909:6;2906:30;2903:50;;;2949:1;2946;2939:12;2903:50;2972;3014:7;3005:6;2994:9;2990:22;2972:50;:::i;:::-;2962:60;;;3041:38;3075:2;3064:9;3060:18;3041:38;:::i;:::-;3031:48;;2689:396;;;;;:::o;3090:463::-;3176:6;3184;3192;3245:2;3233:9;3224:7;3220:23;3216:32;3213:52;;;3261:1;3258;3251:12;3213:52;3301:9;3288:23;3334:18;3326:6;3323:30;3320:50;;;3366:1;3363;3356:12;3320:50;3389;3431:7;3422:6;3411:9;3407:22;3389:50;:::i;:::-;3379:60;;;3486:2;3475:9;3471:18;3458:32;3448:42;;3509:38;3543:2;3532:9;3528:18;3509:38;:::i;:::-;3499:48;;3090:463;;;;;:::o;3558:396::-;3636:6;3644;3697:2;3685:9;3676:7;3672:23;3668:32;3665:52;;;3713:1;3710;3703:12;3665:52;3736:29;3755:9;3736:29;:::i;:::-;3726:39;;3816:2;3805:9;3801:18;3788:32;3843:18;3835:6;3832:30;3829:50;;;3875:1;3872;3865:12;3829:50;3898;3940:7;3931:6;3920:9;3916:22;3898:50;:::i;:::-;3888:60;;;3558:396;;;;;:::o;3959:470::-;4046:6;4054;4062;4115:2;4103:9;4094:7;4090:23;4086:32;4083:52;;;4131:1;4128;4121:12;4083:52;4154:29;4173:9;4154:29;:::i;:::-;4144:39;;4234:2;4223:9;4219:18;4206:32;4261:18;4253:6;4250:30;4247:50;;;4293:1;4290;4283:12;4247:50;4316;4358:7;4349:6;4338:9;4334:22;4316:50;:::i;:::-;4306:60;;;4385:38;4419:2;4408:9;4404:18;4385:38;:::i;4434:464::-;4521:6;4529;4537;4590:2;4578:9;4569:7;4565:23;4561:32;4558:52;;;4606:1;4603;4596:12;4558:52;4629:29;4648:9;4629:29;:::i;:::-;4619:39;;4709:2;4698:9;4694:18;4681:32;4736:18;4728:6;4725:30;4722:50;;;4768:1;4765;4758:12;4722:50;4791;4833:7;4824:6;4813:9;4809:22;4791:50;:::i;:::-;4781:60;;;4888:2;4877:9;4873:18;4860:32;4850:42;;4434:464;;;;;:::o;4903:180::-;4962:6;5015:2;5003:9;4994:7;4990:23;4986:32;4983:52;;;5031:1;5028;5021:12;4983:52;-1:-1:-1;5054:23:13;;4903:180;-1:-1:-1;4903:180:13:o;5088:184::-;5158:6;5211:2;5199:9;5190:7;5186:23;5182:32;5179:52;;;5227:1;5224;5217:12;5179:52;-1:-1:-1;5250:16:13;;5088:184;-1:-1:-1;5088:184:13:o;5277:390::-;5355:6;5363;5416:2;5404:9;5395:7;5391:23;5387:32;5384:52;;;5432:1;5429;5422:12;5384:52;5468:9;5455:23;5445:33;;5529:2;5518:9;5514:18;5501:32;5556:18;5548:6;5545:30;5542:50;;;5588:1;5585;5578:12;5672:458;5759:6;5767;5775;5828:2;5816:9;5807:7;5803:23;5799:32;5796:52;;;5844:1;5841;5834:12;5796:52;5880:9;5867:23;5857:33;;5941:2;5930:9;5926:18;5913:32;5968:18;5960:6;5957:30;5954:50;;;6000:1;5997;5990:12;6135:473;6238:6;6246;6254;6262;6270;6323:3;6311:9;6302:7;6298:23;6294:33;6291:53;;;6340:1;6337;6330:12;6291:53;6363:39;6392:9;6363:39;:::i;:::-;6353:49;;6442:2;6431:9;6427:18;6421:25;6411:35;;6486:2;6475:9;6471:18;6465:25;6455:35;;6530:2;6519:9;6515:18;6509:25;6499:35;;6553:49;6597:3;6586:9;6582:19;6553:49;:::i;:::-;6543:59;;6135:473;;;;;;;;:::o;6613:274::-;6742:3;6780:6;6774:13;6796:53;6842:6;6837:3;6830:4;6822:6;6818:17;6796:53;:::i;:::-;6865:16;;;;;6613:274;-1:-1:-1;;6613:274:13:o;7173:1099::-;7301:3;7330:1;7363:6;7357:13;7393:3;7415:1;7443:9;7439:2;7435:18;7425:28;;7503:2;7492:9;7488:18;7525;7515:61;;7569:4;7561:6;7557:17;7547:27;;7515:61;7595:2;7643;7635:6;7632:14;7612:18;7609:38;7606:165;;;-1:-1:-1;;;7670:33:13;;7726:4;7723:1;7716:15;7756:4;7677:3;7744:17;7606:165;7787:18;7814:104;;;;7932:1;7927:320;;;;7780:467;;7814:104;-1:-1:-1;;7847:24:13;;7835:37;;7892:16;;;;-1:-1:-1;7814:104:13;;7927:320;14705:1;14698:14;;;14742:4;14729:18;;8022:1;8036:165;8050:6;8047:1;8044:13;8036:165;;;8128:14;;8115:11;;;8108:35;8171:16;;;;8065:10;;8036:165;;;8040:3;;8230:6;8225:3;8221:16;8214:23;;7780:467;-1:-1:-1;8263:3:13;;7173:1099;-1:-1:-1;;;;;;;;7173:1099:13:o;10304:462::-;10487:6;10480:14;10473:22;10462:9;10455:41;10532:2;10527;10516:9;10512:18;10505:30;10436:4;10564:6;10558:13;10607:6;10602:2;10591:9;10587:18;10580:34;10623:66;10682:6;10677:2;10666:9;10662:18;10657:2;10649:6;10645:15;10623:66;:::i;:::-;10750:2;10729:15;-1:-1:-1;;10725:29:13;10710:45;;;;10757:2;10706:54;;10304:462;-1:-1:-1;;;10304:462:13:o;12761:356::-;12963:2;12945:21;;;12982:18;;;12975:30;13041:34;13036:2;13021:18;;13014:62;13108:2;13093:18;;12761:356::o;14758:128::-;14798:3;14829:1;14825:6;14822:1;14819:13;14816:39;;;14835:18;;:::i;:::-;-1:-1:-1;14871:9:13;;14758:128::o;14891:217::-;14931:1;14957;14947:132;;15001:10;14996:3;14992:20;14989:1;14982:31;15036:4;15033:1;15026:15;15064:4;15061:1;15054:15;14947:132;-1:-1:-1;15093:9:13;;14891:217::o;15113:168::-;15153:7;15219:1;15215;15211:6;15207:14;15204:1;15201:21;15196:1;15189:9;15182:17;15178:45;15175:71;;;15226:18;;:::i;:::-;-1:-1:-1;15266:9:13;;15113:168::o;15286:246::-;15326:4;-1:-1:-1;;;;;15439:10:13;;;;15409;;15461:12;;;15458:38;;;15476:18;;:::i;:::-;15513:13;;15286:246;-1:-1:-1;;;15286:246:13:o;15537:125::-;15577:4;15605:1;15602;15599:8;15596:34;;;15610:18;;:::i;:::-;-1:-1:-1;15647:9:13;;15537:125::o;15667:258::-;15739:1;15749:113;15763:6;15760:1;15757:13;15749:113;;;15839:11;;;15833:18;15820:11;;;15813:39;15785:2;15778:10;15749:113;;;15880:6;15877:1;15874:13;15871:48;;;-1:-1:-1;;15915:1:13;15897:16;;15890:27;15667:258::o;15930:380::-;16009:1;16005:12;;;;16052;;;16073:61;;16127:4;16119:6;16115:17;16105:27;;16073:61;16180:2;16172:6;16169:14;16149:18;16146:38;16143:161;;;16226:10;16221:3;16217:20;16214:1;16207:31;16261:4;16258:1;16251:15;16289:4;16286:1;16279:15;16143:161;;15930:380;;;:::o;16315:226::-;16354:3;-1:-1:-1;;;;;16451:2:13;16444:5;16440:14;16478:2;16469:7;16466:15;16463:41;;;16484:18;;:::i;:::-;16533:1;16520:15;;16315:226;-1:-1:-1;;;16315:226:13:o;16546:135::-;16585:3;-1:-1:-1;;16606:17:13;;16603:43;;;16626:18;;:::i;:::-;-1:-1:-1;16673:1:13;16662:13;;16546:135::o;16686:175::-;16723:3;16767:4;16760:5;16756:16;16796:4;16787:7;16784:17;16781:43;;;16804:18;;:::i;:::-;16853:1;16840:15;;16686:175;-1:-1:-1;;16686:175:13:o;16866:127::-;16927:10;16922:3;16918:20;16915:1;16908:31;16958:4;16955:1;16948:15;16982:4;16979:1;16972:15;16998:127;17059:10;17054:3;17050:20;17047:1;17040:31;17090:4;17087:1;17080:15;17114:4;17111:1;17104:15;17130:127;17191:10;17186:3;17182:20;17179:1;17172:31;17222:4;17219:1;17212:15;17246:4;17243:1;17236:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    591,
    9983
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC2ABA3F0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC2ABA3F0 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xEC6F4F41 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xFD2FAA68 EQ PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x80F79702 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x81688C64 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xAFA3A617 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xBE331A64 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A128671 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4A128671 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4A7DC8E0 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x5F90F0B7 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x63168475 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xC3D5157 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x126DF02B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1CC87D88 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x47CE529A EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166 PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x21F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x78B JUMP JUMPDEST PUSH2 0x21F PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP3 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x188 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F JUMP JUMPDEST PUSH2 0x188 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F47 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST PUSH2 0x188 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x40D PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBC JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x46A SWAP1 DUP4 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x13 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x4F8 SWAP1 DUP5 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x64 PUSH1 0xC PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x5A PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61C DUP3 DUP5 ADD DUP5 PUSH2 0x2098 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x672 JUMPI PUSH2 0x62B PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x633 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x0 PUSH2 0x64C DUP4 PUSH2 0x23A6 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x683 JUMPI PUSH2 0x683 PUSH2 0x171F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP DUP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x866 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x88E SWAP1 PUSH3 0x15180 PUSH2 0x22A7 JUMP JUMPDEST EQ ISZERO PUSH2 0x8BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP4 POP DUP4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP SWAP2 POP PUSH2 0x963 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x8DD SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x78B JUMP JUMPDEST GT ISZERO PUSH2 0x929 JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x99E PUSH1 0x0 PUSH2 0x1940 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH2 0xA0D SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1C93 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x7 SWAP1 PUSH2 0xA6B SWAP1 DUP6 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xB38 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x11 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB07 JUMPI PUSH2 0xB07 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0xB30 DUP2 PUSH2 0x23CD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE0 JUMP JUMPDEST POP PUSH1 0x7 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB49 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB9E SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0xBCB PUSH2 0x78B JUMP JUMPDEST GT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH8 0x8AC7230489E80000 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xE4F JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x20B1 JUMP JUMPDEST LT ISZERO PUSH2 0xC81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8D DUP4 CALLER ADDRESS DUP5 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0xCB8 DUP4 PUSH32 0x0 DUP4 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0xA SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0xBB8 DUP4 DUP6 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD DUP9 DUP2 MSTORE PUSH8 0xD02AB486CEDC0000 PUSH1 0xC0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP11 ADD DUP2 DUP2 MSTORE SWAP11 MLOAD PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP2 MSTORE DUP11 MLOAD DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP8 MLOAD DUP10 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP6 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP9 ADD MSTORE SWAP4 MLOAD DUP8 AND PUSH1 0x64 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE SWAP1 MLOAD PUSH1 0xC4 DUP5 ADD MSTORE SWAP5 MLOAD DUP4 AND PUSH1 0xE4 DUP4 ADD MSTORE SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDB3E2198 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xE47 JUMPI PUSH1 0xA SLOAD PUSH2 0xE27 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x0 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xE47 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH2 0xE42 DUP5 DUP8 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST POP POP POP PUSH2 0xF67 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED0 SWAP2 SWAP1 PUSH2 0x20B1 JUMP JUMPDEST LT ISZERO PUSH2 0xEDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0xF93 SWAP1 DUP9 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP6 SWAP2 SWAP1 PUSH2 0xFE1 SWAP1 DUP9 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE PUSH1 0xE SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x1024 SWAP1 DUP8 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD DUP9 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 PUSH2 0x106A SWAP1 DUP8 SWAP1 PUSH2 0x217E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP7 DUP3 MSTORE SWAP2 PUSH32 0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10EC JUMPI PUSH2 0x10EC PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x117F SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x730 JUMP JUMPDEST PUSH2 0x1224 DUP2 PUSH2 0x1940 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x123D DUP2 PUSH2 0x10D6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x126B JUMPI PUSH2 0x126B PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1282 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x129C DUP2 PUSH2 0x23CD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x122A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x171B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x12EF JUMPI PUSH2 0x12EF PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x134A JUMPI PUSH2 0x134A PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD EQ PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x13AD JUMPI PUSH2 0x13AD PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x140D JUMPI PUSH2 0x140D PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x147C SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x149E JUMPI PUSH2 0x149E PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x14E2 JUMPI PUSH2 0x14E2 PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x14F9 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xF PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1539 JUMPI PUSH2 0x1539 PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1550 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0xD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x15D8 JUMPI PUSH2 0x15D8 PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8EBFA8AE SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x1657 JUMPI PUSH2 0x1657 PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x166E SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1690 JUMPI PUSH2 0x1690 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1700 SWAP1 PUSH2 0x23E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x137E JUMP JUMPDEST POP DUP1 PUSH2 0x1713 DUP2 PUSH2 0x23E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1767 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x178C SWAP2 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x1794 PUSH2 0x78B JUMP JUMPDEST GT PUSH2 0x179E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND LT ISZERO PUSH2 0x1224 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x64 SWAP4 SWAP1 DUP7 AND SWAP1 DUP2 LT PUSH2 0x17EB JUMPI PUSH2 0x17EB PUSH2 0x241E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xA PUSH2 0x181D SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x188D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x1938 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x19F4 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1A60 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1A60 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A60 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x730 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1AF6 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B62 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1B62 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B62 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x730 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1BF6 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1C62 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1C62 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C62 SWAP2 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x14D5 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x730 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C9F SWAP1 PUSH2 0x236B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CC1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D07 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1CDA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D07 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D07 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D07 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CEC JUMP JUMPDEST POP PUSH2 0x1D13 SWAP3 SWAP2 POP PUSH2 0x1D17 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D13 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D18 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D74 JUMPI PUSH2 0x1D74 PUSH2 0x2434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D9C JUMPI PUSH2 0x1D9C PUSH2 0x2434 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E21 DUP3 PUSH2 0x1D2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2F DUP6 DUP3 DUP7 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1F3E PUSH1 0x20 DUP5 ADD PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F7F DUP7 DUP3 DUP8 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1F95 PUSH1 0x40 DUP6 ADD PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FBA DUP4 PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200A DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2032 DUP7 DUP3 DUP8 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1F95 PUSH1 0x40 DUP6 ADD PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x205F DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2087 DUP7 DUP3 DUP8 ADD PUSH2 0x1D48 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214F DUP7 PUSH2 0x1DEC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2172 PUSH1 0x80 DUP8 ADD PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2190 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x233F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x21B6 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x21D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x21EA JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x21FB JUMPI PUSH2 0x2228 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2220 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2207 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x225D DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x233F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22BA JUMPI PUSH2 0x22BA PUSH2 0x2408 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x22FB JUMPI PUSH2 0x22FB PUSH2 0x2408 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2320 JUMPI PUSH2 0x2320 PUSH2 0x2408 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x233A JUMPI PUSH2 0x233A PUSH2 0x2408 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x235A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2342 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x608 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x237F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C3 PUSH2 0x2408 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x23E1 JUMPI PUSH2 0x23E1 PUSH2 0x2408 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x23FF JUMPI PUSH2 0x23FF PUSH2 0x2408 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x291634D0932A7185374408BE22CB40D0FB32270D1DB455604DB9C0448E8E564 PUSH20 0x6F6C634300080700330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "49": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "60": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x363"
    },
    "64": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC31C9C07"
    },
    "71": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A5"
    },
    "75": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE7572230"
    },
    "82": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CC"
    },
    "86": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xEC6F4F41"
    },
    "93": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DF"
    },
    "97": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41D"
    },
    "108": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD2FAA68"
    },
    "115": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x430"
    },
    "119": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "REVERT",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D5"
    },
    "135": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x80F79702"
    },
    "142": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DD"
    },
    "146": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81688C64"
    },
    "153": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x319"
    },
    "157": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32C"
    },
    "168": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAFA3A617"
    },
    "175": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33D"
    },
    "179": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "180": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBE331A64"
    },
    "186": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "187": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x350"
    },
    "190": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "191": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "194": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "REVERT",
      "path": "4"
    },
    "195": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4A128671"
    },
    "202": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "GT",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4A128671"
    },
    "213": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "217": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4A7DC8E0"
    },
    "224": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24A"
    },
    "228": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x557ED1BA"
    },
    "235": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25D"
    },
    "239": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5F90F0B7"
    },
    "246": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "247": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "250": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "251": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x63168475"
    },
    "257": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "258": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x278"
    },
    "261": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "262": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E04FF0D"
    },
    "268": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "269": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B4"
    },
    "272": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "273": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "276": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "REVERT",
      "path": "4"
    },
    "277": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x89FE6AA"
    },
    "284": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC3D5157"
    },
    "295": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17F"
    },
    "299": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x126DF02B"
    },
    "306": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x196"
    },
    "310": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1CC87D88"
    },
    "317": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "321": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "322": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4585E33B"
    },
    "328": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "329": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F9"
    },
    "332": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "333": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "334": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x47CE529A"
    },
    "339": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "EQ",
      "path": "4"
    },
    "340": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20C"
    },
    "343": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "344": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "345": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        591,
        9983
      ],
      "op": "REVERT",
      "path": "4"
    },
    "349": {
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "350": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "353": {
      "offset": [
        1370,
        1374
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBB8"
    },
    "356": {
      "offset": [
        1337,
        1374
      ],
      "op": "DUP2",
      "path": "4"
    },
    "357": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "JUMP",
      "path": "4"
    },
    "358": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "359": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "361": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "362": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "366": {
      "op": "SWAP1"
    },
    "367": {
      "op": "SWAP2"
    },
    "368": {
      "op": "AND"
    },
    "369": {
      "op": "DUP2"
    },
    "370": {
      "op": "MSTORE"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "offset": [
        1337,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "375": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "377": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "378": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "DUP1",
      "path": "4"
    },
    "379": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "380": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SUB",
      "path": "4"
    },
    "381": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "382": {
      "fn": null,
      "offset": [
        1337,
        1374
      ],
      "op": "RETURN",
      "path": "4"
    },
    "383": {
      "offset": [
        1821,
        1853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "384": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "387": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "389": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "390": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "DUP2",
      "path": "4"
    },
    "391": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "JUMP",
      "path": "4"
    },
    "392": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "393": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "395": {
      "fn": null,
      "offset": [
        1821,
        1853
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "DUP2"
    },
    "398": {
      "op": "MSTORE"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "401": {
      "op": "ADD"
    },
    "402": {
      "offset": [
        1821,
        1853
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "405": {
      "op": "JUMP"
    },
    "406": {
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "407": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C4"
    },
    "410": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A4"
    },
    "413": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "414": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "416": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E06"
    },
    "419": {
      "fn": null,
      "jump": "i",
      "offset": [
        2422,
        2474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "420": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "421": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "423": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "425": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "426": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "429": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP2",
      "path": "4"
    },
    "430": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "431": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "433": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "434": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "435": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP1",
      "path": "4"
    },
    "436": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "437": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "439": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "440": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "441": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "ADD",
      "path": "4"
    },
    "442": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "443": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC0"
    },
    "445": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "446": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "447": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "448": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SHL",
      "path": "4"
    },
    "449": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "450": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP3",
      "path": "4"
    },
    "451": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "452": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "453": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "455": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "DUP1",
      "path": "4"
    },
    "456": {
      "fn": null,
      "offset": [
        2422,
        2474
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "op": "NOT"
    },
    "466": {
      "op": "SWAP1"
    },
    "467": {
      "op": "SWAP4"
    },
    "468": {
      "op": "AND"
    },
    "469": {
      "op": "DUP4"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "op": "DUP4"
    },
    "474": {
      "op": "ADD"
    },
    "475": {
      "op": "SWAP2"
    },
    "476": {
      "op": "SWAP1"
    },
    "477": {
      "op": "SWAP2"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "ADD"
    },
    "480": {
      "offset": [
        2422,
        2474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "483": {
      "op": "JUMP"
    },
    "484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "485": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "488": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F2"
    },
    "491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "492": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "494": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F9E"
    },
    "497": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "498": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x443"
    },
    "502": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "503": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "504": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "STOP",
      "path": "4"
    },
    "505": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "506": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "509": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x207"
    },
    "512": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "513": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "515": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4A"
    },
    "518": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMP",
      "path": "4"
    },
    "519": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "520": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x60E"
    },
    "523": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMP",
      "path": "4"
    },
    "524": {
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "525": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "528": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21A"
    },
    "531": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "532": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "534": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2041"
    },
    "537": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "4"
    },
    "538": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "539": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x688"
    },
    "542": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "4"
    },
    "543": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "544": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "546": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "SUB"
    },
    "555": {
      "op": "SWAP1"
    },
    "556": {
      "op": "SWAP2"
    },
    "557": {
      "op": "AND"
    },
    "558": {
      "op": "DUP2"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "566": {
      "op": "JUMP"
    },
    "567": {
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "568": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "571": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x245"
    },
    "574": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "575": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "577": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2098"
    },
    "580": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "581": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "582": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DC"
    },
    "585": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "586": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "587": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "590": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "593": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "594": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "596": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E06"
    },
    "599": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "4"
    },
    "600": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "601": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x706"
    },
    "604": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "i",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "4"
    },
    "605": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "606": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "609": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78B"
    },
    "612": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "613": {
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "617": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x273"
    },
    "620": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "621": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "623": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20FB"
    },
    "626": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMP",
      "path": "4"
    },
    "627": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "628": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x823"
    },
    "631": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMP",
      "path": "4"
    },
    "632": {
      "offset": [
        1985,
        2058
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "633": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "636": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x286"
    },
    "639": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "640": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "642": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20CA"
    },
    "645": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMP",
      "path": "4"
    },
    "646": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "647": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "649": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "651": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "652": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "4"
    },
    "653": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "654": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "656": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "657": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP4",
      "path": "4"
    },
    "658": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "659": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "661": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "662": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "663": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "664": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "4"
    },
    "665": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "666": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP1",
      "path": "4"
    },
    "667": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP4",
      "path": "4"
    },
    "668": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "4"
    },
    "669": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP5",
      "path": "4"
    },
    "670": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "4"
    },
    "671": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP1",
      "path": "4"
    },
    "672": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "673": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "674": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "4"
    },
    "675": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "676": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "677": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP5",
      "path": "4"
    },
    "678": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "4"
    },
    "679": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "680": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "681": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "682": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "ADD",
      "path": "4"
    },
    "683": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "684": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "685": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "686": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "687": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "688": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "689": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "690": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "DUP2",
      "path": "4"
    },
    "691": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1985,
        2058
      ],
      "op": "JUMP",
      "path": "4"
    },
    "692": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "693": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C7"
    },
    "696": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C2"
    },
    "699": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "700": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "702": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4A"
    },
    "705": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "706": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "707": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x85A"
    },
    "710": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "711": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "712": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "714": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "715": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "718": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "719": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "720": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "721": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2236"
    },
    "724": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96A"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "offset": [
        1905,
        1978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EB"
    },
    "740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20CA"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP4",
      "path": "4"
    },
    "759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "766": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP1",
      "path": "4"
    },
    "768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP4",
      "path": "4"
    },
    "769": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "4"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP5",
      "path": "4"
    },
    "771": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "4"
    },
    "772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP1",
      "path": "4"
    },
    "773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "776": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP5",
      "path": "4"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "4"
    },
    "780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "ADD",
      "path": "4"
    },
    "784": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "787": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "DUP2",
      "path": "4"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1905,
        1978
      ],
      "op": "JUMP",
      "path": "4"
    },
    "793": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "794": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "797": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x327"
    },
    "800": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "801": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "803": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF9"
    },
    "806": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "4"
    },
    "807": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "808": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A0"
    },
    "811": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "4"
    },
    "812": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "813": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "815": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "825": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "828": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "829": {
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "830": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "833": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34B"
    },
    "836": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20FB"
    },
    "842": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "4"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA8F"
    },
    "847": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "4"
    },
    "848": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "849": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "852": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35E"
    },
    "855": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "858": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F47"
    },
    "861": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "862": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "863": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xADC"
    },
    "866": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "867": {
      "offset": [
        2631,
        2726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "868": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "871": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371"
    },
    "874": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "875": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "877": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FEC"
    },
    "880": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "881": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "882": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x13"
    },
    "884": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "886": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "887": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "888": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "892": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "4"
    },
    "893": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "894": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "897": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP6",
      "path": "4"
    },
    "898": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "4"
    },
    "900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "901": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP7",
      "path": "4"
    },
    "903": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "4"
    },
    "904": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "4"
    },
    "905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "4"
    },
    "906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "907": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "909": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "911": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "912": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "4"
    },
    "913": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "4"
    },
    "914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "915": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP5",
      "path": "4"
    },
    "916": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "ADD",
      "path": "4"
    },
    "917": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "919": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "921": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "922": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "923": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "924": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "926": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP3",
      "path": "4"
    },
    "927": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "928": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "929": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "930": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "931": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "932": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        2631,
        2726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "933": {
      "offset": [
        1292,
        1331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "934": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "937": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "970": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "971": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        1292,
        1331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "972": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "973": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "976": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3DA"
    },
    "979": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "980": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "982": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2098"
    },
    "985": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "4"
    },
    "986": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "987": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10D6"
    },
    "990": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "4"
    },
    "991": {
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "992": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40D"
    },
    "995": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3ED"
    },
    "998": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "999": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1001": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EBC"
    },
    "1004": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1005": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1006": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1007": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1008": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1010": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1011": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1012": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "4"
    },
    "1013": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1014": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "4"
    },
    "1015": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1016": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1017": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1019": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1020": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1021": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1022": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1023": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "4"
    },
    "1024": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1025": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1026": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1027": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "4"
    },
    "1028": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1029": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1030": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1031": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1032": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1034": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "AND",
      "path": "4"
    },
    "1035": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1036": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1037": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1038": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1040": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1041": {
      "op": "SWAP1"
    },
    "1042": {
      "op": "ISZERO"
    },
    "1043": {
      "op": "ISZERO"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x176"
    },
    "1052": {
      "op": "JUMP"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "1057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42B"
    },
    "1060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E06"
    },
    "1066": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118C"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "offset": [
        1256,
        1286
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "1079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "SUB"
    },
    "1088": {
      "offset": [
        1256,
        1286
      ],
      "op": "AND",
      "path": "4"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1256,
        1286
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1091": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "op": "SUB"
    },
    "1100": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 1
    },
    "1101": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "AND",
      "path": "4"
    },
    "1102": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1104": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1105": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1106": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1107": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1109": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1111": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1112": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1114": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1115": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1116": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1117": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8266
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1118": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1119": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1120": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46A"
    },
    "1123": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1124": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8267,
        8273
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1125": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8267,
        8273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1126": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "1129": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8242,
        8274
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1130": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1131": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1132": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1133": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1134": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1136": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "ADD",
      "path": "4"
    },
    "1137": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1139": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1140": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1141": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1142": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SUB",
      "path": "4"
    },
    "1143": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1144": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1145": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8242,
        8274
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1146": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x13"
    },
    "1148": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1150": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8213,
        8217
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1157": {
      "op": "SHL"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "AND",
      "path": "4"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "AND",
      "path": "4"
    },
    "1169": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1170": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1171": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1173": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "ADD",
      "path": "4"
    },
    "1174": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1175": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1176": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1177": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1179": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "ADD",
      "path": "4"
    },
    "1180": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1182": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8218
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1183": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8219,
        8225
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1184": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1186": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1187": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4AC"
    },
    "1190": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1191": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1192": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "1195": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8190,
        8226
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1196": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1197": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1198": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1199": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1200": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1202": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1203": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1204": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1206": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1207": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1208": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1209": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SUB",
      "path": "4"
    },
    "1210": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1211": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "ADD",
      "path": "4"
    },
    "1212": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1213": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8226
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1214": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8227,
        8237
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1215": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1217": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1218": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1219": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1220": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1221": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1222": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1223": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1224": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8238
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1225": {
      "branch": 52,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8190,
        8274
      ],
      "op": "EQ",
      "path": "4"
    },
    "1226": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D2"
    },
    "1229": {
      "branch": 52,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1230": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1232": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1233": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1234": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8182,
        8275
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1244": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "AND",
      "path": "4"
    },
    "1245": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8300
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1247": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1248": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1249": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1250": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "1252": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1254": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1255": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1257": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1258": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1259": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8328
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1260": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1261": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1262": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F8"
    },
    "1265": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1266": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8329,
        8335
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1267": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8329,
        8335
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1268": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "1271": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8303,
        8336
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1272": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1273": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1274": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1275": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1276": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1278": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "ADD",
      "path": "4"
    },
    "1279": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1281": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1282": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1283": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1284": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SUB",
      "path": "4"
    },
    "1285": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1286": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1287": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8303,
        8336
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1288": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8336
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1289": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8285,
        8336
      ],
      "op": "POP",
      "path": "4"
    },
    "1290": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0xA"
    },
    "1292": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1294": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1295": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1296": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1297": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1300": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "EXP",
      "path": "4"
    },
    "1301": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1302": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "DIV",
      "path": "4"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8353,
        8356
      ],
      "op": "AND",
      "path": "4"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8366
      ],
      "op": "AND",
      "path": "4"
    },
    "1321": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8366
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1326": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8380,
        8390
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1327": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8452,
        8459
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1328": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8447,
        8450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1330": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "1332": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1334": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8427,
        8431
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "AND",
      "path": "4"
    },
    "1344": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1345": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1346": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1348": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "ADD",
      "path": "4"
    },
    "1349": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1350": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1351": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1352": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1354": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "ADD",
      "path": "4"
    },
    "1355": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1357": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8432
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1358": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8433,
        8439
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1359": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1361": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1362": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55B"
    },
    "1365": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1366": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1367": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "1370": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8407,
        8440
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1371": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1372": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1373": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1374": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1375": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1377": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "ADD",
      "path": "4"
    },
    "1378": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1380": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1381": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1382": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1383": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SUB",
      "path": "4"
    },
    "1384": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1385": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1386": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8407,
        8440
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1387": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8444,
        8446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5A"
    },
    "1389": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x576"
    },
    "1392": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1393": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1394": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22E1"
    },
    "1397": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8406,
        8446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1398": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1399": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x580"
    },
    "1402": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1403": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1404": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22BF"
    },
    "1407": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8406,
        8450
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1408": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8406,
        8450
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1409": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x58A"
    },
    "1412": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1413": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1414": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22BF"
    },
    "1417": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8405,
        8459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1418": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8405,
        8459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1419": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1421": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "op": "NOT"
    },
    "1431": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1433": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1434": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1435": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SHL",
      "path": "4"
    },
    "1436": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "AND",
      "path": "4"
    },
    "1437": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1438": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "op": "SWAP1"
    },
    "1448": {
      "op": "SWAP3"
    },
    "1449": {
      "op": "AND"
    },
    "1450": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1452": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1453": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1454": {
      "op": "MSTORE"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1465": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1467": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1468": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1469": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1470": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1471": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1472": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1474": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1475": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1476": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1477": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1478": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1479": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1480": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D0"
    },
    "1483": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1486": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1487": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1488": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1489": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1490": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "GAS",
      "path": "4"
    },
    "1491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "CALL",
      "path": "4"
    },
    "1492": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1493": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1494": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1495": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E4"
    },
    "1498": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1500": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1502": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1503": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1504": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1505": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1507": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1508": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1509": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1510": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1513": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1516": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1517": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1519": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "NOT",
      "path": "4"
    },
    "1520": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1522": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1523": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1524": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "AND",
      "path": "4"
    },
    "1525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1527": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1528": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1531": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1532": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1533": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1534": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1535": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x608"
    },
    "1538": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1540": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E28"
    },
    "1543": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1544": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1545": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8346,
        8469
      ],
      "op": "POP",
      "path": "4"
    },
    "1546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8110,
        8485
      ],
      "op": "POP",
      "path": "4"
    },
    "1547": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "POP",
      "path": "4"
    },
    "1548": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        8044,
        8485
      ],
      "op": "POP",
      "path": "4"
    },
    "1549": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "o",
      "offset": [
        8044,
        8485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1550": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1551": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9090,
        9110
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1553": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x61C"
    },
    "1556": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1557": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1558": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "ADD",
      "path": "4"
    },
    "1559": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9124,
        9135
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1560": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2098"
    },
    "1563": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9113,
        9147
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1564": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9113,
        9147
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1565": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9090,
        9147
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "branch": 53,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9161,
        9178
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1568": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9157,
        9283
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x672"
    },
    "1571": {
      "branch": 53,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9157,
        9283
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1572": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9194,
        9214
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x62B"
    },
    "1575": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9194,
        9212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1227"
    },
    "1578": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9194,
        9214
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1579": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9194,
        9214
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1580": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9228,
        9248
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x633"
    },
    "1583": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9228,
        9246
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A4"
    },
    "1586": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9228,
        9248
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1587": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9228,
        9248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1588": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9270
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x4"
    },
    "1590": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1591": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "AND",
      "path": "4"
    },
    "1601": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1602": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9270
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1604": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x64C"
    },
    "1607": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1608": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A6"
    },
    "1611": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9262,
        9272
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1612": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1613": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1614": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1615": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1618": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "EXP",
      "path": "4"
    },
    "1619": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1620": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1621": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "MUL",
      "path": "4"
    },
    "1631": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "NOT",
      "path": "4"
    },
    "1632": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "AND",
      "path": "4"
    },
    "1633": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1634": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "AND",
      "path": "4"
    },
    "1644": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "MUL",
      "path": "4"
    },
    "1645": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "OR",
      "path": "4"
    },
    "1646": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1647": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1648": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "POP",
      "path": "4"
    },
    "1649": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9262,
        9272
      ],
      "op": "POP",
      "path": "4"
    },
    "1650": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9157,
        9283
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1651": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9296,
        9308
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1652": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9312,
        9313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1654": {
      "branch": 54,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9296,
        9313
      ],
      "op": "EQ",
      "path": "4"
    },
    "1655": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9292,
        9351
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1656": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9292,
        9351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x683"
    },
    "1659": {
      "branch": 54,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9292,
        9351
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1660": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9329,
        9340
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x683"
    },
    "1663": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9329,
        9338
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x171F"
    },
    "1666": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        9329,
        9340
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1667": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9329,
        9340
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1668": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9079,
        9357
      ],
      "op": "POP",
      "path": "4"
    },
    "1669": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "POP",
      "path": "4"
    },
    "1670": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        9010,
        9357
      ],
      "op": "POP",
      "path": "4"
    },
    "1671": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        9010,
        9357
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1672": {
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1673": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "1675": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1677": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1678": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1679": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1680": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1682": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1683": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1684": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1685": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1687": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1688": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1689": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1690": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1691": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1692": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1693": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1694": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1695": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1696": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1697": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1698": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1699": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1700": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1701": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1702": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1703": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1704": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1705": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1706": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1707": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1708": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1709": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1710": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1711": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1712": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1713": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1714": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1715": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1716": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1717": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1718": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "LT",
      "path": "4"
    },
    "1719": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BF"
    },
    "1722": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1723": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1725": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1726": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1727": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1728": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1730": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1731": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1732": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1733": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1735": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1736": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1737": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1738": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "ADD",
      "path": "4"
    },
    "1739": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "offset": [
        2519,
        2592
      ],
      "op": "AND",
      "path": "4"
    },
    "1749": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "offset": [
        2519,
        2592
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1752": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2519,
        2592
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "jump": "o",
      "offset": [
        2519,
        2592
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1756": {
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1757": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x11"
    },
    "1759": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1760": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1761": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1762": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1763": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "LT",
      "path": "4"
    },
    "1764": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6EC"
    },
    "1767": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1768": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1770": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1771": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1772": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1773": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1775": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1776": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1777": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1778": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1780": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1781": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1782": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1783": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "ADD",
      "path": "4"
    },
    "1784": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "offset": [
        2481,
        2512
      ],
      "op": "AND",
      "path": "4"
    },
    "1794": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2481,
        2512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "offset": [
        2481,
        2512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1797": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        2481,
        2512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1798": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1799": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1801": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1811": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 7
    },
    "1812": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1813": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x739"
    },
    "1816": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1817": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1828": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1829": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1832": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "1835": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1836": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2272"
    },
    "1839": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1841": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1843": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1845": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1846": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1847": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3540
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x11"
    },
    "1852": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1853": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1854": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1856": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1857": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "ADD",
      "path": "4"
    },
    "1858": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1859": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1863": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1864": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1865": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1866": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68"
    },
    "1899": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "ADD",
      "path": "4"
    },
    "1900": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1901": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "op": "NOT"
    },
    "1911": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "AND",
      "path": "4"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1918": {
      "op": "SHL"
    },
    "1919": {
      "op": "SUB"
    },
    "1920": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1921": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1922": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1923": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "AND",
      "path": "4"
    },
    "1924": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1925": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1926": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1927": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "OR",
      "path": "4"
    },
    "1928": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1929": {
      "fn": "DailyRocket.addPaymentToken",
      "offset": [
        3526,
        3555
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1930": {
      "fn": "DailyRocket.addPaymentToken",
      "jump": "o",
      "offset": [
        3456,
        3562
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1931": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1932": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7390,
        7394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1934": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1935": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7461,
        7503
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E"
    },
    "1956": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7504
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1957": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7405,
        7504
      ],
      "op": "POP",
      "path": "4"
    },
    "1958": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7518,
        7529
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1960": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7559
      ],
      "op": "AND",
      "path": "4"
    },
    "1970": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7559
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "1975": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1977": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1978": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1979": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1984": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "AND",
      "path": "4"
    },
    "1985": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1987": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SHL",
      "path": "4"
    },
    "1988": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1989": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1990": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1992": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "4"
    },
    "1993": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "1995": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1997": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1998": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1999": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2000": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SUB",
      "path": "4"
    },
    "2001": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2002": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2003": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2004": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "2005": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2006": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2007": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2008": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E0"
    },
    "2011": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2012": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2014": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2015": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2016": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2017": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2018": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "GAS",
      "path": "4"
    },
    "2019": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2020": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2021": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2022": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2023": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F4"
    },
    "2026": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2027": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2028": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2030": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2031": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2032": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2033": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2035": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2036": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2037": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2038": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2039": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2040": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2041": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2043": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2044": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2045": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2047": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "NOT",
      "path": "4"
    },
    "2048": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2050": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2051": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "4"
    },
    "2052": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "AND",
      "path": "4"
    },
    "2053": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2054": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "4"
    },
    "2055": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2056": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2058": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2059": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "POP",
      "path": "4"
    },
    "2060": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2061": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "ADD",
      "path": "4"
    },
    "2062": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2063": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x818"
    },
    "2066": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2067": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2068": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212E"
    },
    "2071": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2072": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7534,
        7561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7514,
        7561
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2075": {
      "fn": "DailyRocket.getTime",
      "offset": [
        7351,
        7598
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "fn": "DailyRocket.getTime",
      "jump": "o",
      "offset": [
        7351,
        7598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2083": {
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2084": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "2086": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2088": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2089": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2090": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2091": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2093": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2094": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2095": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2096": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2098": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2099": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2100": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2101": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2102": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2103": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2104": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "4"
    },
    "2105": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2106": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "4"
    },
    "2107": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2108": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2109": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2110": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2111": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2112": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2113": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2114": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "4"
    },
    "2115": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2116": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2117": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "ADD",
      "path": "4"
    },
    "2118": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2119": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2120": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2121": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2122": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2123": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2124": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2125": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2126": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2127": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2128": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2129": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "LT",
      "path": "4"
    },
    "2130": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BF"
    },
    "2133": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2134": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2136": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2137": {
      "fn": "DailyRocket.getTime",
      "offset": [
        2149,
        2223
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2138": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2139": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8574,
        8591
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2141": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8593,
        8617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2143": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8675,
        8684
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x866"
    },
    "2146": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8675,
        8682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78B"
    },
    "2149": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8675,
        8684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2150": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8675,
        8684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2151": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8646,
        8654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2153": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8646,
        8654
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "op": "SUB"
    },
    "2162": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8646,
        8654
      ],
      "op": "AND",
      "path": "4"
    },
    "2163": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2165": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2166": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2167": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2168": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8645
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2170": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2172": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2173": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2175": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2176": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2177": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8655
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2178": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8671
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x88E"
    },
    "2181": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8671
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2182": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8658,
        8671
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x15180"
    },
    "2186": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8671
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "2189": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8633,
        8671
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2190": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8671
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2191": {
      "branch": 55,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8633,
        8684
      ],
      "op": "EQ",
      "path": "4"
    },
    "2192": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8629,
        8786
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2193": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8629,
        8786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8BF"
    },
    "2196": {
      "branch": 55,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8629,
        8786
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2197": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x40"
    },
    "2199": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2200": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2201": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8771,
        8772
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2203": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2205": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2206": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "ADD",
      "path": "4"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8714,
        8718
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x1"
    },
    "2210": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8714,
        8718
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8714,
        8718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2213": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8714,
        8718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2216": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2218": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2219": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2221": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2222": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2223": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "SUB",
      "path": "4"
    },
    "2224": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "SUB",
      "path": "4"
    },
    "2225": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2226": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2227": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2228": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2230": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8746,
        8774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2231": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2232": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "POP",
      "path": "4"
    },
    "2233": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2234": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "POP",
      "path": "4"
    },
    "2235": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x963"
    },
    "2238": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8732,
        8775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2239": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8629,
        8786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2240": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8832
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2242": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8832
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2243": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2245": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8823
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2246": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2248": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2249": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8835
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8DD"
    },
    "2252": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2253": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8834,
        8835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2255": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8834,
        8835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8832
      ],
      "op": "AND",
      "path": "4"
    },
    "2265": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8835
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2300"
    },
    "2268": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8824,
        8835
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2269": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8824,
        8835
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "AND",
      "path": "4"
    },
    "2279": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2280": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2281": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2283": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "ADD",
      "path": "4"
    },
    "2284": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2285": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2286": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2287": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2289": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "ADD",
      "path": "4"
    },
    "2290": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2292": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2293": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8836
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2294": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8839,
        8852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "2297": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x902"
    },
    "2300": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8852
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2301": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8852
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2302": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "2305": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8811,
        8852
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2306": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8811,
        8852
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2307": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8799,
        8808
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90A"
    },
    "2310": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8799,
        8806
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78B"
    },
    "2313": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        8799,
        8808
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2314": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8799,
        8808
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2315": {
      "branch": 56,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8799,
        8852
      ],
      "op": "GT",
      "path": "4"
    },
    "2316": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8795,
        8952
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2317": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8795,
        8952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x929"
    },
    "2320": {
      "branch": 56,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8795,
        8952
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2321": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8883,
        8887
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "2323": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8868,
        8887
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2324": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8868,
        8887
      ],
      "op": "POP",
      "path": "4"
    },
    "2325": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8909,
        8913
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x1"
    },
    "2327": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8937,
        8938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2328": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2330": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2331": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2333": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "ADD",
      "path": "4"
    },
    "2334": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A7"
    },
    "2337": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8915,
        8940
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2338": {
      "op": "DUP2"
    },
    "2339": {
      "op": "MSTORE"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "SWAP1"
    },
    "2344": {
      "op": "JUMP"
    },
    "2345": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8795,
        8952
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2346": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8984
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 13
    },
    "2347": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8975,
        8984
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2348": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2349": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2350": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2352": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "ADD",
      "path": "4"
    },
    "2353": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2355": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2356": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2357": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DIV",
      "path": "4"
    },
    "2358": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "MUL",
      "path": "4"
    },
    "2359": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2361": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "ADD",
      "path": "4"
    },
    "2362": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2364": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2365": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2366": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2367": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "ADD",
      "path": "4"
    },
    "2368": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2370": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2371": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2372": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2373": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2374": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2375": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2376": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2377": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2378": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2379": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2381": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "ADD",
      "path": "4"
    },
    "2382": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2383": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2384": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2385": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2386": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2387": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "2388": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2390": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2391": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "ADD",
      "path": "4"
    },
    "2392": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2393": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2394": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2395": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2398": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2404": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2405": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "POP",
      "path": "4"
    },
    "2406": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2407": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2408": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        8495,
        9000
      ],
      "op": "POP",
      "path": "4"
    },
    "2409": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "o",
      "offset": [
        8495,
        9000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2411": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2413": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "op": "SUB"
    },
    "2422": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2423": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2424": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2425": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x994"
    },
    "2428": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2431": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2438": {
      "op": "SHL"
    },
    "2439": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2440": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2441": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2443": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2444": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "2447": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2448": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2272"
    },
    "2451": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2452": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x99E"
    },
    "2456": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2458": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1940"
    },
    "2461": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2462": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2463": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2464": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2465": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2467": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2474": {
      "op": "SHL"
    },
    "2475": {
      "op": "SUB"
    },
    "2476": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2477": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2478": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2479": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CA"
    },
    "2482": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2483": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2485": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2494": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2495": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2497": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2498": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "2501": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2502": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2272"
    },
    "2505": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2506": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2507": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3683
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x5"
    },
    "2509": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2510": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2511": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2513": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2514": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "4"
    },
    "2515": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2516": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2519": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2520": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2521": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2522": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2523": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2524": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2525": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA0D"
    },
    "2528": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2529": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2562": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "4"
    },
    "2563": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2564": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2566": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2567": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "ADD",
      "path": "4"
    },
    "2568": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2569": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C93"
    },
    "2572": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3666,
        3696
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2573": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3666,
        3696
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3727
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x6"
    },
    "2577": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2578": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2579": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2581": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2582": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2583": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "ADD",
      "path": "4"
    },
    "2584": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2585": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2588": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2589": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2590": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2591": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2592": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2625": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "ADD",
      "path": "4"
    },
    "2626": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2627": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "SUB"
    },
    "2636": {
      "op": "NOT"
    },
    "2637": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "AND",
      "path": "4"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "op": "SUB"
    },
    "2646": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2647": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "AND",
      "path": "4"
    },
    "2648": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "OR",
      "path": "4"
    },
    "2649": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2650": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3706,
        3745
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2651": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x40"
    },
    "2653": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2654": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3766
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2656": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2657": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA6B"
    },
    "2660": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2661": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3767,
        3773
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2662": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3767,
        3773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2663": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "2666": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3755,
        3774
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2667": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2668": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2669": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2670": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2671": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2673": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2674": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2675": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2676": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2677": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SUB",
      "path": "4"
    },
    "2678": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2680": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "ADD",
      "path": "4"
    },
    "2681": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2682": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3774
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2683": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2684": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2685": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2686": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2687": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2690": {
      "op": "NOT"
    },
    "2691": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2692": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2693": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "AND",
      "path": "4"
    },
    "2694": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2695": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2696": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2697": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "OR",
      "path": "4"
    },
    "2698": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2699": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3755,
        3781
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        3572,
        3788
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2703": {
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2704": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "2706": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2708": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2709": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2710": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2711": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2713": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2714": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2715": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2716": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2718": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2719": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2720": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2721": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2722": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2723": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2724": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "4"
    },
    "2725": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2726": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "4"
    },
    "2727": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2728": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2729": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2730": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2731": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2732": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2733": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2734": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "4"
    },
    "2735": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2736": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2737": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "4"
    },
    "2738": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2739": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2740": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2741": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2742": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2743": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2744": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2745": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2746": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2747": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2748": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2749": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "LT",
      "path": "4"
    },
    "2750": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC6"
    },
    "2753": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2754": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2756": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2757": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2758": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2759": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2760": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2762": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2763": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2765": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2767": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2768": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "ADD",
      "path": "4"
    },
    "2769": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2771": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2772": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "4"
    },
    "2773": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2774": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "4"
    },
    "2775": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "4"
    },
    "2776": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "POP",
      "path": "4"
    },
    "2777": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2778": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2069,
        2142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2779": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        2069,
        2142
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2780": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2781": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3926,
        3931
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2782": {
      "offset": [
        7914,
        7920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2784": {
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2785": {
      "offset": [
        7929,
        7946
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2787": {
      "offset": [
        7929,
        7953
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2788": {
      "offset": [
        7925,
        7953
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2789": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7925,
        7953
      ],
      "op": "LT",
      "path": "4"
    },
    "2790": {
      "offset": [
        7910,
        8021
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2791": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB38"
    },
    "2794": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2795": {
      "offset": [
        8003,
        8009
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "offset": [
        7982,
        8009
      ],
      "op": "AND",
      "path": "4"
    },
    "2805": {
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x11"
    },
    "2807": {
      "offset": [
        7997,
        7998
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2808": {
      "offset": [
        7982,
        7999
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2809": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2810": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2811": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "LT",
      "path": "4"
    },
    "2812": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB07"
    },
    "2815": {
      "offset": [
        7982,
        7999
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2816": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB07"
    },
    "2819": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "2822": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        7982,
        7999
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2823": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2824": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2826": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2827": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2828": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2829": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2831": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2832": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2833": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2834": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "ADD",
      "path": "4"
    },
    "2835": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7982,
        7999
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "op": "SUB"
    },
    "2844": {
      "offset": [
        7982,
        7999
      ],
      "op": "AND",
      "path": "4"
    },
    "2845": {
      "offset": [
        7982,
        8009
      ],
      "op": "EQ",
      "path": "4"
    },
    "2846": {
      "offset": [
        7974,
        8010
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB26"
    },
    "2849": {
      "offset": [
        7974,
        8010
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2850": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2852": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2853": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2854": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7974,
        8010
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2855": {
      "offset": [
        7955,
        7958
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB30"
    },
    "2859": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2860": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23CD"
    },
    "2863": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        7955,
        7958
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2864": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2865": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2866": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "POP",
      "path": "4"
    },
    "2867": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7955,
        7958
      ],
      "op": "POP",
      "path": "4"
    },
    "2868": {
      "offset": [
        7910,
        8021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE0"
    },
    "2871": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2872": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2873": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        7910,
        8021
      ],
      "op": "POP",
      "path": "4"
    },
    "2874": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3969
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x7"
    },
    "2876": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3970,
        3976
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2877": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2879": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2880": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB49"
    },
    "2883": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2884": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2885": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "2888": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3958,
        3977
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2890": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2892": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2893": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2895": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2897": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2898": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SUB",
      "path": "4"
    },
    "2900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "ADD",
      "path": "4"
    },
    "2903": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2904": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "AND",
      "path": "4"
    },
    "2909": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2911": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3977
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2913": {
      "branch": 57,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3958,
        3985
      ],
      "op": "EQ",
      "path": "4"
    },
    "2914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6A"
    },
    "2917": {
      "branch": 57,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2921": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2922": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3950,
        3986
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2923": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2926": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4012
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "op": "SUB"
    },
    "2936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2937": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2938": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4008
      ],
      "op": "AND",
      "path": "4"
    },
    "2939": {
      "branch": 58,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4000,
        4012
      ],
      "op": "GT",
      "path": "4"
    },
    "2940": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2941": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD6"
    },
    "2944": {
      "branch": 58,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3996,
        4131
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2945": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x4"
    },
    "2947": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2948": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2950": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4061
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2951": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2953": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2954": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9E"
    },
    "2957": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4072,
        4073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2960": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4072,
        4073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "op": "SUB"
    },
    "2969": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4070
      ],
      "op": "AND",
      "path": "4"
    },
    "2970": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2300"
    },
    "2973": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4062,
        4073
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2974": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4062,
        4073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "SUB"
    },
    "2983": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "AND",
      "path": "4"
    },
    "2984": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2985": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2986": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "ADD",
      "path": "4"
    },
    "2989": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2990": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2991": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2992": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "ADD",
      "path": "4"
    },
    "2995": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2997": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2998": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4074
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2999": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4077,
        4090
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "3002": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC3"
    },
    "3005": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3007": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "3010": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4049,
        4090
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3011": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4049,
        4090
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3012": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4045
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBCB"
    },
    "3015": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4043
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78B"
    },
    "3018": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4036,
        4045
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3019": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4045
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3020": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4090
      ],
      "op": "GT",
      "path": "4"
    },
    "3021": {
      "branch": 59,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4036,
        4090
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3022": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD6"
    },
    "3025": {
      "branch": 59,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3026": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3028": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3029": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3030": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4028,
        4091
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3031": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3034": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4157,
        4177
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0x8AC7230489E80000"
    },
    "3043": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4157,
        4177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "op": "SUB"
    },
    "3052": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3053": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "AND",
      "path": "4"
    },
    "3055": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3056": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4239,
        4242
      ],
      "op": "AND",
      "path": "4"
    },
    "3057": {
      "branch": 60,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4230,
        4242
      ],
      "op": "EQ",
      "path": "4"
    },
    "3058": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE4F"
    },
    "3061": {
      "branch": 60,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3062": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0xA"
    },
    "3064": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3065": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3067": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3068": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3078": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4288,
        4298
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3081": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3082": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "4"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4308,
        4312
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3087": {
      "op": "DUP3"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "op": "MSTORE"
    },
    "3090": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4323,
        4329
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4323,
        4329
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "op": "SUB"
    },
    "3100": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "AND",
      "path": "4"
    },
    "3101": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4273,
        4276
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3102": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4287
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "3107": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3110": {
      "op": "ADD"
    },
    "3111": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3115": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3116": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3117": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3118": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SUB",
      "path": "4"
    },
    "3119": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3120": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3121": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3122": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3123": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3124": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3125": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3126": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3E"
    },
    "3129": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3130": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3132": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3133": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3136": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "GAS",
      "path": "4"
    },
    "3137": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3138": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3139": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3140": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3141": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC52"
    },
    "3144": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3145": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3146": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3148": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3149": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3153": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3154": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3155": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3156": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3157": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3158": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3159": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3161": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3162": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "NOT",
      "path": "4"
    },
    "3166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "4"
    },
    "3170": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "AND",
      "path": "4"
    },
    "3171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3172": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "4"
    },
    "3173": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3174": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3176": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3177": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "POP",
      "path": "4"
    },
    "3178": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3179": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "ADD",
      "path": "4"
    },
    "3180": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3181": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC76"
    },
    "3184": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3185": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3186": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20B1"
    },
    "3189": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3190": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4314
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3191": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4330
      ],
      "op": "LT",
      "path": "4"
    },
    "3192": {
      "branch": 61,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4266,
        4330
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3193": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC81"
    },
    "3196": {
      "branch": 61,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3199": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3200": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3201": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4258,
        4331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3202": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4501
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0xC8D"
    },
    "3205": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4460,
        4465
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3206": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4467,
        4477
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3207": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4487,
        4491
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3208": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4494,
        4500
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3209": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1990"
    },
    "3212": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4428,
        4501
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3213": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4428,
        4501
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4660
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0xCB8"
    },
    "3217": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4625,
        4630
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3218": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4640,
        4650
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "3251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4653,
        4659
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3252": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4624
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A9A"
    },
    "3255": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4598,
        4660
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3256": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4598,
        4660
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3257": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3260": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "3264": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3265": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3266": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3267": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "op": "SUB"
    },
    "3276": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3277": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3278": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "AND",
      "path": "4"
    },
    "3279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3280": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3281": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3283": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3285": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4903,
        4906
      ],
      "op": "AND",
      "path": "4"
    },
    "3286": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3289": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3290": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3291": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3292": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3293": {
      "offset": [
        1370,
        1374
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBB8"
    },
    "3296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3297": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3298": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4981,
        4985
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3303": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3309": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3310": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5018,
        5033
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "3311": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "3313": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3314": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3316": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3318": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "3320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3321": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3322": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP9",
      "path": "4"
    },
    "3323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3324": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4697,
        4717
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xD02AB486CEDC0000"
    },
    "3334": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC0"
    },
    "3336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP9",
      "path": "4"
    },
    "3337": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3338": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3339": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "3345": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP11",
      "path": "4"
    },
    "3346": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "ADD",
      "path": "4"
    },
    "3347": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3349": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4799,
        5187
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3350": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP11",
      "path": "4"
    },
    "3351": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3352": {
      "op": "PUSH4",
      "value": "0x1B67C433"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3361": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3362": {
      "op": "DUP11"
    },
    "3363": {
      "op": "MLOAD"
    },
    "3364": {
      "op": "DUP11"
    },
    "3365": {
      "op": "AND"
    },
    "3366": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "4"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "SWAP8"
    },
    "3372": {
      "op": "MLOAD"
    },
    "3373": {
      "op": "DUP10"
    },
    "3374": {
      "op": "AND"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3377": {
      "op": "DUP10"
    },
    "3378": {
      "op": "ADD"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "SWAP6"
    },
    "3381": {
      "op": "MLOAD"
    },
    "3382": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "3386": {
      "op": "AND"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3389": {
      "op": "DUP9"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "SWAP4"
    },
    "3393": {
      "op": "MLOAD"
    },
    "3394": {
      "op": "DUP8"
    },
    "3395": {
      "op": "AND"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3398": {
      "op": "DUP8"
    },
    "3399": {
      "op": "ADD"
    },
    "3400": {
      "op": "MSTORE"
    },
    "3401": {
      "op": "SWAP2"
    },
    "3402": {
      "op": "MLOAD"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3405": {
      "op": "DUP7"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "MSTORE"
    },
    "3408": {
      "op": "MLOAD"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3411": {
      "op": "DUP6"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "SWAP1"
    },
    "3415": {
      "op": "MLOAD"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3418": {
      "op": "DUP5"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "op": "SWAP5"
    },
    "3422": {
      "op": "MLOAD"
    },
    "3423": {
      "op": "DUP4"
    },
    "3424": {
      "op": "AND"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3427": {
      "op": "DUP4"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "SWAP2"
    },
    "3431": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5334
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "3464": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "AND",
      "path": "4"
    },
    "3465": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3466": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDB3E2198"
    },
    "3471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3478": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3480": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3481": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3482": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3483": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SUB",
      "path": "4"
    },
    "3484": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3485": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3487": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3488": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3489": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3490": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3491": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3492": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3493": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDAD"
    },
    "3496": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3497": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3499": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3500": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3501": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3503": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "GAS",
      "path": "4"
    },
    "3504": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "CALL",
      "path": "4"
    },
    "3505": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3506": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3507": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3508": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDC1"
    },
    "3511": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3512": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3513": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3515": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3516": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3517": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3518": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3520": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3521": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3523": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3524": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3525": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3526": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3528": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3529": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3532": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "NOT",
      "path": "4"
    },
    "3533": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3535": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3536": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "4"
    },
    "3537": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "AND",
      "path": "4"
    },
    "3538": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3539": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "4"
    },
    "3540": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3541": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3543": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3544": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3545": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3546": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "ADD",
      "path": "4"
    },
    "3547": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3548": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDE5"
    },
    "3551": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3552": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3553": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20B1"
    },
    "3556": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3557": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5324,
        5360
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3558": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5308,
        5360
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3559": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5308,
        5360
      ],
      "op": "POP",
      "path": "4"
    },
    "3560": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5643,
        5658
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3561": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5632,
        5640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3562": {
      "branch": 62,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5632,
        5658
      ],
      "op": "LT",
      "path": "4"
    },
    "3563": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3564": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE47"
    },
    "3567": {
      "branch": 62,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5628,
        5838
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3568": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0xA"
    },
    "3570": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3571": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE27"
    },
    "3574": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3581": {
      "op": "SHL"
    },
    "3582": {
      "op": "SUB"
    },
    "3583": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "AND",
      "path": "4"
    },
    "3584": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5718,
        5728
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "3617": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5705,
        5708
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3619": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5704
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A9A"
    },
    "3622": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5678,
        5733
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3623": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5678,
        5733
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3624": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0xA"
    },
    "3626": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3627": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE47"
    },
    "3630": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "SUB"
    },
    "3639": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5779,
        5782
      ],
      "op": "AND",
      "path": "4"
    },
    "3640": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5784,
        5794
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3641": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE42"
    },
    "3644": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5814,
        5822
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3645": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5811
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3646": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2328"
    },
    "3649": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5796,
        5822
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3650": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5796,
        5822
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3651": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B9A"
    },
    "3654": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5751,
        5823
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3655": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5751,
        5823
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3656": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "4"
    },
    "3657": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "4"
    },
    "3658": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4244,
        5848
      ],
      "op": "POP",
      "path": "4"
    },
    "3659": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF67"
    },
    "3662": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3663": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3664": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0xA"
    },
    "3666": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3667": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3669": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3670": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3677": {
      "op": "SHL"
    },
    "3678": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3679": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3680": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5899,
        5909
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3681": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3683": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3684": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "4"
    },
    "3685": {
      "op": "MSTORE"
    },
    "3686": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5919,
        5923
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5934,
        5940
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3693": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5934,
        5940
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "AND",
      "path": "4"
    },
    "3703": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5884,
        5887
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3704": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5898
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "3709": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3712": {
      "op": "ADD"
    },
    "3713": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3715": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3717": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3718": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3719": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3720": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SUB",
      "path": "4"
    },
    "3721": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3722": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3723": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3724": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3725": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3726": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3727": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3728": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE98"
    },
    "3731": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3732": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3734": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3735": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3736": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3737": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3738": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "GAS",
      "path": "4"
    },
    "3739": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3740": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3741": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3742": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3743": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAC"
    },
    "3746": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3747": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3748": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3750": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3751": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3752": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3753": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3755": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3756": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3757": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3758": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3759": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3760": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3761": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3763": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3764": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3765": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3767": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "NOT",
      "path": "4"
    },
    "3768": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3770": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3771": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "4"
    },
    "3772": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "AND",
      "path": "4"
    },
    "3773": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3774": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "4"
    },
    "3775": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3776": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3778": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3779": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "POP",
      "path": "4"
    },
    "3780": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3781": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "ADD",
      "path": "4"
    },
    "3782": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3783": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xED0"
    },
    "3786": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3787": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3788": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20B1"
    },
    "3791": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3792": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3793": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5941
      ],
      "op": "LT",
      "path": "4"
    },
    "3794": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5877,
        5941
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3795": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEDB"
    },
    "3798": {
      "branch": 63,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3799": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3801": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3802": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3803": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5869,
        5942
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3804": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0xA"
    },
    "3806": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3807": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3809": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3810": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3819": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3820": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5977,
        5987
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3821": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3823": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3824": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "4"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5997,
        6001
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3829": {
      "op": "DUP3"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3834": {
      "op": "DUP2"
    },
    "3835": {
      "op": "ADD"
    },
    "3836": {
      "op": "DUP4"
    },
    "3837": {
      "op": "SWAP1"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3848": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3849": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "AND",
      "path": "4"
    },
    "3850": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5959,
        5962
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3851": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5976
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "3856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        5976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3862": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3864": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3865": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3866": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3867": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SUB",
      "path": "4"
    },
    "3868": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3869": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3871": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3872": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3873": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3874": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3875": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3876": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3877": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF2D"
    },
    "3880": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3881": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3883": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3884": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3885": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3886": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3887": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "GAS",
      "path": "4"
    },
    "3888": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "CALL",
      "path": "4"
    },
    "3889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3890": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3892": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF41"
    },
    "3895": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3897": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3901": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3904": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3905": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3907": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3909": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3912": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3913": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3914": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3916": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "NOT",
      "path": "4"
    },
    "3917": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3919": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "4"
    },
    "3921": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "AND",
      "path": "4"
    },
    "3922": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3923": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "4"
    },
    "3924": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3927": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3928": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3929": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3930": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "ADD",
      "path": "4"
    },
    "3931": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3932": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF65"
    },
    "3935": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3937": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E28"
    },
    "3940": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3941": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3942": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        5952,
        6017
      ],
      "op": "POP",
      "path": "4"
    },
    "3943": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4226,
        6037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3944": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 27,
      "value": "0x4"
    },
    "3946": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3953": {
      "op": "SHL"
    },
    "3954": {
      "op": "SUB"
    },
    "3955": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6066,
        6074
      ],
      "op": "AND",
      "path": "4"
    },
    "3956": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3959": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3960": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3961": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6065
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "3963": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3965": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3966": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3968": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3969": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3970": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3971": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3972": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3973": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3974": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6087,
        6093
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3975": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6087,
        6093
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3976": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3977": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF93"
    },
    "3980": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3981": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6076,
        6082
      ],
      "op": "DUP9",
      "path": "4"
    },
    "3982": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6076,
        6082
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3983": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "3986": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6046,
        6083
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3987": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3988": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3989": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3990": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3991": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3993": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "ADD",
      "path": "4"
    },
    "3994": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3996": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3997": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3998": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3999": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SUB",
      "path": "4"
    },
    "4000": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4001": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4002": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4004": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4005": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4007": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFB0"
    },
    "4010": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4011": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4012": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "4015": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6046,
        6093
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4016": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4017": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4018": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4019": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6046,
        6093
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 28,
      "value": "0x4"
    },
    "4024": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "op": "SUB"
    },
    "4033": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6167,
        6175
      ],
      "op": "AND",
      "path": "4"
    },
    "4034": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4036": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4037": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4038": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4039": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6166
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x13"
    },
    "4041": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4043": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4044": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4046": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4047": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4048": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4049": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4050": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4051": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4052": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6199,
        6210
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4053": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6199,
        6210
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4054": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4055": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFE1"
    },
    "4058": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4059": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6177,
        6183
      ],
      "op": "DUP9",
      "path": "4"
    },
    "4060": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6177,
        6183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4061": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "4064": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6144,
        6184
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4065": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4066": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4067": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4068": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4069": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4071": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4073": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4075": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4076": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SUB",
      "path": "4"
    },
    "4077": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4080": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4081": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "ADD",
      "path": "4"
    },
    "4082": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4083": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6184
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4084": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6185,
        6195
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4085": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4087": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4088": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4089": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4090": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4091": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4092": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4093": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4094": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4095": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6196
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4096": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4097": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4098": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4099": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6144,
        6210
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4100": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 29,
      "value": "0x4"
    },
    "4102": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "op": "SUB"
    },
    "4111": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6281,
        6289
      ],
      "op": "AND",
      "path": "4"
    },
    "4112": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4113": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4114": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6280
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "4116": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4117": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4118": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4119": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4120": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4121": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6290
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4122": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1024"
    },
    "4125": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4126": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6291,
        6297
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4127": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6291,
        6297
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4128": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "4131": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6262,
        6298
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4132": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4133": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4134": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4135": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4136": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4138": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4139": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4140": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4141": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4142": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4143": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SUB",
      "path": "4"
    },
    "4144": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4146": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4147": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4148": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "ADD",
      "path": "4"
    },
    "4149": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4150": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6298
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4151": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4152": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4153": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4155": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4156": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "ADD",
      "path": "4"
    },
    "4157": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4158": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4161": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4162": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4164": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4167": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "ADD",
      "path": "4"
    },
    "4168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "DUP9",
      "path": "4"
    },
    "4169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4170": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6262,
        6316
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4171": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 30,
      "value": "0x4"
    },
    "4173": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4180": {
      "op": "SHL"
    },
    "4181": {
      "op": "SUB"
    },
    "4182": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6394,
        6402
      ],
      "op": "AND",
      "path": "4"
    },
    "4183": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4184": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4185": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6393
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "4187": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4189": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4190": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4191": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6403
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4192": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x106A"
    },
    "4195": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4196": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6404,
        6410
      ],
      "op": "DUP8",
      "path": "4"
    },
    "4197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6404,
        6410
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4198": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217E"
    },
    "4201": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        6375,
        6411
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4202": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4203": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4204": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4205": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4206": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4208": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4209": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4211": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4212": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4213": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "SUB",
      "path": "4"
    },
    "4215": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4216": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "ADD",
      "path": "4"
    },
    "4217": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4218": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6411
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4219": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4220": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4221": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4223": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4224": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "ADD",
      "path": "4"
    },
    "4225": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4226": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4230": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4231": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4232": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4233": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4234": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4235": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4236": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "ADD",
      "path": "4"
    },
    "4237": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4238": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4239": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6417,
        6427
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "op": "SUB"
    },
    "4248": {
      "op": "NOT"
    },
    "4249": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4250": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4251": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "AND",
      "path": "4"
    },
    "4252": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4253": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "OR",
      "path": "4"
    },
    "4254": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4255": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4256": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6375,
        6428
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4257": {
      "op": "DUP7"
    },
    "4258": {
      "op": "DUP3"
    },
    "4259": {
      "op": "MSTORE"
    },
    "4260": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6417,
        6427
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4261": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 31,
      "value": "0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F"
    },
    "4294": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4298": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4299": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SUB",
      "path": "4"
    },
    "4302": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4303": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        6444,
        6478
      ],
      "op": "LOG2",
      "path": "4"
    },
    "4304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3937,
        6485
      ],
      "op": "POP",
      "path": "4"
    },
    "4305": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "4"
    },
    "4306": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "4"
    },
    "4307": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "4"
    },
    "4308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3794,
        6485
      ],
      "op": "POP",
      "path": "4"
    },
    "4309": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "o",
      "offset": [
        3794,
        6485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4310": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4311": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7661,
        7664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4313": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7706
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4314": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "4316": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7753,
        7762
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4317": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4318": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4319": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4320": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "LT",
      "path": "4"
    },
    "4321": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EC"
    },
    "4324": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4325": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EC"
    },
    "4328": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "4331": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4332": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4333": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4334": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4336": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4337": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4339": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4341": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4342": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "ADD",
      "path": "4"
    },
    "4343": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4345": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4346": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4347": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4348": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "4351": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "EXP",
      "path": "4"
    },
    "4352": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4353": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "DIV",
      "path": "4"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4360": {
      "op": "SHL"
    },
    "4361": {
      "op": "SUB"
    },
    "4362": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7731,
        7763
      ],
      "op": "AND",
      "path": "4"
    },
    "4363": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7764
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4364": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7675,
        7764
      ],
      "op": "POP",
      "path": "4"
    },
    "4365": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7776,
        7786
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4367": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4374": {
      "op": "SHL"
    },
    "4375": {
      "op": "SUB"
    },
    "4376": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7818
      ],
      "op": "AND",
      "path": "4"
    },
    "4377": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7818
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "4382": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4384": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4385": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4386": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "4391": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "AND",
      "path": "4"
    },
    "4392": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "4394": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SHL",
      "path": "4"
    },
    "4395": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4396": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4397": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4399": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "4"
    },
    "4400": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "4402": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4404": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4405": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4406": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4407": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SUB",
      "path": "4"
    },
    "4408": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4409": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4410": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4411": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "4412": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4413": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4414": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4415": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1147"
    },
    "4418": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4419": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4421": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4422": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4423": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4424": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4425": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "GAS",
      "path": "4"
    },
    "4426": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "4427": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4428": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4429": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4430": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115B"
    },
    "4433": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4434": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4435": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4437": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4438": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4439": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4440": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4442": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4443": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4444": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4445": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4446": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4447": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4448": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4450": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4451": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4452": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4454": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "NOT",
      "path": "4"
    },
    "4455": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4457": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4458": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "4"
    },
    "4459": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "AND",
      "path": "4"
    },
    "4460": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4461": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "4"
    },
    "4462": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4463": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4465": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4466": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "POP",
      "path": "4"
    },
    "4467": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4468": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "ADD",
      "path": "4"
    },
    "4469": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4470": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x117F"
    },
    "4473": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4474": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4475": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x212E"
    },
    "4478": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4479": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7793,
        7820
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7774,
        7820
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4482": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7774,
        7820
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4483": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        7604,
        7856
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "op": "POP"
    },
    "4487": {
      "op": "POP"
    },
    "4488": {
      "op": "POP"
    },
    "4489": {
      "op": "POP"
    },
    "4490": {
      "op": "POP"
    },
    "4491": {
      "fn": "DailyRocket.getPrice",
      "jump": "o",
      "offset": [
        7604,
        7856
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4493": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4495": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4502": {
      "op": "SHL"
    },
    "4503": {
      "op": "SUB"
    },
    "4504": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4505": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4506": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4507": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B6"
    },
    "4510": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4511": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4513": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4522": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4523": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4525": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4526": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "4529": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4530": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2272"
    },
    "4533": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4534": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "4544": {
      "branch": 67,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121B"
    },
    "4548": {
      "branch": 67,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "MSTORE"
    },
    "4575": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "MSTORE"
    },
    "4613": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4625": {
      "op": "DUP3"
    },
    "4626": {
      "op": "ADD"
    },
    "4627": {
      "op": "MSTORE"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4630": {
      "op": "ADD"
    },
    "4631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "4634": {
      "op": "JUMP"
    },
    "4635": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x1224"
    },
    "4639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1940"
    },
    "4643": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4644": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4646": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4647": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3248,
        3450
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4648": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3302,
        3311
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4650": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4651": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3321,
        3342
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "4653": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3321,
        3349
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4654": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3317,
        3349
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4655": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3317,
        3349
      ],
      "op": "LT",
      "path": "4"
    },
    "4656": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4657": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1224"
    },
    "4660": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4661": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3433
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 34,
      "value": "0x123D"
    },
    "4664": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3431,
        3432
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4665": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3430
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10D6"
    },
    "4668": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3422,
        3433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4669": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3422,
        3433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4670": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4672": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "op": "SUB"
    },
    "4681": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3388,
        3396
      ],
      "op": "AND",
      "path": "4"
    },
    "4682": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4684": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4685": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4686": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4687": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4689": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4691": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4692": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4694": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4695": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3397
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4696": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3415
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4698": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4699": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4700": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3416,
        3417
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4701": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3416,
        3417
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4702": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4703": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "LT",
      "path": "4"
    },
    "4704": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126B"
    },
    "4707": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4708": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126B"
    },
    "4711": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "4714": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4715": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4716": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4717": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4719": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4720": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4722": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4724": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4725": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3398,
        3418
      ],
      "op": "ADD",
      "path": "4"
    },
    "4726": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4728": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4729": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1282"
    },
    "4732": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4733": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4734": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "4737": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3369,
        3419
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4738": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4739": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4740": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4741": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4742": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4744": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4745": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4746": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4747": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4748": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SUB",
      "path": "4"
    },
    "4749": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4751": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "ADD",
      "path": "4"
    },
    "4752": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4753": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3419
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4754": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3369,
        3433
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4755": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 35
    },
    "4756": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129C"
    },
    "4759": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4760": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23CD"
    },
    "4763": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        3351,
        3354
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4764": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4765": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4766": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "POP",
      "path": "4"
    },
    "4767": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3351,
        3354
      ],
      "op": "POP",
      "path": "4"
    },
    "4768": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x122A"
    },
    "4771": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        3297,
        3444
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4772": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6491,
        7344
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4773": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4775": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6553,
        6561
      ],
      "op": "AND",
      "path": "4"
    },
    "4785": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6539,
        6550
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4787": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4788": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6593,
        6610
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4790": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6593,
        6617
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4793": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4794": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "AND",
      "path": "4"
    },
    "4795": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6589,
        6617
      ],
      "op": "LT",
      "path": "4"
    },
    "4796": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4797": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x171B"
    },
    "4800": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "op": "SUB"
    },
    "4809": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 36
    },
    "4810": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "AND",
      "path": "4"
    },
    "4811": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4813": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4814": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4815": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4816": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6769
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "4818": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4821": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4823": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4824": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6774
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4825": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4827": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4828": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4829": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4831": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4832": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "AND",
      "path": "4"
    },
    "4833": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4834": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4835": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "LT",
      "path": "4"
    },
    "4836": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12EF"
    },
    "4839": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4840": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12EF"
    },
    "4843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "4846": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4847": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4848": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4849": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4851": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4852": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4854": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4856": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4857": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6775,
        6795
      ],
      "op": "ADD",
      "path": "4"
    },
    "4858": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4860": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4861": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1306"
    },
    "4864": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4865": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4866": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "4869": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6751,
        6796
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4870": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4871": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4872": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4873": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4876": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "ADD",
      "path": "4"
    },
    "4877": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4879": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4880": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4881": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4882": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SUB",
      "path": "4"
    },
    "4883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6796
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4885": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4886": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4888": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6751,
        6803
      ],
      "op": "POP",
      "path": "4"
    },
    "4889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "4891": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4893": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6682,
        6685
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "SUB"
    },
    "4902": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "AND",
      "path": "4"
    },
    "4903": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4904": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4905": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4907": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "ADD",
      "path": "4"
    },
    "4908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4910": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4911": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4913": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "ADD",
      "path": "4"
    },
    "4914": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4916": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6686
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4917": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6704
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4919": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6705,
        6706
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4920": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4922": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "AND",
      "path": "4"
    },
    "4923": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4924": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4925": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4926": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "LT",
      "path": "4"
    },
    "4927": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134A"
    },
    "4930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4931": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134A"
    },
    "4934": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "4937": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4939": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4940": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4943": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4947": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4948": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6687,
        6707
      ],
      "op": "ADD",
      "path": "4"
    },
    "4949": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4951": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4952": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1361"
    },
    "4955": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4956": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4957": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "4960": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6663,
        6708
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4961": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4962": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4963": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4964": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4965": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4967": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4968": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4969": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4970": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4971": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SUB",
      "path": "4"
    },
    "4972": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4974": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "ADD",
      "path": "4"
    },
    "4975": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4976": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6708
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4977": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6715
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4978": {
      "branch": 64,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6663,
        6803
      ],
      "op": "EQ",
      "path": "4"
    },
    "4979": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x137B"
    },
    "4982": {
      "branch": 64,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4983": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4985": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4986": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4987": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6638,
        6817
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4988": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6836,
        6843
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4990": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4997": {
      "op": "SHL"
    },
    "4998": {
      "op": "SUB"
    },
    "4999": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5000": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "AND",
      "path": "4"
    },
    "5001": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5003": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5005": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5006": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "5008": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5013": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5014": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6876
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5015": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5017": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5018": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5019": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5021": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5022": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "AND",
      "path": "4"
    },
    "5023": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5024": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5025": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "LT",
      "path": "4"
    },
    "5026": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13AD"
    },
    "5029": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5030": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13AD"
    },
    "5033": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5036": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5037": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5038": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5039": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5041": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5042": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5044": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5046": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5047": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6877,
        6897
      ],
      "op": "ADD",
      "path": "4"
    },
    "5048": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5050": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5051": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13C4"
    },
    "5054": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5055": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5056": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5059": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6853,
        6898
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5060": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5061": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5062": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5063": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5064": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5066": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5067": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5068": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5069": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5070": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SUB",
      "path": "4"
    },
    "5071": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5073": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "ADD",
      "path": "4"
    },
    "5074": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5075": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6898
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5076": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6853,
        6905
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5077": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5079": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5080": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "AND",
      "path": "4"
    },
    "5081": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6849,
        6905
      ],
      "op": "LT",
      "path": "4"
    },
    "5082": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5083": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1708"
    },
    "5086": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 37
    },
    "5096": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "AND",
      "path": "4"
    },
    "5097": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5099": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5100": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5101": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5102": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "5104": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5106": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5107": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5109": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5110": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7013
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5111": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7031
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5113": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5114": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5115": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5117": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5118": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "AND",
      "path": "4"
    },
    "5119": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5120": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5121": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "LT",
      "path": "4"
    },
    "5122": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x140D"
    },
    "5125": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5126": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x140D"
    },
    "5129": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5132": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5133": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5134": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5135": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5137": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5138": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5140": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5142": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5143": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7014,
        7034
      ],
      "op": "ADD",
      "path": "4"
    },
    "5144": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5146": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5147": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1424"
    },
    "5150": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5151": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5152": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5155": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6990,
        7035
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5156": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5157": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5158": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5159": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5160": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5162": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "ADD",
      "path": "4"
    },
    "5163": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5165": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5166": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5167": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5168": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SUB",
      "path": "4"
    },
    "5169": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5170": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5171": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6990,
        7035
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5172": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6956
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "5174": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5176": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6957,
        6960
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "op": "SUB"
    },
    "5185": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "AND",
      "path": "4"
    },
    "5186": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5187": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5188": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5190": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "ADD",
      "path": "4"
    },
    "5191": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5192": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5193": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5194": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5196": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "ADD",
      "path": "4"
    },
    "5197": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5199": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6961
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5200": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6979
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5202": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6980,
        6981
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5203": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5205": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "AND",
      "path": "4"
    },
    "5206": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5207": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5208": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5209": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "LT",
      "path": "4"
    },
    "5210": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1465"
    },
    "5213": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5214": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1465"
    },
    "5217": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5220": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5221": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5222": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5223": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5225": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5226": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5230": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5231": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6962,
        6982
      ],
      "op": "ADD",
      "path": "4"
    },
    "5232": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5234": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5235": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x147C"
    },
    "5238": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5239": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5240": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5243": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6938,
        6983
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5244": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5245": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5246": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5247": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5248": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5250": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "ADD",
      "path": "4"
    },
    "5251": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5253": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5254": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5255": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5256": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SUB",
      "path": "4"
    },
    "5257": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5258": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6983
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5259": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6984,
        6985
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5262": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "AND",
      "path": "4"
    },
    "5263": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5266": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "LT",
      "path": "4"
    },
    "5267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149E"
    },
    "5270": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5271": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149E"
    },
    "5274": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5277": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5278": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5279": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5280": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5282": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5283": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5285": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5287": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "ADD",
      "path": "4"
    },
    "5289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        6986
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5290": {
      "branch": 65,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6938,
        7035
      ],
      "op": "EQ",
      "path": "4"
    },
    "5291": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14B3"
    },
    "5294": {
      "branch": 65,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5295": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5297": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5298": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5299": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6930,
        7036
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "SUB"
    },
    "5308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 38
    },
    "5309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "AND",
      "path": "4"
    },
    "5310": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5313": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5314": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5315": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7071
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "5317": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5319": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5320": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5322": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5323": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7076
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5324": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5326": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5327": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5328": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5330": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5331": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "AND",
      "path": "4"
    },
    "5332": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5333": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "LT",
      "path": "4"
    },
    "5335": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E2"
    },
    "5338": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5339": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E2"
    },
    "5342": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5345": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5346": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5347": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5350": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5351": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5353": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5355": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5356": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7077,
        7097
      ],
      "op": "ADD",
      "path": "4"
    },
    "5357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5359": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5360": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F9"
    },
    "5363": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5364": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5365": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5368": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7054,
        7098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5369": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5370": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5371": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5372": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5373": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5375": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "ADD",
      "path": "4"
    },
    "5376": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5378": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5380": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5381": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SUB",
      "path": "4"
    },
    "5382": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5383": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7098
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5384": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "5386": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5388": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7123,
        7126
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "op": "SUB"
    },
    "5397": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "AND",
      "path": "4"
    },
    "5398": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5399": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5400": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5402": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "ADD",
      "path": "4"
    },
    "5403": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5404": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5405": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5406": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5408": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "ADD",
      "path": "4"
    },
    "5409": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7127
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5412": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5414": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7146,
        7147
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5415": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5417": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "AND",
      "path": "4"
    },
    "5418": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5419": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5420": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5421": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "LT",
      "path": "4"
    },
    "5422": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1539"
    },
    "5425": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5426": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1539"
    },
    "5429": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5432": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5434": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5435": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5437": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5438": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5442": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5443": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7128,
        7148
      ],
      "op": "ADD",
      "path": "4"
    },
    "5444": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5446": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1550"
    },
    "5450": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5451": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5452": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7104,
        7149
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5456": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5457": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5458": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5459": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5460": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "ADD",
      "path": "4"
    },
    "5463": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5465": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5466": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5467": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5468": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SUB",
      "path": "4"
    },
    "5469": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5470": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7149
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7150,
        7151
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5472": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5474": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "AND",
      "path": "4"
    },
    "5475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5476": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5477": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "LT",
      "path": "4"
    },
    "5479": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1572"
    },
    "5482": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1572"
    },
    "5486": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5489": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5490": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5491": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5493": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5494": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5495": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5496": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5498": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5499": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5500": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5501": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5503": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "ADD",
      "path": "4"
    },
    "5504": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5509": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5510": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5511": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "ADD",
      "path": "4"
    },
    "5512": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5513": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5514": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5515": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5516": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5517": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5518": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5519": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5520": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "ADD",
      "path": "4"
    },
    "5521": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5522": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5529": {
      "op": "SHL"
    },
    "5530": {
      "op": "SUB"
    },
    "5531": {
      "op": "NOT"
    },
    "5532": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "AND",
      "path": "4"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5539": {
      "op": "SHL"
    },
    "5540": {
      "op": "SUB"
    },
    "5541": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5542": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5543": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7104,
        7152
      ],
      "op": "AND",
      "path": "4"
    },
    "5544": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5546": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5547": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "OR",
      "path": "4"
    },
    "5548": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5549": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7054,
        7153
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5556": {
      "op": "SHL"
    },
    "5557": {
      "op": "SUB"
    },
    "5558": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "DUP7",
      "path": "4",
      "statement": 39
    },
    "5559": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "AND",
      "path": "4"
    },
    "5560": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5562": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "5564": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5565": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5566": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5568": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5569": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7195
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7213
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5572": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5573": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5574": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5576": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5577": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "AND",
      "path": "4"
    },
    "5578": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5579": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5580": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "LT",
      "path": "4"
    },
    "5581": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D8"
    },
    "5584": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5585": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D8"
    },
    "5588": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5591": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5592": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5593": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5594": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5596": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5599": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5602": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7196,
        7216
      ],
      "op": "ADD",
      "path": "4"
    },
    "5603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5605": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5606": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15EF"
    },
    "5609": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5610": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5611": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5614": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7171,
        7217
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5615": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5616": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5617": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5618": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5619": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5621": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "ADD",
      "path": "4"
    },
    "5622": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5624": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5625": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5626": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5627": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SUB",
      "path": "4"
    },
    "5628": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5629": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5630": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5632": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5633": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5634": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5635": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160C"
    },
    "5638": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5639": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5640": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "5643": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7171,
        7221
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5644": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5645": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5646": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5647": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7171,
        7221
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5648": {
      "op": "POP"
    },
    "5649": {
      "op": "POP"
    },
    "5650": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 40,
      "value": "0x3"
    },
    "5652": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5659": {
      "op": "SHL"
    },
    "5660": {
      "op": "SUB"
    },
    "5661": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5662": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "AND",
      "path": "4"
    },
    "5663": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5665": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5666": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5667": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5668": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7282
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "5670": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5672": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5673": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5675": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5676": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5677": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5679": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5680": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "op": "SUB"
    },
    "5689": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5690": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5691": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "AND",
      "path": "4"
    },
    "5692": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7250
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5693": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7263
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8EBFA8AE"
    },
    "5698": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7263
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5699": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7287
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5700": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7305
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5701": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5703": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5704": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "AND",
      "path": "4"
    },
    "5705": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5706": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5707": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "LT",
      "path": "4"
    },
    "5708": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1657"
    },
    "5711": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5712": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1657"
    },
    "5715": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5718": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5719": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5720": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5721": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5723": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5724": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5726": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5728": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5729": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7288,
        7308
      ],
      "op": "ADD",
      "path": "4"
    },
    "5730": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5732": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5733": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166E"
    },
    "5736": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5737": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5738": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "5741": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7264,
        7309
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5742": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5743": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5744": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5745": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5746": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5748": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "ADD",
      "path": "4"
    },
    "5749": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5751": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5752": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5753": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5754": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SUB",
      "path": "4"
    },
    "5755": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5756": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7309
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5757": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7310,
        7311
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5758": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5760": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "AND",
      "path": "4"
    },
    "5761": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5762": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5763": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5764": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "LT",
      "path": "4"
    },
    "5765": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1690"
    },
    "5768": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5769": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1690"
    },
    "5772": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "5775": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5776": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5777": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5779": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5780": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5781": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5782": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5784": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5785": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5786": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5787": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "ADD",
      "path": "4"
    },
    "5788": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5789": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5792": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "5794": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5795": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5796": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SHL",
      "path": "4"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5803": {
      "op": "SHL"
    },
    "5804": {
      "op": "SUB"
    },
    "5805": {
      "op": "NOT"
    },
    "5806": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "AND",
      "path": "4"
    },
    "5807": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5808": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5815": {
      "op": "SHL"
    },
    "5816": {
      "op": "SUB"
    },
    "5817": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5818": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5819": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7264,
        7312
      ],
      "op": "AND",
      "path": "4"
    },
    "5820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5822": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5823": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ADD",
      "path": "4"
    },
    "5824": {
      "op": "MSTORE"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5830": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5832": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5833": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5834": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5835": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "SUB",
      "path": "4"
    },
    "5836": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5837": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5839": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5840": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5841": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "5842": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5844": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5845": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16DD"
    },
    "5848": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5849": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5851": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5852": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5853": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5854": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "4"
    },
    "5855": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "GAS",
      "path": "4"
    },
    "5856": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "CALL",
      "path": "4"
    },
    "5857": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5858": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5859": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5860": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16F1"
    },
    "5863": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5864": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5865": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5867": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5868": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5869": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5870": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5872": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5873": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "4"
    },
    "5875": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "4"
    },
    "5876": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "4"
    },
    "5877": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        7240,
        7313
      ],
      "op": "POP",
      "path": "4"
    },
    "5878": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 41
    },
    "5879": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5880": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1700"
    },
    "5883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E8"
    },
    "5887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6907,
        6910
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5888": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5890": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "POP",
      "path": "4"
    },
    "5891": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6907,
        6910
      ],
      "op": "POP",
      "path": "4"
    },
    "5892": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x137E"
    },
    "5895": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5896": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6831,
        7328
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 42
    },
    "5899": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1713"
    },
    "5902": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5903": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E8"
    },
    "5906": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        6619,
        6622
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5907": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "POP",
      "path": "4"
    },
    "5910": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6619,
        6622
      ],
      "op": "POP",
      "path": "4"
    },
    "5911": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B3"
    },
    "5914": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5915": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5916": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6571,
        7338
      ],
      "op": "POP",
      "path": "4"
    },
    "5917": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        6529,
        7344
      ],
      "op": "POP",
      "path": "4"
    },
    "5918": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "o",
      "offset": [
        6491,
        7344
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5919": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9424,
        9974
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5920": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5922": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "op": "SUB"
    },
    "5931": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "5932": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5933": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "5934": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1749"
    },
    "5937": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5938": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5940": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5947": {
      "op": "SHL"
    },
    "5948": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5949": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5950": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5952": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "5953": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x730"
    },
    "5956": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5957": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2272"
    },
    "5960": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5961": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5962": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9514
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x4"
    },
    "5964": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9514
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5965": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "5967": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9505
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5968": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5970": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5971": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1767"
    },
    "5974": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9517
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5975": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9516,
        9517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5977": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9516,
        9517
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5984": {
      "op": "SHL"
    },
    "5985": {
      "op": "SUB"
    },
    "5986": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9514
      ],
      "op": "AND",
      "path": "4"
    },
    "5987": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2300"
    },
    "5990": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9506,
        9517
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5991": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9506,
        9517
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5998": {
      "op": "SHL"
    },
    "5999": {
      "op": "SUB"
    },
    "6000": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "AND",
      "path": "4"
    },
    "6001": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6002": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6003": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6005": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "ADD",
      "path": "4"
    },
    "6006": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6007": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6008": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6009": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6011": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "ADD",
      "path": "4"
    },
    "6012": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6014": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6015": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9518
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6016": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9521,
        9534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "6019": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178C"
    },
    "6022": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9534
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6023": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9534
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6024": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22A7"
    },
    "6027": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9493,
        9534
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6028": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9493,
        9534
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6029": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9481,
        9490
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1794"
    },
    "6032": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9481,
        9488
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78B"
    },
    "6035": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9481,
        9490
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6036": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9481,
        9490
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6037": {
      "branch": 66,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9481,
        9534
      ],
      "op": "GT",
      "path": "4"
    },
    "6038": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x179E"
    },
    "6041": {
      "branch": 66,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6042": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6044": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6045": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6046": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9473,
        9535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6047": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9550,
        9559
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6049": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6050": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9569,
        9586
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "6052": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9569,
        9593
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6059": {
      "op": "SHL"
    },
    "6060": {
      "op": "SUB"
    },
    "6061": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9565,
        9593
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6062": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9565,
        9593
      ],
      "op": "AND",
      "path": "4"
    },
    "6063": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9565,
        9593
      ],
      "op": "LT",
      "path": "4"
    },
    "6064": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6065": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1224"
    },
    "6068": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6069": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9650,
        9658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6071": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9650,
        9658
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6078": {
      "op": "SHL"
    },
    "6079": {
      "op": "SUB"
    },
    "6080": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9650,
        9658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6081": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9650,
        9658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6082": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9650,
        9658
      ],
      "op": "AND",
      "path": "4"
    },
    "6083": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9614,
        9625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6085": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6086": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6087": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6088": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9649
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "6090": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6092": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6093": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6095": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6096": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9659
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6097": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9677
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "6099": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6100": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6101": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9614,
        9625
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6102": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9614,
        9625
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6103": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9688,
        9691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "6105": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9688,
        9691
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6106": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6107": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "DUP7",
      "path": "4"
    },
    "6108": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "AND",
      "path": "4"
    },
    "6109": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6110": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6111": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "LT",
      "path": "4"
    },
    "6112": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17EB"
    },
    "6115": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6116": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17EB"
    },
    "6119": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x241E"
    },
    "6122": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9660,
        9680
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6123": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6124": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6125": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6127": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6128": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6130": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6132": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6133": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9660,
        9680
      ],
      "op": "ADD",
      "path": "4"
    },
    "6134": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6136": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6137": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1802"
    },
    "6140": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6141": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6142": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219A"
    },
    "6145": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9630,
        9681
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6146": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6147": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6148": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6149": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6150": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6152": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "ADD",
      "path": "4"
    },
    "6153": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6155": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6156": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6157": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6158": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SUB",
      "path": "4"
    },
    "6159": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6160": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6161": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9630,
        9681
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6162": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9685,
        9687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "6164": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181D"
    },
    "6167": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9687
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6168": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9687
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6169": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9687
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22E1"
    },
    "6172": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9629,
        9687
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6173": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9687
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6174": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1827"
    },
    "6177": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6178": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6179": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22BF"
    },
    "6182": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9629,
        9691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6183": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9629,
        9691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6184": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9761,
        9764
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 44,
      "value": "0xA"
    },
    "6186": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9761,
        9764
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6187": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9782,
        9793
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6189": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9782,
        9793
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6190": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6192": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6193": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6200": {
      "op": "SHL"
    },
    "6201": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6202": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6209": {
      "op": "SHL"
    },
    "6210": {
      "op": "SUB"
    },
    "6211": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9782,
        9793
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6212": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9782,
        9793
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6213": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9782,
        9793
      ],
      "op": "AND",
      "path": "4"
    },
    "6214": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6216": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6217": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ADD",
      "path": "4"
    },
    "6218": {
      "op": "MSTORE"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6221": {
      "op": "DUP2"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "op": "DUP5"
    },
    "6224": {
      "op": "SWAP1"
    },
    "6225": {
      "op": "MSTORE"
    },
    "6226": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9614,
        9692
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6227": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9614,
        9692
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9761,
        9764
      ],
      "op": "AND",
      "path": "4"
    },
    "6230": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9761,
        9764
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6231": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9773
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "6236": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9773
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6239": {
      "op": "ADD"
    },
    "6240": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6242": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6244": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6245": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6246": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6247": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "SUB",
      "path": "4"
    },
    "6248": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6249": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6251": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP8",
      "path": "4"
    },
    "6252": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6253": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "6254": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6255": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6256": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6257": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1879"
    },
    "6260": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6261": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6263": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6264": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6265": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6266": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6267": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "GAS",
      "path": "4"
    },
    "6268": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "CALL",
      "path": "4"
    },
    "6269": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6270": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6271": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6272": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188D"
    },
    "6275": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6276": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6277": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6279": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6280": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "6281": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6282": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6284": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6285": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6286": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6287": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6288": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6289": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6290": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6292": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6293": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6294": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6296": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "NOT",
      "path": "4"
    },
    "6297": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6299": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6300": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ADD",
      "path": "4"
    },
    "6301": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "AND",
      "path": "4"
    },
    "6302": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6303": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ADD",
      "path": "4"
    },
    "6304": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6305": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6307": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6308": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "POP",
      "path": "4"
    },
    "6309": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6310": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "ADD",
      "path": "4"
    },
    "6311": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6312": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B1"
    },
    "6315": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6316": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6317": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E28"
    },
    "6320": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6321": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9754,
        9803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6322": {
      "op": "POP"
    },
    "6323": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 45,
      "value": "0x2"
    },
    "6325": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6326": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9854,
        9857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "6328": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9854,
        9857
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6329": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9913,
        9923
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "6331": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9913,
        9923
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6332": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6334": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6335": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6342": {
      "op": "SHL"
    },
    "6343": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6344": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "op": "SUB"
    },
    "6353": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9854,
        9857
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6354": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9854,
        9857
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6355": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9854,
        9857
      ],
      "op": "AND",
      "path": "4"
    },
    "6356": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6358": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6359": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "ADD",
      "path": "4"
    },
    "6360": {
      "op": "MSTORE"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6363": {
      "op": "DUP2"
    },
    "6364": {
      "op": "ADD"
    },
    "6365": {
      "op": "DUP6"
    },
    "6366": {
      "op": "SWAP1"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9913,
        9923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6369": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9913,
        9923
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6370": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9913,
        9923
      ],
      "op": "AND",
      "path": "4"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "op": "MSTORE"
    },
    "6376": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6380": {
      "op": "DUP3"
    },
    "6381": {
      "op": "ADD"
    },
    "6382": {
      "op": "MSTORE"
    },
    "6383": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6384": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "AND",
      "path": "4"
    },
    "6385": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6386": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9836
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE8EDA9DF"
    },
    "6391": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9836
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6394": {
      "op": "ADD"
    },
    "6395": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6397": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6399": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6400": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6401": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6402": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "SUB",
      "path": "4"
    },
    "6403": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6404": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6406": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP8",
      "path": "4"
    },
    "6407": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6408": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "6409": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6410": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6411": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6412": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1914"
    },
    "6415": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6416": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6418": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6419": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6420": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6421": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "POP",
      "path": "4"
    },
    "6422": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "GAS",
      "path": "4"
    },
    "6423": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "CALL",
      "path": "4"
    },
    "6424": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6425": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6426": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6427": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1928"
    },
    "6430": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6431": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6432": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6434": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6435": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "6436": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6437": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6439": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6440": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6441": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "POP",
      "path": "4"
    },
    "6442": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "POP",
      "path": "4"
    },
    "6443": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "POP",
      "path": "4"
    },
    "6444": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9817,
        9957
      ],
      "op": "POP",
      "path": "4"
    },
    "6445": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9600,
        9968
      ],
      "op": "POP",
      "path": "4"
    },
    "6446": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 46
    },
    "6447": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6448": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1938"
    },
    "6451": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6452": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A6"
    },
    "6455": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        9595,
        9598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6456": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6457": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6458": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "POP",
      "path": "4"
    },
    "6459": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9595,
        9598
      ],
      "op": "POP",
      "path": "4"
    },
    "6460": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A1"
    },
    "6463": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        9545,
        9968
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6464": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6465": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6467": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6468": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6475": {
      "op": "SHL"
    },
    "6476": {
      "op": "SUB"
    },
    "6477": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 47
    },
    "6478": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6479": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "op": "SUB"
    },
    "6488": {
      "op": "NOT"
    },
    "6489": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6490": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6491": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6492": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6493": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x40"
    },
    "6497": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6498": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6499": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6500": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6501": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6502": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6503": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6504": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6505": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6538": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6539": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6540": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6541": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6542": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6543": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6544": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6545": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6547": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6548": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6555": {
      "op": "SHL"
    },
    "6556": {
      "op": "SUB"
    },
    "6557": {
      "op": "DUP6"
    },
    "6558": {
      "op": "DUP2"
    },
    "6559": {
      "op": "AND"
    },
    "6560": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "6562": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6563": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "12"
    },
    "6564": {
      "op": "MSTORE"
    },
    "6565": {
      "op": "DUP5"
    },
    "6566": {
      "op": "DUP2"
    },
    "6567": {
      "op": "AND"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6570": {
      "op": "DUP4"
    },
    "6571": {
      "op": "ADD"
    },
    "6572": {
      "op": "MSTORE"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6575": {
      "op": "DUP1"
    },
    "6576": {
      "op": "DUP4"
    },
    "6577": {
      "op": "ADD"
    },
    "6578": {
      "op": "DUP6"
    },
    "6579": {
      "op": "SWAP1"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6582": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6583": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6584": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6585": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SUB",
      "path": "12"
    },
    "6586": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6587": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6588": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "12"
    },
    "6589": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6590": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6593": {
      "op": "SWAP1"
    },
    "6594": {
      "op": "SWAP3"
    },
    "6595": {
      "op": "ADD"
    },
    "6596": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6597": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6598": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6600": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6601": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "ADD",
      "path": "12"
    },
    "6602": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6603": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6610": {
      "op": "SHL"
    },
    "6611": {
      "op": "SUB"
    },
    "6612": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "AND",
      "path": "12"
    },
    "6613": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6620": {
      "op": "SHL"
    },
    "6621": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "OR",
      "path": "12"
    },
    "6622": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6623": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6624": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6625": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6628": {
      "op": "SWAP3"
    },
    "6629": {
      "op": "DUP4"
    },
    "6630": {
      "op": "SWAP3"
    },
    "6631": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6632": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "DUP9",
      "path": "12"
    },
    "6633": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "AND",
      "path": "12"
    },
    "6634": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        727
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6635": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19F4"
    },
    "6638": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6639": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        728,
        797
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6640": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x217E"
    },
    "6643": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6644": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6645": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6647": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6649": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6650": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6651": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6652": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SUB",
      "path": "12"
    },
    "6653": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6654": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6656": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6657": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "GAS",
      "path": "12"
    },
    "6658": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "CALL",
      "path": "12"
    },
    "6659": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6660": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6661": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6662": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6663": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6664": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6666": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6667": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "EQ",
      "path": "12"
    },
    "6668": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A31"
    },
    "6671": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6672": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6674": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6675": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6676": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6677": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6679": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "NOT",
      "path": "12"
    },
    "6680": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "6682": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6683": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "12"
    },
    "6684": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "AND",
      "path": "12"
    },
    "6685": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6686": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "12"
    },
    "6687": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6689": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6690": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6691": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6692": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6693": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6694": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6696": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6698": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6699": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "ADD",
      "path": "12"
    },
    "6700": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "6701": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A36"
    },
    "6704": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6705": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6706": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6708": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6709": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6710": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6711": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        717,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6712": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6713": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6714": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6715": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        669,
        798
      ],
      "op": "POP",
      "path": "12"
    },
    "6716": {
      "branch": 68,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        823
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 49
    },
    "6717": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6718": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6719": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A60"
    },
    "6722": {
      "branch": 68,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        816,
        873
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6723": {
      "op": "POP"
    },
    "6724": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6725": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        839
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6726": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6727": {
      "branch": 69,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6728": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A60"
    },
    "6731": {
      "branch": 69,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6732": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        828,
        872
      ],
      "op": "POP",
      "path": "12"
    },
    "6733": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        859,
        863
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6734": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6735": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6737": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "12"
    },
    "6738": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6739": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6740": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6741": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "ADD",
      "path": "12"
    },
    "6742": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6743": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A60"
    },
    "6746": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6747": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6748": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E28"
    },
    "6751": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "i",
      "offset": [
        848,
        872
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6752": {
      "branch": 70,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        848,
        872
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6753": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A92"
    },
    "6756": {
      "branch": 70,
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6757": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6759": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6766": {
      "op": "SHL"
    },
    "6767": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6768": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6771": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6773": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6774": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "ADD",
      "path": "12"
    },
    "6775": {
      "op": "MSTORE"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6780": {
      "op": "DUP3"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "MSTORE"
    },
    "6783": {
      "op": "PUSH3",
      "value": "0x29AA23"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6789": {
      "op": "SHL"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6792": {
      "op": "DUP3"
    },
    "6793": {
      "op": "ADD"
    },
    "6794": {
      "op": "MSTORE"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6797": {
      "op": "ADD"
    },
    "6798": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x730"
    },
    "6801": {
      "op": "JUMP"
    },
    "6802": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        808,
        881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6803": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6804": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        659,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6805": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6806": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6807": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6808": {
      "fn": "TransferHelper.safeTransferFrom",
      "offset": [
        530,
        888
      ],
      "op": "POP",
      "path": "12"
    },
    "6809": {
      "fn": "TransferHelper.safeTransferFrom",
      "jump": "o",
      "offset": [
        530,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6810": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6811": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6813": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6814": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6821": {
      "op": "SHL"
    },
    "6822": {
      "op": "SUB"
    },
    "6823": {
      "op": "DUP5"
    },
    "6824": {
      "op": "DUP2"
    },
    "6825": {
      "op": "AND"
    },
    "6826": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "6828": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6829": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "12"
    },
    "6830": {
      "op": "MSTORE"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6833": {
      "op": "DUP1"
    },
    "6834": {
      "op": "DUP4"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "DUP6"
    },
    "6837": {
      "op": "SWAP1"
    },
    "6838": {
      "op": "MSTORE"
    },
    "6839": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6840": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6841": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6842": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6843": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SUB",
      "path": "12"
    },
    "6844": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6845": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6846": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "12"
    },
    "6847": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6848": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6851": {
      "op": "SWAP1"
    },
    "6852": {
      "op": "SWAP3"
    },
    "6853": {
      "op": "ADD"
    },
    "6854": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6855": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6856": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6858": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6859": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "ADD",
      "path": "12"
    },
    "6860": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6861": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6868": {
      "op": "SHL"
    },
    "6869": {
      "op": "SUB"
    },
    "6870": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "AND",
      "path": "12"
    },
    "6871": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6878": {
      "op": "SHL"
    },
    "6879": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "OR",
      "path": "12"
    },
    "6880": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6881": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6882": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6883": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6886": {
      "op": "SWAP3"
    },
    "6887": {
      "op": "DUP4"
    },
    "6888": {
      "op": "SWAP3"
    },
    "6889": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6890": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6891": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "AND",
      "path": "12"
    },
    "6892": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2000
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6893": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AF6"
    },
    "6896": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6897": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2001,
        2059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6898": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x217E"
    },
    "6901": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6902": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6903": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6905": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6907": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6908": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6909": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6910": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SUB",
      "path": "12"
    },
    "6911": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6912": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6914": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6915": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "GAS",
      "path": "12"
    },
    "6916": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "CALL",
      "path": "12"
    },
    "6917": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6918": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6919": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6920": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6921": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6922": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6924": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6925": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "EQ",
      "path": "12"
    },
    "6926": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B33"
    },
    "6929": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6930": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6932": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6933": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6934": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6935": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6937": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "NOT",
      "path": "12"
    },
    "6938": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "6940": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6941": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "12"
    },
    "6942": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "AND",
      "path": "12"
    },
    "6943": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6944": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "12"
    },
    "6945": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6947": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6948": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6949": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6950": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6951": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6952": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6954": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6956": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6957": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "ADD",
      "path": "12"
    },
    "6958": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "6959": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B38"
    },
    "6962": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6963": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6964": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6966": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6967": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6968": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6969": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1990,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6970": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6971": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6972": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6973": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1954,
        2060
      ],
      "op": "POP",
      "path": "12"
    },
    "6974": {
      "branch": 71,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2085
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 50
    },
    "6975": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6976": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6977": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B62"
    },
    "6980": {
      "branch": 71,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2078,
        2135
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6983": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2101
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6984": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6985": {
      "branch": 72,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2106
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6986": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B62"
    },
    "6989": {
      "branch": 72,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6990": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2090,
        2134
      ],
      "op": "POP",
      "path": "12"
    },
    "6991": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2121,
        2125
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6992": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6993": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6995": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "12"
    },
    "6996": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6997": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6998": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6999": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "12"
    },
    "7000": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7001": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B62"
    },
    "7004": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7005": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7006": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E28"
    },
    "7009": {
      "fn": "TransferHelper.safeApprove",
      "jump": "i",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7010": {
      "branch": 73,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7011": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B93"
    },
    "7014": {
      "branch": 73,
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7015": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7017": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7026": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7029": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7031": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7032": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "ADD",
      "path": "12"
    },
    "7033": {
      "op": "MSTORE"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7038": {
      "op": "DUP3"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "MSTORE"
    },
    "7041": {
      "op": "PUSH2",
      "value": "0x5341"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7046": {
      "op": "SHL"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7049": {
      "op": "DUP3"
    },
    "7050": {
      "op": "ADD"
    },
    "7051": {
      "op": "MSTORE"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7054": {
      "op": "ADD"
    },
    "7055": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x730"
    },
    "7058": {
      "op": "JUMP"
    },
    "7059": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        2070,
        2142
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7060": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "12"
    },
    "7061": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1944,
        2149
      ],
      "op": "POP",
      "path": "12"
    },
    "7062": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "12"
    },
    "7063": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "12"
    },
    "7064": {
      "fn": "TransferHelper.safeApprove",
      "offset": [
        1842,
        2149
      ],
      "op": "POP",
      "path": "12"
    },
    "7065": {
      "fn": "TransferHelper.safeApprove",
      "jump": "o",
      "offset": [
        1842,
        2149
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7066": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1180,
        1489
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7067": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7069": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7070": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7077": {
      "op": "SHL"
    },
    "7078": {
      "op": "SUB"
    },
    "7079": {
      "op": "DUP5"
    },
    "7080": {
      "op": "DUP2"
    },
    "7081": {
      "op": "AND"
    },
    "7082": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "7084": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7085": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "12"
    },
    "7086": {
      "op": "MSTORE"
    },
    "7087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7089": {
      "op": "DUP1"
    },
    "7090": {
      "op": "DUP4"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "DUP6"
    },
    "7093": {
      "op": "SWAP1"
    },
    "7094": {
      "op": "MSTORE"
    },
    "7095": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7096": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7097": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7098": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7099": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SUB",
      "path": "12"
    },
    "7100": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7101": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7102": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "12"
    },
    "7103": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7104": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7107": {
      "op": "SWAP1"
    },
    "7108": {
      "op": "SWAP3"
    },
    "7109": {
      "op": "ADD"
    },
    "7110": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7111": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7112": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7114": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7115": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "ADD",
      "path": "12"
    },
    "7116": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7117": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7124": {
      "op": "SHL"
    },
    "7125": {
      "op": "SUB"
    },
    "7126": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "AND",
      "path": "12"
    },
    "7127": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7134": {
      "op": "SHL"
    },
    "7135": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "OR",
      "path": "12"
    },
    "7136": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7137": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7138": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7139": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7142": {
      "op": "SWAP3"
    },
    "7143": {
      "op": "DUP4"
    },
    "7144": {
      "op": "SWAP3"
    },
    "7145": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7146": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7147": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "AND",
      "path": "12"
    },
    "7148": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1339
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7149": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BF6"
    },
    "7152": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7153": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1340,
        1399
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7154": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x217E"
    },
    "7157": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7158": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7159": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7161": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7163": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7164": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7165": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7166": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SUB",
      "path": "12"
    },
    "7167": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7168": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7170": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7171": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "GAS",
      "path": "12"
    },
    "7172": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "CALL",
      "path": "12"
    },
    "7173": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7174": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7175": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7176": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7177": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7178": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7180": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7181": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "EQ",
      "path": "12"
    },
    "7182": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C33"
    },
    "7185": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7186": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7188": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7189": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7190": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7191": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "7193": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "NOT",
      "path": "12"
    },
    "7194": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3F"
    },
    "7196": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7197": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "12"
    },
    "7198": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "AND",
      "path": "12"
    },
    "7199": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7200": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "12"
    },
    "7201": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7203": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7204": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7205": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7206": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7207": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "7208": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7210": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7212": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7213": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "ADD",
      "path": "12"
    },
    "7214": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "7215": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C38"
    },
    "7218": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7219": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7220": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "7222": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7223": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7224": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7225": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1329,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7226": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7227": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7228": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7229": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1293,
        1400
      ],
      "op": "POP",
      "path": "12"
    },
    "7230": {
      "branch": 74,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1425
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 51
    },
    "7231": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7232": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7233": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C62"
    },
    "7236": {
      "branch": 74,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1418,
        1475
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7237": {
      "op": "POP"
    },
    "7238": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7239": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1441
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7240": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7241": {
      "branch": 75,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1446
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7242": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C62"
    },
    "7245": {
      "branch": 75,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7246": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1430,
        1474
      ],
      "op": "POP",
      "path": "12"
    },
    "7247": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1461,
        1465
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7248": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7249": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7251": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "12"
    },
    "7252": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7253": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7254": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7255": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "ADD",
      "path": "12"
    },
    "7256": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7257": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C62"
    },
    "7260": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7261": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7262": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E28"
    },
    "7265": {
      "fn": "TransferHelper.safeTransfer",
      "jump": "i",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7266": {
      "branch": 76,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1450,
        1474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7267": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B93"
    },
    "7270": {
      "branch": 76,
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7271": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7273": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7274": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7280": {
      "op": "SHL"
    },
    "7281": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7282": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7285": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7287": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7288": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "ADD",
      "path": "12"
    },
    "7289": {
      "op": "MSTORE"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7294": {
      "op": "DUP3"
    },
    "7295": {
      "op": "ADD"
    },
    "7296": {
      "op": "MSTORE"
    },
    "7297": {
      "op": "PUSH2",
      "value": "0x14D5"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "7302": {
      "op": "SHL"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7305": {
      "op": "DUP3"
    },
    "7306": {
      "op": "ADD"
    },
    "7307": {
      "op": "MSTORE"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "fn": "TransferHelper.safeTransfer",
      "offset": [
        1410,
        1482
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x730"
    },
    "7314": {
      "op": "JUMP"
    },
    "7315": {
      "op": "JUMPDEST"
    },
    "7316": {
      "op": "DUP3"
    },
    "7317": {
      "op": "DUP1"
    },
    "7318": {
      "op": "SLOAD"
    },
    "7319": {
      "op": "PUSH2",
      "value": "0x1C9F"
    },
    "7322": {
      "op": "SWAP1"
    },
    "7323": {
      "op": "PUSH2",
      "value": "0x236B"
    },
    "7326": {
      "jump": "i",
      "op": "JUMP"
    },
    "7327": {
      "op": "JUMPDEST"
    },
    "7328": {
      "op": "SWAP1"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7331": {
      "op": "MSTORE"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7336": {
      "op": "KECCAK256"
    },
    "7337": {
      "op": "SWAP1"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7340": {
      "op": "ADD"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7343": {
      "op": "SWAP1"
    },
    "7344": {
      "op": "DIV"
    },
    "7345": {
      "op": "DUP2"
    },
    "7346": {
      "op": "ADD"
    },
    "7347": {
      "op": "SWAP3"
    },
    "7348": {
      "op": "DUP3"
    },
    "7349": {
      "op": "PUSH2",
      "value": "0x1CC1"
    },
    "7352": {
      "op": "JUMPI"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7355": {
      "op": "DUP6"
    },
    "7356": {
      "op": "SSTORE"
    },
    "7357": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7360": {
      "op": "JUMP"
    },
    "7361": {
      "op": "JUMPDEST"
    },
    "7362": {
      "op": "DUP3"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7365": {
      "op": "LT"
    },
    "7366": {
      "op": "PUSH2",
      "value": "0x1CDA"
    },
    "7369": {
      "op": "JUMPI"
    },
    "7370": {
      "op": "DUP1"
    },
    "7371": {
      "op": "MLOAD"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7374": {
      "op": "NOT"
    },
    "7375": {
      "op": "AND"
    },
    "7376": {
      "op": "DUP4"
    },
    "7377": {
      "op": "DUP1"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "op": "OR"
    },
    "7380": {
      "op": "DUP6"
    },
    "7381": {
      "op": "SSTORE"
    },
    "7382": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7385": {
      "op": "JUMP"
    },
    "7386": {
      "op": "JUMPDEST"
    },
    "7387": {
      "op": "DUP3"
    },
    "7388": {
      "op": "DUP1"
    },
    "7389": {
      "op": "ADD"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "ADD"
    },
    "7393": {
      "op": "DUP6"
    },
    "7394": {
      "op": "SSTORE"
    },
    "7395": {
      "op": "DUP3"
    },
    "7396": {
      "op": "ISZERO"
    },
    "7397": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7400": {
      "op": "JUMPI"
    },
    "7401": {
      "op": "SWAP2"
    },
    "7402": {
      "op": "DUP3"
    },
    "7403": {
      "op": "ADD"
    },
    "7404": {
      "op": "JUMPDEST"
    },
    "7405": {
      "op": "DUP3"
    },
    "7406": {
      "op": "DUP2"
    },
    "7407": {
      "op": "GT"
    },
    "7408": {
      "op": "ISZERO"
    },
    "7409": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7412": {
      "op": "JUMPI"
    },
    "7413": {
      "op": "DUP3"
    },
    "7414": {
      "op": "MLOAD"
    },
    "7415": {
      "op": "DUP3"
    },
    "7416": {
      "op": "SSTORE"
    },
    "7417": {
      "op": "SWAP2"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "SWAP2"
    },
    "7422": {
      "op": "SWAP1"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7425": {
      "op": "ADD"
    },
    "7426": {
      "op": "SWAP1"
    },
    "7427": {
      "op": "PUSH2",
      "value": "0x1CEC"
    },
    "7430": {
      "op": "JUMP"
    },
    "7431": {
      "op": "JUMPDEST"
    },
    "7432": {
      "op": "POP"
    },
    "7433": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "7436": {
      "op": "SWAP3"
    },
    "7437": {
      "op": "SWAP2"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "op": "PUSH2",
      "value": "0x1D17"
    },
    "7442": {
      "jump": "i",
      "op": "JUMP"
    },
    "7443": {
      "op": "JUMPDEST"
    },
    "7444": {
      "op": "POP"
    },
    "7445": {
      "op": "SWAP1"
    },
    "7446": {
      "jump": "o",
      "op": "JUMP"
    },
    "7447": {
      "op": "JUMPDEST"
    },
    "7448": {
      "op": "JUMPDEST"
    },
    "7449": {
      "op": "DUP1"
    },
    "7450": {
      "op": "DUP3"
    },
    "7451": {
      "op": "GT"
    },
    "7452": {
      "op": "ISZERO"
    },
    "7453": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "7456": {
      "op": "JUMPI"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7459": {
      "op": "DUP2"
    },
    "7460": {
      "op": "SSTORE"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7463": {
      "op": "ADD"
    },
    "7464": {
      "op": "PUSH2",
      "value": "0x1D18"
    },
    "7467": {
      "op": "JUMP"
    },
    "7468": {
      "op": "JUMPDEST"
    },
    "7469": {
      "op": "DUP1"
    },
    "7470": {
      "op": "CALLDATALOAD"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7477": {
      "op": "SHL"
    },
    "7478": {
      "op": "SUB"
    },
    "7479": {
      "op": "DUP2"
    },
    "7480": {
      "op": "AND"
    },
    "7481": {
      "op": "DUP2"
    },
    "7482": {
      "op": "EQ"
    },
    "7483": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "7486": {
      "op": "JUMPI"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7489": {
      "op": "DUP1"
    },
    "7490": {
      "op": "REVERT"
    },
    "7491": {
      "op": "JUMPDEST"
    },
    "7492": {
      "op": "SWAP2"
    },
    "7493": {
      "op": "SWAP1"
    },
    "7494": {
      "op": "POP"
    },
    "7495": {
      "jump": "o",
      "op": "JUMP"
    },
    "7496": {
      "op": "JUMPDEST"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7499": {
      "op": "DUP3"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7502": {
      "op": "DUP4"
    },
    "7503": {
      "op": "ADD"
    },
    "7504": {
      "op": "SLT"
    },
    "7505": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7508": {
      "op": "JUMPI"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7511": {
      "op": "DUP1"
    },
    "7512": {
      "op": "REVERT"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "DUP2"
    },
    "7515": {
      "op": "CALLDATALOAD"
    },
    "7516": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7525": {
      "op": "DUP1"
    },
    "7526": {
      "op": "DUP3"
    },
    "7527": {
      "op": "GT"
    },
    "7528": {
      "op": "ISZERO"
    },
    "7529": {
      "op": "PUSH2",
      "value": "0x1D74"
    },
    "7532": {
      "op": "JUMPI"
    },
    "7533": {
      "op": "PUSH2",
      "value": "0x1D74"
    },
    "7536": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "7539": {
      "jump": "i",
      "op": "JUMP"
    },
    "7540": {
      "op": "JUMPDEST"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7543": {
      "op": "MLOAD"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7546": {
      "op": "DUP4"
    },
    "7547": {
      "op": "ADD"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7550": {
      "op": "NOT"
    },
    "7551": {
      "op": "SWAP1"
    },
    "7552": {
      "op": "DUP2"
    },
    "7553": {
      "op": "AND"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7556": {
      "op": "ADD"
    },
    "7557": {
      "op": "AND"
    },
    "7558": {
      "op": "DUP2"
    },
    "7559": {
      "op": "ADD"
    },
    "7560": {
      "op": "SWAP1"
    },
    "7561": {
      "op": "DUP3"
    },
    "7562": {
      "op": "DUP3"
    },
    "7563": {
      "op": "GT"
    },
    "7564": {
      "op": "DUP2"
    },
    "7565": {
      "op": "DUP4"
    },
    "7566": {
      "op": "LT"
    },
    "7567": {
      "op": "OR"
    },
    "7568": {
      "op": "ISZERO"
    },
    "7569": {
      "op": "PUSH2",
      "value": "0x1D9C"
    },
    "7572": {
      "op": "JUMPI"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1D9C"
    },
    "7576": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "7579": {
      "jump": "i",
      "op": "JUMP"
    },
    "7580": {
      "op": "JUMPDEST"
    },
    "7581": {
      "op": "DUP2"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7584": {
      "op": "MSTORE"
    },
    "7585": {
      "op": "DUP4"
    },
    "7586": {
      "op": "DUP2"
    },
    "7587": {
      "op": "MSTORE"
    },
    "7588": {
      "op": "DUP7"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7591": {
      "op": "DUP6"
    },
    "7592": {
      "op": "DUP9"
    },
    "7593": {
      "op": "ADD"
    },
    "7594": {
      "op": "ADD"
    },
    "7595": {
      "op": "GT"
    },
    "7596": {
      "op": "ISZERO"
    },
    "7597": {
      "op": "PUSH2",
      "value": "0x1DB5"
    },
    "7600": {
      "op": "JUMPI"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7603": {
      "op": "DUP1"
    },
    "7604": {
      "op": "REVERT"
    },
    "7605": {
      "op": "JUMPDEST"
    },
    "7606": {
      "op": "DUP4"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7609": {
      "op": "DUP8"
    },
    "7610": {
      "op": "ADD"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7613": {
      "op": "DUP4"
    },
    "7614": {
      "op": "ADD"
    },
    "7615": {
      "op": "CALLDATACOPY"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7620": {
      "op": "DUP6"
    },
    "7621": {
      "op": "DUP4"
    },
    "7622": {
      "op": "ADD"
    },
    "7623": {
      "op": "ADD"
    },
    "7624": {
      "op": "MSTORE"
    },
    "7625": {
      "op": "DUP1"
    },
    "7626": {
      "op": "SWAP5"
    },
    "7627": {
      "op": "POP"
    },
    "7628": {
      "op": "POP"
    },
    "7629": {
      "op": "POP"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "op": "SWAP3"
    },
    "7633": {
      "op": "SWAP2"
    },
    "7634": {
      "op": "POP"
    },
    "7635": {
      "op": "POP"
    },
    "7636": {
      "jump": "o",
      "op": "JUMP"
    },
    "7637": {
      "op": "JUMPDEST"
    },
    "7638": {
      "op": "DUP1"
    },
    "7639": {
      "op": "CALLDATALOAD"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "op": "SUB"
    },
    "7648": {
      "op": "DUP2"
    },
    "7649": {
      "op": "AND"
    },
    "7650": {
      "op": "DUP2"
    },
    "7651": {
      "op": "EQ"
    },
    "7652": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "7655": {
      "op": "JUMPI"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7658": {
      "op": "DUP1"
    },
    "7659": {
      "op": "REVERT"
    },
    "7660": {
      "op": "JUMPDEST"
    },
    "7661": {
      "op": "DUP1"
    },
    "7662": {
      "op": "MLOAD"
    },
    "7663": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7674": {
      "op": "DUP2"
    },
    "7675": {
      "op": "AND"
    },
    "7676": {
      "op": "DUP2"
    },
    "7677": {
      "op": "EQ"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "7681": {
      "op": "JUMPI"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7684": {
      "op": "DUP1"
    },
    "7685": {
      "op": "REVERT"
    },
    "7686": {
      "op": "JUMPDEST"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7691": {
      "op": "DUP3"
    },
    "7692": {
      "op": "DUP5"
    },
    "7693": {
      "op": "SUB"
    },
    "7694": {
      "op": "SLT"
    },
    "7695": {
      "op": "ISZERO"
    },
    "7696": {
      "op": "PUSH2",
      "value": "0x1E18"
    },
    "7699": {
      "op": "JUMPI"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7702": {
      "op": "DUP1"
    },
    "7703": {
      "op": "REVERT"
    },
    "7704": {
      "op": "JUMPDEST"
    },
    "7705": {
      "op": "PUSH2",
      "value": "0x1E21"
    },
    "7708": {
      "op": "DUP3"
    },
    "7709": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7712": {
      "jump": "i",
      "op": "JUMP"
    },
    "7713": {
      "op": "JUMPDEST"
    },
    "7714": {
      "op": "SWAP4"
    },
    "7715": {
      "op": "SWAP3"
    },
    "7716": {
      "op": "POP"
    },
    "7717": {
      "op": "POP"
    },
    "7718": {
      "op": "POP"
    },
    "7719": {
      "jump": "o",
      "op": "JUMP"
    },
    "7720": {
      "op": "JUMPDEST"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7725": {
      "op": "DUP3"
    },
    "7726": {
      "op": "DUP5"
    },
    "7727": {
      "op": "SUB"
    },
    "7728": {
      "op": "SLT"
    },
    "7729": {
      "op": "ISZERO"
    },
    "7730": {
      "op": "PUSH2",
      "value": "0x1E3A"
    },
    "7733": {
      "op": "JUMPI"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7736": {
      "op": "DUP1"
    },
    "7737": {
      "op": "REVERT"
    },
    "7738": {
      "op": "JUMPDEST"
    },
    "7739": {
      "op": "DUP2"
    },
    "7740": {
      "op": "MLOAD"
    },
    "7741": {
      "op": "DUP1"
    },
    "7742": {
      "op": "ISZERO"
    },
    "7743": {
      "op": "ISZERO"
    },
    "7744": {
      "op": "DUP2"
    },
    "7745": {
      "op": "EQ"
    },
    "7746": {
      "op": "PUSH2",
      "value": "0x1E21"
    },
    "7749": {
      "op": "JUMPI"
    },
    "7750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7752": {
      "op": "DUP1"
    },
    "7753": {
      "op": "REVERT"
    },
    "7754": {
      "op": "JUMPDEST"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7757": {
      "op": "DUP1"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7760": {
      "op": "DUP4"
    },
    "7761": {
      "op": "DUP6"
    },
    "7762": {
      "op": "SUB"
    },
    "7763": {
      "op": "SLT"
    },
    "7764": {
      "op": "ISZERO"
    },
    "7765": {
      "op": "PUSH2",
      "value": "0x1E5D"
    },
    "7768": {
      "op": "JUMPI"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7771": {
      "op": "DUP1"
    },
    "7772": {
      "op": "REVERT"
    },
    "7773": {
      "op": "JUMPDEST"
    },
    "7774": {
      "op": "DUP3"
    },
    "7775": {
      "op": "CALLDATALOAD"
    },
    "7776": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7785": {
      "op": "DUP1"
    },
    "7786": {
      "op": "DUP3"
    },
    "7787": {
      "op": "GT"
    },
    "7788": {
      "op": "ISZERO"
    },
    "7789": {
      "op": "PUSH2",
      "value": "0x1E75"
    },
    "7792": {
      "op": "JUMPI"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7795": {
      "op": "DUP1"
    },
    "7796": {
      "op": "REVERT"
    },
    "7797": {
      "op": "JUMPDEST"
    },
    "7798": {
      "op": "DUP2"
    },
    "7799": {
      "op": "DUP6"
    },
    "7800": {
      "op": "ADD"
    },
    "7801": {
      "op": "SWAP2"
    },
    "7802": {
      "op": "POP"
    },
    "7803": {
      "op": "DUP6"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7806": {
      "op": "DUP4"
    },
    "7807": {
      "op": "ADD"
    },
    "7808": {
      "op": "SLT"
    },
    "7809": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "7812": {
      "op": "JUMPI"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7815": {
      "op": "DUP1"
    },
    "7816": {
      "op": "REVERT"
    },
    "7817": {
      "op": "JUMPDEST"
    },
    "7818": {
      "op": "DUP2"
    },
    "7819": {
      "op": "CALLDATALOAD"
    },
    "7820": {
      "op": "DUP2"
    },
    "7821": {
      "op": "DUP2"
    },
    "7822": {
      "op": "GT"
    },
    "7823": {
      "op": "ISZERO"
    },
    "7824": {
      "op": "PUSH2",
      "value": "0x1E98"
    },
    "7827": {
      "op": "JUMPI"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7830": {
      "op": "DUP1"
    },
    "7831": {
      "op": "REVERT"
    },
    "7832": {
      "op": "JUMPDEST"
    },
    "7833": {
      "op": "DUP7"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7836": {
      "op": "DUP3"
    },
    "7837": {
      "op": "DUP6"
    },
    "7838": {
      "op": "ADD"
    },
    "7839": {
      "op": "ADD"
    },
    "7840": {
      "op": "GT"
    },
    "7841": {
      "op": "ISZERO"
    },
    "7842": {
      "op": "PUSH2",
      "value": "0x1EAA"
    },
    "7845": {
      "op": "JUMPI"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7848": {
      "op": "DUP1"
    },
    "7849": {
      "op": "REVERT"
    },
    "7850": {
      "op": "JUMPDEST"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7853": {
      "op": "SWAP3"
    },
    "7854": {
      "op": "SWAP1"
    },
    "7855": {
      "op": "SWAP3"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "op": "SWAP7"
    },
    "7858": {
      "op": "SWAP2"
    },
    "7859": {
      "op": "SWAP6"
    },
    "7860": {
      "op": "POP"
    },
    "7861": {
      "op": "SWAP1"
    },
    "7862": {
      "op": "SWAP4"
    },
    "7863": {
      "op": "POP"
    },
    "7864": {
      "op": "POP"
    },
    "7865": {
      "op": "POP"
    },
    "7866": {
      "op": "POP"
    },
    "7867": {
      "jump": "o",
      "op": "JUMP"
    },
    "7868": {
      "op": "JUMPDEST"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7873": {
      "op": "DUP3"
    },
    "7874": {
      "op": "DUP5"
    },
    "7875": {
      "op": "SUB"
    },
    "7876": {
      "op": "SLT"
    },
    "7877": {
      "op": "ISZERO"
    },
    "7878": {
      "op": "PUSH2",
      "value": "0x1ECE"
    },
    "7881": {
      "op": "JUMPI"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7884": {
      "op": "DUP1"
    },
    "7885": {
      "op": "REVERT"
    },
    "7886": {
      "op": "JUMPDEST"
    },
    "7887": {
      "op": "DUP2"
    },
    "7888": {
      "op": "CALLDATALOAD"
    },
    "7889": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7898": {
      "op": "DUP2"
    },
    "7899": {
      "op": "GT"
    },
    "7900": {
      "op": "ISZERO"
    },
    "7901": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "7904": {
      "op": "JUMPI"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7907": {
      "op": "DUP1"
    },
    "7908": {
      "op": "REVERT"
    },
    "7909": {
      "op": "JUMPDEST"
    },
    "7910": {
      "op": "PUSH2",
      "value": "0x1EF1"
    },
    "7913": {
      "op": "DUP5"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "DUP6"
    },
    "7916": {
      "op": "ADD"
    },
    "7917": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "7920": {
      "jump": "i",
      "op": "JUMP"
    },
    "7921": {
      "op": "JUMPDEST"
    },
    "7922": {
      "op": "SWAP5"
    },
    "7923": {
      "op": "SWAP4"
    },
    "7924": {
      "op": "POP"
    },
    "7925": {
      "op": "POP"
    },
    "7926": {
      "op": "POP"
    },
    "7927": {
      "op": "POP"
    },
    "7928": {
      "jump": "o",
      "op": "JUMP"
    },
    "7929": {
      "op": "JUMPDEST"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7932": {
      "op": "DUP1"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7935": {
      "op": "DUP4"
    },
    "7936": {
      "op": "DUP6"
    },
    "7937": {
      "op": "SUB"
    },
    "7938": {
      "op": "SLT"
    },
    "7939": {
      "op": "ISZERO"
    },
    "7940": {
      "op": "PUSH2",
      "value": "0x1F0C"
    },
    "7943": {
      "op": "JUMPI"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7946": {
      "op": "DUP1"
    },
    "7947": {
      "op": "REVERT"
    },
    "7948": {
      "op": "JUMPDEST"
    },
    "7949": {
      "op": "DUP3"
    },
    "7950": {
      "op": "CALLDATALOAD"
    },
    "7951": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7960": {
      "op": "DUP2"
    },
    "7961": {
      "op": "GT"
    },
    "7962": {
      "op": "ISZERO"
    },
    "7963": {
      "op": "PUSH2",
      "value": "0x1F23"
    },
    "7966": {
      "op": "JUMPI"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7969": {
      "op": "DUP1"
    },
    "7970": {
      "op": "REVERT"
    },
    "7971": {
      "op": "JUMPDEST"
    },
    "7972": {
      "op": "PUSH2",
      "value": "0x1F2F"
    },
    "7975": {
      "op": "DUP6"
    },
    "7976": {
      "op": "DUP3"
    },
    "7977": {
      "op": "DUP7"
    },
    "7978": {
      "op": "ADD"
    },
    "7979": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "7982": {
      "jump": "i",
      "op": "JUMP"
    },
    "7983": {
      "op": "JUMPDEST"
    },
    "7984": {
      "op": "SWAP3"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "PUSH2",
      "value": "0x1F3E"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7992": {
      "op": "DUP5"
    },
    "7993": {
      "op": "ADD"
    },
    "7994": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7997": {
      "jump": "i",
      "op": "JUMP"
    },
    "7998": {
      "op": "JUMPDEST"
    },
    "7999": {
      "op": "SWAP1"
    },
    "8000": {
      "op": "POP"
    },
    "8001": {
      "op": "SWAP3"
    },
    "8002": {
      "op": "POP"
    },
    "8003": {
      "op": "SWAP3"
    },
    "8004": {
      "op": "SWAP1"
    },
    "8005": {
      "op": "POP"
    },
    "8006": {
      "jump": "o",
      "op": "JUMP"
    },
    "8007": {
      "op": "JUMPDEST"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8010": {
      "op": "DUP1"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8015": {
      "op": "DUP5"
    },
    "8016": {
      "op": "DUP7"
    },
    "8017": {
      "op": "SUB"
    },
    "8018": {
      "op": "SLT"
    },
    "8019": {
      "op": "ISZERO"
    },
    "8020": {
      "op": "PUSH2",
      "value": "0x1F5C"
    },
    "8023": {
      "op": "JUMPI"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8026": {
      "op": "DUP1"
    },
    "8027": {
      "op": "REVERT"
    },
    "8028": {
      "op": "JUMPDEST"
    },
    "8029": {
      "op": "DUP4"
    },
    "8030": {
      "op": "CALLDATALOAD"
    },
    "8031": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8040": {
      "op": "DUP2"
    },
    "8041": {
      "op": "GT"
    },
    "8042": {
      "op": "ISZERO"
    },
    "8043": {
      "op": "PUSH2",
      "value": "0x1F73"
    },
    "8046": {
      "op": "JUMPI"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8049": {
      "op": "DUP1"
    },
    "8050": {
      "op": "REVERT"
    },
    "8051": {
      "op": "JUMPDEST"
    },
    "8052": {
      "op": "PUSH2",
      "value": "0x1F7F"
    },
    "8055": {
      "op": "DUP7"
    },
    "8056": {
      "op": "DUP3"
    },
    "8057": {
      "op": "DUP8"
    },
    "8058": {
      "op": "ADD"
    },
    "8059": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "8062": {
      "jump": "i",
      "op": "JUMP"
    },
    "8063": {
      "op": "JUMPDEST"
    },
    "8064": {
      "op": "SWAP4"
    },
    "8065": {
      "op": "POP"
    },
    "8066": {
      "op": "POP"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8069": {
      "op": "DUP5"
    },
    "8070": {
      "op": "ADD"
    },
    "8071": {
      "op": "CALLDATALOAD"
    },
    "8072": {
      "op": "SWAP2"
    },
    "8073": {
      "op": "POP"
    },
    "8074": {
      "op": "PUSH2",
      "value": "0x1F95"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8079": {
      "op": "DUP6"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "8084": {
      "jump": "i",
      "op": "JUMP"
    },
    "8085": {
      "op": "JUMPDEST"
    },
    "8086": {
      "op": "SWAP1"
    },
    "8087": {
      "op": "POP"
    },
    "8088": {
      "op": "SWAP3"
    },
    "8089": {
      "op": "POP"
    },
    "8090": {
      "op": "SWAP3"
    },
    "8091": {
      "op": "POP"
    },
    "8092": {
      "op": "SWAP3"
    },
    "8093": {
      "jump": "o",
      "op": "JUMP"
    },
    "8094": {
      "op": "JUMPDEST"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8097": {
      "op": "DUP1"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8100": {
      "op": "DUP4"
    },
    "8101": {
      "op": "DUP6"
    },
    "8102": {
      "op": "SUB"
    },
    "8103": {
      "op": "SLT"
    },
    "8104": {
      "op": "ISZERO"
    },
    "8105": {
      "op": "PUSH2",
      "value": "0x1FB1"
    },
    "8108": {
      "op": "JUMPI"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8111": {
      "op": "DUP1"
    },
    "8112": {
      "op": "REVERT"
    },
    "8113": {
      "op": "JUMPDEST"
    },
    "8114": {
      "op": "PUSH2",
      "value": "0x1FBA"
    },
    "8117": {
      "op": "DUP4"
    },
    "8118": {
      "op": "PUSH2",
      "value": "0x1DD5"
    },
    "8121": {
      "jump": "i",
      "op": "JUMP"
    },
    "8122": {
      "op": "JUMPDEST"
    },
    "8123": {
      "op": "SWAP2"
    },
    "8124": {
      "op": "POP"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8127": {
      "op": "DUP4"
    },
    "8128": {
      "op": "ADD"
    },
    "8129": {
      "op": "CALLDATALOAD"
    },
    "8130": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8139": {
      "op": "DUP2"
    },
    "8140": {
      "op": "GT"
    },
    "8141": {
      "op": "ISZERO"
    },
    "8142": {
      "op": "PUSH2",
      "value": "0x1FD6"
    },
    "8145": {
      "op": "JUMPI"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8148": {
      "op": "DUP1"
    },
    "8149": {
      "op": "REVERT"
    },
    "8150": {
      "op": "JUMPDEST"
    },
    "8151": {
      "op": "PUSH2",
      "value": "0x1FE2"
    },
    "8154": {
      "op": "DUP6"
    },
    "8155": {
      "op": "DUP3"
    },
    "8156": {
      "op": "DUP7"
    },
    "8157": {
      "op": "ADD"
    },
    "8158": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "8161": {
      "jump": "i",
      "op": "JUMP"
    },
    "8162": {
      "op": "JUMPDEST"
    },
    "8163": {
      "op": "SWAP2"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "op": "POP"
    },
    "8166": {
      "op": "SWAP3"
    },
    "8167": {
      "op": "POP"
    },
    "8168": {
      "op": "SWAP3"
    },
    "8169": {
      "op": "SWAP1"
    },
    "8170": {
      "op": "POP"
    },
    "8171": {
      "jump": "o",
      "op": "JUMP"
    },
    "8172": {
      "op": "JUMPDEST"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8175": {
      "op": "DUP1"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8180": {
      "op": "DUP5"
    },
    "8181": {
      "op": "DUP7"
    },
    "8182": {
      "op": "SUB"
    },
    "8183": {
      "op": "SLT"
    },
    "8184": {
      "op": "ISZERO"
    },
    "8185": {
      "op": "PUSH2",
      "value": "0x2001"
    },
    "8188": {
      "op": "JUMPI"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8191": {
      "op": "DUP1"
    },
    "8192": {
      "op": "REVERT"
    },
    "8193": {
      "op": "JUMPDEST"
    },
    "8194": {
      "op": "PUSH2",
      "value": "0x200A"
    },
    "8197": {
      "op": "DUP5"
    },
    "8198": {
      "op": "PUSH2",
      "value": "0x1DD5"
    },
    "8201": {
      "jump": "i",
      "op": "JUMP"
    },
    "8202": {
      "op": "JUMPDEST"
    },
    "8203": {
      "op": "SWAP3"
    },
    "8204": {
      "op": "POP"
    },
    "8205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8207": {
      "op": "DUP5"
    },
    "8208": {
      "op": "ADD"
    },
    "8209": {
      "op": "CALLDATALOAD"
    },
    "8210": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8219": {
      "op": "DUP2"
    },
    "8220": {
      "op": "GT"
    },
    "8221": {
      "op": "ISZERO"
    },
    "8222": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8225": {
      "op": "JUMPI"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8228": {
      "op": "DUP1"
    },
    "8229": {
      "op": "REVERT"
    },
    "8230": {
      "op": "JUMPDEST"
    },
    "8231": {
      "op": "PUSH2",
      "value": "0x2032"
    },
    "8234": {
      "op": "DUP7"
    },
    "8235": {
      "op": "DUP3"
    },
    "8236": {
      "op": "DUP8"
    },
    "8237": {
      "op": "ADD"
    },
    "8238": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "8241": {
      "jump": "i",
      "op": "JUMP"
    },
    "8242": {
      "op": "JUMPDEST"
    },
    "8243": {
      "op": "SWAP3"
    },
    "8244": {
      "op": "POP"
    },
    "8245": {
      "op": "POP"
    },
    "8246": {
      "op": "PUSH2",
      "value": "0x1F95"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8251": {
      "op": "DUP6"
    },
    "8252": {
      "op": "ADD"
    },
    "8253": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "8256": {
      "jump": "i",
      "op": "JUMP"
    },
    "8257": {
      "op": "JUMPDEST"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8260": {
      "op": "DUP1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8265": {
      "op": "DUP5"
    },
    "8266": {
      "op": "DUP7"
    },
    "8267": {
      "op": "SUB"
    },
    "8268": {
      "op": "SLT"
    },
    "8269": {
      "op": "ISZERO"
    },
    "8270": {
      "op": "PUSH2",
      "value": "0x2056"
    },
    "8273": {
      "op": "JUMPI"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8276": {
      "op": "DUP1"
    },
    "8277": {
      "op": "REVERT"
    },
    "8278": {
      "op": "JUMPDEST"
    },
    "8279": {
      "op": "PUSH2",
      "value": "0x205F"
    },
    "8282": {
      "op": "DUP5"
    },
    "8283": {
      "op": "PUSH2",
      "value": "0x1DD5"
    },
    "8286": {
      "jump": "i",
      "op": "JUMP"
    },
    "8287": {
      "op": "JUMPDEST"
    },
    "8288": {
      "op": "SWAP3"
    },
    "8289": {
      "op": "POP"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8292": {
      "op": "DUP5"
    },
    "8293": {
      "op": "ADD"
    },
    "8294": {
      "op": "CALLDATALOAD"
    },
    "8295": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8304": {
      "op": "DUP2"
    },
    "8305": {
      "op": "GT"
    },
    "8306": {
      "op": "ISZERO"
    },
    "8307": {
      "op": "PUSH2",
      "value": "0x207B"
    },
    "8310": {
      "op": "JUMPI"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8313": {
      "op": "DUP1"
    },
    "8314": {
      "op": "REVERT"
    },
    "8315": {
      "op": "JUMPDEST"
    },
    "8316": {
      "op": "PUSH2",
      "value": "0x2087"
    },
    "8319": {
      "op": "DUP7"
    },
    "8320": {
      "op": "DUP3"
    },
    "8321": {
      "op": "DUP8"
    },
    "8322": {
      "op": "ADD"
    },
    "8323": {
      "op": "PUSH2",
      "value": "0x1D48"
    },
    "8326": {
      "jump": "i",
      "op": "JUMP"
    },
    "8327": {
      "op": "JUMPDEST"
    },
    "8328": {
      "op": "SWAP3"
    },
    "8329": {
      "op": "POP"
    },
    "8330": {
      "op": "POP"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8333": {
      "op": "DUP5"
    },
    "8334": {
      "op": "ADD"
    },
    "8335": {
      "op": "CALLDATALOAD"
    },
    "8336": {
      "op": "SWAP1"
    },
    "8337": {
      "op": "POP"
    },
    "8338": {
      "op": "SWAP3"
    },
    "8339": {
      "op": "POP"
    },
    "8340": {
      "op": "SWAP3"
    },
    "8341": {
      "op": "POP"
    },
    "8342": {
      "op": "SWAP3"
    },
    "8343": {
      "jump": "o",
      "op": "JUMP"
    },
    "8344": {
      "op": "JUMPDEST"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8349": {
      "op": "DUP3"
    },
    "8350": {
      "op": "DUP5"
    },
    "8351": {
      "op": "SUB"
    },
    "8352": {
      "op": "SLT"
    },
    "8353": {
      "op": "ISZERO"
    },
    "8354": {
      "op": "PUSH2",
      "value": "0x20AA"
    },
    "8357": {
      "op": "JUMPI"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8360": {
      "op": "DUP1"
    },
    "8361": {
      "op": "REVERT"
    },
    "8362": {
      "op": "JUMPDEST"
    },
    "8363": {
      "op": "POP"
    },
    "8364": {
      "op": "CALLDATALOAD"
    },
    "8365": {
      "op": "SWAP2"
    },
    "8366": {
      "op": "SWAP1"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "jump": "o",
      "op": "JUMP"
    },
    "8369": {
      "op": "JUMPDEST"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8374": {
      "op": "DUP3"
    },
    "8375": {
      "op": "DUP5"
    },
    "8376": {
      "op": "SUB"
    },
    "8377": {
      "op": "SLT"
    },
    "8378": {
      "op": "ISZERO"
    },
    "8379": {
      "op": "PUSH2",
      "value": "0x20C3"
    },
    "8382": {
      "op": "JUMPI"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8385": {
      "op": "DUP1"
    },
    "8386": {
      "op": "REVERT"
    },
    "8387": {
      "op": "JUMPDEST"
    },
    "8388": {
      "op": "POP"
    },
    "8389": {
      "op": "MLOAD"
    },
    "8390": {
      "op": "SWAP2"
    },
    "8391": {
      "op": "SWAP1"
    },
    "8392": {
      "op": "POP"
    },
    "8393": {
      "jump": "o",
      "op": "JUMP"
    },
    "8394": {
      "op": "JUMPDEST"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8397": {
      "op": "DUP1"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8400": {
      "op": "DUP4"
    },
    "8401": {
      "op": "DUP6"
    },
    "8402": {
      "op": "SUB"
    },
    "8403": {
      "op": "SLT"
    },
    "8404": {
      "op": "ISZERO"
    },
    "8405": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "8408": {
      "op": "JUMPI"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8411": {
      "op": "DUP1"
    },
    "8412": {
      "op": "REVERT"
    },
    "8413": {
      "op": "JUMPDEST"
    },
    "8414": {
      "op": "DUP3"
    },
    "8415": {
      "op": "CALLDATALOAD"
    },
    "8416": {
      "op": "SWAP2"
    },
    "8417": {
      "op": "POP"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8420": {
      "op": "DUP4"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "op": "CALLDATALOAD"
    },
    "8423": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8432": {
      "op": "DUP2"
    },
    "8433": {
      "op": "GT"
    },
    "8434": {
      "op": "ISZERO"
    },
    "8435": {
      "op": "PUSH2",
      "value": "0x1FD6"
    },
    "8438": {
      "op": "JUMPI"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8441": {
      "op": "DUP1"
    },
    "8442": {
      "op": "REVERT"
    },
    "8443": {
      "op": "JUMPDEST"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8446": {
      "op": "DUP1"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8451": {
      "op": "DUP5"
    },
    "8452": {
      "op": "DUP7"
    },
    "8453": {
      "op": "SUB"
    },
    "8454": {
      "op": "SLT"
    },
    "8455": {
      "op": "ISZERO"
    },
    "8456": {
      "op": "PUSH2",
      "value": "0x2110"
    },
    "8459": {
      "op": "JUMPI"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8462": {
      "op": "DUP1"
    },
    "8463": {
      "op": "REVERT"
    },
    "8464": {
      "op": "JUMPDEST"
    },
    "8465": {
      "op": "DUP4"
    },
    "8466": {
      "op": "CALLDATALOAD"
    },
    "8467": {
      "op": "SWAP3"
    },
    "8468": {
      "op": "POP"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8471": {
      "op": "DUP5"
    },
    "8472": {
      "op": "ADD"
    },
    "8473": {
      "op": "CALLDATALOAD"
    },
    "8474": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8483": {
      "op": "DUP2"
    },
    "8484": {
      "op": "GT"
    },
    "8485": {
      "op": "ISZERO"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x207B"
    },
    "8489": {
      "op": "JUMPI"
    },
    "8490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8492": {
      "op": "DUP1"
    },
    "8493": {
      "op": "REVERT"
    },
    "8494": {
      "op": "JUMPDEST"
    },
    "8495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8497": {
      "op": "DUP1"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8500": {
      "op": "DUP1"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8505": {
      "op": "DUP7"
    },
    "8506": {
      "op": "DUP9"
    },
    "8507": {
      "op": "SUB"
    },
    "8508": {
      "op": "SLT"
    },
    "8509": {
      "op": "ISZERO"
    },
    "8510": {
      "op": "PUSH2",
      "value": "0x2146"
    },
    "8513": {
      "op": "JUMPI"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8516": {
      "op": "DUP1"
    },
    "8517": {
      "op": "REVERT"
    },
    "8518": {
      "op": "JUMPDEST"
    },
    "8519": {
      "op": "PUSH2",
      "value": "0x214F"
    },
    "8522": {
      "op": "DUP7"
    },
    "8523": {
      "op": "PUSH2",
      "value": "0x1DEC"
    },
    "8526": {
      "jump": "i",
      "op": "JUMP"
    },
    "8527": {
      "op": "JUMPDEST"
    },
    "8528": {
      "op": "SWAP5"
    },
    "8529": {
      "op": "POP"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8532": {
      "op": "DUP7"
    },
    "8533": {
      "op": "ADD"
    },
    "8534": {
      "op": "MLOAD"
    },
    "8535": {
      "op": "SWAP4"
    },
    "8536": {
      "op": "POP"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8539": {
      "op": "DUP7"
    },
    "8540": {
      "op": "ADD"
    },
    "8541": {
      "op": "MLOAD"
    },
    "8542": {
      "op": "SWAP3"
    },
    "8543": {
      "op": "POP"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8546": {
      "op": "DUP7"
    },
    "8547": {
      "op": "ADD"
    },
    "8548": {
      "op": "MLOAD"
    },
    "8549": {
      "op": "SWAP2"
    },
    "8550": {
      "op": "POP"
    },
    "8551": {
      "op": "PUSH2",
      "value": "0x2172"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8556": {
      "op": "DUP8"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "PUSH2",
      "value": "0x1DEC"
    },
    "8561": {
      "jump": "i",
      "op": "JUMP"
    },
    "8562": {
      "op": "JUMPDEST"
    },
    "8563": {
      "op": "SWAP1"
    },
    "8564": {
      "op": "POP"
    },
    "8565": {
      "op": "SWAP3"
    },
    "8566": {
      "op": "SWAP6"
    },
    "8567": {
      "op": "POP"
    },
    "8568": {
      "op": "SWAP3"
    },
    "8569": {
      "op": "SWAP6"
    },
    "8570": {
      "op": "SWAP1"
    },
    "8571": {
      "op": "SWAP4"
    },
    "8572": {
      "op": "POP"
    },
    "8573": {
      "jump": "o",
      "op": "JUMP"
    },
    "8574": {
      "op": "JUMPDEST"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8577": {
      "op": "DUP3"
    },
    "8578": {
      "op": "MLOAD"
    },
    "8579": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8582": {
      "op": "DUP2"
    },
    "8583": {
      "op": "DUP5"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8586": {
      "op": "DUP8"
    },
    "8587": {
      "op": "ADD"
    },
    "8588": {
      "op": "PUSH2",
      "value": "0x233F"
    },
    "8591": {
      "jump": "i",
      "op": "JUMP"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "SWAP2"
    },
    "8594": {
      "op": "SWAP1"
    },
    "8595": {
      "op": "SWAP2"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "op": "SWAP3"
    },
    "8598": {
      "op": "SWAP2"
    },
    "8599": {
      "op": "POP"
    },
    "8600": {
      "op": "POP"
    },
    "8601": {
      "jump": "o",
      "op": "JUMP"
    },
    "8602": {
      "op": "JUMPDEST"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8605": {
      "op": "DUP1"
    },
    "8606": {
      "op": "DUP4"
    },
    "8607": {
      "op": "SLOAD"
    },
    "8608": {
      "op": "DUP2"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8611": {
      "op": "DUP3"
    },
    "8612": {
      "op": "DUP2"
    },
    "8613": {
      "op": "SHR"
    },
    "8614": {
      "op": "SWAP2"
    },
    "8615": {
      "op": "POP"
    },
    "8616": {
      "op": "DUP1"
    },
    "8617": {
      "op": "DUP4"
    },
    "8618": {
      "op": "AND"
    },
    "8619": {
      "op": "DUP1"
    },
    "8620": {
      "op": "PUSH2",
      "value": "0x21B6"
    },
    "8623": {
      "op": "JUMPI"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8626": {
      "op": "DUP4"
    },
    "8627": {
      "op": "AND"
    },
    "8628": {
      "op": "SWAP3"
    },
    "8629": {
      "op": "POP"
    },
    "8630": {
      "op": "JUMPDEST"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8633": {
      "op": "DUP1"
    },
    "8634": {
      "op": "DUP5"
    },
    "8635": {
      "op": "LT"
    },
    "8636": {
      "op": "DUP3"
    },
    "8637": {
      "op": "EQ"
    },
    "8638": {
      "op": "ISZERO"
    },
    "8639": {
      "op": "PUSH2",
      "value": "0x21D6"
    },
    "8642": {
      "op": "JUMPI"
    },
    "8643": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8650": {
      "op": "SHL"
    },
    "8651": {
      "op": "DUP7"
    },
    "8652": {
      "op": "MSTORE"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8657": {
      "op": "MSTORE"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8660": {
      "op": "DUP7"
    },
    "8661": {
      "op": "REVERT"
    },
    "8662": {
      "op": "JUMPDEST"
    },
    "8663": {
      "op": "DUP2"
    },
    "8664": {
      "op": "DUP1"
    },
    "8665": {
      "op": "ISZERO"
    },
    "8666": {
      "op": "PUSH2",
      "value": "0x21EA"
    },
    "8669": {
      "op": "JUMPI"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8672": {
      "op": "DUP2"
    },
    "8673": {
      "op": "EQ"
    },
    "8674": {
      "op": "PUSH2",
      "value": "0x21FB"
    },
    "8677": {
      "op": "JUMPI"
    },
    "8678": {
      "op": "PUSH2",
      "value": "0x2228"
    },
    "8681": {
      "op": "JUMP"
    },
    "8682": {
      "op": "JUMPDEST"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8685": {
      "op": "NOT"
    },
    "8686": {
      "op": "DUP7"
    },
    "8687": {
      "op": "AND"
    },
    "8688": {
      "op": "DUP10"
    },
    "8689": {
      "op": "MSTORE"
    },
    "8690": {
      "op": "DUP5"
    },
    "8691": {
      "op": "DUP10"
    },
    "8692": {
      "op": "ADD"
    },
    "8693": {
      "op": "SWAP7"
    },
    "8694": {
      "op": "POP"
    },
    "8695": {
      "op": "PUSH2",
      "value": "0x2228"
    },
    "8698": {
      "op": "JUMP"
    },
    "8699": {
      "op": "JUMPDEST"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8702": {
      "op": "DUP11"
    },
    "8703": {
      "op": "DUP2"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8707": {
      "op": "SWAP1"
    },
    "8708": {
      "op": "KECCAK256"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8711": {
      "op": "JUMPDEST"
    },
    "8712": {
      "op": "DUP7"
    },
    "8713": {
      "op": "DUP2"
    },
    "8714": {
      "op": "LT"
    },
    "8715": {
      "op": "ISZERO"
    },
    "8716": {
      "op": "PUSH2",
      "value": "0x2220"
    },
    "8719": {
      "op": "JUMPI"
    },
    "8720": {
      "op": "DUP2"
    },
    "8721": {
      "op": "SLOAD"
    },
    "8722": {
      "op": "DUP12"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "ADD"
    },
    "8725": {
      "op": "MSTORE"
    },
    "8726": {
      "op": "SWAP1"
    },
    "8727": {
      "op": "DUP6"
    },
    "8728": {
      "op": "ADD"
    },
    "8729": {
      "op": "SWAP1"
    },
    "8730": {
      "op": "DUP4"
    },
    "8731": {
      "op": "ADD"
    },
    "8732": {
      "op": "PUSH2",
      "value": "0x2207"
    },
    "8735": {
      "op": "JUMP"
    },
    "8736": {
      "op": "JUMPDEST"
    },
    "8737": {
      "op": "POP"
    },
    "8738": {
      "op": "POP"
    },
    "8739": {
      "op": "DUP5"
    },
    "8740": {
      "op": "DUP10"
    },
    "8741": {
      "op": "ADD"
    },
    "8742": {
      "op": "SWAP7"
    },
    "8743": {
      "op": "POP"
    },
    "8744": {
      "op": "JUMPDEST"
    },
    "8745": {
      "op": "POP"
    },
    "8746": {
      "op": "SWAP5"
    },
    "8747": {
      "op": "SWAP9"
    },
    "8748": {
      "op": "SWAP8"
    },
    "8749": {
      "op": "POP"
    },
    "8750": {
      "op": "POP"
    },
    "8751": {
      "op": "POP"
    },
    "8752": {
      "op": "POP"
    },
    "8753": {
      "op": "POP"
    },
    "8754": {
      "op": "POP"
    },
    "8755": {
      "op": "POP"
    },
    "8756": {
      "op": "POP"
    },
    "8757": {
      "jump": "o",
      "op": "JUMP"
    },
    "8758": {
      "op": "JUMPDEST"
    },
    "8759": {
      "op": "DUP3"
    },
    "8760": {
      "op": "ISZERO"
    },
    "8761": {
      "op": "ISZERO"
    },
    "8762": {
      "op": "DUP2"
    },
    "8763": {
      "op": "MSTORE"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8768": {
      "op": "DUP3"
    },
    "8769": {
      "op": "ADD"
    },
    "8770": {
      "op": "MSTORE"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8773": {
      "op": "DUP3"
    },
    "8774": {
      "op": "MLOAD"
    },
    "8775": {
      "op": "DUP1"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8778": {
      "op": "DUP5"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "op": "MSTORE"
    },
    "8781": {
      "op": "PUSH2",
      "value": "0x225D"
    },
    "8784": {
      "op": "DUP2"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8787": {
      "op": "DUP6"
    },
    "8788": {
      "op": "ADD"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8791": {
      "op": "DUP8"
    },
    "8792": {
      "op": "ADD"
    },
    "8793": {
      "op": "PUSH2",
      "value": "0x233F"
    },
    "8796": {
      "jump": "i",
      "op": "JUMP"
    },
    "8797": {
      "op": "JUMPDEST"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8800": {
      "op": "ADD"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8803": {
      "op": "NOT"
    },
    "8804": {
      "op": "AND"
    },
    "8805": {
      "op": "SWAP2"
    },
    "8806": {
      "op": "SWAP1"
    },
    "8807": {
      "op": "SWAP2"
    },
    "8808": {
      "op": "ADD"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "SWAP4"
    },
    "8813": {
      "op": "SWAP3"
    },
    "8814": {
      "op": "POP"
    },
    "8815": {
      "op": "POP"
    },
    "8816": {
      "op": "POP"
    },
    "8817": {
      "jump": "o",
      "op": "JUMP"
    },
    "8818": {
      "op": "JUMPDEST"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8821": {
      "op": "DUP1"
    },
    "8822": {
      "op": "DUP3"
    },
    "8823": {
      "op": "MSTORE"
    },
    "8824": {
      "op": "DUP2"
    },
    "8825": {
      "op": "DUP2"
    },
    "8826": {
      "op": "ADD"
    },
    "8827": {
      "op": "MSTORE"
    },
    "8828": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8863": {
      "op": "DUP3"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "op": "MSTORE"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "jump": "o",
      "op": "JUMP"
    },
    "8871": {
      "op": "JUMPDEST"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8874": {
      "op": "DUP3"
    },
    "8875": {
      "op": "NOT"
    },
    "8876": {
      "op": "DUP3"
    },
    "8877": {
      "op": "GT"
    },
    "8878": {
      "op": "ISZERO"
    },
    "8879": {
      "op": "PUSH2",
      "value": "0x22BA"
    },
    "8882": {
      "op": "JUMPI"
    },
    "8883": {
      "op": "PUSH2",
      "value": "0x22BA"
    },
    "8886": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "8889": {
      "jump": "i",
      "op": "JUMP"
    },
    "8890": {
      "op": "JUMPDEST"
    },
    "8891": {
      "op": "POP"
    },
    "8892": {
      "op": "ADD"
    },
    "8893": {
      "op": "SWAP1"
    },
    "8894": {
      "jump": "o",
      "op": "JUMP"
    },
    "8895": {
      "op": "JUMPDEST"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8898": {
      "op": "DUP3"
    },
    "8899": {
      "op": "PUSH2",
      "value": "0x22DC"
    },
    "8902": {
      "op": "JUMPI"
    },
    "8903": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8910": {
      "op": "SHL"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8913": {
      "op": "MSTORE"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8918": {
      "op": "MSTORE"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8923": {
      "op": "REVERT"
    },
    "8924": {
      "op": "JUMPDEST"
    },
    "8925": {
      "op": "POP"
    },
    "8926": {
      "op": "DIV"
    },
    "8927": {
      "op": "SWAP1"
    },
    "8928": {
      "jump": "o",
      "op": "JUMP"
    },
    "8929": {
      "op": "JUMPDEST"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8932": {
      "op": "DUP2"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8935": {
      "op": "NOT"
    },
    "8936": {
      "op": "DIV"
    },
    "8937": {
      "op": "DUP4"
    },
    "8938": {
      "op": "GT"
    },
    "8939": {
      "op": "DUP3"
    },
    "8940": {
      "op": "ISZERO"
    },
    "8941": {
      "op": "ISZERO"
    },
    "8942": {
      "op": "AND"
    },
    "8943": {
      "op": "ISZERO"
    },
    "8944": {
      "op": "PUSH2",
      "value": "0x22FB"
    },
    "8947": {
      "op": "JUMPI"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22FB"
    },
    "8951": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "8954": {
      "jump": "i",
      "op": "JUMP"
    },
    "8955": {
      "op": "JUMPDEST"
    },
    "8956": {
      "op": "POP"
    },
    "8957": {
      "op": "MUL"
    },
    "8958": {
      "op": "SWAP1"
    },
    "8959": {
      "jump": "o",
      "op": "JUMP"
    },
    "8960": {
      "op": "JUMPDEST"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8969": {
      "op": "SHL"
    },
    "8970": {
      "op": "SUB"
    },
    "8971": {
      "op": "DUP4"
    },
    "8972": {
      "op": "DUP2"
    },
    "8973": {
      "op": "AND"
    },
    "8974": {
      "op": "SWAP1"
    },
    "8975": {
      "op": "DUP4"
    },
    "8976": {
      "op": "AND"
    },
    "8977": {
      "op": "DUP2"
    },
    "8978": {
      "op": "DUP2"
    },
    "8979": {
      "op": "LT"
    },
    "8980": {
      "op": "ISZERO"
    },
    "8981": {
      "op": "PUSH2",
      "value": "0x2320"
    },
    "8984": {
      "op": "JUMPI"
    },
    "8985": {
      "op": "PUSH2",
      "value": "0x2320"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "8991": {
      "jump": "i",
      "op": "JUMP"
    },
    "8992": {
      "op": "JUMPDEST"
    },
    "8993": {
      "op": "SUB"
    },
    "8994": {
      "op": "SWAP4"
    },
    "8995": {
      "op": "SWAP3"
    },
    "8996": {
      "op": "POP"
    },
    "8997": {
      "op": "POP"
    },
    "8998": {
      "op": "POP"
    },
    "8999": {
      "jump": "o",
      "op": "JUMP"
    },
    "9000": {
      "op": "JUMPDEST"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9003": {
      "op": "DUP3"
    },
    "9004": {
      "op": "DUP3"
    },
    "9005": {
      "op": "LT"
    },
    "9006": {
      "op": "ISZERO"
    },
    "9007": {
      "op": "PUSH2",
      "value": "0x233A"
    },
    "9010": {
      "op": "JUMPI"
    },
    "9011": {
      "op": "PUSH2",
      "value": "0x233A"
    },
    "9014": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "9017": {
      "jump": "i",
      "op": "JUMP"
    },
    "9018": {
      "op": "JUMPDEST"
    },
    "9019": {
      "op": "POP"
    },
    "9020": {
      "op": "SUB"
    },
    "9021": {
      "op": "SWAP1"
    },
    "9022": {
      "jump": "o",
      "op": "JUMP"
    },
    "9023": {
      "op": "JUMPDEST"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9026": {
      "op": "JUMPDEST"
    },
    "9027": {
      "op": "DUP4"
    },
    "9028": {
      "op": "DUP2"
    },
    "9029": {
      "op": "LT"
    },
    "9030": {
      "op": "ISZERO"
    },
    "9031": {
      "op": "PUSH2",
      "value": "0x235A"
    },
    "9034": {
      "op": "JUMPI"
    },
    "9035": {
      "op": "DUP2"
    },
    "9036": {
      "op": "DUP2"
    },
    "9037": {
      "op": "ADD"
    },
    "9038": {
      "op": "MLOAD"
    },
    "9039": {
      "op": "DUP4"
    },
    "9040": {
      "op": "DUP3"
    },
    "9041": {
      "op": "ADD"
    },
    "9042": {
      "op": "MSTORE"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9045": {
      "op": "ADD"
    },
    "9046": {
      "op": "PUSH2",
      "value": "0x2342"
    },
    "9049": {
      "op": "JUMP"
    },
    "9050": {
      "op": "JUMPDEST"
    },
    "9051": {
      "op": "DUP4"
    },
    "9052": {
      "op": "DUP2"
    },
    "9053": {
      "op": "GT"
    },
    "9054": {
      "op": "ISZERO"
    },
    "9055": {
      "op": "PUSH2",
      "value": "0x608"
    },
    "9058": {
      "op": "JUMPI"
    },
    "9059": {
      "op": "POP"
    },
    "9060": {
      "op": "POP"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9063": {
      "op": "SWAP2"
    },
    "9064": {
      "op": "ADD"
    },
    "9065": {
      "op": "MSTORE"
    },
    "9066": {
      "jump": "o",
      "op": "JUMP"
    },
    "9067": {
      "op": "JUMPDEST"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9070": {
      "op": "DUP2"
    },
    "9071": {
      "op": "DUP2"
    },
    "9072": {
      "op": "SHR"
    },
    "9073": {
      "op": "SWAP1"
    },
    "9074": {
      "op": "DUP3"
    },
    "9075": {
      "op": "AND"
    },
    "9076": {
      "op": "DUP1"
    },
    "9077": {
      "op": "PUSH2",
      "value": "0x237F"
    },
    "9080": {
      "op": "JUMPI"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9083": {
      "op": "DUP3"
    },
    "9084": {
      "op": "AND"
    },
    "9085": {
      "op": "SWAP2"
    },
    "9086": {
      "op": "POP"
    },
    "9087": {
      "op": "JUMPDEST"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "LT"
    },
    "9092": {
      "op": "DUP2"
    },
    "9093": {
      "op": "EQ"
    },
    "9094": {
      "op": "ISZERO"
    },
    "9095": {
      "op": "PUSH2",
      "value": "0x23A0"
    },
    "9098": {
      "op": "JUMPI"
    },
    "9099": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9106": {
      "op": "SHL"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9109": {
      "op": "MSTORE"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9114": {
      "op": "MSTORE"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9119": {
      "op": "REVERT"
    },
    "9120": {
      "op": "JUMPDEST"
    },
    "9121": {
      "op": "POP"
    },
    "9122": {
      "op": "SWAP2"
    },
    "9123": {
      "op": "SWAP1"
    },
    "9124": {
      "op": "POP"
    },
    "9125": {
      "jump": "o",
      "op": "JUMP"
    },
    "9126": {
      "op": "JUMPDEST"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9135": {
      "op": "SHL"
    },
    "9136": {
      "op": "SUB"
    },
    "9137": {
      "op": "DUP1"
    },
    "9138": {
      "op": "DUP4"
    },
    "9139": {
      "op": "AND"
    },
    "9140": {
      "op": "DUP2"
    },
    "9141": {
      "op": "DUP2"
    },
    "9142": {
      "op": "EQ"
    },
    "9143": {
      "op": "ISZERO"
    },
    "9144": {
      "op": "PUSH2",
      "value": "0x23C3"
    },
    "9147": {
      "op": "JUMPI"
    },
    "9148": {
      "op": "PUSH2",
      "value": "0x23C3"
    },
    "9151": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "9154": {
      "jump": "i",
      "op": "JUMP"
    },
    "9155": {
      "op": "JUMPDEST"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9158": {
      "op": "ADD"
    },
    "9159": {
      "op": "SWAP4"
    },
    "9160": {
      "op": "SWAP3"
    },
    "9161": {
      "op": "POP"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "jump": "o",
      "op": "JUMP"
    },
    "9165": {
      "op": "JUMPDEST"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9170": {
      "op": "NOT"
    },
    "9171": {
      "op": "DUP3"
    },
    "9172": {
      "op": "EQ"
    },
    "9173": {
      "op": "ISZERO"
    },
    "9174": {
      "op": "PUSH2",
      "value": "0x23E1"
    },
    "9177": {
      "op": "JUMPI"
    },
    "9178": {
      "op": "PUSH2",
      "value": "0x23E1"
    },
    "9181": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "9184": {
      "jump": "i",
      "op": "JUMP"
    },
    "9185": {
      "op": "JUMPDEST"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9189": {
      "op": "ADD"
    },
    "9190": {
      "op": "SWAP1"
    },
    "9191": {
      "jump": "o",
      "op": "JUMP"
    },
    "9192": {
      "op": "JUMPDEST"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9197": {
      "op": "DUP3"
    },
    "9198": {
      "op": "AND"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9201": {
      "op": "DUP2"
    },
    "9202": {
      "op": "EQ"
    },
    "9203": {
      "op": "ISZERO"
    },
    "9204": {
      "op": "PUSH2",
      "value": "0x23FF"
    },
    "9207": {
      "op": "JUMPI"
    },
    "9208": {
      "op": "PUSH2",
      "value": "0x23FF"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x2408"
    },
    "9214": {
      "jump": "i",
      "op": "JUMP"
    },
    "9215": {
      "op": "JUMPDEST"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "ADD"
    },
    "9219": {
      "op": "SWAP3"
    },
    "9220": {
      "op": "SWAP2"
    },
    "9221": {
      "op": "POP"
    },
    "9222": {
      "op": "POP"
    },
    "9223": {
      "jump": "o",
      "op": "JUMP"
    },
    "9224": {
      "op": "JUMPDEST"
    },
    "9225": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9232": {
      "op": "SHL"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9235": {
      "op": "MSTORE"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9240": {
      "op": "MSTORE"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9245": {
      "op": "REVERT"
    },
    "9246": {
      "op": "JUMPDEST"
    },
    "9247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9254": {
      "op": "SHL"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9257": {
      "op": "MSTORE"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9262": {
      "op": "MSTORE"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9267": {
      "op": "REVERT"
    },
    "9268": {
      "op": "JUMPDEST"
    },
    "9269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9276": {
      "op": "SHL"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9279": {
      "op": "MSTORE"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9284": {
      "op": "MSTORE"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9289": {
      "op": "REVERT"
    }
  },
  "sha1": "691fc8148dd2a0f09c42043d318ea29b0bd30faf",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/DataTypes.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/ILendingPool.sol\";\nimport \"../interfaces/TransferHelper.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"../interfaces/IMoonSquares.sol\";\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract DailyRocket is Ownable, KeeperCompatibleInterface {\n\n    //preferably should use the http get to get the actual close price of an asset rather than aggregator\n    //to confirm during testing phase\n\n\n    //IUniswapV2Router01 public sushiRouter = IUniswapV2Router01(0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506);\n\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(\n        address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)\n    ); // mainnet address, for other addresses: https://docs.aave.com/developers/deployed-contracts/deployed-contract-instances \n    ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n    \n    IMoonSquares public moonSquare;\n    ISwapRouter public immutable swapRouter;\n    uint24 public constant poolFee = 3000;\n\n    uint128 dayCount;//Kepps track of the days\n\n    string[] predictableAssets;//all assets that a user can predict\n    address[] assetPriceAggregators;\n\n    mapping(string => bool) public activeAsset;\n\n    mapping(uint256 => mapping(string => int256)) dayAssetClosePrice; //Closing Price per asset \n\n    mapping(uint256 => uint256) dayCloseTime; //Closing Time per asset\n    \n    address Dai = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n\n    uint256 public contractStartTime; //The contract should start at 0000.00 hours\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetTotalAmount;\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetNoOfWinners;\n    \n    mapping(uint256 => mapping(string => int256[])) public dayAssetPrediction;\n\n    mapping(uint256 => mapping(string => address[])) public dayAssetPredictors;\n\n    event Predicted(address indexed _placer, int256 _prediction);\n    \n    struct Charity {\n        bytes8 name;\n        bytes32 link; //sends people to the charity's official site\n    }\n    \n    mapping (address => Charity) public presentCharities;\n\n    address[] public AcceptedTokens;\n\n    mapping(uint128 => mapping(string => address[])) public dailyAssetWinners;\n\n    //user and their prediction\n    mapping(uint128 => mapping(string => mapping(address => int256))) public dayAssetUserPrediction;\n\n    constructor(\n        address _dai,\n        ISwapRouter _swapRouter, //0xE592427A0AEce92De3Edee1F18E0157C05861564\n        IMoonSquares _moonsqr\n        )\n    {\n        AcceptedTokens.push(_dai);\n        swapRouter = _swapRouter;\n        moonSquare = _moonsqr;\n        contractStartTime = block.timestamp;\n        dayCount = 1;\n        dayCloseTime[dayCount] = contractStartTime + 86400 seconds;//adds a day to the start time. to change to an input later.\n    }//instantiate the token addresses upon deployment\n\n\n    function setNewClosingPrice() internal {\n        for (uint256 i = 0; i < assetPriceAggregators.length; i++){\n            dayAssetClosePrice[dayCount][predictableAssets[i]] = getPrice(i);\n        }\n    }\n\n    function addPaymentToken(address _address) public onlyOwner {\n        AcceptedTokens.push(_address);\n    }\n    \n    function addAssetAndAgg(string memory _asset, address _aggregator) public onlyOwner {\n        predictableAssets.push(_asset);\n        assetPriceAggregators.push(_aggregator);\n        activeAsset[_asset] = true;\n    }\n\n    function predictClosePrice(\n        string memory _asset, \n        int _prediction,\n        address token\n    ) public allowedToken(token)\n    {   \n        require(activeAsset[_asset] == true);\n        if (dayCount > 1) {\n            require(getTime() <= dayCloseTime[dayCount -1] + 64800 seconds);//After this time, one cannot\n        }\n        uint256 amount = 10000000000000000000;//the amount we set for the daily close\n        if (token != Dai) {\n            require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n            //IERC20(token).transferFrom(msg.sender, address(this), uint(amount));\n            TransferHelper.safeTransferFrom(token, msg.sender, address(this), amount);\n\n            // Approve the router to spend the specifed `amountInMaximum` of DAI.\n            TransferHelper.safeApprove(token, address(swapRouter), amount);\n            uint amountInMaximum = 15000000000000000000;\n            ISwapRouter.ExactOutputSingleParams memory params =\n                ISwapRouter.ExactOutputSingleParams({\n                    tokenIn: token,\n                    tokenOut: Dai,\n                    fee: poolFee,\n                    recipient: address(this),\n                    deadline: block.timestamp,\n                    amountOut: amount,\n                    amountInMaximum: amountInMaximum,\n                    sqrtPriceLimitX96: 0\n                });\n\n            // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n            uint amountIn = swapRouter.exactOutputSingle(params);\n\n            // For exact output swaps, the amountInMaximum may not have all been spent.\n            // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n            if (amountIn < amountInMaximum) {\n                TransferHelper.safeApprove(Dai, address(swapRouter), 0);\n                TransferHelper.safeTransfer(Dai, msg.sender, amountInMaximum - amountIn);\n            }\n        } else {\n    \n        require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n        IERC20(Dai).transferFrom(msg.sender, address(this), uint(amount));\n        \n        }\n        dayAssetTotalAmount[dayCount][_asset] += amount;\n        //Updates The prediction mapping\n        dayAssetUserPrediction[dayCount][_asset][msg.sender] = _prediction;\n        //adds to the list of predictions\n        dayAssetPrediction[dayCount][_asset].push(_prediction);\n        //add the sender to the predictors array\n        dayAssetPredictors[dayCount][_asset].push(msg.sender);\n\n        emit Predicted(msg.sender, _prediction);\n    }\n\n    function setNumberOfWinners() private {\n        uint128 day = dayCount;\n        for (uint8 i = 0; i < predictableAssets.length; i++) {\n            require(\n                dayAssetPrediction[day][predictableAssets[i]].length\n                ==\n                dayAssetPredictors[day][predictableAssets[i]].length\n            );\n            for (uint8 p = 0; p < dayAssetPrediction[day][predictableAssets[i]].length; p++) {\n                require(dayAssetPrediction[day][predictableAssets[i]][p] == dayAssetClosePrice[day][predictableAssets[i]]);\n                dailyAssetWinners[day][predictableAssets[i]].push(dayAssetPredictors[day][predictableAssets[i]][p]);\n                dayAssetNoOfWinners[day][predictableAssets[i]] +=1;\n\n                moonSquare.addToWinners(dayAssetPredictors[day][predictableAssets[i]][p]);\n            }\n        }\n    }\n\n\n    function getTime() public view returns(uint){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x6135b13325bfC4B00278B4abC5e20bbce2D6580e);\n        (,,,uint answer,) = priceFeed.latestRoundData();\n         return uint(answer);\n    }\n\n    function getPrice(uint256 _aggindex) public view returns(int){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(assetPriceAggregators[_aggindex]);\n        (,int answer,,,) = priceFeed.latestRoundData();\n         return int(answer);\n    }\n\n    modifier allowedToken(address _token) {\n        for(uint i =0; i < predictableAssets.length; i++) {\n            require(AcceptedTokens[i] == _token);\n        }\n        _;\n    }\n\n    function claimWinnings(uint128 _day, string memory _asset) public {\n        //logic to see if the person had a winning prediction\n        require(dayAssetUserPrediction[_day][_asset][msg.sender] == dayAssetClosePrice[_day][_asset]);\n        uint256 winners = dayAssetNoOfWinners[_day][_asset];\n        IERC20(Dai).transfer(\n            msg.sender, \n            ((dayAssetTotalAmount[_day][_asset]) * 90/100)/winners\n        );\n        \n    }\n    \n    function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        if (dayCloseTime[dayCount] + 86400 seconds == getTime()){\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint256(0)));\n        }\n        if (getTime() > dayCloseTime[dayCount -1] + 64800 seconds) {\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint(1)));\n        }\n        performData = checkData;\n        \n    }\n    \n    function performUpkeep(bytes calldata performData) external override {\n         uint256 decodedValue = abi.decode(performData, (uint256));\n        if (decodedValue == 0) {\n            setNewClosingPrice();\n            setNumberOfWinners();\n            dayCount++;\n        }\n        if (decodedValue == 1) {\n            sendToIba();\n        }\n    }\n    \n    //sends non winnings to an interest bearibg account \n    function sendToIba() private onlyOwner {\n        require(getTime() > dayCloseTime[dayCount -1] + 64800 seconds);\n        for (uint128 i = 0; i < predictableAssets.length; i++) {\n            uint amount = ((dayAssetTotalAmount[dayCount][predictableAssets[i]]) * 10/100);\n            //IERC20(Dai).approve(IBA, amount);\n            IERC20(Dai).approve(address(lendingPool), amount);\n            lendingPool.deposit(\n                Dai,\n                uint(amount),\n                address(moonSquare),\n                0\n            );\n        }\n    }\n\n\n    \n}",
  "sourceMap": "591:9392:4:-:0;;;;;914:137;;;-1:-1:-1;;;;;;914:137:4;1002:42;914:137;;;;;;-1:-1:-1;;;1219:25:4;;1002:42;1219:23;;:25;;;;;591:9392;1002:42;1219:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1179:66;;;-1:-1:-1;;;;;1179:66:4;;;;-1:-1:-1;;;;;;1179:66:4;;;;;;1758:56;;;;;;1772:42;1758:56;;;2733:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:1;867:9:0;:23::i;:::-;2900:14:4;:25;;;;;;;;-1:-1:-1;2900:25:4;;;;;;;;-1:-1:-1;;;;;2900:25:4;;;-1:-1:-1;;;;;;2900:25:4;;;;;;;-1:-1:-1;;;;;;2935:24:4;;;;;;;2969:10;:21;;;;;;;;;;;;;;;3020:15;3000:17;:35;;;3045:8;:12;;-1:-1:-1;;;;;;3045:12:4;;;;;;;3092:33;;3112:13;3092:33;:::i;:::-;3080:8;;-1:-1:-1;;;;;3080:8:4;3067:22;;;;:12;:22;;;;;:58;-1:-1:-1;591:9392:4;;-1:-1:-1;;591:9392:4;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:251:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;:::-;254:5;14:251;-1:-1:-1;;;14:251:13:o;270:560::-;399:6;407;415;468:2;456:9;447:7;443:23;439:32;436:52;;;484:1;481;474:12;436:52;516:9;510:16;535:31;560:5;535:31;:::i;:::-;635:2;620:18;;614:25;585:5;;-1:-1:-1;648:33:13;614:25;648:33;:::i;:::-;752:2;737:18;;731:25;700:7;;-1:-1:-1;765:33:13;731:25;765:33;:::i;:::-;817:7;807:17;;;270:560;;;;;:::o;835:225::-;875:3;906:1;902:6;899:1;896:13;893:136;;;951:10;946:3;942:20;939:1;932:31;986:4;983:1;976:15;1014:4;1011:1;1004:15;893:136;-1:-1:-1;1045:9:13;;835:225::o;1065:131::-;-1:-1:-1;;;;;1140:31:13;;1130:42;;1120:70;;1186:1;1183;1176:12;1120:70;1065:131;:::o;:::-;591:9392:4;;;;;;;;;;;;",
  "sourcePath": "contracts/DailyRocket.sol",
  "type": "contract"
}