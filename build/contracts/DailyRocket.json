{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "_moonsqr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_placer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "Predicted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "activeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "addAssetAndAgg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyAssetWinners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetClosePrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetNoOfWinners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dayAssetPredictors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dayAssetTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dayAssetUserPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "prediction",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isWinner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dayCount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_aggindex",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_day",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "checked",
          "type": "address"
        }
      ],
      "name": "isAwinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moonSquare",
      "outputs": [
        {
          "internalType": "contract IMoonSquares",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_asset",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "_prediction",
          "type": "int256"
        }
      ],
      "name": "predictClosePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "predictableAssets",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presentCharities",
      "outputs": [
        {
          "internalType": "bytes8",
          "name": "name",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "link",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "4": "contracts/DailyRocket.sol",
    "6": "interfaces/IERC20.sol",
    "7": "interfaces/ILendingPool.sol",
    "8": "interfaces/ILendingPoolAddressesProvider.sol",
    "9": "interfaces/IMoonSquares.sol"
  },
  "ast": {
    "absolutePath": "contracts/DailyRocket.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        944
      ],
      "Context": [
        1734
      ],
      "DailyRocket": [
        794
      ],
      "DataTypes": [
        1004
      ],
      "IERC20": [
        1812
      ],
      "ILendingPool": [
        1382
      ],
      "ILendingPoolAddressesProvider": [
        1533
      ],
      "IMoonSquares": [
        1541
      ],
      "KeeperCompatibleInterface": [
        963
      ],
      "Ownable": [
        898
      ],
      "TransferHelper": [
        1712
      ]
    },
    "id": 795,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:4"
      },
      {
        "absolutePath": "interfaces/DataTypes.sol",
        "file": "../interfaces/DataTypes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 1005,
        "src": "56:37:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 1534,
        "src": "94:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 1383,
        "src": "152:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/TransferHelper.sol",
        "file": "../interfaces/TransferHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 1713,
        "src": "193:42:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMoonSquares.sol",
        "file": "../interfaces/IMoonSquares.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 1542,
        "src": "236:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 964,
        "src": "278:80:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 945,
        "src": "359:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 795,
        "sourceUnit": 899,
        "src": "495:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 898,
              "src": "575:7:4"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "575:7:4"
          },
          {
            "baseName": {
              "id": 12,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 963,
              "src": "584:25:4"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "584:25:4"
          }
        ],
        "canonicalName": "DailyRocket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 794,
        "linearizedBaseContracts": [
          794,
          963,
          898,
          1734
        ],
        "name": "DailyRocket",
        "nameLocation": "560:11:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "647:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "617:137:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1533",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1533,
                "src": "617:29:4"
              },
              "referencedDeclaration": 1533,
              "src": "617:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1533",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307838383735376632663939313735333837614234433661346233303637633737413639356230333439",
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "705:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x88757f2f99175387aB4C6a4b3067c77A695b0349"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "697:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 17,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "697:7:4",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 20,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "697:51:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 16,
                "name": "ILendingPoolAddressesProvider",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1533,
                "src": "658:29:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1533_$",
                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                }
              },
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "658:96:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1533",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "775:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "762:66:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$1382",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "ILendingPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1382,
                "src": "762:12:4"
              },
              "referencedDeclaration": 1382,
              "src": "762:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1382",
                "typeString": "contract ILendingPool"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [],
                  "expression": {
                    "argumentTypes": [],
                    "expression": {
                      "id": 26,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "802:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1533",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "getLendingPool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1467,
                    "src": "802:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                      "typeString": "function () view external returns (address)"
                    }
                  },
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "802:25:4",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 25,
                "name": "ILendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1382,
                "src": "789:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$1382_$",
                  "typeString": "type(contract ILendingPool)"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "789:39:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$1382",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd2faa68",
            "id": 33,
            "mutability": "mutable",
            "name": "moonSquare",
            "nameLocation": "859:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "839:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMoonSquares_$1541",
              "typeString": "contract IMoonSquares"
            },
            "typeName": {
              "id": 32,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31,
                "name": "IMoonSquares",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1541,
                "src": "839:12:4"
              },
              "referencedDeclaration": 1541,
              "src": "839:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                "typeString": "contract IMoonSquares"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "266e2a56",
            "id": 35,
            "mutability": "mutable",
            "name": "dayCount",
            "nameLocation": "891:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "876:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 34,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "876:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "151bf852",
            "id": 38,
            "mutability": "mutable",
            "name": "predictableAssets",
            "nameLocation": "947:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "931:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "931:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "931:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "assetPriceAggregators",
            "nameLocation": "1016:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1006:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1006:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40,
              "nodeType": "ArrayTypeName",
              "src": "1006:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ec6f4f41",
            "id": 45,
            "mutability": "mutable",
            "name": "activeAsset",
            "nameLocation": "1075:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1044:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1052:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1044:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 43,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1062:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6b01e8d3",
            "id": 51,
            "mutability": "mutable",
            "name": "dayAssetClosePrice",
            "nameLocation": "1146:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1093:71:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256))"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 46,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:45:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256))"
              },
              "valueType": {
                "id": 49,
                "keyType": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1120:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1112:25:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                  "typeString": "mapping(string => int256)"
                },
                "valueType": {
                  "id": 48,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1130:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "dayCloseTime",
            "nameLocation": "1226:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1198:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1206:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1198:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1217:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "Dai",
            "nameLocation": "1282:3:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1274:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1274:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1288:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0c3d5157",
            "id": 60,
            "mutability": "mutable",
            "name": "contractStartTime",
            "nameLocation": "1352:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1337:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "80f79702",
            "id": 66,
            "mutability": "mutable",
            "name": "dayAssetTotalAmount",
            "nameLocation": "1475:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1421:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 61,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1429:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1421:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 64,
                "keyType": {
                  "id": 62,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1448:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1440:26:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 63,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1458:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63168475",
            "id": 72,
            "mutability": "mutable",
            "name": "dayAssetNoOfWinners",
            "nameLocation": "1555:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1501:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(string => uint256))"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1509:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1501:46:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(string => uint256))"
              },
              "valueType": {
                "id": 70,
                "keyType": {
                  "id": 68,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1520:26:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1538:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afa3a617",
            "id": 79,
            "mutability": "mutable",
            "name": "dayAssetPrediction",
            "nameLocation": "1640:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1585:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => int256[]))"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1593:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1585:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => int256[]))"
              },
              "valueType": {
                "id": 77,
                "keyType": {
                  "id": 74,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1612:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1604:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                  "typeString": "mapping(string => int256[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 75,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ArrayTypeName",
                  "src": "1622:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                    "typeString": "int256[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f90f0b7",
            "id": 86,
            "mutability": "mutable",
            "name": "dayAssetPredictors",
            "nameLocation": "1721:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "1665:74:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint256 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1673:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1665:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint256 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 84,
                "keyType": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1692:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1684:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ArrayTypeName",
                  "src": "1702:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 92,
            "name": "Predicted",
            "nameLocation": "1752:9:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_placer",
                  "nameLocation": "1778:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1762:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "1794:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1787:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:45:4"
            },
            "src": "1746:61:4"
          },
          {
            "canonicalName": "DailyRocket.Charity",
            "id": 97,
            "members": [
              {
                "constant": false,
                "id": 94,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1849:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "1842:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 93,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1842:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 96,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "1871:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 97,
                "src": "1863:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 95,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1863:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Charity",
            "nameLocation": "1824:7:4",
            "nodeType": "StructDefinition",
            "scope": 794,
            "src": "1817:111:4",
            "visibility": "public"
          },
          {
            "canonicalName": "DailyRocket.Prediction",
            "id": 104,
            "members": [
              {
                "constant": false,
                "id": 99,
                "mutability": "mutable",
                "name": "prediction",
                "nameLocation": "1968:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "1961:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 98,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1961:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "1996:4:4",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "1988:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 100,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1988:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "isWinner",
                "nameLocation": "2015:8:4",
                "nodeType": "VariableDeclaration",
                "scope": 104,
                "src": "2010:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 102,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2010:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prediction",
            "nameLocation": "1940:10:4",
            "nodeType": "StructDefinition",
            "scope": 794,
            "src": "1933:97:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "126df02b",
            "id": 109,
            "mutability": "mutable",
            "name": "presentCharities",
            "nameLocation": "2076:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "2040:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$97_storage_$",
              "typeString": "mapping(address => struct DailyRocket.Charity)"
            },
            "typeName": {
              "id": 108,
              "keyType": {
                "id": 105,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2049:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2040:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Charity_$97_storage_$",
                "typeString": "mapping(address => struct DailyRocket.Charity)"
              },
              "valueType": {
                "id": 107,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 106,
                  "name": "Charity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 97,
                  "src": "2060:7:4"
                },
                "referencedDeclaration": 97,
                "src": "2060:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Charity_$97_storage_ptr",
                  "typeString": "struct DailyRocket.Charity"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ce529a",
            "id": 116,
            "mutability": "mutable",
            "name": "dailyAssetWinners",
            "nameLocation": "2155:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "2099:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
              "typeString": "mapping(uint128 => mapping(string => address[]))"
            },
            "typeName": {
              "id": 115,
              "keyType": {
                "id": 110,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2107:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2099:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                "typeString": "mapping(uint128 => mapping(string => address[]))"
              },
              "valueType": {
                "id": 114,
                "keyType": {
                  "id": 111,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2126:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2118:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(string => address[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ArrayTypeName",
                  "src": "2136:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2aba3f0",
            "id": 125,
            "mutability": "mutable",
            "name": "dayAssetUserPrediction",
            "nameLocation": "2288:22:4",
            "nodeType": "VariableDeclaration",
            "scope": 794,
            "src": "2211:99:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
              "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
            },
            "typeName": {
              "id": 124,
              "keyType": {
                "id": 117,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2219:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2211:69:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
                "typeString": "mapping(uint128 => mapping(string => mapping(address => struct DailyRocket.Prediction)))"
              },
              "valueType": {
                "id": 123,
                "keyType": {
                  "id": 118,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2238:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "2230:49:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$",
                  "typeString": "mapping(string => mapping(address => struct DailyRocket.Prediction))"
                },
                "valueType": {
                  "id": 122,
                  "keyType": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2248:30:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$",
                    "typeString": "mapping(address => struct DailyRocket.Prediction)"
                  },
                  "valueType": {
                    "id": 121,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120,
                      "name": "Prediction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 104,
                      "src": "2267:10:4"
                    },
                    "referencedDeclaration": 104,
                    "src": "2267:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$104_storage_ptr",
                      "typeString": "struct DailyRocket.Prediction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2398:270:4",
              "statements": [
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "moonSquare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2445:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_moonsqr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "2458:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                        "typeString": "contract IMoonSquares"
                      }
                    },
                    "src": "2445:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:21:4"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "contractStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2476:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 136,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2496:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2496:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2476:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:35:4"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2521:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2532:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2521:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:12:4"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 144,
                        "name": "dayCloseTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "2543:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "id": 145,
                        "name": "dayCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2556:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2543:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 147,
                        "name": "contractStartTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2568:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2588:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "2568:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2543:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2543:58:4"
                }
              ]
            },
            "id": 153,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_moonsqr",
                  "nameLocation": "2375:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2362:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                    "typeString": "contract IMoonSquares"
                  },
                  "typeName": {
                    "id": 127,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 126,
                      "name": "IMoonSquares",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1541,
                      "src": "2362:12:4"
                    },
                    "referencedDeclaration": 1541,
                    "src": "2362:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                      "typeString": "contract IMoonSquares"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:65:4"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:0:4"
            },
            "scope": 794,
            "src": "2317:351:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "2763:163:4",
              "statements": [
                {
                  "body": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "2831:89:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 167,
                                "name": "dayAssetClosePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "2845:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                  "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                }
                              },
                              "id": 172,
                              "indexExpression": {
                                "id": 168,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "2864:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2845:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                "typeString": "mapping(string memory => int256)"
                              }
                            },
                            "id": 173,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 169,
                                "name": "predictableAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "2874:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 171,
                              "indexExpression": {
                                "id": 170,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "2892:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2874:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2845:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 175,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "2907:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 174,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "2898:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256) view returns (int256)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "2845:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "2845:64:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 160,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2793:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 161,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "2797:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2797:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2793:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "initializationExpression": {
                    "assignments": [
                      157
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2786:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2778:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2778:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 159,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2790:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2778:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2827:3:4",
                      "subExpression": {
                        "id": 164,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2827:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 166,
                    "nodeType": "ExpressionStatement",
                    "src": "2827:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2773:147:4"
                }
              ]
            },
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNewClosingPrice",
            "nameLocation": "2733:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2751:2:4"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2763:0:4"
            },
            "scope": 794,
            "src": "2724:202:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "3020:132:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "3053:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 191,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "3030:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3030:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3030:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 200,
                        "name": "_aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "3097:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 197,
                        "name": "assetPriceAggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3070:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3070:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3070:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3070:39:4"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 203,
                        "name": "activeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3119:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 205,
                      "indexExpression": {
                        "id": 204,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "3131:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3119:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3141:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3119:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:26:4"
                }
              ]
            },
            "functionSelector": "81688c64",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 841,
                  "src": "3010:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3010:9:4"
              }
            ],
            "name": "addAssetAndAgg",
            "nameLocation": "2945:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "2974:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2960:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "2990:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2982:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:43:4"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3020:0:4"
            },
            "scope": 794,
            "src": "2936:216:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "3258:976:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 218,
                            "name": "activeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3279:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "id": 219,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "3291:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3279:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3302:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3279:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3271:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "3271:36:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 225,
                      "name": "dayCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3321:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3332:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3321:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "nodeType": "IfStatement",
                  "src": "3317:135:4",
                  "trueBody": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "3335:117:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 229,
                                  "name": "getTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "3357:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3357:9:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 231,
                                    "name": "dayCloseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "3370:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 235,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 232,
                                      "name": "dayCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35,
                                      "src": "3383:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3393:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3383:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3370:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3634383030",
                                  "id": 236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3398:13:4",
                                  "subdenomination": "seconds",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64800_by_1",
                                    "typeString": "int_const 64800"
                                  },
                                  "value": "64800"
                                },
                                "src": "3370:41:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3357:54:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 228,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3349:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3349:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "3349:63:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3469:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "3461:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3461:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "hexValue": "3130303030303030303030303030303030303030",
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3478:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3461:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3582:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3582:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 256,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3602:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DailyRocket_$794",
                                    "typeString": "contract DailyRocket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DailyRocket_$794",
                                    "typeString": "contract DailyRocket"
                                  }
                                ],
                                "id": 255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3594:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 254,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3594:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3594:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 249,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "3567:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 248,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1812,
                                "src": "3560:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1812_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3560:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1812",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1771,
                            "src": "3560:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3560:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 261,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "3617:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3612:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 259,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3612:4:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3612:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3560:64:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3552:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:73:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3660:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3660:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 274,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3680:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DailyRocket_$794",
                              "typeString": "contract DailyRocket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DailyRocket_$794",
                              "typeString": "contract DailyRocket"
                            }
                          ],
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3672:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3672:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 278,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "3692:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3687:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 276,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3687:4:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3687:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 267,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3642:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 266,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "3635:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1812_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3635:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1812",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "3635:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:65:4"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 282,
                          "name": "dayAssetTotalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "3719:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                          }
                        },
                        "id": 285,
                        "indexExpression": {
                          "id": 283,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "3739:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3719:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "id": 284,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "3749:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3719:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "3760:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3719:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:47:4"
                },
                {
                  "expression": {
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 290,
                            "name": "dayAssetUserPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3817:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
                              "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "id": 291,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "3840:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3817:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$",
                            "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                          }
                        },
                        "id": 296,
                        "indexExpression": {
                          "id": 292,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "3850:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3817:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$",
                          "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3858:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3858:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3817:52:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$104_storage",
                        "typeString": "struct DailyRocket.Prediction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 299,
                          "name": "_prediction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "3896:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 300,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "3921:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3921:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3944:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 298,
                        "name": "Prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3872:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prediction_$104_storage_ptr_$",
                          "typeString": "type(struct DailyRocket.Prediction storage pointer)"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3872:87:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prediction_$104_memory_ptr",
                        "typeString": "struct DailyRocket.Prediction memory"
                      }
                    },
                    "src": "3817:142:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prediction_$104_storage",
                      "typeString": "struct DailyRocket.Prediction storage ref"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:142:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4053:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 306,
                            "name": "dayAssetPrediction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "4011:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "id": 307,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4030:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4011:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                            "typeString": "mapping(string memory => int256[] storage ref)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "id": 308,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "4040:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4011:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                          "typeString": "int256[] storage ref"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4011:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_int256_$dyn_storage_ptr_$_t_int256_$returns$__$bound_to$_t_array$_t_int256_$dyn_storage_ptr_$",
                        "typeString": "function (int256[] storage pointer,int256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 321,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4166:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4166:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 315,
                            "name": "dayAssetPredictors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "4124:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                            }
                          },
                          "id": 318,
                          "indexExpression": {
                            "id": 316,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "4143:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4124:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 319,
                        "indexExpression": {
                          "id": 317,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "4153:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4124:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4124:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4124:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:53:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4203:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4203:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 328,
                        "name": "_prediction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4215:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 325,
                      "name": "Predicted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "4193:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$returns$__$",
                        "typeString": "function (address,int256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "EmitStatement",
                  "src": "4188:39:4"
                }
              ]
            },
            "functionSelector": "e4d5d7d6",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictClosePrice",
            "nameLocation": "3167:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3208:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3194:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "_prediction",
                  "nameLocation": "3229:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3225:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3184:62:4"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:4"
            },
            "scope": 794,
            "src": "3158:1076:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "4278:815:4",
              "statements": [
                {
                  "assignments": [
                    336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "4296:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "4288:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4288:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "id": 337,
                    "name": "dayCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "4302:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4288:22:4"
                },
                {
                  "body": {
                    "id": 452,
                    "nodeType": "Block",
                    "src": "4373:714:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 351,
                                      "name": "dayAssetPrediction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79,
                                      "src": "4412:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                      }
                                    },
                                    "id": 353,
                                    "indexExpression": {
                                      "id": 352,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4431:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4412:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                      "typeString": "mapping(string memory => int256[] storage ref)"
                                    }
                                  },
                                  "id": 357,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 354,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4436:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 356,
                                    "indexExpression": {
                                      "id": 355,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "4454:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4436:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4412:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                    "typeString": "int256[] storage ref"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4412:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 359,
                                      "name": "dayAssetPredictors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86,
                                      "src": "4500:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                      }
                                    },
                                    "id": 361,
                                    "indexExpression": {
                                      "id": 360,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4519:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4500:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(string memory => address[] storage ref)"
                                    }
                                  },
                                  "id": 365,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 362,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4524:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 364,
                                    "indexExpression": {
                                      "id": 363,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "4542:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4524:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4500:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4500:52:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4412:140:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 350,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4387:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4387:179:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "4387:179:4"
                      },
                      {
                        "body": {
                          "id": 450,
                          "nodeType": "Block",
                          "src": "4661:416:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 388,
                                            "name": "dayAssetPrediction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 79,
                                            "src": "4687:18:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                              "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                            }
                                          },
                                          "id": 390,
                                          "indexExpression": {
                                            "id": 389,
                                            "name": "day",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 336,
                                            "src": "4706:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4687:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                            "typeString": "mapping(string memory => int256[] storage ref)"
                                          }
                                        },
                                        "id": 394,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 391,
                                            "name": "predictableAssets",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38,
                                            "src": "4711:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                              "typeString": "string storage ref[] storage ref"
                                            }
                                          },
                                          "id": 393,
                                          "indexExpression": {
                                            "id": 392,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 340,
                                            "src": "4729:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4711:20:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4687:45:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                          "typeString": "int256[] storage ref"
                                        }
                                      },
                                      "id": 396,
                                      "indexExpression": {
                                        "id": 395,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "4733:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4687:48:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 397,
                                          "name": "dayAssetClosePrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 51,
                                          "src": "4739:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                          }
                                        },
                                        "id": 399,
                                        "indexExpression": {
                                          "id": 398,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 336,
                                          "src": "4758:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4739:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                          "typeString": "mapping(string memory => int256)"
                                        }
                                      },
                                      "id": 403,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 400,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "4763:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 402,
                                        "indexExpression": {
                                          "id": 401,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 340,
                                          "src": "4781:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4763:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4739:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "4687:97:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 387,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4679:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4679:106:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 406,
                              "nodeType": "ExpressionStatement",
                              "src": "4679:106:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 415,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 86,
                                          "src": "4853:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 417,
                                        "indexExpression": {
                                          "id": 416,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 336,
                                          "src": "4872:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4853:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 421,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 418,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "4877:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 420,
                                        "indexExpression": {
                                          "id": 419,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 340,
                                          "src": "4895:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4877:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4853:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 423,
                                    "indexExpression": {
                                      "id": 422,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 371,
                                      "src": "4899:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4853:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 407,
                                        "name": "dailyAssetWinners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 116,
                                        "src": "4803:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => address[] storage ref))"
                                        }
                                      },
                                      "id": 412,
                                      "indexExpression": {
                                        "id": 408,
                                        "name": "day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 336,
                                        "src": "4821:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4803:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(string memory => address[] storage ref)"
                                      }
                                    },
                                    "id": 413,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 409,
                                        "name": "predictableAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38,
                                        "src": "4826:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                          "typeString": "string storage ref[] storage ref"
                                        }
                                      },
                                      "id": 411,
                                      "indexExpression": {
                                        "id": 410,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 340,
                                        "src": "4844:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4826:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4803:44:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4803:49:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4803:99:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 425,
                              "nodeType": "ExpressionStatement",
                              "src": "4803:99:4"
                            },
                            {
                              "expression": {
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 426,
                                      "name": "dayAssetNoOfWinners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72,
                                      "src": "4920:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                      }
                                    },
                                    "id": 431,
                                    "indexExpression": {
                                      "id": 427,
                                      "name": "day",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 336,
                                      "src": "4940:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4920:24:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                      "typeString": "mapping(string memory => uint256)"
                                    }
                                  },
                                  "id": 432,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 428,
                                      "name": "predictableAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "4945:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
                                    "id": 430,
                                    "indexExpression": {
                                      "id": 429,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "4963:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4945:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4920:46:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4969:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4920:50:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 435,
                              "nodeType": "ExpressionStatement",
                              "src": "4920:50:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 439,
                                          "name": "dayAssetPredictors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 86,
                                          "src": "5013:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => address[] storage ref))"
                                          }
                                        },
                                        "id": 441,
                                        "indexExpression": {
                                          "id": 440,
                                          "name": "day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 336,
                                          "src": "5032:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5013:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(string memory => address[] storage ref)"
                                        }
                                      },
                                      "id": 445,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 442,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "5037:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 444,
                                        "indexExpression": {
                                          "id": 443,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 340,
                                          "src": "5055:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5037:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5013:45:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 447,
                                    "indexExpression": {
                                      "id": 446,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 371,
                                      "src": "5059:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5013:48:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 436,
                                    "name": "moonSquare",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "4989:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                                      "typeString": "contract IMoonSquares"
                                    }
                                  },
                                  "id": 438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addToWinners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1540,
                                  "src": "4989:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4989:73:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 449,
                              "nodeType": "ExpressionStatement",
                              "src": "4989:73:4"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 374,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "4598:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 375,
                                  "name": "dayAssetPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79,
                                  "src": "4602:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(string memory => int256[] storage ref))"
                                  }
                                },
                                "id": 377,
                                "indexExpression": {
                                  "id": 376,
                                  "name": "day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "4621:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4602:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_storage_$",
                                  "typeString": "mapping(string memory => int256[] storage ref)"
                                }
                              },
                              "id": 381,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 378,
                                  "name": "predictableAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "4626:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                    "typeString": "string storage ref[] storage ref"
                                  }
                                },
                                "id": 380,
                                "indexExpression": {
                                  "id": 379,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 340,
                                  "src": "4644:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4626:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4602:45:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_storage",
                                "typeString": "int256[] storage ref"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4602:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4598:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 451,
                        "initializationExpression": {
                          "assignments": [
                            371
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 371,
                              "mutability": "mutable",
                              "name": "p",
                              "nameLocation": "4591:1:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 451,
                              "src": "4585:7:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 370,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "4585:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 373,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4595:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4585:11:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4656:3:4",
                            "subExpression": {
                              "id": 384,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "4656:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 386,
                          "nodeType": "ExpressionStatement",
                          "src": "4656:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "4580:497:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 343,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4338:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 344,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "4342:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4342:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4338:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 453,
                  "initializationExpression": {
                    "assignments": [
                      340
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4331:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "4325:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4325:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 342,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4335:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4325:11:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4368:3:4",
                      "subExpression": {
                        "id": 347,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "4368:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 349,
                    "nodeType": "ExpressionStatement",
                    "src": "4368:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4320:767:4"
                }
              ]
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberOfWinners",
            "nameLocation": "4249:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4267:2:4"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4278:0:4"
            },
            "scope": 794,
            "src": "4240:853:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "5144:203:4",
              "statements": [
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5176:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "5154:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 461,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 460,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 944,
                          "src": "5154:21:4"
                        },
                        "referencedDeclaration": 944,
                        "src": "5154:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 466,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307836313335623133333235626643344230303237384234616243356532306262636532443635383065",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5210:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x6135b13325bfC4B00278B4abC5e20bbce2D6580e"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 463,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "5188:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$944_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5188:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5154:99:4"
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    468,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 468,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "5272:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "5267:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 467,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 472,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 469,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "5283:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 943,
                      "src": "5283:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5283:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5263:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "5333:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5328:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5328:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5328:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 459,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "5321:19:4"
                }
              ]
            },
            "functionSelector": "557ed1ba",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTime",
            "nameLocation": "5109:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5116:2:4"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5139:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5138:6:4"
            },
            "scope": 794,
            "src": "5100:247:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "5414:191:4",
              "statements": [
                {
                  "assignments": [
                    488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5446:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "5424:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 487,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 486,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 944,
                          "src": "5424:21:4"
                        },
                        "referencedDeclaration": 944,
                        "src": "5424:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 490,
                          "name": "assetPriceAggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "5480:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 492,
                        "indexExpression": {
                          "id": 491,
                          "name": "_aggindex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "5502:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5480:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 489,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "5458:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$944_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5458:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5424:89:4"
                },
                {
                  "assignments": [
                    null,
                    496,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 496,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "5529:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "5525:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 495,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "5525:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 500,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 497,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "5542:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$944",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 943,
                      "src": "5542:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5523:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "answer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "5591:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5587:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "5587:3:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5587:11:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "5580:18:4"
                }
              ]
            },
            "functionSelector": "e7572230",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "5362:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "_aggindex",
                  "nameLocation": "5379:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5371:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5370:19:4"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5410:3:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "5410:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5409:5:4"
            },
            "scope": 794,
            "src": "5353:252:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "5677:460:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 515,
                                  "name": "dayAssetUserPrediction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "5757:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
                                    "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                  }
                                },
                                "id": 517,
                                "indexExpression": {
                                  "id": 516,
                                  "name": "_day",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 509,
                                  "src": "5780:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5757:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$",
                                  "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                }
                              },
                              "id": 519,
                              "indexExpression": {
                                "id": 518,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "5786:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5757:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$",
                                "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                              }
                            },
                            "id": 522,
                            "indexExpression": {
                              "expression": {
                                "id": 520,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5794:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5794:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5757:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prediction_$104_storage",
                              "typeString": "struct DailyRocket.Prediction storage ref"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prediction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "5757:59:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 524,
                              "name": "dayAssetClosePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "5820:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                "typeString": "mapping(uint256 => mapping(string memory => int256))"
                              }
                            },
                            "id": 526,
                            "indexExpression": {
                              "id": 525,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "5839:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5820:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                              "typeString": "mapping(string memory => int256)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5845:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5820:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "5757:95:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5749:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5749:104:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "5749:104:4"
                },
                {
                  "assignments": [
                    533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "5871:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "5863:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5863:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 534,
                        "name": "dayAssetNoOfWinners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5881:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                        }
                      },
                      "id": 536,
                      "indexExpression": {
                        "id": 535,
                        "name": "_day",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "5901:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5881:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 538,
                    "indexExpression": {
                      "id": 537,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "5907:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5881:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5863:51:4"
                },
                {
                  "expression": {
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 540,
                              "name": "dayAssetUserPrediction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "5924:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
                                "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                              }
                            },
                            "id": 545,
                            "indexExpression": {
                              "id": 541,
                              "name": "_day",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "5947:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5924:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$",
                              "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                            }
                          },
                          "id": 546,
                          "indexExpression": {
                            "id": 542,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5953:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5924:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$",
                            "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                          }
                        },
                        "id": 547,
                        "indexExpression": {
                          "expression": {
                            "id": 543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5961:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5961:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5924:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prediction_$104_storage",
                          "typeString": "struct DailyRocket.Prediction storage ref"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 103,
                      "src": "5924:57:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5984:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5924:64:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "5924:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 556,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6032:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6032:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 558,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66,
                                          "src": "6059:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 560,
                                        "indexExpression": {
                                          "id": 559,
                                          "name": "_day",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 509,
                                          "src": "6079:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6059:25:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 562,
                                      "indexExpression": {
                                        "id": 561,
                                        "name": "_asset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "6085:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6059:33:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 563,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6058:35:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3930",
                                  "id": 564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6096:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_90_by_1",
                                    "typeString": "int_const 90"
                                  },
                                  "value": "90"
                                },
                                "src": "6058:40:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6099:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6058:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 568,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6057:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 569,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "6104:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6057:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 553,
                            "name": "Dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "6005:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 552,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1812,
                          "src": "5998:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1812_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5998:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1812",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1761,
                      "src": "5998:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5998:123:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "5998:123:4"
                }
              ]
            },
            "functionSelector": "1cc87d88",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWinnings",
            "nameLocation": "5620:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "5642:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "5634:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "5662:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "5648:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:36:4"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5677:0:4"
            },
            "scope": 794,
            "src": "5611:526:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "6270:312:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 585,
                          "name": "dayAssetClosePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "6283:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                            "typeString": "mapping(uint256 => mapping(string memory => int256))"
                          }
                        },
                        "id": 587,
                        "indexExpression": {
                          "id": 586,
                          "name": "_day",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "6302:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6283:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                          "typeString": "mapping(string memory => int256)"
                        }
                      },
                      "id": 589,
                      "indexExpression": {
                        "id": 588,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6308:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6283:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6319:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6283:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "6363:213:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 596,
                                        "name": "dayAssetUserPrediction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 125,
                                        "src": "6402:22:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint128_$_t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$_$",
                                          "typeString": "mapping(uint128 => mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref)))"
                                        }
                                      },
                                      "id": 598,
                                      "indexExpression": {
                                        "id": 597,
                                        "name": "_day",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 576,
                                        "src": "6425:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6402:28:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$_$",
                                        "typeString": "mapping(string memory => mapping(address => struct DailyRocket.Prediction storage ref))"
                                      }
                                    },
                                    "id": 600,
                                    "indexExpression": {
                                      "id": 599,
                                      "name": "_asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 578,
                                      "src": "6431:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6402:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prediction_$104_storage_$",
                                      "typeString": "mapping(address => struct DailyRocket.Prediction storage ref)"
                                    }
                                  },
                                  "id": 602,
                                  "indexExpression": {
                                    "id": 601,
                                    "name": "checked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 580,
                                    "src": "6439:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6402:45:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prediction_$104_storage",
                                    "typeString": "struct DailyRocket.Prediction storage ref"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "prediction",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 99,
                                "src": "6402:56:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 604,
                                    "name": "dayAssetClosePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "6494:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_int256_$_$",
                                      "typeString": "mapping(uint256 => mapping(string memory => int256))"
                                    }
                                  },
                                  "id": 606,
                                  "indexExpression": {
                                    "id": 605,
                                    "name": "_day",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 576,
                                    "src": "6513:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6494:24:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_int256_$",
                                    "typeString": "mapping(string memory => int256)"
                                  }
                                },
                                "id": 608,
                                "indexExpression": {
                                  "id": 607,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "6519:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6494:32:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "6402:124:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 595,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6377:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6377:163:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 611,
                        "nodeType": "ExpressionStatement",
                        "src": "6377:163:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6561:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 584,
                        "id": 613,
                        "nodeType": "Return",
                        "src": "6554:11:4"
                      }
                    ]
                  },
                  "id": 615,
                  "nodeType": "IfStatement",
                  "src": "6280:296:4",
                  "trueBody": {
                    "id": 594,
                    "nodeType": "Block",
                    "src": "6322:36:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6343:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 584,
                        "id": 593,
                        "nodeType": "Return",
                        "src": "6336:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "85afa270",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAwinner",
            "nameLocation": "6152:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_day",
                  "nameLocation": "6179:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6171:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6171:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "6207:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6193:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6193:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "checked",
                  "nameLocation": "6231:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6223:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6223:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6161:83:4"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "6265:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6265:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6264:6:4"
            },
            "scope": 794,
            "src": "6143:439:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              956
            ],
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "6716:381:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 627,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6730:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 629,
                        "indexExpression": {
                          "id": 628,
                          "name": "dayCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "6743:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6730:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3836343030",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6755:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "86400"
                      },
                      "src": "6730:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 632,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "6772:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6772:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6730:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 650,
                  "nodeType": "IfStatement",
                  "src": "6726:157:4",
                  "trueBody": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "6782:101:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 635,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "6796:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6811:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6796:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "6796:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6837:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 644,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6868:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6860:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 642,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6860:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6860:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 640,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6843:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6843:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6843:28:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 647,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6836:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 626,
                        "id": 648,
                        "nodeType": "Return",
                        "src": "6829:43:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 651,
                        "name": "getTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "6896:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6896:9:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 653,
                          "name": "dayCloseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6908:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 657,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 654,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "6921:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6931:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6921:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6908:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3634383030",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6936:13:4",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_64800_by_1",
                          "typeString": "int_const 64800"
                        },
                        "value": "64800"
                      },
                      "src": "6908:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6896:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 676,
                  "nodeType": "IfStatement",
                  "src": "6892:157:4",
                  "trueBody": {
                    "id": 675,
                    "nodeType": "Block",
                    "src": "6951:98:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 661,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "6965:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6980:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6965:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 664,
                        "nodeType": "ExpressionStatement",
                        "src": "6965:19:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7006:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 670,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7034:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7029:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 668,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7029:4:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7029:7:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 666,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7012:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7012:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7012:25:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7005:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "functionReturnParameters": 626,
                        "id": 674,
                        "nodeType": "Return",
                        "src": "6998:40:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 677,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "7058:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 678,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "7072:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "7058:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "7058:23:4"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "6601:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 621,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6653:8:4"
            },
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "6628:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6613:24:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6613:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6612:26:4"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "6676:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6671:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "6703:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6690:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6690:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6670:45:4"
            },
            "scope": 794,
            "src": "6592:505:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              962
            ],
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "7176:278:4",
              "statements": [
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "decodedValue",
                      "nameLocation": "7195:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 720,
                      "src": "7187:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7187:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 692,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "7221:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7235:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7235:7:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 695,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7234:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 690,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7210:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7210:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7210:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7187:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 698,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "7258:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7274:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7258:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 711,
                  "nodeType": "IfStatement",
                  "src": "7254:126:4",
                  "trueBody": {
                    "id": 710,
                    "nodeType": "Block",
                    "src": "7277:103:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 701,
                            "name": "setNewClosingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "7291:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7291:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "7291:20:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 704,
                            "name": "setNumberOfWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "7325:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7325:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 706,
                        "nodeType": "ExpressionStatement",
                        "src": "7325:20:4"
                      },
                      {
                        "expression": {
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7359:10:4",
                          "subExpression": {
                            "id": 707,
                            "name": "dayCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "7359:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "7359:10:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 712,
                      "name": "decodedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "7393:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7409:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7393:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "nodeType": "IfStatement",
                  "src": "7389:59:4",
                  "trueBody": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "7412:36:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 715,
                            "name": "sendToIba",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "7426:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7426:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 717,
                        "nodeType": "ExpressionStatement",
                        "src": "7426:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "7116:13:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7167:8:4"
            },
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "7145:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "7130:26:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7130:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7129:28:4"
            },
            "returnParameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7176:0:4"
            },
            "scope": 794,
            "src": "7107:347:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "7550:511:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 725,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "7568:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7568:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 727,
                              "name": "dayCloseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "7580:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 728,
                                "name": "dayCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "7593:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7603:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7593:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7580:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3634383030",
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7608:13:4",
                            "subdenomination": "seconds",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64800_by_1",
                              "typeString": "int_const 64800"
                            },
                            "value": "64800"
                          },
                          "src": "7580:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7568:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7560:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7560:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "7560:62:4"
                },
                {
                  "body": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "7687:368:4",
                    "statements": [
                      {
                        "assignments": [
                          749
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 749,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7706:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "7701:11:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 748,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7701:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 763,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 750,
                                          "name": "dayAssetTotalAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66,
                                          "src": "7717:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                            "typeString": "mapping(uint256 => mapping(string memory => uint256))"
                                          }
                                        },
                                        "id": 752,
                                        "indexExpression": {
                                          "id": 751,
                                          "name": "dayCount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35,
                                          "src": "7737:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7717:29:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "mapping(string memory => uint256)"
                                        }
                                      },
                                      "id": 756,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 753,
                                          "name": "predictableAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38,
                                          "src": "7747:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 755,
                                        "indexExpression": {
                                          "id": 754,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 738,
                                          "src": "7765:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7747:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7717:51:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 757,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7716:53:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7772:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "7716:58:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7775:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7716:62:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 762,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7715:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7701:78:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 770,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "7869:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1382",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$1382",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7861:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 768,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7861:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7861:20:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 772,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "7883:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 765,
                                  "name": "Dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "7848:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 764,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1812,
                                "src": "7841:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1812_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7841:11:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1812",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1781,
                            "src": "7841:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7841:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 774,
                        "nodeType": "ExpressionStatement",
                        "src": "7841:49:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 778,
                              "name": "Dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "7941:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 781,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "7967:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7962:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 779,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7962:4:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7962:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 785,
                                  "name": "moonSquare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "8000:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                                    "typeString": "contract IMoonSquares"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMoonSquares_$1541",
                                    "typeString": "contract IMoonSquares"
                                  }
                                ],
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7992:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 783,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7992:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7992:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8029:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 775,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "7904:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$1382",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1157,
                            "src": "7904:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7904:140:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "7904:140:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 741,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "7652:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 742,
                        "name": "predictableAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "7656:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7656:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7652:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 791,
                  "initializationExpression": {
                    "assignments": [
                      738
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7645:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "7637:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7637:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 740,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7649:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7637:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7682:3:4",
                      "subExpression": {
                        "id": 745,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "7682:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 747,
                    "nodeType": "ExpressionStatement",
                    "src": "7682:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "7632:423:4"
                }
              ]
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToIba",
            "nameLocation": "7530:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7539:2:4"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7550:0:4"
            },
            "scope": 794,
            "src": "7521:540:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 795,
        "src": "551:7519:4",
        "usedErrors": []
      }
    ],
    "src": "31:8039:4"
  },
  "bytecode": "",
  "bytecodeSha1": "c5ee33a65649454352f0620e1b71bf4675fe9ec1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "DailyRocket",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "61": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.checkUpkeep": {
          "50": [
            6730,
            6781,
            false
          ],
          "51": [
            6896,
            6949,
            false
          ]
        },
        "DailyRocket.claimWinnings": {
          "47": [
            5757,
            5852,
            true
          ]
        },
        "DailyRocket.isAwinner": {
          "52": [
            6283,
            6320,
            false
          ],
          "53": [
            6402,
            6526,
            true
          ]
        },
        "DailyRocket.performUpkeep": {
          "48": [
            7258,
            7275,
            false
          ],
          "49": [
            7393,
            7410,
            false
          ]
        },
        "DailyRocket.predictClosePrice": {
          "54": [
            3279,
            3306,
            true
          ],
          "55": [
            3321,
            3333,
            false
          ],
          "56": [
            3357,
            3411,
            true
          ],
          "57": [
            3560,
            3624,
            true
          ]
        },
        "DailyRocket.sendToIba": {
          "60": [
            7568,
            7621,
            true
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "58": [
            4412,
            4552,
            true
          ],
          "59": [
            4687,
            4784,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "45": [
            2131,
            2148
          ],
          "46": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "30": [
            1926,
            1999
          ],
          "31": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "13": [
            659,
            676
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "DailyRocket.addAssetAndAgg": {
          "15": [
            3030,
            3060
          ],
          "16": [
            3070,
            3109
          ],
          "17": [
            3119,
            3145
          ]
        },
        "DailyRocket.checkUpkeep": {
          "8": [
            6829,
            6872
          ],
          "9": [
            6796,
            6815
          ],
          "10": [
            6965,
            6984
          ],
          "11": [
            6998,
            7038
          ],
          "12": [
            7058,
            7081
          ]
        },
        "DailyRocket.claimWinnings": {
          "1": [
            5749,
            5853
          ],
          "2": [
            5924,
            5988
          ],
          "3": [
            5998,
            6121
          ]
        },
        "DailyRocket.isAwinner": {
          "18": [
            6336,
            6347
          ],
          "19": [
            6377,
            6540
          ],
          "20": [
            6554,
            6565
          ]
        },
        "DailyRocket.performUpkeep": {
          "4": [
            7291,
            7311
          ],
          "5": [
            7325,
            7345
          ],
          "6": [
            7359,
            7369
          ],
          "7": [
            7426,
            7437
          ]
        },
        "DailyRocket.predictClosePrice": {
          "21": [
            3271,
            3307
          ],
          "22": [
            3349,
            3412
          ],
          "23": [
            3552,
            3625
          ],
          "24": [
            3635,
            3700
          ],
          "25": [
            3719,
            3766
          ],
          "26": [
            3817,
            3959
          ],
          "27": [
            4011,
            4065
          ],
          "28": [
            4124,
            4177
          ],
          "29": [
            4188,
            4227
          ]
        },
        "DailyRocket.sendToIba": {
          "41": [
            7560,
            7622
          ],
          "42": [
            7841,
            7890
          ],
          "43": [
            7904,
            8044
          ],
          "44": [
            7682,
            7685
          ]
        },
        "DailyRocket.setNewClosingPrice": {
          "32": [
            2845,
            2909
          ],
          "33": [
            2827,
            2830
          ]
        },
        "DailyRocket.setNumberOfWinners": {
          "34": [
            4387,
            4566
          ],
          "35": [
            4679,
            4785
          ],
          "36": [
            4803,
            4902
          ],
          "37": [
            4920,
            4970
          ],
          "38": [
            4989,
            5062
          ],
          "39": [
            4656,
            4659
          ],
          "40": [
            4368,
            4371
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "IMoonSquares",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063c2aba3f01161007c578063c2aba3f0146103b7578063e4d5d7d614610428578063e75722301461043b578063ec6f4f411461044e578063f2fde38b1461047c578063fd2faa681461048f57600080fd5b8063715018a61461031957806380f797021461032157806381688c641461035d57806385afa270146103705780638da5cb5b14610393578063afa3a617146103a457600080fd5b806347ce529a1161011557806347ce529a1461023a578063557ed1ba146102655780635f90f0b71461026d57806363168475146102805780636b01e8d3146102bc5780636e04ff0d146102f857600080fd5b80630c3d51571461015d578063126df02b14610179578063151bf852146101c75780631cc87d88146101e7578063266e2a56146101fc5780634585e33b14610227575b600080fd5b610166600b5481565b6040519081526020015b60405180910390f35b6101a76101873660046118d3565b6010602052600090815260409020805460019091015460c09190911b9082565b604080516001600160c01b03199093168352602083019190915201610170565b6101da6101d53660046118ee565b6104a2565b604051610170919061195f565b6101fa6101f5366004611a2c565b61054e565b005b60045461020f906001600160801b031681565b6040516001600160801b039091168152602001610170565b6101fa610235366004611a7a565b610759565b61024d610248366004611aec565b6107d3565b6040516001600160a01b039091168152602001610170565b610166610827565b61024d61027b366004611b43565b6108b0565b61016661028e366004611b76565b600d602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6101666102ca366004611b76565b6008602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b61030b610306366004611a7a565b6108e7565b604051610170929190611ba7565b6101fa6109f7565b61016661032f366004611b76565b600c602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6101fa61036b366004611bca565b610a36565b61038361037e366004611c18565b610b25565b6040519015158152602001610170565b6000546001600160a01b031661024d565b6101666103b2366004611b43565b610c0d565b61040b6103c5366004611c18565b6012602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610170565b6101fa610436366004611c76565b610c5a565b6101666104493660046118ee565b610fac565b61038361045c366004611cbb565b805160208183018101805160078252928201919093012091525460ff1681565b6101fa61048a3660046118d3565b611053565b60035461024d906001600160a01b031681565b600581815481106104b257600080fd5b9060005260206000200160009150905080546104cd90611cf0565b80601f01602080910402602001604051908101604052809291908181526020018280546104f990611cf0565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b505050505081565b6001600160801b038216600090815260086020526040908190209051610575908390611d2b565b90815260200160405180910390205460126000846001600160801b03166001600160801b03168152602001908152602001600020826040516105b79190611d2b565b90815260408051602092819003830190203360009081529252902054146105dd57600080fd5b6001600160801b0382166000908152600d60205260408082209051610603908490611d2b565b9081526020016040518091039020549050600160126000856001600160801b03166001600160801b03168152602001908152602001600020836040516106499190611d2b565b9081526040805160209281900383018120336000818152918552838220600201805460ff191696151596909617909555600a546001600160801b0389168252600c909452919091206001600160a01b039092169263a9059cbb92909185916064916106b5908990611d2b565b908152602001604051809103902054605a6106d09190611d5d565b6106da9190611d7c565b6106e49190611d7c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611d9e565b50505050565b6000610767828401846118ee565b9050806107bd576107766110ee565b61077e61116b565b600480546001600160801b031690600061079783611dc0565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550505b80600114156107ce576107ce6115e6565b505050565b6011602090815260008481526040902083518085018301805192815290830192850192909220915280548290811061080a57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b600080736135b13325bfc4b00278b4abc5e20bbce2d6580e90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611e01565b509695505050505050565b600f602090815260008481526040902083518085018301805192815290830192850192909220915280548290811061080a57600080fd5b600060606108f3610827565b6004546001600160801b031660009081526009602052604090205461091b9062015180611e51565b141561094c576040805160006020820152600193508391015b604051602081830303815290604052915091506109f0565b60045460099060009061096a906001906001600160801b0316611e69565b6001600160801b031681526020019081526020016000205461fd2061098f9190611e51565b610997610827565b11156109b6576001915060018060405160200161093491815260200190565b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b9250929050565b6000546001600160a01b03163314610a2a5760405162461bcd60e51b8152600401610a2190611e91565b60405180910390fd5b610a3460006117ce565b565b6000546001600160a01b03163314610a605760405162461bcd60e51b8152600401610a2190611e91565b600580546001810182556000919091528251610aa3917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190602085019061181e565b5060068054600180820183556000929092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038416179055604051600790610b01908590611d2b565b908152604051908190036020019020805491151560ff199092169190911790555050565b6001600160801b0383166000908152600860205260408082209051610b4b908590611d2b565b90815260200160405180910390205460001415610b6a57506001610c06565b6001600160801b038416600090815260086020526040908190209051610b91908590611d2b565b90815260200160405180910390205460126000866001600160801b03166001600160801b0316815260200190815260200160002084604051610bd39190611d2b565b90815260408051602092819003830190206001600160a01b0386166000908152925290205414610c0257600080fd5b5060015b9392505050565b600e6020908152600084815260409020835180850183018051928152908301928501929092209152805482908110610c4457600080fd5b9060005260206000200160009250925050505481565b600782604051610c6a9190611d2b565b9081526040519081900360200190205460ff161515600114610c8b57600080fd5b60045460016001600160801b039091161115610cf757600454600990600090610cbf906001906001600160801b0316611e69565b6001600160801b031681526020019081526020016000205461fd20610ce49190611e51565b610cec610827565b1115610cf757600080fd5b600a54604051636eb1769f60e11b8152336004820152306024820152678ac7230489e800009182916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190611ec6565b1015610d8057600080fd5b600a546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190611d9e565b506004546001600160801b03166000908152600c6020526040908190209051829190610e28908690611d2b565b90815260200160405180910390206000828254610e459190611e51565b925050819055506040518060600160405280838152602001610e65610827565b8152600060209182018190526004546001600160801b0316815260129091526040908190209051610e97908690611d2b565b908152604080516020928190038301812033600090815290845282812085518155858501516001820155948301516002909501805460ff1916951515959095179094556004546001600160801b03168452600e90925290912090610efc908590611d2b565b90815260408051918290036020908101832080546001810182556000918252828220018690556004546001600160801b03168152600f9091522090610f42908590611d2b565b908152604051602091819003820181208054600181018255600091825290839020018054336001600160a01b03199091168117909155848252917f10fe2ed8f3daa306f14de54294a550f0f7dec5e7138f0cf277eac43bc95aab6f910160405180910390a2505050565b60008060068381548110610fc257610fc2611edf565b9060005260206000200160009054906101000a90046001600160a01b031690506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190611e01565b5091979650505050505050565b6000546001600160a01b0316331461107d5760405162461bcd60e51b8152600401610a2190611e91565b6001600160a01b0381166110e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a21565b6110eb816117ce565b50565b60005b6006548110156110eb5761110481610fac565b6004546001600160801b03166000908152600860205260409020600580548490811061113257611132611edf565b906000526020600020016040516111499190611ef5565b908152604051908190036020019020558061116381611f91565b9150506110f1565b6004546001600160801b031660005b60055460ff821610156115e2576001600160801b0382166000908152600f602052604090206005805460ff84169081106111b6576111b6611edf565b906000526020600020016040516111cd9190611ef5565b908152602001604051809103902080549050600e6000846001600160801b0316815260200190815260200160002060058360ff168154811061121157611211611edf565b906000526020600020016040516112289190611ef5565b908152604051908190036020019020541461124257600080fd5b60005b6001600160801b0383166000908152600e602052604090206005805460ff851690811061127457611274611edf565b9060005260206000200160405161128b9190611ef5565b9081526040519081900360200190205460ff821610156115cf576001600160801b03831660009081526008602052604090206005805460ff85169081106112d4576112d4611edf565b906000526020600020016040516112eb9190611ef5565b908152602001604051809103902054600e6000856001600160801b0316815260200190815260200160002060058460ff168154811061132c5761132c611edf565b906000526020600020016040516113439190611ef5565b90815260200160405180910390208260ff168154811061136557611365611edf565b90600052602060002001541461137a57600080fd5b6001600160801b03831660009081526011602052604090206005805460ff85169081106113a9576113a9611edf565b906000526020600020016040516113c09190611ef5565b9081526020016040518091039020600f6000856001600160801b0316815260200190815260200160002060058460ff168154811061140057611400611edf565b906000526020600020016040516114179190611ef5565b90815260200160405180910390208260ff168154811061143957611439611edf565b60009182526020808320909101548354600181810186559484528284200180546001600160a01b0319166001600160a01b039092169190911790556001600160801b0386168252600d9052604090206005805460ff861690811061149f5761149f611edf565b906000526020600020016040516114b69190611ef5565b908152602001604051809103902060008282546114d39190611e51565b90915550506003546001600160801b0384166000908152600f60205260409020600580546001600160a01b0390931692638ebfa8ae92919060ff871690811061151e5761151e611edf565b906000526020600020016040516115359190611ef5565b90815260200160405180910390208360ff168154811061155757611557611edf565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602401600060405180830381600087803b1580156115a457600080fd5b505af11580156115b8573d6000803e3d6000fd5b5050505080806115c790611fac565b915050611245565b50806115da81611fac565b91505061117a565b5050565b600454600990600090611604906001906001600160801b0316611e69565b6001600160801b031681526020019081526020016000205461fd206116299190611e51565b611631610827565b1161163b57600080fd5b60005b6005546001600160801b03821610156110eb576004546001600160801b039081166000908152600c6020526040812060058054929360649390861690811061168857611688611edf565b9060005260206000200160405161169f9190611ef5565b908152602001604051809103902054600a6116ba9190611d5d565b6116c49190611d7c565b600a5460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af115801561171b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173f9190611d9e565b50600254600a5460035460405163e8eda9df60e01b81526001600160a01b0392831660048201526024810185905290821660448201526000606482015291169063e8eda9df90608401600060405180830381600087803b1580156117a257600080fd5b505af11580156117b6573d6000803e3d6000fd5b505050505080806117c690611dc0565b91505061163e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461182a90611cf0565b90600052602060002090601f01602090048101928261184c5760008555611892565b82601f1061186557805160ff1916838001178555611892565b82800160010185558215611892579182015b82811115611892578251825591602001919060010190611877565b5061189e9291506118a2565b5090565b5b8082111561189e57600081556001016118a3565b80356001600160a01b03811681146118ce57600080fd5b919050565b6000602082840312156118e557600080fd5b610c06826118b7565b60006020828403121561190057600080fd5b5035919050565b60005b8381101561192257818101518382015260200161190a565b838111156107535750506000910152565b6000815180845261194b816020860160208601611907565b601f01601f19169290920160200192915050565b602081526000610c066020830184611933565b80356001600160801b03811681146118ce57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119b057600080fd5b813567ffffffffffffffff808211156119cb576119cb611989565b604051601f8301601f19908116603f011681019082821181831017156119f3576119f3611989565b81604052838152866020858801011115611a0c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611a3f57600080fd5b611a4883611972565b9150602083013567ffffffffffffffff811115611a6457600080fd5b611a708582860161199f565b9150509250929050565b60008060208385031215611a8d57600080fd5b823567ffffffffffffffff80821115611aa557600080fd5b818501915085601f830112611ab957600080fd5b813581811115611ac857600080fd5b866020828501011115611ada57600080fd5b60209290920196919550909350505050565b600080600060608486031215611b0157600080fd5b611b0a84611972565b9250602084013567ffffffffffffffff811115611b2657600080fd5b611b328682870161199f565b925050604084013590509250925092565b600080600060608486031215611b5857600080fd5b83359250602084013567ffffffffffffffff811115611b2657600080fd5b60008060408385031215611b8957600080fd5b82359150602083013567ffffffffffffffff811115611a6457600080fd5b8215158152604060208201526000611bc26040830184611933565b949350505050565b60008060408385031215611bdd57600080fd5b823567ffffffffffffffff811115611bf457600080fd5b611c008582860161199f565b925050611c0f602084016118b7565b90509250929050565b600080600060608486031215611c2d57600080fd5b611c3684611972565b9250602084013567ffffffffffffffff811115611c5257600080fd5b611c5e8682870161199f565b925050611c6d604085016118b7565b90509250925092565b60008060408385031215611c8957600080fd5b823567ffffffffffffffff811115611ca057600080fd5b611cac8582860161199f565b95602094909401359450505050565b600060208284031215611ccd57600080fd5b813567ffffffffffffffff811115611ce457600080fd5b611bc28482850161199f565b600181811c90821680611d0457607f821691505b60208210811415611d2557634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611d3d818460208701611907565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d7757611d77611d47565b500290565b600082611d9957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611db057600080fd5b81518015158114610c0657600080fd5b60006001600160801b0380831681811415611ddd57611ddd611d47565b6001019392505050565b805169ffffffffffffffffffff811681146118ce57600080fd5b600080600080600060a08688031215611e1957600080fd5b611e2286611de7565b9450602086015193506040860151925060608601519150611e4560808701611de7565b90509295509295909350565b60008219821115611e6457611e64611d47565b500190565b60006001600160801b0383811690831681811015611e8957611e89611d47565b039392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611ed857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c915080831680611f1157607f831692505b6020808410821415611f3157634e487b7160e01b86526022600452602486fd5b818015611f455760018114611f5657611f83565b60ff19861689528489019650611f83565b60008a81526020902060005b86811015611f7b5781548b820152908501908301611f62565b505084890196505b509498975050505050505050565b6000600019821415611fa557611fa5611d47565b5060010190565b600060ff821660ff811415611fc357611fc3611d47565b6001019291505056fea2646970667358221220b63deaa29cccbe07224aef91f695e0cb84b589f37f86c132547a8773ac30357064736f6c634300080b0033",
  "deployedSourceMap": "551:7519:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:32;;;;;;;;;160:25:11;;;148:2;133:18;1337:32:4;;;;;;;;2040:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;755:41:11;;;737:60;;828:2;813:18;;806:34;;;;710:18;2040:52:4;565:281:11;931:33:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5611:526::-;;;;;;:::i;:::-;;:::i;:::-;;876:23;;;;;-1:-1:-1;;;;;876:23:4;;;;;;-1:-1:-1;;;;;3401:47:11;;;3383:66;;3371:2;3356:18;876:23:4;3237:218:11;7107:347:4;;;;;;:::i;:::-;;:::i;2099:73::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4689:32:11;;;4671:51;;4659:2;4644:18;2099:73:4;4525:203:11;5100:247:4;;;:::i;1665:74::-;;;;;;:::i;:::-;;:::i;1501:73::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6592:505;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;:::i;1421:73:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:216;;;;;;:::i;:::-;;:::i;6143:439::-;;;;;;:::i;:::-;;:::i;:::-;;;7116:14:11;;7109:22;7091:41;;7079:2;7064:18;6143:439:4;6951:187:11;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1585:73:4;;;;;;:::i;:::-;;:::i;2211:99::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7337:25:11;;;7393:2;7378:18;;7371:34;;;;7448:14;7441:22;7421:18;;;7414:50;7325:2;7310:18;2211:99:4;7143:327:11;3158:1076:4;;;;;;:::i;:::-;;:::i;5353:252::-;;;;;;:::i;:::-;;:::i;1044:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:189:0;;;;;;:::i;:::-;;:::i;839:30:4:-;;;;;-1:-1:-1;;;;;839:30:4;;;931:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5611:526::-;-1:-1:-1;;;;;5820:24:4;;;;;;:18;:24;;;;;;;:32;;;;5845:6;;5820:32;:::i;:::-;;;;;;;;;;;;;;5757:22;:28;5780:4;-1:-1:-1;;;;;5757:28:4;-1:-1:-1;;;;;5757:28:4;;;;;;;;;;;;5786:6;5757:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5794:10;5757:48;;;;;;;;:59;:95;5749:104;;;;;;-1:-1:-1;;;;;5881:25:4;;5863:15;5881:25;;;:19;:25;;;;;;:33;;;;5907:6;;5881:33;:::i;:::-;;;;;;;;;;;;;;5863:51;;5984:4;5924:22;:28;5947:4;-1:-1:-1;;;;;5924:28:4;-1:-1:-1;;;;;5924:28:4;;;;;;;;;;;;5953:6;5924:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5961:10;5924:48;;;;;;;;;;:57;;:64;;-1:-1:-1;;5924:64:4;;;;;;;;;;;6005:3;;-1:-1:-1;;;;;6059:25:4;;;;:19;:25;;;;;;;-1:-1:-1;;;;;6005:3:4;;;;5998:20;;5961:10;;6104:7;;6099:3;;6059:33;;6085:6;;6059:33;:::i;:::-;;;;;;;;;;;;;;6096:2;6058:40;;;;:::i;:::-;:44;;;;:::i;:::-;6057:54;;;;:::i;:::-;5998:123;;-1:-1:-1;;;;;;5998:123:4;;;;;;;-1:-1:-1;;;;;9810:32:11;;;5998:123:4;;;9792:51:11;9859:18;;;9852:34;9765:18;;5998:123:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5677:460;5611:526;;:::o;7107:347::-;7187:20;7210:34;;;;7221:11;7210:34;:::i;:::-;7187:57;-1:-1:-1;7258:17:4;7254:126;;7291:20;:18;:20::i;:::-;7325;:18;:20::i;:::-;7359:8;:10;;-1:-1:-1;;;;;7359:10:4;;:8;:10;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7359:10:4;;;;;-1:-1:-1;;;;;7359:10:4;;;;;;;7254:126;7393:12;7409:1;7393:17;7389:59;;;7426:11;:9;:11::i;:::-;7176:278;7107:347;;:::o;2099:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:73:4;;-1:-1:-1;2099:73:4;;-1:-1:-1;;2099:73:4:o;5100:247::-;5139:4;5154:31;5210:42;5154:99;;5267:11;5283:9;-1:-1:-1;;;;;5283:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5263:47:4;5100:247;-1:-1:-1;;;;;;5100:247:4:o;1665:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6592:505;6671:17;6690:24;6772:9;:7;:9::i;:::-;6743:8;;-1:-1:-1;;;;;6743:8:4;6730:22;;;;:12;:22;;;;;;:38;;6755:13;6730:38;:::i;:::-;:51;6726:157;;;6843:28;;;6868:1;6843:28;;;11334:19:11;6811:4:4;;-1:-1:-1;6811:4:4;;11369:12:11;6843:28:4;;;;;;;;;;;;;6829:43;;;;;;6726:157;6921:8;;6908:12;;:25;;6921:11;;6931:1;;-1:-1:-1;;;;;6921:8:4;:11;:::i;:::-;-1:-1:-1;;;;;6908:25:4;;;;;;;;;;;;;6936:13;6908:41;;;;:::i;:::-;6896:9;:7;:9::i;:::-;:53;6892:157;;;6980:4;6965:19;;7006:4;7034:1;7012:25;;;;;;11334:19:11;;11378:2;11369:12;;11205:182;6892:157:4;7072:9;;7058:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7058:23:4;;-1:-1:-1;;;;6592:505:4;;;;;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2936:216:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3030:17:4::1;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3030:30:4;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3070:21:4::1;:39:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;3070:39:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;3070:39:4::1;-1:-1:-1::0;;;;;3070:39:4;::::1;;::::0;;3119:19:::1;::::0;:11:::1;::::0;:19:::1;::::0;3131:6;;3119:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;3119:26:4;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;2936:216:4:o;6143:439::-;-1:-1:-1;;;;;6283:24:4;;6265:4;6283:24;;;:18;:24;;;;;;:32;;;;6308:6;;6283:32;:::i;:::-;;;;;;;;;;;;;;6319:1;6283:37;6280:296;;;-1:-1:-1;6343:4:4;6336:11;;6280:296;-1:-1:-1;;;;;6494:24:4;;;;;;:18;:24;;;;;;;:32;;;;6519:6;;6494:32;:::i;:::-;;;;;;;;;;;;;;6402:22;:28;6425:4;-1:-1:-1;;;;;6402:28:4;-1:-1:-1;;;;;6402:28:4;;;;;;;;;;;;6431:6;6402:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6402:45:4;;;;;;;;;;:56;:124;6377:163;;;;;;-1:-1:-1;6561:4:4;6280:296;6143:439;;;;;:::o;1585:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3158:1076::-;3279:11;3291:6;3279:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:27;;:19;:27;3271:36;;;;;;3321:8;;3332:1;-1:-1:-1;;;;;3321:8:4;;;:12;3317:135;;;3383:8;;3370:12;;:25;;3383:11;;3393:1;;-1:-1:-1;;;;;3383:8:4;:11;:::i;:::-;-1:-1:-1;;;;;3370:25:4;;;;;;;;;;;;;3398:13;3370:41;;;;:::i;:::-;3357:9;:7;:9::i;:::-;:54;;3349:63;;;;;;3567:3;;3560:48;;-1:-1:-1;;;3560:48:4;;3582:10;3560:48;;;12216:34:11;3602:4:4;12266:18:11;;;12259:43;3478:20:4;;;;-1:-1:-1;;;;;3567:3:4;;;;3560:21;;12151:18:11;;3560:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;3552:73;;;;;;3642:3;;3635:65;;-1:-1:-1;;;3635:65:4;;3660:10;3635:65;;;12742:34:11;3680:4:4;12792:18:11;;;12785:43;12844:18;;;12837:34;;;-1:-1:-1;;;;;3642:3:4;;;;3635:24;;12677:18:11;;3635:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3739:8:4;;-1:-1:-1;;;;;3739:8:4;3719:29;;;;:19;:29;;;;;;;:37;;3760:6;;3719:29;:37;;3749:6;;3719:37;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;3872:87;;;;;;;;3896:11;3872:87;;;;3921:9;:7;:9::i;:::-;3872:87;;3944:5;3872:87;;;;;;;3840:8;;-1:-1:-1;;;;;3840:8:4;3817:32;;:22;:32;;;;;;;;:40;;;;3850:6;;3817:40;:::i;:::-;;;;;;;;;;;;;;;;3858:10;3817:52;;;;;;;;;;:142;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3817:142:4;;;;;;;;;;;4030:8;;-1:-1:-1;;;;;4030:8:4;4011:28;;:18;:28;;;;;;;:36;;4040:6;;4011:36;:::i;:::-;;;;;;;;;;;;;;;;;:54;;;;;;;-1:-1:-1;4011:54:4;;;;;;;;;;4143:8;;-1:-1:-1;;;;;4143:8:4;4124:28;;:18;:28;;;;;:36;;4153:6;;4124:36;:::i;:::-;;;;;;;;;;;;;;;:53;;;;;;;-1:-1:-1;4124:53:4;;;;;;;;;;4166:10;-1:-1:-1;;;;;;4124:53:4;;;;;;;;160:25:11;;;4166:10:4;4193:34;;133:18:11;4193:34:4;;;;;;;3258:976;3158:1076;;:::o;5353:252::-;5410:3;5424:31;5480:21;5502:9;5480:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5480:32:4;5424:89;;5525:10;5542:9;-1:-1:-1;;;;;5542:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5523:46:4;;5353:252;-1:-1:-1;;;;;;;5353:252:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;13216:2:11;1926:73:0::1;::::0;::::1;13198:21:11::0;13255:2;13235:18;;;13228:30;13294:34;13274:18;;;13267:62;-1:-1:-1;;;13345:18:11;;;13338:36;13391:19;;1926:73:0::1;13014:402:11::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2724:202:4:-;2778:9;2773:147;2797:21;:28;2793:32;;2773:147;;;2898:11;2907:1;2898:8;:11::i;:::-;2864:8;;-1:-1:-1;;;;;2864:8:4;2845:28;;;;:18;:28;;;;;2874:17;:20;;2892:1;;2874:20;;;;;;:::i;:::-;;;;;;;;2845:50;;;;;;:::i;:::-;;;;;;;;;;;;;;:64;2827:3;;;;:::i;:::-;;;;2773:147;;4240:853;4302:8;;-1:-1:-1;;;;;4302:8:4;4288:11;4320:767;4342:17;:24;4338:28;;;;4320:767;;;-1:-1:-1;;;;;4500:23:4;;;;;;:18;:23;;;;;4524:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4500:45;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;4412:18;:23;4431:3;-1:-1:-1;;;;;4412:23:4;;;;;;;;;;;;4436:17;4454:1;4436:20;;;;;;;;;;:::i;:::-;;;;;;;;4412:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;:140;4387:179;;;;;;4585:7;4580:497;-1:-1:-1;;;;;4602:23:4;;;;;;:18;:23;;;;;4626:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4602:45;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;4598:56;;;;4580:497;;;-1:-1:-1;;;;;4739:23:4;;;;;;:18;:23;;;;;4763:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4739:45;;;;;;:::i;:::-;;;;;;;;;;;;;;4687:18;:23;4706:3;-1:-1:-1;;;;;4687:23:4;;;;;;;;;;;;4711:17;4729:1;4711:20;;;;;;;;;;:::i;:::-;;;;;;;;4687:45;;;;;;:::i;:::-;;;;;;;;;;;;;4733:1;4687:48;;;;;;;;;;:::i;:::-;;;;;;;;;:97;4679:106;;;;;;-1:-1:-1;;;;;4803:22:4;;;;;;:17;:22;;;;;4826:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4803:44;;;;;;:::i;:::-;;;;;;;;;;;;;4853:18;:23;4872:3;-1:-1:-1;;;;;4853:23:4;;;;;;;;;;;;4877:17;4895:1;4877:20;;;;;;;;;;:::i;:::-;;;;;;;;4853:45;;;;;;:::i;:::-;;;;;;;;;;;;;4899:1;4853:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4803:99;;4853:48;4803:99;;;;;;;;;;;;;;-1:-1:-1;;;;;;4803:99:4;-1:-1:-1;;;;;4853:48:4;;;4803:99;;;;;;-1:-1:-1;;;;;4920:24:4;;;;:19;:24;;;;;4945:17;:20;;;;;;;;;;;;:::i;:::-;;;;;;;;4920:46;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;4989:10:4;;-1:-1:-1;;;;;5013:23:4;;4989:10;5013:23;;;:18;:23;;;;;5037:17;:20;;-1:-1:-1;;;;;4989:10:4;;;;:23;;5013;5037:17;:20;;;;;;;;;;:::i;:::-;;;;;;;;5013:45;;;;;;:::i;:::-;;;;;;;;;;;;;5059:1;5013:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;4989:73;;;;;;-1:-1:-1;;;;;;4989:73:4;;;-1:-1:-1;;;;;5013:48:4;;;4989:73;;;4671:51:11;4644:18;;4989:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4656:3;;;;;:::i;:::-;;;;4580:497;;;-1:-1:-1;4368:3:4;;;;:::i;:::-;;;;4320:767;;;;4278:815;4240:853::o;7521:540::-;7593:8;;7580:12;;:25;;7593:11;;7603:1;;-1:-1:-1;;;;;7593:8:4;:11;:::i;:::-;-1:-1:-1;;;;;7580:25:4;;;;;;;;;;;;;7608:13;7580:41;;;;:::i;:::-;7568:9;:7;:9::i;:::-;:53;7560:62;;;;;;7637:9;7632:423;7656:17;:24;-1:-1:-1;;;;;7652:28:4;;;7632:423;;;7737:8;;-1:-1:-1;;;;;7737:8:4;;;7701:11;7717:29;;;:19;:29;;;;;7747:17;:20;;7701:11;;7775:3;;7747:20;;;;;;;;;;:::i;:::-;;;;;;;;7717:51;;;;;;:::i;:::-;;;;;;;;;;;;;;7772:2;7716:58;;;;:::i;:::-;:62;;;;:::i;:::-;7848:3;;7869:11;;7841:49;;-1:-1:-1;;;7841:49:4;;-1:-1:-1;;;;;7869:11:4;;;7841:49;;;9792:51:11;9859:18;;;9852:34;;;7701:78:4;;-1:-1:-1;7848:3:4;;7841:19;;9765:18:11;;7841:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7904:11:4;;7941:3;;8000:10;;7904:140;;-1:-1:-1;;;7904:140:4;;-1:-1:-1;;;;;7941:3:4;;;7904:140;;;15247:34:11;15297:18;;;15290:34;;;8000:10:4;;;15340:18:11;;;15333:43;7904:11:4;15392:18:11;;;15385:47;7904:11:4;;;:19;;15181::11;;7904:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7687:368;7682:3;;;;;:::i;:::-;;;;7632:423;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:173:11;264:20;;-1:-1:-1;;;;;313:31:11;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;851:180::-;910:6;963:2;951:9;942:7;938:23;934:32;931:52;;;979:1;976;969:12;931:52;-1:-1:-1;1002:23:11;;851:180;-1:-1:-1;851:180:11:o;1036:258::-;1108:1;1118:113;1132:6;1129:1;1126:13;1118:113;;;1208:11;;;1202:18;1189:11;;;1182:39;1154:2;1147:10;1118:113;;;1249:6;1246:1;1243:13;1240:48;;;-1:-1:-1;;1284:1:11;1266:16;;1259:27;1036:258::o;1299:::-;1341:3;1379:5;1373:12;1406:6;1401:3;1394:19;1422:63;1478:6;1471:4;1466:3;1462:14;1455:4;1448:5;1444:16;1422:63;:::i;:::-;1539:2;1518:15;-1:-1:-1;;1514:29:11;1505:39;;;;1546:4;1501:50;;1299:258;-1:-1:-1;;1299:258:11:o;1562:220::-;1711:2;1700:9;1693:21;1674:4;1731:45;1772:2;1761:9;1757:18;1749:6;1731:45;:::i;1787:188::-;1855:20;;-1:-1:-1;;;;;1904:46:11;;1894:57;;1884:85;;1965:1;1962;1955:12;1980:127;2041:10;2036:3;2032:20;2029:1;2022:31;2072:4;2069:1;2062:15;2096:4;2093:1;2086:15;2112:719;2155:5;2208:3;2201:4;2193:6;2189:17;2185:27;2175:55;;2226:1;2223;2216:12;2175:55;2262:6;2249:20;2288:18;2325:2;2321;2318:10;2315:36;;;2331:18;;:::i;:::-;2406:2;2400:9;2374:2;2460:13;;-1:-1:-1;;2456:22:11;;;2480:2;2452:31;2448:40;2436:53;;;2504:18;;;2524:22;;;2501:46;2498:72;;;2550:18;;:::i;:::-;2590:10;2586:2;2579:22;2625:2;2617:6;2610:18;2671:3;2664:4;2659:2;2651:6;2647:15;2643:26;2640:35;2637:55;;;2688:1;2685;2678:12;2637:55;2752:2;2745:4;2737:6;2733:17;2726:4;2718:6;2714:17;2701:54;2799:1;2792:4;2787:2;2779:6;2775:15;2771:26;2764:37;2819:6;2810:15;;;;;;2112:719;;;;:::o;2836:396::-;2914:6;2922;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;3014:29;3033:9;3014:29;:::i;:::-;3004:39;;3094:2;3083:9;3079:18;3066:32;3121:18;3113:6;3110:30;3107:50;;;3153:1;3150;3143:12;3107:50;3176;3218:7;3209:6;3198:9;3194:22;3176:50;:::i;:::-;3166:60;;;2836:396;;;;;:::o;3460:591::-;3530:6;3538;3591:2;3579:9;3570:7;3566:23;3562:32;3559:52;;;3607:1;3604;3597:12;3559:52;3647:9;3634:23;3676:18;3717:2;3709:6;3706:14;3703:34;;;3733:1;3730;3723:12;3703:34;3771:6;3760:9;3756:22;3746:32;;3816:7;3809:4;3805:2;3801:13;3797:27;3787:55;;3838:1;3835;3828:12;3787:55;3878:2;3865:16;3904:2;3896:6;3893:14;3890:34;;;3920:1;3917;3910:12;3890:34;3965:7;3960:2;3951:6;3947:2;3943:15;3939:24;3936:37;3933:57;;;3986:1;3983;3976:12;3933:57;4017:2;4009:11;;;;;4039:6;;-1:-1:-1;3460:591:11;;-1:-1:-1;;;;3460:591:11:o;4056:464::-;4143:6;4151;4159;4212:2;4200:9;4191:7;4187:23;4183:32;4180:52;;;4228:1;4225;4218:12;4180:52;4251:29;4270:9;4251:29;:::i;:::-;4241:39;;4331:2;4320:9;4316:18;4303:32;4358:18;4350:6;4347:30;4344:50;;;4390:1;4387;4380:12;4344:50;4413;4455:7;4446:6;4435:9;4431:22;4413:50;:::i;:::-;4403:60;;;4510:2;4499:9;4495:18;4482:32;4472:42;;4056:464;;;;;:::o;4733:458::-;4820:6;4828;4836;4889:2;4877:9;4868:7;4864:23;4860:32;4857:52;;;4905:1;4902;4895:12;4857:52;4941:9;4928:23;4918:33;;5002:2;4991:9;4987:18;4974:32;5029:18;5021:6;5018:30;5015:50;;;5061:1;5058;5051:12;5196:390;5274:6;5282;5335:2;5323:9;5314:7;5310:23;5306:32;5303:52;;;5351:1;5348;5341:12;5303:52;5387:9;5374:23;5364:33;;5448:2;5437:9;5433:18;5420:32;5475:18;5467:6;5464:30;5461:50;;;5507:1;5504;5497:12;5771:299;5954:6;5947:14;5940:22;5929:9;5922:41;5999:2;5994;5983:9;5979:18;5972:30;5903:4;6019:45;6060:2;6049:9;6045:18;6037:6;6019:45;:::i;:::-;6011:53;5771:299;-1:-1:-1;;;;5771:299:11:o;6075:396::-;6153:6;6161;6214:2;6202:9;6193:7;6189:23;6185:32;6182:52;;;6230:1;6227;6220:12;6182:52;6270:9;6257:23;6303:18;6295:6;6292:30;6289:50;;;6335:1;6332;6325:12;6289:50;6358;6400:7;6391:6;6380:9;6376:22;6358:50;:::i;:::-;6348:60;;;6427:38;6461:2;6450:9;6446:18;6427:38;:::i;:::-;6417:48;;6075:396;;;;;:::o;6476:470::-;6563:6;6571;6579;6632:2;6620:9;6611:7;6607:23;6603:32;6600:52;;;6648:1;6645;6638:12;6600:52;6671:29;6690:9;6671:29;:::i;:::-;6661:39;;6751:2;6740:9;6736:18;6723:32;6778:18;6770:6;6767:30;6764:50;;;6810:1;6807;6800:12;6764:50;6833;6875:7;6866:6;6855:9;6851:22;6833:50;:::i;:::-;6823:60;;;6902:38;6936:2;6925:9;6921:18;6902:38;:::i;:::-;6892:48;;6476:470;;;;;:::o;7475:389::-;7552:6;7560;7613:2;7601:9;7592:7;7588:23;7584:32;7581:52;;;7629:1;7626;7619:12;7581:52;7669:9;7656:23;7702:18;7694:6;7691:30;7688:50;;;7734:1;7731;7724:12;7688:50;7757;7799:7;7790:6;7779:9;7775:22;7757:50;:::i;:::-;7747:60;7854:2;7839:18;;;;7826:32;;-1:-1:-1;;;;7475:389:11:o;7869:322::-;7938:6;7991:2;7979:9;7970:7;7966:23;7962:32;7959:52;;;8007:1;8004;7997:12;7959:52;8047:9;8034:23;8080:18;8072:6;8069:30;8066:50;;;8112:1;8109;8102:12;8066:50;8135;8177:7;8168:6;8157:9;8153:22;8135:50;:::i;8425:380::-;8504:1;8500:12;;;;8547;;;8568:61;;8622:4;8614:6;8610:17;8600:27;;8568:61;8675:2;8667:6;8664:14;8644:18;8641:38;8638:161;;;8721:10;8716:3;8712:20;8709:1;8702:31;8756:4;8753:1;8746:15;8784:4;8781:1;8774:15;8638:161;;8425:380;;;:::o;8810:276::-;8941:3;8979:6;8973:13;8995:53;9041:6;9036:3;9029:4;9021:6;9017:17;8995:53;:::i;:::-;9064:16;;;;;8810:276;-1:-1:-1;;8810:276:11:o;9091:127::-;9152:10;9147:3;9143:20;9140:1;9133:31;9183:4;9180:1;9173:15;9207:4;9204:1;9197:15;9223:168;9263:7;9329:1;9325;9321:6;9317:14;9314:1;9311:21;9306:1;9299:9;9292:17;9288:45;9285:71;;;9336:18;;:::i;:::-;-1:-1:-1;9376:9:11;;9223:168::o;9396:217::-;9436:1;9462;9452:132;;9506:10;9501:3;9497:20;9494:1;9487:31;9541:4;9538:1;9531:15;9569:4;9566:1;9559:15;9452:132;-1:-1:-1;9598:9:11;;9396:217::o;9897:277::-;9964:6;10017:2;10005:9;9996:7;9992:23;9988:32;9985:52;;;10033:1;10030;10023:12;9985:52;10065:9;10059:16;10118:5;10111:13;10104:21;10097:5;10094:32;10084:60;;10140:1;10137;10130:12;10179:226;10218:3;-1:-1:-1;;;;;10315:2:11;10308:5;10304:14;10342:2;10333:7;10330:15;10327:41;;;10348:18;;:::i;:::-;10397:1;10384:15;;10179:226;-1:-1:-1;;;10179:226:11:o;10410:179::-;10488:13;;10541:22;10530:34;;10520:45;;10510:73;;10579:1;10576;10569:12;10594:473;10697:6;10705;10713;10721;10729;10782:3;10770:9;10761:7;10757:23;10753:33;10750:53;;;10799:1;10796;10789:12;10750:53;10822:39;10851:9;10822:39;:::i;:::-;10812:49;;10901:2;10890:9;10886:18;10880:25;10870:35;;10945:2;10934:9;10930:18;10924:25;10914:35;;10989:2;10978:9;10974:18;10968:25;10958:35;;11012:49;11056:3;11045:9;11041:19;11012:49;:::i;:::-;11002:59;;10594:473;;;;;;;;:::o;11072:128::-;11112:3;11143:1;11139:6;11136:1;11133:13;11130:39;;;11149:18;;:::i;:::-;-1:-1:-1;11185:9:11;;11072:128::o;11392:246::-;11432:4;-1:-1:-1;;;;;11545:10:11;;;;11515;;11567:12;;;11564:38;;;11582:18;;:::i;:::-;11619:13;;11392:246;-1:-1:-1;;;11392:246:11:o;11643:356::-;11845:2;11827:21;;;11864:18;;;11857:30;11923:34;11918:2;11903:18;;11896:62;11990:2;11975:18;;11643:356::o;12313:184::-;12383:6;12436:2;12424:9;12415:7;12411:23;12407:32;12404:52;;;12452:1;12449;12442:12;12404:52;-1:-1:-1;12475:16:11;;12313:184;-1:-1:-1;12313:184:11:o;12882:127::-;12943:10;12938:3;12934:20;12931:1;12924:31;12974:4;12971:1;12964:15;12998:4;12995:1;12988:15;13547:1099;13675:3;13704:1;13737:6;13731:13;13767:3;13789:1;13817:9;13813:2;13809:18;13799:28;;13877:2;13866:9;13862:18;13899;13889:61;;13943:4;13935:6;13931:17;13921:27;;13889:61;13969:2;14017;14009:6;14006:14;13986:18;13983:38;13980:165;;;-1:-1:-1;;;14044:33:11;;14100:4;14097:1;14090:15;14130:4;14051:3;14118:17;13980:165;14161:18;14188:104;;;;14306:1;14301:320;;;;14154:467;;14188:104;-1:-1:-1;;14221:24:11;;14209:37;;14266:16;;;;-1:-1:-1;14188:104:11;;14301:320;13494:1;13487:14;;;13531:4;13518:18;;14396:1;14410:165;14424:6;14421:1;14418:13;14410:165;;;14502:14;;14489:11;;;14482:35;14545:16;;;;14439:10;;14410:165;;;14414:3;;14604:6;14599:3;14595:16;14588:23;;14154:467;-1:-1:-1;14637:3:11;;13547:1099;-1:-1:-1;;;;;;;;13547:1099:11:o;14651:135::-;14690:3;-1:-1:-1;;14711:17:11;;14708:43;;;14731:18;;:::i;:::-;-1:-1:-1;14778:1:11;14767:13;;14651:135::o;14791:175::-;14828:3;14872:4;14865:5;14861:16;14901:4;14892:7;14889:17;14886:43;;;14909:18;;:::i;:::-;14958:1;14945:15;;14791:175;-1:-1:-1;;14791:175:11:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    551,
    8070
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC2ABA3F0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC2ABA3F0 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xE4D5D7D6 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xEC6F4F41 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xFD2FAA68 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x80F79702 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x81688C64 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x85AFA270 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xAFA3A617 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47CE529A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x47CE529A EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x5F90F0B7 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x63168475 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x6B01E8D3 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3D5157 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x126DF02B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x151BF852 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x1CC87D88 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x266E2A56 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x195F JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x827 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C18 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D JUMP JUMPDEST PUSH2 0x166 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x40B PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x170 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x166 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EE JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x383 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CBB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x24D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x546 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x546 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x529 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x575 SWAP1 DUP4 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x12 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x603 SWAP1 DUP5 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x12 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 DUP6 MSTORE DUP4 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND DUP3 MSTORE PUSH1 0xC SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x6B5 SWAP1 DUP10 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x5A PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767 DUP3 DUP5 ADD DUP5 PUSH2 0x18EE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7BD JUMPI PUSH2 0x776 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x77E PUSH2 0x116B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x0 PUSH2 0x797 DUP4 PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7CE JUMPI PUSH2 0x7CE PUSH2 0x15E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP DUP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x8F3 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x91B SWAP1 PUSH3 0x15180 PUSH2 0x1E51 JUMP JUMPDEST EQ ISZERO PUSH2 0x94C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP4 POP DUP4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP SWAP2 POP PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x96A SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x997 PUSH2 0x827 JUMP JUMPDEST GT ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x934 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA34 PUSH1 0x0 PUSH2 0x17CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH2 0xAA3 SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x7 SWAP1 PUSH2 0xB01 SWAP1 DUP6 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xB4B SWAP1 DUP6 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xB6A JUMPI POP PUSH1 0x1 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xB91 SWAP1 DUP6 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x12 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD EQ PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xC44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xCBF SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0xCE4 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0xCEC PUSH2 0x827 JUMP JUMPDEST GT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x8AC7230489E80000 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1EC6 JUMP JUMPDEST LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0xE28 SWAP1 DUP7 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE65 PUSH2 0x827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xE97 SWAP1 DUP7 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP5 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0xEFC SWAP1 DUP6 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 PUSH2 0xF42 SWAP1 DUP6 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP5 DUP3 MSTORE SWAP2 PUSH32 0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFC2 JUMPI PUSH2 0xFC2 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1022 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x10EB DUP2 PUSH2 0x17CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x10EB JUMPI PUSH2 0x1104 DUP2 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x1132 JUMPI PUSH2 0x1132 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x1163 DUP2 PUSH2 0x1F91 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x11B6 JUMPI PUSH2 0x11B6 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x11CD SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH1 0xE PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1211 JUMPI PUSH2 0x1211 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD EQ PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x1274 JUMPI PUSH2 0x1274 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x12D4 JUMPI PUSH2 0x12D4 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x12EB SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x132C JUMPI PUSH2 0x132C PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1365 JUMPI PUSH2 0x1365 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x13A9 JUMPI PUSH2 0x13A9 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0xF PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1400 JUMPI PUSH2 0x1400 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0xD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x149F JUMPI PUSH2 0x149F PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14D3 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8EBFA8AE SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP8 AND SWAP1 DUP2 LT PUSH2 0x151E JUMPI PUSH2 0x151E PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x15C7 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1245 JUMP JUMPDEST POP DUP1 PUSH2 0x15DA DUP2 PUSH2 0x1FAC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x117A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1604 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD20 PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x1631 PUSH2 0x827 JUMP JUMPDEST GT PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND LT ISZERO PUSH2 0x10EB JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x64 SWAP4 SWAP1 DUP7 AND SWAP1 DUP2 LT PUSH2 0x1688 JUMPI PUSH2 0x1688 PUSH2 0x1EDF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0xA PUSH2 0x16BA SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x171B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x17C6 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x163E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x182A SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x184C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1892 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1865 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1892 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1892 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1892 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1877 JUMP JUMPDEST POP PUSH2 0x189E SWAP3 SWAP2 POP PUSH2 0x18A2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x189E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC06 DUP3 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1922 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x190A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x753 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x194B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC06 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1933 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19CB JUMPI PUSH2 0x19CB PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F3 PUSH2 0x1989 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A48 DUP4 PUSH2 0x1972 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP6 DUP3 DUP7 ADD PUSH2 0x199F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0A DUP5 PUSH2 0x1972 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B32 DUP7 DUP3 DUP8 ADD PUSH2 0x199F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1BC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1933 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C00 DUP6 DUP3 DUP7 ADD PUSH2 0x199F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C0F PUSH1 0x20 DUP5 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C36 DUP5 PUSH2 0x1972 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5E DUP7 DUP3 DUP8 ADD PUSH2 0x199F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C6D PUSH1 0x40 DUP6 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CAC DUP6 DUP3 DUP7 ADD PUSH2 0x199F JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC2 DUP5 DUP3 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D3D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D77 PUSH2 0x1D47 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D99 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1DDD JUMPI PUSH2 0x1DDD PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x18CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E22 DUP7 PUSH2 0x1DE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1E45 PUSH1 0x80 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E64 JUMPI PUSH2 0x1E64 PUSH2 0x1D47 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E89 PUSH2 0x1D47 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1F11 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1F31 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1F45 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1F56 JUMPI PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1F7B JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1F62 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1FA5 JUMPI PUSH2 0x1FA5 PUSH2 0x1D47 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1FC3 JUMPI PUSH2 0x1FC3 PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 RETURNDATASIZE 0xEA LOG2 SWAP13 0xCC 0xBE SMOD 0x22 0x4A 0xEF SWAP2 0xF6 SWAP6 0xE0 0xCB DUP5 0xB5 DUP10 RETURN PUSH32 0x86C132547A8773AC30357064736F6C634300080B003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "49": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC2ABA3F0"
    },
    "60": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B7"
    },
    "64": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE4D5D7D6"
    },
    "71": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x428"
    },
    "75": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE7572230"
    },
    "82": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43B"
    },
    "86": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xEC6F4F41"
    },
    "93": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x44E"
    },
    "97": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x47C"
    },
    "108": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD2FAA68"
    },
    "115": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48F"
    },
    "119": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "REVERT",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x319"
    },
    "135": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x80F79702"
    },
    "142": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x321"
    },
    "146": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81688C64"
    },
    "153": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35D"
    },
    "157": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85AFA270"
    },
    "164": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x370"
    },
    "168": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "175": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x393"
    },
    "179": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "180": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAFA3A617"
    },
    "186": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "187": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A4"
    },
    "190": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "191": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "194": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "REVERT",
      "path": "4"
    },
    "195": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x47CE529A"
    },
    "202": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "GT",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x47CE529A"
    },
    "213": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A"
    },
    "217": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x557ED1BA"
    },
    "224": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265"
    },
    "228": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5F90F0B7"
    },
    "235": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26D"
    },
    "239": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x63168475"
    },
    "246": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "247": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x280"
    },
    "250": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "251": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6B01E8D3"
    },
    "257": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "258": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BC"
    },
    "261": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "262": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E04FF0D"
    },
    "268": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "269": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F8"
    },
    "272": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "273": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "276": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "REVERT",
      "path": "4"
    },
    "277": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC3D5157"
    },
    "284": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x126DF02B"
    },
    "295": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x179"
    },
    "299": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x151BF852"
    },
    "306": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "310": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1CC87D88"
    },
    "317": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7"
    },
    "321": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "322": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x266E2A56"
    },
    "328": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "329": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FC"
    },
    "332": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "333": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "334": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4585E33B"
    },
    "339": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "EQ",
      "path": "4"
    },
    "340": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x227"
    },
    "343": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "344": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "345": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "DUP1",
      "path": "4"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        551,
        8070
      ],
      "op": "REVERT",
      "path": "4"
    },
    "349": {
      "offset": [
        1337,
        1369
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "350": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "353": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "355": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "356": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "DUP2",
      "path": "4"
    },
    "357": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "JUMP",
      "path": "4"
    },
    "358": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "359": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "361": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "362": {
      "op": "SWAP1"
    },
    "363": {
      "op": "DUP2"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "367": {
      "op": "ADD"
    },
    "368": {
      "offset": [
        1337,
        1369
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "369": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "371": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "372": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "DUP1",
      "path": "4"
    },
    "373": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "374": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "SUB",
      "path": "4"
    },
    "375": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "376": {
      "fn": null,
      "offset": [
        1337,
        1369
      ],
      "op": "RETURN",
      "path": "4"
    },
    "377": {
      "offset": [
        2040,
        2092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "378": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7"
    },
    "381": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x187"
    },
    "384": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "385": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "387": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D3"
    },
    "390": {
      "fn": null,
      "jump": "i",
      "offset": [
        2040,
        2092
      ],
      "op": "JUMP",
      "path": "4"
    },
    "391": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "392": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x10"
    },
    "394": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "396": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "397": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "399": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "400": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "DUP2",
      "path": "4"
    },
    "401": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "402": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "404": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "405": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "406": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "DUP1",
      "path": "4"
    },
    "407": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "408": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "410": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "411": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "412": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "ADD",
      "path": "4"
    },
    "413": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "414": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC0"
    },
    "416": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "417": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "418": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "419": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SHL",
      "path": "4"
    },
    "420": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "421": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "DUP3",
      "path": "4"
    },
    "422": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "JUMP",
      "path": "4"
    },
    "423": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "424": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "426": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "DUP1",
      "path": "4"
    },
    "427": {
      "fn": null,
      "offset": [
        2040,
        2092
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "op": "NOT"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "SWAP4"
    },
    "439": {
      "op": "AND"
    },
    "440": {
      "op": "DUP4"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "444": {
      "op": "DUP4"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "SWAP2"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "offset": [
        2040,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "454": {
      "op": "JUMP"
    },
    "455": {
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "456": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA"
    },
    "459": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "462": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "463": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "465": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18EE"
    },
    "468": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "469": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "470": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A2"
    },
    "473": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "474": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "475": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "477": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "478": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "481": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "482": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "483": {
      "fn": null,
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x195F"
    },
    "486": {
      "fn": null,
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "487": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "488": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F5"
    },
    "494": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "495": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "497": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A2C"
    },
    "500": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMP",
      "path": "4"
    },
    "501": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "502": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54E"
    },
    "505": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMP",
      "path": "4"
    },
    "506": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "507": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "STOP",
      "path": "4"
    },
    "508": {
      "offset": [
        876,
        899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "509": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20F"
    },
    "515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "op": "SUB"
    },
    "524": {
      "offset": [
        876,
        899
      ],
      "op": "AND",
      "path": "4"
    },
    "525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "JUMP",
      "path": "4"
    },
    "527": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "528": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "530": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        876,
        899
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "op": "SUB"
    },
    "539": {
      "op": "SWAP1"
    },
    "540": {
      "op": "SWAP2"
    },
    "541": {
      "op": "AND"
    },
    "542": {
      "op": "DUP2"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "offset": [
        876,
        899
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "550": {
      "op": "JUMP"
    },
    "551": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "552": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "555": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x235"
    },
    "558": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "559": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "561": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7A"
    },
    "564": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMP",
      "path": "4"
    },
    "565": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "566": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x759"
    },
    "569": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMP",
      "path": "4"
    },
    "570": {
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "571": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D"
    },
    "574": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x248"
    },
    "577": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "578": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "580": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AEC"
    },
    "583": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMP",
      "path": "4"
    },
    "584": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "585": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D3"
    },
    "588": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMP",
      "path": "4"
    },
    "589": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "590": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "592": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "op": "SWAP1"
    },
    "602": {
      "op": "SWAP2"
    },
    "603": {
      "op": "AND"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "612": {
      "op": "JUMP"
    },
    "613": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5100,
        5347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "614": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5100,
        5347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "617": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5100,
        5347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "620": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        5100,
        5347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "621": {
      "offset": [
        1665,
        1739
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "622": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D"
    },
    "625": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27B"
    },
    "628": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "629": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "631": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B43"
    },
    "634": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1665,
        1739
      ],
      "op": "JUMP",
      "path": "4"
    },
    "635": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "636": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B0"
    },
    "639": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1665,
        1739
      ],
      "op": "JUMP",
      "path": "4"
    },
    "640": {
      "offset": [
        1501,
        1574
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "644": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "647": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "648": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "650": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B76"
    },
    "653": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1501,
        1574
      ],
      "op": "JUMP",
      "path": "4"
    },
    "654": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "657": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "659": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "660": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP2",
      "path": "4"
    },
    "661": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "662": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "664": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "665": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP4",
      "path": "4"
    },
    "666": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "667": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "669": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "670": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "671": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "672": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP2",
      "path": "4"
    },
    "673": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "674": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP1",
      "path": "4"
    },
    "675": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP4",
      "path": "4"
    },
    "676": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "ADD",
      "path": "4"
    },
    "677": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP5",
      "path": "4"
    },
    "678": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "ADD",
      "path": "4"
    },
    "679": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP1",
      "path": "4"
    },
    "680": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "681": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "682": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP2",
      "path": "4"
    },
    "683": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "684": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "685": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP5",
      "path": "4"
    },
    "686": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "ADD",
      "path": "4"
    },
    "687": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "688": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "689": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "690": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "ADD",
      "path": "4"
    },
    "691": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "692": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "693": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "694": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "695": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "696": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "697": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "698": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "DUP2",
      "path": "4"
    },
    "699": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1501,
        1574
      ],
      "op": "JUMP",
      "path": "4"
    },
    "700": {
      "offset": [
        1093,
        1164
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "701": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "704": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CA"
    },
    "707": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "708": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "710": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B76"
    },
    "713": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        1093,
        1164
      ],
      "op": "JUMP",
      "path": "4"
    },
    "714": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "715": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "717": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "719": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "720": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "721": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "722": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "724": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "725": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP4",
      "path": "4"
    },
    "726": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "727": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "729": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "730": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "731": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "732": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "733": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "734": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP1",
      "path": "4"
    },
    "735": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP4",
      "path": "4"
    },
    "736": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "ADD",
      "path": "4"
    },
    "737": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP5",
      "path": "4"
    },
    "738": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "ADD",
      "path": "4"
    },
    "739": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP1",
      "path": "4"
    },
    "740": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "741": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "742": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "743": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "744": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "745": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP5",
      "path": "4"
    },
    "746": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "ADD",
      "path": "4"
    },
    "747": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "748": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "749": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "750": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "ADD",
      "path": "4"
    },
    "751": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "752": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "753": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "754": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "755": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "756": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "757": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "758": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "759": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1093,
        1164
      ],
      "op": "JUMP",
      "path": "4"
    },
    "760": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "761": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30B"
    },
    "764": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x306"
    },
    "767": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "768": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "770": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7A"
    },
    "773": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "774": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "775": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E7"
    },
    "778": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "779": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "780": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "782": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "783": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "786": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "787": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "788": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "789": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BA7"
    },
    "792": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F7"
    },
    "800": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "801": {
      "offset": [
        1421,
        1494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32F"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "809": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B76"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1421,
        1494
      ],
      "op": "JUMP",
      "path": "4"
    },
    "815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP2",
      "path": "4"
    },
    "822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP4",
      "path": "4"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP2",
      "path": "4"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP1",
      "path": "4"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP4",
      "path": "4"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "ADD",
      "path": "4"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP5",
      "path": "4"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "ADD",
      "path": "4"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP1",
      "path": "4"
    },
    "841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "842": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP2",
      "path": "4"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP5",
      "path": "4"
    },
    "847": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "ADD",
      "path": "4"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "849": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "850": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "851": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "ADD",
      "path": "4"
    },
    "852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "853": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "854": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "858": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "DUP2",
      "path": "4"
    },
    "860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1421,
        1494
      ],
      "op": "JUMP",
      "path": "4"
    },
    "861": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "862": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "865": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36B"
    },
    "868": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "869": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "871": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BCA"
    },
    "874": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMP",
      "path": "4"
    },
    "875": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "876": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA36"
    },
    "879": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMP",
      "path": "4"
    },
    "880": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "881": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x383"
    },
    "884": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37E"
    },
    "887": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "888": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "890": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C18"
    },
    "893": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMP",
      "path": "4"
    },
    "894": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "895": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB25"
    },
    "898": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMP",
      "path": "4"
    },
    "899": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "900": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "902": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "903": {
      "op": "SWAP1"
    },
    "904": {
      "op": "ISZERO"
    },
    "905": {
      "op": "ISZERO"
    },
    "906": {
      "op": "DUP2"
    },
    "907": {
      "op": "MSTORE"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "914": {
      "op": "JUMP"
    },
    "915": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "916": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "918": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "op": "SUB"
    },
    "927": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "928": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D"
    },
    "931": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "932": {
      "offset": [
        1585,
        1658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "933": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "936": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B2"
    },
    "939": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "940": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "942": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B43"
    },
    "945": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMP",
      "path": "4"
    },
    "946": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0D"
    },
    "950": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMP",
      "path": "4"
    },
    "951": {
      "offset": [
        2211,
        2310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "952": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40B"
    },
    "955": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C5"
    },
    "958": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "959": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "961": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C18"
    },
    "964": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        2211,
        2310
      ],
      "op": "JUMP",
      "path": "4"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "968": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "970": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "971": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "973": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "977": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "978": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "980": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP6",
      "path": "4"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "983": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "984": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "985": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "986": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP7",
      "path": "4"
    },
    "987": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "988": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "989": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "990": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "991": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "992": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "996": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "997": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "998": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "999": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1000": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "1001": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1002": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1003": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1004": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1005": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1007": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1008": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1010": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1011": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1014": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1015": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1016": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1018": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "1020": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1021": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1023": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1024": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1025": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "ADD",
      "path": "4"
    },
    "1026": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1027": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1028": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1029": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1030": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1032": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "AND",
      "path": "4"
    },
    "1033": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1034": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1035": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1036": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1038": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1039": {
      "fn": "Ownable.owner",
      "offset": [
        2211,
        2310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1040": {
      "op": "SWAP4"
    },
    "1041": {
      "op": "DUP5"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "op": "DUP5"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "SWAP3"
    },
    "1048": {
      "op": "SWAP1"
    },
    "1049": {
      "op": "SWAP3"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "ISZERO"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "SWAP1"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "offset": [
        2211,
        2310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "1063": {
      "op": "JUMP"
    },
    "1064": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1065": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "1068": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x436"
    },
    "1071": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1072": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1074": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C76"
    },
    "1077": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1078": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1079": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC5A"
    },
    "1082": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1083": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1084": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "1087": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x449"
    },
    "1090": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1091": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1093": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18EE"
    },
    "1096": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1097": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1098": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFAC"
    },
    "1101": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1102": {
      "offset": [
        1044,
        1086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1103": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x383"
    },
    "1106": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45C"
    },
    "1109": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1110": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1112": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CBB"
    },
    "1115": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1116": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1117": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1118": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1119": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1121": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1122": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1123": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1124": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1125": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1126": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1127": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1128": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1130": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1131": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1132": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1133": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1134": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1135": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1136": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1137": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1138": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1139": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1140": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1141": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1142": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1143": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1145": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "AND",
      "path": "4"
    },
    "1146": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1147": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        1044,
        1086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "1152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48A"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D3"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1053"
    },
    "1166": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1167": {
      "offset": [
        839,
        869
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "offset": [
        839,
        869
      ],
      "op": "AND",
      "path": "4"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        839,
        869
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1186": {
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "LT",
      "path": "4"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B2"
    },
    "1197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4CD"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CF0"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DIV",
      "path": "4"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MUL",
      "path": "4"
    },
    "1240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F9"
    },
    "1268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CF0"
    },
    "1272": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x546"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "LT",
      "path": "4"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51B"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1292": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DIV",
      "path": "4"
    },
    "1295": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MUL",
      "path": "4"
    },
    "1296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1299": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x546"
    },
    "1306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "GT",
      "path": "4"
    },
    "1337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x529"
    },
    "1340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SUB",
      "path": "4"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "AND",
      "path": "4"
    },
    "1347": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "ADD",
      "path": "4"
    },
    "1349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1352": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "POP",
      "path": "4"
    },
    "1356": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        964
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1357": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        931,
        964
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1358": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 1
    },
    "1368": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "AND",
      "path": "4"
    },
    "1369": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1371": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1372": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1373": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1374": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1376": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1378": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1379": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1381": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1382": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1383": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1384": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5844
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1385": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1386": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1387": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x575"
    },
    "1390": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1391": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5845,
        5851
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1392": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5845,
        5851
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1393": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "1396": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5820,
        5852
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1397": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1398": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1399": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1400": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1401": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1403": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "ADD",
      "path": "4"
    },
    "1404": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1406": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1407": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1408": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1409": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SUB",
      "path": "4"
    },
    "1410": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1411": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1412": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5820,
        5852
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1413": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "1415": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1417": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "AND",
      "path": "4"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "AND",
      "path": "4"
    },
    "1436": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1437": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1438": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1440": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "ADD",
      "path": "4"
    },
    "1441": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1442": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1443": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1444": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1446": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "ADD",
      "path": "4"
    },
    "1447": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1449": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5785
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1450": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5786,
        5792
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1451": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1453": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1454": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B7"
    },
    "1457": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1458": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1459": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "1462": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5757,
        5793
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1463": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1464": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1465": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1466": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1467": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1469": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1470": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1471": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1473": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1474": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1475": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1476": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SUB",
      "path": "4"
    },
    "1477": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1478": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "ADD",
      "path": "4"
    },
    "1479": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1480": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5793
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1481": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5794,
        5804
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1482": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1484": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1485": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1486": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1487": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1488": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1489": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1490": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5805
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1491": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5816
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1492": {
      "branch": 47,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5757,
        5852
      ],
      "op": "EQ",
      "path": "4"
    },
    "1493": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5DD"
    },
    "1496": {
      "branch": 47,
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1497": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1499": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1500": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1501": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5749,
        5853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1511": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "AND",
      "path": "4"
    },
    "1512": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5863,
        5878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1514": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1515": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1516": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1517": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5900
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "1519": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1521": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1522": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1524": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1525": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1526": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5906
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1527": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1528": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1529": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x603"
    },
    "1532": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1533": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5907,
        5913
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1534": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5907,
        5913
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1535": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "1538": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5881,
        5914
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1539": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1540": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1541": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1542": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1543": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1545": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "ADD",
      "path": "4"
    },
    "1546": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1548": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1549": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1550": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1551": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SUB",
      "path": "4"
    },
    "1552": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1553": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1554": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5881,
        5914
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1555": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5863,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1556": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5863,
        5914
      ],
      "op": "POP",
      "path": "4"
    },
    "1557": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5984,
        5988
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "1559": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5946
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "1561": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1563": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5947,
        5951
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "AND",
      "path": "4"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "AND",
      "path": "4"
    },
    "1582": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1583": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1584": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1586": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "ADD",
      "path": "4"
    },
    "1587": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1588": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1589": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1590": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1592": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "ADD",
      "path": "4"
    },
    "1593": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1595": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5952
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1596": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5953,
        5959
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1597": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1599": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1600": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x649"
    },
    "1603": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1604": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1605": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "1608": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5924,
        5960
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1609": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1610": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1611": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1612": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1613": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1615": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1616": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1617": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1619": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1620": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1621": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1622": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "SUB",
      "path": "4"
    },
    "1623": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1624": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "ADD",
      "path": "4"
    },
    "1625": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1626": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5960
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1627": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5961,
        5971
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1628": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1630": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1631": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1632": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1633": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1634": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1635": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1636": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1637": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1638": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5972
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1639": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5981
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1641": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5981
      ],
      "op": "ADD",
      "path": "4"
    },
    "1642": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1643": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1646": {
      "op": "NOT"
    },
    "1647": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "AND",
      "path": "4"
    },
    "1648": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1649": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1650": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1651": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1652": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1653": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1654": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "OR",
      "path": "4"
    },
    "1655": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1656": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1657": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5924,
        5988
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1658": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0xA"
    },
    "1660": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "op": "SUB"
    },
    "1669": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1670": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "AND",
      "path": "4"
    },
    "1671": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1672": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1673": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6078
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "1675": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1676": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1677": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1678": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1679": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1680": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1681": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6084
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "SUB"
    },
    "1690": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1691": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1692": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "AND",
      "path": "4"
    },
    "1693": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6005,
        6008
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1694": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6018
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1699": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6018
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1700": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5961,
        5971
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1701": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5961,
        5971
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1702": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6104,
        6111
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1703": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6104,
        6111
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1704": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6099,
        6102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1706": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6099,
        6102
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1707": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B5"
    },
    "1710": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1711": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6085,
        6091
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1712": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6085,
        6091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1713": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "1716": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6059,
        6092
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1717": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1718": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1719": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1720": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1721": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1723": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "ADD",
      "path": "4"
    },
    "1724": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1726": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1727": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1728": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1729": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SUB",
      "path": "4"
    },
    "1730": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1731": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1732": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6059,
        6092
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1733": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6096,
        6098
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5A"
    },
    "1735": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6D0"
    },
    "1738": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6098
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1739": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6098
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1740": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5D"
    },
    "1743": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6058,
        6098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1744": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1745": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DA"
    },
    "1748": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6102
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1749": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6102
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1750": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D7C"
    },
    "1753": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6058,
        6102
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1754": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6058,
        6102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1755": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6057,
        6111
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "1758": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6057,
        6111
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1759": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6057,
        6111
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1760": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6057,
        6111
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D7C"
    },
    "1763": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        6057,
        6111
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1764": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        6057,
        6111
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1765": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1767": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "op": "SUB"
    },
    "1776": {
      "op": "NOT"
    },
    "1777": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1779": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1780": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1781": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SHL",
      "path": "4"
    },
    "1782": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "AND",
      "path": "4"
    },
    "1783": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1784": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "op": "SWAP1"
    },
    "1794": {
      "op": "SWAP3"
    },
    "1795": {
      "op": "AND"
    },
    "1796": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1798": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1799": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ADD",
      "path": "4"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1803": {
      "op": "DUP3"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1811": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1813": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1814": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1815": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1816": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SUB",
      "path": "4"
    },
    "1817": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1818": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1820": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1821": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "GAS",
      "path": "4"
    },
    "1822": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "CALL",
      "path": "4"
    },
    "1823": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1824": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1825": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1826": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72F"
    },
    "1829": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1830": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1831": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1833": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1834": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1835": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1836": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1838": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1839": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1840": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1841": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1842": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1843": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1844": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1846": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1847": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1848": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1850": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "NOT",
      "path": "4"
    },
    "1851": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1853": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1854": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ADD",
      "path": "4"
    },
    "1855": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "AND",
      "path": "4"
    },
    "1856": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1857": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ADD",
      "path": "4"
    },
    "1858": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1859": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1861": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1862": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1863": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1864": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "ADD",
      "path": "4"
    },
    "1865": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1866": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x753"
    },
    "1869": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1870": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1871": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9E"
    },
    "1874": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "i",
      "offset": [
        5998,
        6121
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1875": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1876": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5998,
        6121
      ],
      "op": "POP",
      "path": "4"
    },
    "1877": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5677,
        6137
      ],
      "op": "POP",
      "path": "4"
    },
    "1878": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "POP",
      "path": "4"
    },
    "1879": {
      "fn": "DailyRocket.claimWinnings",
      "offset": [
        5611,
        6137
      ],
      "op": "POP",
      "path": "4"
    },
    "1880": {
      "fn": "DailyRocket.claimWinnings",
      "jump": "o",
      "offset": [
        5611,
        6137
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1881": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1882": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7187,
        7207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1884": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x767"
    },
    "1887": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1888": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1889": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "ADD",
      "path": "4"
    },
    "1890": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7221,
        7232
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1891": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18EE"
    },
    "1894": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7210,
        7244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1895": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7210,
        7244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1896": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7187,
        7244
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "branch": 48,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7258,
        7275
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1899": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7254,
        7380
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BD"
    },
    "1902": {
      "branch": 48,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7254,
        7380
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1903": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7291,
        7311
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x776"
    },
    "1906": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7291,
        7309
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EE"
    },
    "1909": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7291,
        7311
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1910": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7291,
        7311
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1911": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7325,
        7345
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x77E"
    },
    "1914": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7325,
        7343
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "1917": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7325,
        7345
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1918": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7325,
        7345
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1919": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x4"
    },
    "1921": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1922": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "AND",
      "path": "4"
    },
    "1932": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1933": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7367
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1935": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x797"
    },
    "1938": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1939": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC0"
    },
    "1942": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7359,
        7369
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1943": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1944": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1945": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1946": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1949": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "EXP",
      "path": "4"
    },
    "1950": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1951": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1952": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "MUL",
      "path": "4"
    },
    "1962": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "NOT",
      "path": "4"
    },
    "1963": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "AND",
      "path": "4"
    },
    "1964": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1965": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "op": "SUB"
    },
    "1974": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "AND",
      "path": "4"
    },
    "1975": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "MUL",
      "path": "4"
    },
    "1976": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "OR",
      "path": "4"
    },
    "1977": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1978": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1979": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "POP",
      "path": "4"
    },
    "1980": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7359,
        7369
      ],
      "op": "POP",
      "path": "4"
    },
    "1981": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7254,
        7380
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1982": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7393,
        7405
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1983": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7409,
        7410
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1985": {
      "branch": 49,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7393,
        7410
      ],
      "op": "EQ",
      "path": "4"
    },
    "1986": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7389,
        7448
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1987": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7389,
        7448
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CE"
    },
    "1990": {
      "branch": 49,
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7389,
        7448
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1991": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7426,
        7437
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 7,
      "value": "0x7CE"
    },
    "1994": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7426,
        7435
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15E6"
    },
    "1997": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "i",
      "offset": [
        7426,
        7437
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1998": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7426,
        7437
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1999": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7176,
        7454
      ],
      "op": "POP",
      "path": "4"
    },
    "2000": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "POP",
      "path": "4"
    },
    "2001": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        7107,
        7454
      ],
      "op": "POP",
      "path": "4"
    },
    "2002": {
      "fn": "DailyRocket.performUpkeep",
      "jump": "o",
      "offset": [
        7107,
        7454
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2003": {
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2004": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x11"
    },
    "2006": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2008": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2009": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2010": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2011": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2013": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2014": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2015": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2016": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2018": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2019": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2020": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2021": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2022": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2023": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2024": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "ADD",
      "path": "4"
    },
    "2025": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2026": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "ADD",
      "path": "4"
    },
    "2027": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2028": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2029": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2030": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2031": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2032": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2033": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2034": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "ADD",
      "path": "4"
    },
    "2035": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2036": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2037": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "ADD",
      "path": "4"
    },
    "2038": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2039": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2040": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2041": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2042": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2043": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2044": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2045": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2046": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2047": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2048": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2049": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "LT",
      "path": "4"
    },
    "2050": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80A"
    },
    "2053": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2054": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2056": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2057": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2058": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2059": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2061": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2062": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2063": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2064": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2066": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2067": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2068": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2069": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "ADD",
      "path": "4"
    },
    "2070": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "SUB"
    },
    "2079": {
      "offset": [
        2099,
        2172
      ],
      "op": "AND",
      "path": "4"
    },
    "2080": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "offset": [
        2099,
        2172
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2083": {
      "fn": "DailyRocket.performUpkeep",
      "offset": [
        2099,
        2172
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "jump": "o",
      "offset": [
        2099,
        2172
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2087": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5100,
        5347
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2088": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5139,
        5143
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2090": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5154,
        5185
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2091": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5210,
        5252
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0x6135B13325BFC4B00278B4ABC5E20BBCE2D6580E"
    },
    "2112": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5154,
        5253
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2113": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5154,
        5253
      ],
      "op": "POP",
      "path": "4"
    },
    "2114": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5267,
        5278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2116": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5292
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "SUB"
    },
    "2125": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5308
      ],
      "op": "AND",
      "path": "4"
    },
    "2126": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5308
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2131": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2133": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2134": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2135": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2140": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "AND",
      "path": "4"
    },
    "2141": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2143": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "SHL",
      "path": "4"
    },
    "2144": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2145": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2146": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2148": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ADD",
      "path": "4"
    },
    "2149": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2151": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2153": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2154": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2155": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2156": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "SUB",
      "path": "4"
    },
    "2157": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2158": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2159": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "GAS",
      "path": "4"
    },
    "2160": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2161": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2162": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2163": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2164": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x881"
    },
    "2167": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2168": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2169": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2171": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2172": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2173": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2174": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2176": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2177": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2178": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "POP",
      "path": "4"
    },
    "2179": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "POP",
      "path": "4"
    },
    "2180": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "POP",
      "path": "4"
    },
    "2181": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "POP",
      "path": "4"
    },
    "2182": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2184": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2185": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2186": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2188": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "NOT",
      "path": "4"
    },
    "2189": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2191": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2192": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ADD",
      "path": "4"
    },
    "2193": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "AND",
      "path": "4"
    },
    "2194": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2195": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ADD",
      "path": "4"
    },
    "2196": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2197": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2199": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2200": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "POP",
      "path": "4"
    },
    "2201": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2202": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "ADD",
      "path": "4"
    },
    "2203": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2204": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "2207": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2208": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2209": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E01"
    },
    "2212": {
      "fn": "DailyRocket.getTime",
      "jump": "i",
      "offset": [
        5283,
        5310
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2213": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5283,
        5310
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5263,
        5310
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2216": {
      "fn": "DailyRocket.getTime",
      "offset": [
        5100,
        5347
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "op": "POP"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "fn": "DailyRocket.getTime",
      "jump": "o",
      "offset": [
        5100,
        5347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2224": {
      "offset": [
        1665,
        1739
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2225": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "2227": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2229": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2230": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2231": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2232": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2234": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2235": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2236": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2237": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2239": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2240": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2241": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2242": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2243": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2244": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2245": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "ADD",
      "path": "4"
    },
    "2246": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2247": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "ADD",
      "path": "4"
    },
    "2248": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2249": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2250": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2251": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2252": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2253": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2254": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2255": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "ADD",
      "path": "4"
    },
    "2256": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2257": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2258": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "ADD",
      "path": "4"
    },
    "2259": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2260": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2261": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2262": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2263": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2264": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2265": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2266": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2267": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2268": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2269": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2270": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "LT",
      "path": "4"
    },
    "2271": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80A"
    },
    "2274": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2275": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2277": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2278": {
      "fn": "DailyRocket.getTime",
      "offset": [
        1665,
        1739
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2279": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2280": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6671,
        6688
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2282": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6690,
        6714
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2284": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6772,
        6781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F3"
    },
    "2287": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6772,
        6779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "2290": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6772,
        6781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2291": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6772,
        6781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2292": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6743,
        6751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2294": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6743,
        6751
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "op": "SUB"
    },
    "2303": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6743,
        6751
      ],
      "op": "AND",
      "path": "4"
    },
    "2304": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2306": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2307": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2308": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2309": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2311": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2313": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2314": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2316": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2317": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2318": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6752
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2319": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91B"
    },
    "2322": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6768
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2323": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6755,
        6768
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x15180"
    },
    "2327": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "2330": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6730,
        6768
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2331": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6768
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2332": {
      "branch": 50,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6730,
        6781
      ],
      "op": "EQ",
      "path": "4"
    },
    "2333": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6726,
        6883
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2334": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6726,
        6883
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x94C"
    },
    "2337": {
      "branch": 50,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6726,
        6883
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2338": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x40"
    },
    "2340": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2341": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2342": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6868,
        6869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2344": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2346": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2347": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "ADD",
      "path": "4"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6811,
        6815
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x1"
    },
    "2351": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6811,
        6815
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2352": {
      "op": "POP"
    },
    "2353": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6811,
        6815
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2354": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6811,
        6815
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2357": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2359": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2360": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2362": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2363": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2364": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "SUB",
      "path": "4"
    },
    "2365": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "SUB",
      "path": "4"
    },
    "2366": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2367": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2368": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2369": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2371": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6843,
        6871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2372": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2373": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "POP",
      "path": "4"
    },
    "2374": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2375": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "POP",
      "path": "4"
    },
    "2376": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F0"
    },
    "2379": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6829,
        6872
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2380": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6726,
        6883
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2381": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6929
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2383": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6929
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2384": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6920
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2386": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2387": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2389": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2390": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6932
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96A"
    },
    "2393": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6932
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2394": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6931,
        6932
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2396": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6931,
        6932
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "op": "SUB"
    },
    "2405": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6929
      ],
      "op": "AND",
      "path": "4"
    },
    "2406": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6932
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E69"
    },
    "2409": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6921,
        6932
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2410": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6921,
        6932
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "op": "SUB"
    },
    "2419": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "AND",
      "path": "4"
    },
    "2420": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2421": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2422": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2424": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "ADD",
      "path": "4"
    },
    "2425": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2426": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2427": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2428": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2430": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "ADD",
      "path": "4"
    },
    "2431": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2433": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2434": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6933
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2435": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6936,
        6949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "2438": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x98F"
    },
    "2441": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2442": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2443": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "2446": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6908,
        6949
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2447": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6908,
        6949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2448": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6896,
        6905
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x997"
    },
    "2451": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6896,
        6903
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "2454": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "i",
      "offset": [
        6896,
        6905
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2455": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6896,
        6905
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2456": {
      "branch": 51,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6896,
        6949
      ],
      "op": "GT",
      "path": "4"
    },
    "2457": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6892,
        7049
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2458": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6892,
        7049
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B6"
    },
    "2461": {
      "branch": 51,
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6892,
        7049
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2462": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6980,
        6984
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x1"
    },
    "2464": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6965,
        6984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2465": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6965,
        6984
      ],
      "op": "POP",
      "path": "4"
    },
    "2466": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7006,
        7010
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "2468": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7034,
        7035
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2469": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2471": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2472": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2474": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2475": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x934"
    },
    "2478": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7012,
        7037
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2479": {
      "op": "DUP2"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "SWAP1"
    },
    "2485": {
      "op": "JUMP"
    },
    "2486": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6892,
        7049
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2487": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7072,
        7081
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 12
    },
    "2488": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7072,
        7081
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2489": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2490": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2491": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2493": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "ADD",
      "path": "4"
    },
    "2494": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2496": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2497": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2498": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DIV",
      "path": "4"
    },
    "2499": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "MUL",
      "path": "4"
    },
    "2500": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2502": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "ADD",
      "path": "4"
    },
    "2503": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2505": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2506": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2507": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2508": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "ADD",
      "path": "4"
    },
    "2509": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2511": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2512": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2513": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2514": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2515": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2516": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2517": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2518": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2519": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2520": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2522": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "ADD",
      "path": "4"
    },
    "2523": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2524": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2525": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2526": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2527": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2528": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "2529": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2531": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2532": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "ADD",
      "path": "4"
    },
    "2533": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2534": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2535": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2536": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2537": {
      "op": "POP"
    },
    "2538": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2539": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        7058,
        7081
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2545": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2546": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "POP",
      "path": "4"
    },
    "2547": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2548": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2549": {
      "fn": "DailyRocket.checkUpkeep",
      "offset": [
        6592,
        7097
      ],
      "op": "POP",
      "path": "4"
    },
    "2550": {
      "fn": "DailyRocket.checkUpkeep",
      "jump": "o",
      "offset": [
        6592,
        7097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2551": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2552": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2554": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2561": {
      "op": "SHL"
    },
    "2562": {
      "op": "SUB"
    },
    "2563": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2564": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 13
    },
    "2565": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2566": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2A"
    },
    "2569": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2570": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2572": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2581": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2584": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2585": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA21"
    },
    "2588": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2589": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E91"
    },
    "2592": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2593": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2594": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2596": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2597": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2598": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2599": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "2600": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2601": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2602": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0xA34"
    },
    "2606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17CE"
    },
    "2611": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2612": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2613": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2614": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2615": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2617": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "op": "SUB"
    },
    "2626": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2627": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2628": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2629": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA60"
    },
    "2632": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2633": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2635": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2644": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2645": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2647": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2648": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA21"
    },
    "2651": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E91"
    },
    "2655": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2656": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2657": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3047
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x5"
    },
    "2659": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2660": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2661": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2663": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2664": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "ADD",
      "path": "4"
    },
    "2665": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2666": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2669": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2670": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2671": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2672": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2673": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2674": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2675": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAA3"
    },
    "2678": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2679": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2712": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "ADD",
      "path": "4"
    },
    "2713": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2714": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2716": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2717": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "ADD",
      "path": "4"
    },
    "2718": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2719": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181E"
    },
    "2722": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3030,
        3060
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2723": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3030,
        3060
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2724": {
      "op": "POP"
    },
    "2725": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3091
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x6"
    },
    "2727": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2728": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2729": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2731": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2732": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2733": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "ADD",
      "path": "4"
    },
    "2734": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2735": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2738": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2739": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2740": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2741": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2742": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "2775": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "ADD",
      "path": "4"
    },
    "2776": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2777": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "op": "NOT"
    },
    "2787": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "AND",
      "path": "4"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2797": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "AND",
      "path": "4"
    },
    "2798": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "OR",
      "path": "4"
    },
    "2799": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2800": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3070,
        3109
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2801": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x40"
    },
    "2803": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2804": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3130
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2806": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3130
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2807": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB01"
    },
    "2810": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2811": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3131,
        3137
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2812": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3131,
        3137
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2813": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "2816": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "i",
      "offset": [
        3119,
        3138
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2817": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2818": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2819": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2820": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2821": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2823": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2824": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2825": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2826": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2827": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SUB",
      "path": "4"
    },
    "2828": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2830": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "ADD",
      "path": "4"
    },
    "2831": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2832": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3138
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2833": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2834": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2835": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2836": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2837": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2840": {
      "op": "NOT"
    },
    "2841": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2842": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2843": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "AND",
      "path": "4"
    },
    "2844": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2845": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2846": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2847": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "OR",
      "path": "4"
    },
    "2848": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2849": {
      "fn": "DailyRocket.addAssetAndAgg",
      "offset": [
        3119,
        3145
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "fn": "DailyRocket.addAssetAndAgg",
      "jump": "o",
      "offset": [
        2936,
        3152
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2853": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2863": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "AND",
      "path": "4"
    },
    "2864": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6265,
        6269
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2866": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2867": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2868": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2869": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2871": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2873": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2874": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2876": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2877": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2878": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6307
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2879": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2880": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2881": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4B"
    },
    "2884": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2885": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6308,
        6314
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2886": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6308,
        6314
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2887": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "2890": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6283,
        6315
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2891": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2892": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2893": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2894": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2895": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2897": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "ADD",
      "path": "4"
    },
    "2898": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2900": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2901": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2902": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2903": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SUB",
      "path": "4"
    },
    "2904": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2905": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2906": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6315
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2907": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6319,
        6320
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2909": {
      "branch": 52,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6283,
        6320
      ],
      "op": "EQ",
      "path": "4"
    },
    "2910": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6280,
        6576
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2911": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6280,
        6576
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6A"
    },
    "2914": {
      "branch": 52,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6280,
        6576
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6343,
        6347
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x1"
    },
    "2918": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6336,
        6347
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC06"
    },
    "2921": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6336,
        6347
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2922": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6280,
        6576
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "SUB"
    },
    "2931": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 19
    },
    "2932": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "AND",
      "path": "4"
    },
    "2933": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2935": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2936": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2937": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2938": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2940": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2942": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2943": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2945": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2946": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2947": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2948": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6518
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2949": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2950": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2951": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB91"
    },
    "2954": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2955": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6519,
        6525
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2956": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6519,
        6525
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2957": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "2960": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6494,
        6526
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2961": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2962": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2963": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2964": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2965": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2967": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "ADD",
      "path": "4"
    },
    "2968": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2970": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2971": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2972": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2973": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SUB",
      "path": "4"
    },
    "2974": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2975": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2976": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6494,
        6526
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2977": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6424
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "2979": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2981": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6425,
        6429
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "AND",
      "path": "4"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "op": "SUB"
    },
    "2999": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "AND",
      "path": "4"
    },
    "3000": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3001": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3002": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3004": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "ADD",
      "path": "4"
    },
    "3005": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3006": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3007": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3008": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3010": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "ADD",
      "path": "4"
    },
    "3011": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3013": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6430
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3014": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6431,
        6437
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3015": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3017": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3018": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD3"
    },
    "3021": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3022": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3023": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3026": {
      "fn": "DailyRocket.isAwinner",
      "jump": "i",
      "offset": [
        6402,
        6438
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3027": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3028": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3029": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3030": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3031": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3033": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3034": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3035": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3037": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3038": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3039": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3040": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SUB",
      "path": "4"
    },
    "3041": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3042": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "ADD",
      "path": "4"
    },
    "3043": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3044": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6438
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3051": {
      "op": "SHL"
    },
    "3052": {
      "op": "SUB"
    },
    "3053": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3054": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "AND",
      "path": "4"
    },
    "3055": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3057": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3058": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3059": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3060": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3061": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3062": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3063": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6447
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3064": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6458
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3065": {
      "branch": 53,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6402,
        6526
      ],
      "op": "EQ",
      "path": "4"
    },
    "3066": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC02"
    },
    "3069": {
      "branch": 53,
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3070": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3072": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3073": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3074": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6377,
        6540
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3075": {
      "op": "POP"
    },
    "3076": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6561,
        6565
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x1"
    },
    "3078": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6280,
        6576
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3079": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3080": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3081": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "POP",
      "path": "4"
    },
    "3082": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "POP",
      "path": "4"
    },
    "3083": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        6143,
        6582
      ],
      "op": "POP",
      "path": "4"
    },
    "3084": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        6143,
        6582
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3085": {
      "offset": [
        1585,
        1658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3086": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "3088": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3090": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3091": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3092": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3093": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3095": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3096": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3097": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3098": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3100": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3101": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3102": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3103": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3104": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3105": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3106": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "ADD",
      "path": "4"
    },
    "3107": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3108": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "ADD",
      "path": "4"
    },
    "3109": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3110": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3111": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3112": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3113": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3114": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3115": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3116": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "ADD",
      "path": "4"
    },
    "3117": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3118": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3119": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "ADD",
      "path": "4"
    },
    "3120": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3121": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3122": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3123": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3124": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3125": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3126": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3127": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3128": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3129": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3130": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3131": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "LT",
      "path": "4"
    },
    "3132": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC44"
    },
    "3135": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3136": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3138": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3139": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3140": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3141": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3142": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3144": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3145": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3147": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3149": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3150": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "ADD",
      "path": "4"
    },
    "3151": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3153": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3154": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "POP",
      "path": "4"
    },
    "3155": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3156": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "POP",
      "path": "4"
    },
    "3157": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "POP",
      "path": "4"
    },
    "3158": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "POP",
      "path": "4"
    },
    "3159": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3160": {
      "fn": "DailyRocket.isAwinner",
      "offset": [
        1585,
        1658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3161": {
      "fn": "DailyRocket.isAwinner",
      "jump": "o",
      "offset": [
        1585,
        1658
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3162": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3163": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3290
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 21,
      "value": "0x7"
    },
    "3165": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3291,
        3297
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3166": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3168": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3169": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC6A"
    },
    "3172": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3173": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3174": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3177": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3279,
        3298
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3178": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3179": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3180": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3181": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3182": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3184": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3185": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3186": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3187": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3188": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SUB",
      "path": "4"
    },
    "3189": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3191": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "ADD",
      "path": "4"
    },
    "3192": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3193": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3194": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3195": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "3197": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "AND",
      "path": "4"
    },
    "3198": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3306
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3199": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3306
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3200": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3298
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3202": {
      "branch": 54,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3279,
        3306
      ],
      "op": "EQ",
      "path": "4"
    },
    "3203": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC8B"
    },
    "3206": {
      "branch": 54,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3207": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3209": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3210": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3211": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3271,
        3307
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3212": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3329
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3214": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3329
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3215": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3332,
        3333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "op": "SUB"
    },
    "3225": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3329
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3226": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3329
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3227": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3329
      ],
      "op": "AND",
      "path": "4"
    },
    "3228": {
      "branch": 55,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3321,
        3333
      ],
      "op": "GT",
      "path": "4"
    },
    "3229": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3317,
        3452
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3230": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3317,
        3452
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF7"
    },
    "3233": {
      "branch": 55,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3317,
        3452
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3234": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3391
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 22,
      "value": "0x4"
    },
    "3236": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3391
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3237": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "3239": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3382
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3240": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3242": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3243": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCBF"
    },
    "3246": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3247": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3393,
        3394
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3249": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3393,
        3394
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3391
      ],
      "op": "AND",
      "path": "4"
    },
    "3259": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E69"
    },
    "3262": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3383,
        3394
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3263": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3383,
        3394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3270": {
      "op": "SHL"
    },
    "3271": {
      "op": "SUB"
    },
    "3272": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "AND",
      "path": "4"
    },
    "3273": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3274": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3275": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3277": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "ADD",
      "path": "4"
    },
    "3278": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3279": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3280": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3281": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3283": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "ADD",
      "path": "4"
    },
    "3284": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3286": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3287": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3395
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3288": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3398,
        3411
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "3291": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3411
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE4"
    },
    "3294": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3411
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3295": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3296": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3411
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "3299": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3370,
        3411
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3300": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3370,
        3411
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3301": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3357,
        3366
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCEC"
    },
    "3304": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3357,
        3364
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "3307": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3357,
        3366
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3308": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3357,
        3366
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3309": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3357,
        3411
      ],
      "op": "GT",
      "path": "4"
    },
    "3310": {
      "branch": 56,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3357,
        3411
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3311": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCF7"
    },
    "3314": {
      "branch": 56,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3315": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3317": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3318": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3319": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3349,
        3412
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3320": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0xA"
    },
    "3322": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3323": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3325": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3326": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3333": {
      "op": "SHL"
    },
    "3334": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3335": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3336": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3582,
        3592
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3337": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3339": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3340": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ADD",
      "path": "4"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3602,
        3606
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "MSTORE"
    },
    "3348": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3478,
        3498
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0x8AC7230489E80000"
    },
    "3357": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3478,
        3498
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3358": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3478,
        3498
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3359": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3478,
        3498
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3366": {
      "op": "SHL"
    },
    "3367": {
      "op": "SUB"
    },
    "3368": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3369": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3370": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "AND",
      "path": "4"
    },
    "3371": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3567,
        3570
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3372": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3581
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "3377": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3383": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3385": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3386": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3387": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3388": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "SUB",
      "path": "4"
    },
    "3389": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3390": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3391": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "GAS",
      "path": "4"
    },
    "3392": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3393": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3394": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3395": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3396": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD51"
    },
    "3399": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3400": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3401": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3403": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3404": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3405": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3406": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3408": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3409": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3410": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "POP",
      "path": "4"
    },
    "3411": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "POP",
      "path": "4"
    },
    "3412": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "POP",
      "path": "4"
    },
    "3413": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "POP",
      "path": "4"
    },
    "3414": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3416": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3417": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3418": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3420": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "NOT",
      "path": "4"
    },
    "3421": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3423": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3424": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ADD",
      "path": "4"
    },
    "3425": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "AND",
      "path": "4"
    },
    "3426": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3427": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ADD",
      "path": "4"
    },
    "3428": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3429": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3431": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3432": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "POP",
      "path": "4"
    },
    "3433": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3434": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "ADD",
      "path": "4"
    },
    "3435": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3436": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD75"
    },
    "3439": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3440": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3441": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC6"
    },
    "3444": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3560,
        3608
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3445": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3446": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3624
      ],
      "op": "LT",
      "path": "4"
    },
    "3447": {
      "branch": 57,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3560,
        3624
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3448": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD80"
    },
    "3451": {
      "branch": 57,
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3452": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3454": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3455": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3456": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3552,
        3625
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3457": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0xA"
    },
    "3459": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3460": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3462": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3463": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3472": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3473": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3660,
        3670
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3474": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3476": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3477": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "3478": {
      "op": "MSTORE"
    },
    "3479": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3680,
        3684
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3482": {
      "op": "DUP3"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "MSTORE"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "DUP4"
    },
    "3490": {
      "op": "SWAP1"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3498": {
      "op": "SHL"
    },
    "3499": {
      "op": "SUB"
    },
    "3500": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3501": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3502": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "AND",
      "path": "4"
    },
    "3503": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3642,
        3645
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3504": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3659
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "3509": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3515": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3517": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3518": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3519": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3520": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "SUB",
      "path": "4"
    },
    "3521": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3522": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3524": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3525": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "GAS",
      "path": "4"
    },
    "3526": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "CALL",
      "path": "4"
    },
    "3527": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3528": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3529": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3530": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDD7"
    },
    "3533": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3534": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3535": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3537": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3538": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3539": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3540": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3542": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3543": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3544": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "3545": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "3546": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "3547": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "3548": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3550": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3551": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3552": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3554": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "NOT",
      "path": "4"
    },
    "3555": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3557": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3558": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "3559": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "AND",
      "path": "4"
    },
    "3560": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3561": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "3562": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3563": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3565": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3566": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "3567": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3568": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "3569": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3570": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDFB"
    },
    "3573": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3574": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3575": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9E"
    },
    "3578": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3635,
        3700
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3579": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3635,
        3700
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3739,
        3747
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x4"
    },
    "3583": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3739,
        3747
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3739,
        3747
      ],
      "op": "AND",
      "path": "4"
    },
    "3593": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3595": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3596": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3597": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3598": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3738
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "3600": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3602": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3603": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3605": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3606": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3607": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3608": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3609": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3610": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3611": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3760,
        3766
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3612": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3760,
        3766
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3613": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3614": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE28"
    },
    "3617": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3618": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3749,
        3755
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3619": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3749,
        3755
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3620": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3623": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3719,
        3756
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3624": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3625": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3626": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3627": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3628": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3630": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "ADD",
      "path": "4"
    },
    "3631": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3633": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3634": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3635": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3636": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SUB",
      "path": "4"
    },
    "3637": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3638": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3639": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3756
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3641": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3642": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3643": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3644": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE45"
    },
    "3647": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3648": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3649": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "3652": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3719,
        3766
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3653": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3654": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3655": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "POP",
      "path": "4"
    },
    "3656": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "POP",
      "path": "4"
    },
    "3657": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3658": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3659": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3660": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3719,
        3766
      ],
      "op": "POP",
      "path": "4"
    },
    "3661": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x40"
    },
    "3663": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3664": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3665": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3667": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3668": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3670": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3671": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3672": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3896,
        3907
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3673": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3674": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3675": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3677": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3678": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3921,
        3930
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE65"
    },
    "3681": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3921,
        3928
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "3684": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3921,
        3930
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3685": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3921,
        3930
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3686": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3687": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3688": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3944,
        3949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3690": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3692": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3693": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3694": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3695": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3696": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3697": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3872,
        3959
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3698": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3840,
        3848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3700": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3840,
        3848
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3840,
        3848
      ],
      "op": "AND",
      "path": "4"
    },
    "3710": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3711": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3712": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3839
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "3714": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3715": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3716": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3717": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3719": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3720": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3721": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3722": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3849
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3723": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3724": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3725": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE97"
    },
    "3728": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3729": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3850,
        3856
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3730": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3850,
        3856
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3731": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3734": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        3817,
        3857
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3735": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3736": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3737": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3738": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3739": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3741": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3742": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3743": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3745": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3746": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3747": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3748": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "SUB",
      "path": "4"
    },
    "3749": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3750": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "ADD",
      "path": "4"
    },
    "3751": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3752": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3857
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3753": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3858,
        3868
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3754": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3756": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3757": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3758": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3759": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3760": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3761": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3762": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3763": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3764": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3869
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3765": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3766": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3767": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3768": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3769": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3770": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3771": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3772": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3773": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3775": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3776": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3777": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3778": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3779": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3780": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3781": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3782": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3784": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3785": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3786": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ADD",
      "path": "4"
    },
    "3787": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3788": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3791": {
      "op": "NOT"
    },
    "3792": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "AND",
      "path": "4"
    },
    "3793": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3794": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3795": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3796": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3797": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3798": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3799": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "OR",
      "path": "4"
    },
    "3800": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3801": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3802": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3817,
        3959
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3803": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4030,
        4038
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 27,
      "value": "0x4"
    },
    "3805": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4030,
        4038
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "op": "SUB"
    },
    "3814": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4030,
        4038
      ],
      "op": "AND",
      "path": "4"
    },
    "3815": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3816": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3817": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "3819": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3820": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3821": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3822": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3823": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3824": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3825": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4039
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3826": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEFC"
    },
    "3829": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3830": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4040,
        4046
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3831": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4040,
        4046
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3832": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3835": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4011,
        4047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3836": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3837": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3838": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3839": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3840": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3842": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3843": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3844": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3845": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3846": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3847": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SUB",
      "path": "4"
    },
    "3848": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3850": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3851": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3852": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "ADD",
      "path": "4"
    },
    "3853": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3854": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4047
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3855": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3856": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3857": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3859": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3860": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "ADD",
      "path": "4"
    },
    "3861": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3862": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3865": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3866": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3867": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3868": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3869": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3870": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3871": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "ADD",
      "path": "4"
    },
    "3872": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3873": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3874": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4011,
        4065
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3875": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4143,
        4151
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 28,
      "value": "0x4"
    },
    "3877": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4143,
        4151
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4143,
        4151
      ],
      "op": "AND",
      "path": "4"
    },
    "3887": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3888": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3889": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "3891": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3892": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3893": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3894": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3895": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3896": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF42"
    },
    "3899": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3900": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4153,
        4159
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3901": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4153,
        4159
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3902": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D2B"
    },
    "3905": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "i",
      "offset": [
        4124,
        4160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3906": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3907": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3908": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3909": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3910": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3912": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3913": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3915": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3916": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3917": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3918": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "SUB",
      "path": "4"
    },
    "3919": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3920": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "ADD",
      "path": "4"
    },
    "3921": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3922": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4160
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3923": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3924": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3925": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3927": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3928": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "ADD",
      "path": "4"
    },
    "3929": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3930": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3933": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3934": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3935": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3936": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3937": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3938": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3939": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3940": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "ADD",
      "path": "4"
    },
    "3941": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3942": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3943": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4166,
        4176
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3950": {
      "op": "SHL"
    },
    "3951": {
      "op": "SUB"
    },
    "3952": {
      "op": "NOT"
    },
    "3953": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3954": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3955": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "AND",
      "path": "4"
    },
    "3956": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3957": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "OR",
      "path": "4"
    },
    "3958": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3959": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3960": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4124,
        4177
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3961": {
      "op": "DUP5"
    },
    "3962": {
      "op": "DUP3"
    },
    "3963": {
      "op": "MSTORE"
    },
    "3964": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4166,
        4176
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3965": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 29,
      "value": "0x10FE2ED8F3DAA306F14DE54294A550F0F7DEC5E7138F0CF277EAC43BC95AAB6F"
    },
    "3998": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4002": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4003": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4004": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4005": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "SUB",
      "path": "4"
    },
    "4006": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4007": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        4193,
        4227
      ],
      "op": "LOG2",
      "path": "4"
    },
    "4008": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3258,
        4234
      ],
      "op": "POP",
      "path": "4"
    },
    "4009": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "POP",
      "path": "4"
    },
    "4010": {
      "fn": "DailyRocket.predictClosePrice",
      "offset": [
        3158,
        4234
      ],
      "op": "POP",
      "path": "4"
    },
    "4011": {
      "fn": "DailyRocket.predictClosePrice",
      "jump": "o",
      "offset": [
        3158,
        4234
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4012": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4013": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5410,
        5413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4015": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5424,
        5455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4016": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5501
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "4018": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5502,
        5511
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4019": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4020": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4021": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4022": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "LT",
      "path": "4"
    },
    "4023": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFC2"
    },
    "4026": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4027": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFC2"
    },
    "4030": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4033": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5480,
        5512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4034": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4035": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4036": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4038": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4039": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4041": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4043": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4044": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "ADD",
      "path": "4"
    },
    "4045": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4047": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4048": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4049": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4050": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "4053": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "EXP",
      "path": "4"
    },
    "4054": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4055": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "DIV",
      "path": "4"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "op": "SUB"
    },
    "4064": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5480,
        5512
      ],
      "op": "AND",
      "path": "4"
    },
    "4065": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5424,
        5513
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4066": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5424,
        5513
      ],
      "op": "POP",
      "path": "4"
    },
    "4067": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5525,
        5535
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4069": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5551
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4076": {
      "op": "SHL"
    },
    "4077": {
      "op": "SUB"
    },
    "4078": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5567
      ],
      "op": "AND",
      "path": "4"
    },
    "4079": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5567
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "4084": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4086": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4087": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4088": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "4093": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "AND",
      "path": "4"
    },
    "4094": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "4096": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "SHL",
      "path": "4"
    },
    "4097": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4098": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4099": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4101": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ADD",
      "path": "4"
    },
    "4102": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "4104": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4106": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4107": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4108": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4109": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "SUB",
      "path": "4"
    },
    "4110": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4111": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP7",
      "path": "4"
    },
    "4112": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "GAS",
      "path": "4"
    },
    "4113": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "4114": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4115": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4116": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4117": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1022"
    },
    "4120": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4121": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4122": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4124": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4125": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "4126": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4127": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4129": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4130": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4131": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "POP",
      "path": "4"
    },
    "4132": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "POP",
      "path": "4"
    },
    "4133": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "POP",
      "path": "4"
    },
    "4134": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "POP",
      "path": "4"
    },
    "4135": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4137": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4138": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "4139": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4141": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "NOT",
      "path": "4"
    },
    "4142": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4144": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4145": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ADD",
      "path": "4"
    },
    "4146": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "AND",
      "path": "4"
    },
    "4147": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4148": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ADD",
      "path": "4"
    },
    "4149": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4150": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4152": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4153": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "POP",
      "path": "4"
    },
    "4154": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4155": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "ADD",
      "path": "4"
    },
    "4156": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4157": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1046"
    },
    "4160": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4161": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4162": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E01"
    },
    "4165": {
      "fn": "DailyRocket.getPrice",
      "jump": "i",
      "offset": [
        5542,
        5569
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4166": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5542,
        5569
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5523,
        5569
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4169": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5523,
        5569
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "4170": {
      "fn": "DailyRocket.getPrice",
      "offset": [
        5353,
        5605
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "4171": {
      "op": "POP"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "op": "POP"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "fn": "DailyRocket.getPrice",
      "jump": "o",
      "offset": [
        5353,
        5605
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4180": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4182": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4189": {
      "op": "SHL"
    },
    "4190": {
      "op": "SUB"
    },
    "4191": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4192": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4193": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4194": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107D"
    },
    "4197": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4198": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4200": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4207": {
      "op": "SHL"
    },
    "4208": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4209": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4210": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4212": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4213": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA21"
    },
    "4216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4217": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E91"
    },
    "4220": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4221": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4228": {
      "op": "SHL"
    },
    "4229": {
      "op": "SUB"
    },
    "4230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 30
    },
    "4231": {
      "branch": 61,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E2"
    },
    "4235": {
      "branch": 61,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4254": {
      "op": "MSTORE"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4259": {
      "op": "DUP3"
    },
    "4260": {
      "op": "ADD"
    },
    "4261": {
      "op": "MSTORE"
    },
    "4262": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4312": {
      "op": "DUP3"
    },
    "4313": {
      "op": "ADD"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA21"
    },
    "4321": {
      "op": "JUMP"
    },
    "4322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x10EB"
    },
    "4326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17CE"
    },
    "4330": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4333": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4334": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2724,
        2926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4335": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2778,
        2787
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4337": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4338": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2797,
        2818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "4340": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2797,
        2825
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4341": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2793,
        2825
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4342": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2793,
        2825
      ],
      "op": "LT",
      "path": "4"
    },
    "4343": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4344": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EB"
    },
    "4347": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4348": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2898,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0x1104"
    },
    "4351": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2907,
        2908
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4352": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2898,
        2906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFAC"
    },
    "4355": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        2898,
        2909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4356": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2898,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4357": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2864,
        2872
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4359": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2864,
        2872
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4366": {
      "op": "SHL"
    },
    "4367": {
      "op": "SUB"
    },
    "4368": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2864,
        2872
      ],
      "op": "AND",
      "path": "4"
    },
    "4369": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4371": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4372": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4373": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4374": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4376": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4378": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4379": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4381": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4382": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2873
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4383": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4385": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4386": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4387": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2892,
        2893
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4388": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2892,
        2893
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4389": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4390": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "LT",
      "path": "4"
    },
    "4391": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1132"
    },
    "4394": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4395": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1132"
    },
    "4398": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4401": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        2874,
        2894
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4402": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4403": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4404": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4406": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4407": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4409": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4411": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4412": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2874,
        2894
      ],
      "op": "ADD",
      "path": "4"
    },
    "4413": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4415": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4416": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1149"
    },
    "4419": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4420": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4421": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4424": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        2845,
        2895
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4425": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4426": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4427": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4428": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4429": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4431": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4432": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4433": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4434": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4435": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SUB",
      "path": "4"
    },
    "4436": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4438": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "ADD",
      "path": "4"
    },
    "4439": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4440": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2895
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4441": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2845,
        2909
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "4442": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 33
    },
    "4443": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1163"
    },
    "4446": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4447": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F91"
    },
    "4450": {
      "fn": "DailyRocket.setNewClosingPrice",
      "jump": "i",
      "offset": [
        2827,
        2830
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4451": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4452": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4453": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "POP",
      "path": "4"
    },
    "4454": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2827,
        2830
      ],
      "op": "POP",
      "path": "4"
    },
    "4455": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10F1"
    },
    "4458": {
      "fn": "DailyRocket.setNewClosingPrice",
      "offset": [
        2773,
        2920
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4459": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4240,
        5093
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4460": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4302,
        4310
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4302,
        4310
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "SUB"
    },
    "4471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4302,
        4310
      ],
      "op": "AND",
      "path": "4"
    },
    "4472": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4288,
        4299
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4474": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4342,
        4359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4477": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4342,
        4366
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4338,
        4366
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4480": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4338,
        4366
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4481": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4338,
        4366
      ],
      "op": "AND",
      "path": "4"
    },
    "4482": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4338,
        4366
      ],
      "op": "LT",
      "path": "4"
    },
    "4483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4484": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15E2"
    },
    "4487": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4494": {
      "op": "SHL"
    },
    "4495": {
      "op": "SUB"
    },
    "4496": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 34
    },
    "4497": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "AND",
      "path": "4"
    },
    "4498": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4500": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4501": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4502": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4503": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "4505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4508": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4510": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4511": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4523
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4512": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4514": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4515": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4516": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4518": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4519": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "AND",
      "path": "4"
    },
    "4520": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4521": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4522": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "LT",
      "path": "4"
    },
    "4523": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11B6"
    },
    "4526": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4527": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11B6"
    },
    "4530": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4533": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4534": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4535": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4536": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4538": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4539": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4541": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4543": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4544": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4524,
        4544
      ],
      "op": "ADD",
      "path": "4"
    },
    "4545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4547": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4548": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11CD"
    },
    "4551": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4552": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4553": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4556": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4500,
        4545
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4557": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4558": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4559": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4560": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4563": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "ADD",
      "path": "4"
    },
    "4564": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4566": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4567": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4568": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4569": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SUB",
      "path": "4"
    },
    "4570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4571": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4545
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4572": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4552
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4573": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4552
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4574": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4552
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4575": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4500,
        4552
      ],
      "op": "POP",
      "path": "4"
    },
    "4576": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4430
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "4578": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4580": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4431,
        4434
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4587": {
      "op": "SHL"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "AND",
      "path": "4"
    },
    "4590": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4591": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4592": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4594": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "ADD",
      "path": "4"
    },
    "4595": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4596": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4598": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4600": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "ADD",
      "path": "4"
    },
    "4601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4435
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4604": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4453
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4606": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4454,
        4455
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4607": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4609": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "AND",
      "path": "4"
    },
    "4610": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4611": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4612": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4613": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "LT",
      "path": "4"
    },
    "4614": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1211"
    },
    "4617": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4618": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1211"
    },
    "4621": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4624": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4436,
        4456
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4625": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4626": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4627": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4629": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4630": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4632": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4634": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4635": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4436,
        4456
      ],
      "op": "ADD",
      "path": "4"
    },
    "4636": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4638": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4639": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1228"
    },
    "4642": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4643": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4644": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4647": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4412,
        4457
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4648": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4649": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4650": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4651": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4652": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4654": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4655": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4656": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4657": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4658": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SUB",
      "path": "4"
    },
    "4659": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4661": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "ADD",
      "path": "4"
    },
    "4662": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4663": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4457
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4664": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4464
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4665": {
      "branch": 58,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4412,
        4552
      ],
      "op": "EQ",
      "path": "4"
    },
    "4666": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1242"
    },
    "4669": {
      "branch": 58,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4670": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4672": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4673": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4674": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4387,
        4566
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4675": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4585,
        4592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4677": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4684": {
      "op": "SHL"
    },
    "4685": {
      "op": "SUB"
    },
    "4686": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4687": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "AND",
      "path": "4"
    },
    "4688": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4690": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4691": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4692": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4693": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4620
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "4695": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4697": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4698": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4700": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4701": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4625
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4702": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4643
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4704": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4705": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4706": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4708": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4709": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "AND",
      "path": "4"
    },
    "4710": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4711": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4712": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "LT",
      "path": "4"
    },
    "4713": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1274"
    },
    "4716": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4717": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1274"
    },
    "4720": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4723": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4626,
        4646
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4724": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4725": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4726": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4728": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4729": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4731": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4733": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4734": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4626,
        4646
      ],
      "op": "ADD",
      "path": "4"
    },
    "4735": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4737": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4738": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128B"
    },
    "4741": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4742": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4743": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4746": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4602,
        4647
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4747": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4748": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4749": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4750": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4751": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4753": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4754": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4755": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4756": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4757": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SUB",
      "path": "4"
    },
    "4758": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4760": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "ADD",
      "path": "4"
    },
    "4761": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4762": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4647
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4763": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4602,
        4654
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4764": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4598,
        4654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4766": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4598,
        4654
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4767": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4598,
        4654
      ],
      "op": "AND",
      "path": "4"
    },
    "4768": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4598,
        4654
      ],
      "op": "LT",
      "path": "4"
    },
    "4769": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4770": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15CF"
    },
    "4773": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4780": {
      "op": "SHL"
    },
    "4781": {
      "op": "SUB"
    },
    "4782": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 35
    },
    "4783": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "AND",
      "path": "4"
    },
    "4784": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4786": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4787": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4788": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4789": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4757
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "4791": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4793": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4794": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4796": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4797": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4762
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4798": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4800": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4801": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4802": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4804": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4805": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "AND",
      "path": "4"
    },
    "4806": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4807": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4808": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "LT",
      "path": "4"
    },
    "4809": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12D4"
    },
    "4812": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4813": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12D4"
    },
    "4816": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4819": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4763,
        4783
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4820": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4821": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4822": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4824": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4825": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4827": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4829": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4830": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4763,
        4783
      ],
      "op": "ADD",
      "path": "4"
    },
    "4831": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4833": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4834": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12EB"
    },
    "4837": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4838": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4839": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4842": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4739,
        4784
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4843": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4844": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4845": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4846": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4847": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4849": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "ADD",
      "path": "4"
    },
    "4850": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4852": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4853": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4854": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4855": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SUB",
      "path": "4"
    },
    "4856": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4857": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4858": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4739,
        4784
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4859": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE"
    },
    "4861": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4863": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4706,
        4709
      ],
      "op": "DUP6",
      "path": "4"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4870": {
      "op": "SHL"
    },
    "4871": {
      "op": "SUB"
    },
    "4872": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "AND",
      "path": "4"
    },
    "4873": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4874": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4875": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4877": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "ADD",
      "path": "4"
    },
    "4878": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4879": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4880": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4881": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4883": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "ADD",
      "path": "4"
    },
    "4884": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4886": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4710
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4887": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "4889": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4729,
        4730
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4890": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4892": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "AND",
      "path": "4"
    },
    "4893": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4894": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4895": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4896": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "LT",
      "path": "4"
    },
    "4897": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132C"
    },
    "4900": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4901": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132C"
    },
    "4904": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4907": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4711,
        4731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4908": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4909": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4910": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4912": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4913": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4915": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4917": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4918": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4711,
        4731
      ],
      "op": "ADD",
      "path": "4"
    },
    "4919": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4921": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4922": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1343"
    },
    "4925": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4926": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4927": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "4930": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4687,
        4732
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4931": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4932": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4933": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4934": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4935": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4937": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "ADD",
      "path": "4"
    },
    "4938": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4940": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4941": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4942": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4943": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SUB",
      "path": "4"
    },
    "4944": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4945": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4732
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4946": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4733,
        4734
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4947": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4949": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "AND",
      "path": "4"
    },
    "4950": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4951": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4952": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4953": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "LT",
      "path": "4"
    },
    "4954": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1365"
    },
    "4957": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4958": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1365"
    },
    "4961": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "4964": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4687,
        4735
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4965": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4966": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4967": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4969": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4970": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4972": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4974": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4975": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "ADD",
      "path": "4"
    },
    "4976": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4735
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4977": {
      "branch": 59,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4687,
        4784
      ],
      "op": "EQ",
      "path": "4"
    },
    "4978": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x137A"
    },
    "4981": {
      "branch": 59,
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4982": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4984": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4985": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "REVERT",
      "path": "4"
    },
    "4986": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4679,
        4785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4993": {
      "op": "SHL"
    },
    "4994": {
      "op": "SUB"
    },
    "4995": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 36
    },
    "4996": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "AND",
      "path": "4"
    },
    "4997": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4999": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5000": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5001": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5002": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x11"
    },
    "5004": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5006": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5007": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5009": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5010": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4825
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5011": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4843
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5013": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5014": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5015": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5017": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5018": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "AND",
      "path": "4"
    },
    "5019": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5020": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5021": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "LT",
      "path": "4"
    },
    "5022": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13A9"
    },
    "5025": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5026": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13A9"
    },
    "5029": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5032": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4826,
        4846
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5033": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5034": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5035": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5037": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5038": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5040": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5042": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5043": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4826,
        4846
      ],
      "op": "ADD",
      "path": "4"
    },
    "5044": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5046": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5047": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13C0"
    },
    "5050": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5051": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5052": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "5055": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4803,
        4847
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5056": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5057": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5058": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5059": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5060": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5062": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "ADD",
      "path": "4"
    },
    "5063": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5065": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5066": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5067": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5068": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SUB",
      "path": "4"
    },
    "5069": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5070": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4847
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5071": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "5073": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5075": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4872,
        4875
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "op": "SUB"
    },
    "5084": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "AND",
      "path": "4"
    },
    "5085": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5086": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5087": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5089": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "ADD",
      "path": "4"
    },
    "5090": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5091": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5092": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5093": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5095": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "ADD",
      "path": "4"
    },
    "5096": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5098": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4876
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5099": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5101": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4895,
        4896
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5102": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5104": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "AND",
      "path": "4"
    },
    "5105": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5106": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5107": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5108": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "LT",
      "path": "4"
    },
    "5109": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1400"
    },
    "5112": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5113": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1400"
    },
    "5116": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5119": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4877,
        4897
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5120": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5121": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5122": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5124": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5125": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5127": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5129": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5130": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4877,
        4897
      ],
      "op": "ADD",
      "path": "4"
    },
    "5131": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5133": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5134": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1417"
    },
    "5137": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5138": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5139": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "5142": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4853,
        4898
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5143": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5144": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5145": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5146": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5147": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5149": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "ADD",
      "path": "4"
    },
    "5150": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5152": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5153": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5154": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5155": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SUB",
      "path": "4"
    },
    "5156": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5157": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4898
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5158": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4899,
        4900
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5159": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5161": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "AND",
      "path": "4"
    },
    "5162": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5163": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5164": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5165": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "LT",
      "path": "4"
    },
    "5166": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1439"
    },
    "5169": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5170": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1439"
    },
    "5173": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5176": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4853,
        4901
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5177": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5178": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5180": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5181": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5182": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5183": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5185": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5186": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5187": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5188": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5189": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5190": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "ADD",
      "path": "4"
    },
    "5191": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5192": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5193": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5194": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5196": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5197": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5198": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "ADD",
      "path": "4"
    },
    "5199": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5200": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5201": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5202": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5203": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5204": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5205": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5206": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5207": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "ADD",
      "path": "4"
    },
    "5208": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5209": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "SUB"
    },
    "5218": {
      "op": "NOT"
    },
    "5219": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "AND",
      "path": "4"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5226": {
      "op": "SHL"
    },
    "5227": {
      "op": "SUB"
    },
    "5228": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5229": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5230": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4853,
        4901
      ],
      "op": "AND",
      "path": "4"
    },
    "5231": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5232": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5233": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5234": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "OR",
      "path": "4"
    },
    "5235": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5236": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4803,
        4902
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5243": {
      "op": "SHL"
    },
    "5244": {
      "op": "SUB"
    },
    "5245": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "DUP7",
      "path": "4",
      "statement": 37
    },
    "5246": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "AND",
      "path": "4"
    },
    "5247": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5248": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5249": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4939
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "5251": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5252": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5253": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5255": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5256": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4944
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5257": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4962
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5259": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5260": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5261": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5263": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5264": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "AND",
      "path": "4"
    },
    "5265": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5266": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5267": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "LT",
      "path": "4"
    },
    "5268": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149F"
    },
    "5271": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5272": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149F"
    },
    "5275": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5278": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4945,
        4965
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5279": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5280": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5281": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5283": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5284": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5286": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5288": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5289": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4945,
        4965
      ],
      "op": "ADD",
      "path": "4"
    },
    "5290": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5292": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5293": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14B6"
    },
    "5296": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5297": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5298": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "5301": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4920,
        4966
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5302": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5303": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5304": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5305": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5306": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5308": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "ADD",
      "path": "4"
    },
    "5309": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5311": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5312": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5313": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5314": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SUB",
      "path": "4"
    },
    "5315": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5316": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5317": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4966
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5319": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5320": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5321": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5322": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D3"
    },
    "5325": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5326": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5327": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "5330": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4920,
        4970
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5331": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5332": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5333": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5334": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4920,
        4970
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5335": {
      "op": "POP"
    },
    "5336": {
      "op": "POP"
    },
    "5337": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 38,
      "value": "0x3"
    },
    "5339": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5346": {
      "op": "SHL"
    },
    "5347": {
      "op": "SUB"
    },
    "5348": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5349": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "AND",
      "path": "4"
    },
    "5350": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5352": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5353": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5354": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5355": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5031
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "5357": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5359": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5360": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5362": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5363": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5364": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5366": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5367": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "op": "SUB"
    },
    "5376": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5377": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5378": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "AND",
      "path": "4"
    },
    "5379": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        4999
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5380": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5012
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8EBFA8AE"
    },
    "5385": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5012
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5386": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5387": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5054
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5388": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5390": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5391": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "AND",
      "path": "4"
    },
    "5392": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5393": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5394": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "LT",
      "path": "4"
    },
    "5395": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151E"
    },
    "5398": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5399": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151E"
    },
    "5402": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5405": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5037,
        5057
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5406": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5407": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5408": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5410": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5411": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5413": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5415": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5416": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5037,
        5057
      ],
      "op": "ADD",
      "path": "4"
    },
    "5417": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5419": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5420": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1535"
    },
    "5423": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5424": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5425": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "5428": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5013,
        5058
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5429": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5430": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5431": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5432": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5433": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5435": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "ADD",
      "path": "4"
    },
    "5436": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5438": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5439": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5440": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5441": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SUB",
      "path": "4"
    },
    "5442": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5443": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5058
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5444": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5059,
        5060
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5445": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "5447": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "AND",
      "path": "4"
    },
    "5448": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5449": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5450": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5451": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "LT",
      "path": "4"
    },
    "5452": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1557"
    },
    "5455": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5456": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1557"
    },
    "5459": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5462": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        5013,
        5061
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5463": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5464": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5466": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5467": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5468": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5469": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5471": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5472": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5473": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5474": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "ADD",
      "path": "4"
    },
    "5475": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5476": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5478": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5479": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "5481": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5482": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5483": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "SHL",
      "path": "4"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5490": {
      "op": "SHL"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "op": "NOT"
    },
    "5493": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "AND",
      "path": "4"
    },
    "5494": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5495": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5502": {
      "op": "SHL"
    },
    "5503": {
      "op": "SUB"
    },
    "5504": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5505": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5506": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        5013,
        5061
      ],
      "op": "AND",
      "path": "4"
    },
    "5507": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5509": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5510": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "ADD",
      "path": "4"
    },
    "5511": {
      "op": "MSTORE"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5514": {
      "op": "ADD"
    },
    "5515": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5517": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5519": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5520": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5521": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5522": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "SUB",
      "path": "4"
    },
    "5523": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5524": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5526": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5527": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5528": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "5529": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5530": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5531": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5532": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A4"
    },
    "5535": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5536": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5538": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5539": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5540": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5541": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "POP",
      "path": "4"
    },
    "5542": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "GAS",
      "path": "4"
    },
    "5543": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "CALL",
      "path": "4"
    },
    "5544": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5545": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5546": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5547": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B8"
    },
    "5550": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5551": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5552": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5554": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5555": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5556": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5557": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5559": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5560": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5561": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "POP",
      "path": "4"
    },
    "5562": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "POP",
      "path": "4"
    },
    "5563": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "POP",
      "path": "4"
    },
    "5564": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4989,
        5062
      ],
      "op": "POP",
      "path": "4"
    },
    "5565": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 39
    },
    "5566": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5567": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15C7"
    },
    "5570": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5571": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FAC"
    },
    "5574": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4656,
        4659
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5575": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5576": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5577": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "POP",
      "path": "4"
    },
    "5578": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4656,
        4659
      ],
      "op": "POP",
      "path": "4"
    },
    "5579": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1245"
    },
    "5582": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5583": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4580,
        5077
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 40
    },
    "5586": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15DA"
    },
    "5589": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5590": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FAC"
    },
    "5593": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "i",
      "offset": [
        4368,
        4371
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5594": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5595": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5596": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "POP",
      "path": "4"
    },
    "5597": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4368,
        4371
      ],
      "op": "POP",
      "path": "4"
    },
    "5598": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x117A"
    },
    "5601": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5602": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5603": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4320,
        5087
      ],
      "op": "POP",
      "path": "4"
    },
    "5604": {
      "fn": "DailyRocket.setNumberOfWinners",
      "offset": [
        4278,
        5093
      ],
      "op": "POP",
      "path": "4"
    },
    "5605": {
      "fn": "DailyRocket.setNumberOfWinners",
      "jump": "o",
      "offset": [
        4240,
        5093
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5606": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7521,
        8061
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5607": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7601
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 41,
      "value": "0x4"
    },
    "5609": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7601
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5610": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "5612": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5613": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5615": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5616": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7604
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1604"
    },
    "5619": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7604
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5620": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7603,
        7604
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5622": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7603,
        7604
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5629": {
      "op": "SHL"
    },
    "5630": {
      "op": "SUB"
    },
    "5631": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7601
      ],
      "op": "AND",
      "path": "4"
    },
    "5632": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7604
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E69"
    },
    "5635": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7593,
        7604
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5636": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7593,
        7604
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "SUB"
    },
    "5645": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "AND",
      "path": "4"
    },
    "5646": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5647": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5648": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5650": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "ADD",
      "path": "4"
    },
    "5651": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5652": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5653": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5654": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5656": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "ADD",
      "path": "4"
    },
    "5657": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5659": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5660": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7605
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5661": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7608,
        7621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD20"
    },
    "5664": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1629"
    },
    "5667": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7621
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5668": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7621
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5669": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E51"
    },
    "5672": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7580,
        7621
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5673": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7580,
        7621
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5674": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7568,
        7577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1631"
    },
    "5677": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7568,
        7575
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x827"
    },
    "5680": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7568,
        7577
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5681": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7568,
        7577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5682": {
      "branch": 60,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7568,
        7621
      ],
      "op": "GT",
      "path": "4"
    },
    "5683": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x163B"
    },
    "5686": {
      "branch": 60,
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5687": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5689": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5690": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5691": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7560,
        7622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5692": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7637,
        7646
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5694": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5695": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7656,
        7673
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5697": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7656,
        7680
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5704": {
      "op": "SHL"
    },
    "5705": {
      "op": "SUB"
    },
    "5706": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7652,
        7680
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5707": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7652,
        7680
      ],
      "op": "AND",
      "path": "4"
    },
    "5708": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7652,
        7680
      ],
      "op": "LT",
      "path": "4"
    },
    "5709": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5710": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EB"
    },
    "5713": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5714": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7737,
        7745
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5716": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7737,
        7745
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7737,
        7745
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5726": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7737,
        7745
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5727": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7737,
        7745
      ],
      "op": "AND",
      "path": "4"
    },
    "5728": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7701,
        7712
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5730": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5731": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5732": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5733": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC"
    },
    "5735": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5737": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5738": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5740": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5741": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7746
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5742": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5744": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5745": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5746": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7701,
        7712
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5747": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7701,
        7712
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5748": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7775,
        7778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "5750": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7775,
        7778
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5751": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5752": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5753": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "AND",
      "path": "4"
    },
    "5754": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5755": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5756": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "LT",
      "path": "4"
    },
    "5757": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1688"
    },
    "5760": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5761": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1688"
    },
    "5764": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EDF"
    },
    "5767": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7747,
        7767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5768": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5769": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5770": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5772": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5773": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5775": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5777": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5778": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7747,
        7767
      ],
      "op": "ADD",
      "path": "4"
    },
    "5779": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5781": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5782": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x169F"
    },
    "5785": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5786": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5787": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF5"
    },
    "5790": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7717,
        7768
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5791": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5792": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5793": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5794": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5795": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5797": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "ADD",
      "path": "4"
    },
    "5798": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5800": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5801": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5802": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5803": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SUB",
      "path": "4"
    },
    "5804": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5805": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5806": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7717,
        7768
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5807": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7772,
        7774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "5809": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16BA"
    },
    "5812": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5813": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5814": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5D"
    },
    "5817": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7716,
        7774
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5818": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7774
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5819": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16C4"
    },
    "5822": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7778
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5823": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7778
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5824": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D7C"
    },
    "5827": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7716,
        7778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5828": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7716,
        7778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5829": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7848,
        7851
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 42,
      "value": "0xA"
    },
    "5831": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7848,
        7851
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5832": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        7880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "5834": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        7880
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5835": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5837": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5838": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5845": {
      "op": "SHL"
    },
    "5846": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5847": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5854": {
      "op": "SHL"
    },
    "5855": {
      "op": "SUB"
    },
    "5856": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        7880
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5857": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        7880
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5858": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7869,
        7880
      ],
      "op": "AND",
      "path": "4"
    },
    "5859": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5861": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5862": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ADD",
      "path": "4"
    },
    "5863": {
      "op": "MSTORE"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5866": {
      "op": "DUP2"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "op": "DUP5"
    },
    "5869": {
      "op": "SWAP1"
    },
    "5870": {
      "op": "MSTORE"
    },
    "5871": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7701,
        7779
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5872": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7701,
        7779
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5873": {
      "op": "POP"
    },
    "5874": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7848,
        7851
      ],
      "op": "AND",
      "path": "4"
    },
    "5875": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7848,
        7851
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5876": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7860
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "5881": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7860
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5884": {
      "op": "ADD"
    },
    "5885": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5887": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5889": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5890": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5891": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5892": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "SUB",
      "path": "4"
    },
    "5893": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5894": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5896": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5897": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "GAS",
      "path": "4"
    },
    "5898": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "CALL",
      "path": "4"
    },
    "5899": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5900": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5901": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5902": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x171B"
    },
    "5905": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5906": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5907": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5909": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5910": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5911": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5912": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5914": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5915": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5916": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "POP",
      "path": "4"
    },
    "5917": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "POP",
      "path": "4"
    },
    "5918": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "POP",
      "path": "4"
    },
    "5919": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "POP",
      "path": "4"
    },
    "5920": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5922": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5923": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5924": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5926": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "NOT",
      "path": "4"
    },
    "5927": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5929": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5930": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ADD",
      "path": "4"
    },
    "5931": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "AND",
      "path": "4"
    },
    "5932": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5933": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ADD",
      "path": "4"
    },
    "5934": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5935": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5937": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5938": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "POP",
      "path": "4"
    },
    "5939": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5940": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "ADD",
      "path": "4"
    },
    "5941": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5942": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173F"
    },
    "5945": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5946": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5947": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9E"
    },
    "5950": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7841,
        7890
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5951": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7841,
        7890
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x2"
    },
    "5955": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5956": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7944
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "5958": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7944
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5959": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8010
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5961": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8010
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5962": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5964": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5965": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5972": {
      "op": "SHL"
    },
    "5973": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5974": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5981": {
      "op": "SHL"
    },
    "5982": {
      "op": "SUB"
    },
    "5983": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7944
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5984": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7944
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5985": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7941,
        7944
      ],
      "op": "AND",
      "path": "4"
    },
    "5986": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5988": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5989": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "ADD",
      "path": "4"
    },
    "5990": {
      "op": "MSTORE"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5993": {
      "op": "DUP2"
    },
    "5994": {
      "op": "ADD"
    },
    "5995": {
      "op": "DUP6"
    },
    "5996": {
      "op": "SWAP1"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5999": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8010
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6000": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        8000,
        8010
      ],
      "op": "AND",
      "path": "4"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6003": {
      "op": "DUP3"
    },
    "6004": {
      "op": "ADD"
    },
    "6005": {
      "op": "MSTORE"
    },
    "6006": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6010": {
      "op": "DUP3"
    },
    "6011": {
      "op": "ADD"
    },
    "6012": {
      "op": "MSTORE"
    },
    "6013": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6014": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "AND",
      "path": "4"
    },
    "6015": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7915
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6016": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7923
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE8EDA9DF"
    },
    "6021": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        7923
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6024": {
      "op": "ADD"
    },
    "6025": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6027": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6029": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6030": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6031": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6032": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "SUB",
      "path": "4"
    },
    "6033": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6034": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6036": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP8",
      "path": "4"
    },
    "6037": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6038": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "6039": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6040": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6041": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6042": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A2"
    },
    "6045": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6046": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6048": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6049": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6050": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6051": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "POP",
      "path": "4"
    },
    "6052": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "GAS",
      "path": "4"
    },
    "6053": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "CALL",
      "path": "4"
    },
    "6054": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6055": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6056": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6057": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B6"
    },
    "6060": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6061": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6062": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6064": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6065": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "6066": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6067": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6069": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6070": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6071": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "POP",
      "path": "4"
    },
    "6072": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "POP",
      "path": "4"
    },
    "6073": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "POP",
      "path": "4"
    },
    "6074": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7904,
        8044
      ],
      "op": "POP",
      "path": "4"
    },
    "6075": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7687,
        8055
      ],
      "op": "POP",
      "path": "4"
    },
    "6076": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 44
    },
    "6077": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6078": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17C6"
    },
    "6081": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6082": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC0"
    },
    "6085": {
      "fn": "DailyRocket.sendToIba",
      "jump": "i",
      "offset": [
        7682,
        7685
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6086": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6087": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6088": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "POP",
      "path": "4"
    },
    "6089": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7682,
        7685
      ],
      "op": "POP",
      "path": "4"
    },
    "6090": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x163E"
    },
    "6093": {
      "fn": "DailyRocket.sendToIba",
      "offset": [
        7632,
        8055
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6094": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6095": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6097": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6098": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6105": {
      "op": "SHL"
    },
    "6106": {
      "op": "SUB"
    },
    "6107": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 45
    },
    "6108": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6109": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6116": {
      "op": "SHL"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "op": "NOT"
    },
    "6119": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6120": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6121": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6122": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6123": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6124": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6125": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "6127": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6128": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6129": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6130": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6131": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6132": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6133": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6134": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6135": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6168": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6169": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6171": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6172": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6173": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6174": {
      "op": "JUMPDEST"
    },
    "6175": {
      "op": "DUP3"
    },
    "6176": {
      "op": "DUP1"
    },
    "6177": {
      "op": "SLOAD"
    },
    "6178": {
      "op": "PUSH2",
      "value": "0x182A"
    },
    "6181": {
      "op": "SWAP1"
    },
    "6182": {
      "op": "PUSH2",
      "value": "0x1CF0"
    },
    "6185": {
      "jump": "i",
      "op": "JUMP"
    },
    "6186": {
      "op": "JUMPDEST"
    },
    "6187": {
      "op": "SWAP1"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6190": {
      "op": "MSTORE"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6195": {
      "op": "KECCAK256"
    },
    "6196": {
      "op": "SWAP1"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6199": {
      "op": "ADD"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6202": {
      "op": "SWAP1"
    },
    "6203": {
      "op": "DIV"
    },
    "6204": {
      "op": "DUP2"
    },
    "6205": {
      "op": "ADD"
    },
    "6206": {
      "op": "SWAP3"
    },
    "6207": {
      "op": "DUP3"
    },
    "6208": {
      "op": "PUSH2",
      "value": "0x184C"
    },
    "6211": {
      "op": "JUMPI"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6214": {
      "op": "DUP6"
    },
    "6215": {
      "op": "SSTORE"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x1892"
    },
    "6219": {
      "op": "JUMP"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "DUP3"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6224": {
      "op": "LT"
    },
    "6225": {
      "op": "PUSH2",
      "value": "0x1865"
    },
    "6228": {
      "op": "JUMPI"
    },
    "6229": {
      "op": "DUP1"
    },
    "6230": {
      "op": "MLOAD"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6233": {
      "op": "NOT"
    },
    "6234": {
      "op": "AND"
    },
    "6235": {
      "op": "DUP4"
    },
    "6236": {
      "op": "DUP1"
    },
    "6237": {
      "op": "ADD"
    },
    "6238": {
      "op": "OR"
    },
    "6239": {
      "op": "DUP6"
    },
    "6240": {
      "op": "SSTORE"
    },
    "6241": {
      "op": "PUSH2",
      "value": "0x1892"
    },
    "6244": {
      "op": "JUMP"
    },
    "6245": {
      "op": "JUMPDEST"
    },
    "6246": {
      "op": "DUP3"
    },
    "6247": {
      "op": "DUP1"
    },
    "6248": {
      "op": "ADD"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6251": {
      "op": "ADD"
    },
    "6252": {
      "op": "DUP6"
    },
    "6253": {
      "op": "SSTORE"
    },
    "6254": {
      "op": "DUP3"
    },
    "6255": {
      "op": "ISZERO"
    },
    "6256": {
      "op": "PUSH2",
      "value": "0x1892"
    },
    "6259": {
      "op": "JUMPI"
    },
    "6260": {
      "op": "SWAP2"
    },
    "6261": {
      "op": "DUP3"
    },
    "6262": {
      "op": "ADD"
    },
    "6263": {
      "op": "JUMPDEST"
    },
    "6264": {
      "op": "DUP3"
    },
    "6265": {
      "op": "DUP2"
    },
    "6266": {
      "op": "GT"
    },
    "6267": {
      "op": "ISZERO"
    },
    "6268": {
      "op": "PUSH2",
      "value": "0x1892"
    },
    "6271": {
      "op": "JUMPI"
    },
    "6272": {
      "op": "DUP3"
    },
    "6273": {
      "op": "MLOAD"
    },
    "6274": {
      "op": "DUP3"
    },
    "6275": {
      "op": "SSTORE"
    },
    "6276": {
      "op": "SWAP2"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6279": {
      "op": "ADD"
    },
    "6280": {
      "op": "SWAP2"
    },
    "6281": {
      "op": "SWAP1"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "op": "SWAP1"
    },
    "6286": {
      "op": "PUSH2",
      "value": "0x1877"
    },
    "6289": {
      "op": "JUMP"
    },
    "6290": {
      "op": "JUMPDEST"
    },
    "6291": {
      "op": "POP"
    },
    "6292": {
      "op": "PUSH2",
      "value": "0x189E"
    },
    "6295": {
      "op": "SWAP3"
    },
    "6296": {
      "op": "SWAP2"
    },
    "6297": {
      "op": "POP"
    },
    "6298": {
      "op": "PUSH2",
      "value": "0x18A2"
    },
    "6301": {
      "jump": "i",
      "op": "JUMP"
    },
    "6302": {
      "op": "JUMPDEST"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "SWAP1"
    },
    "6305": {
      "jump": "o",
      "op": "JUMP"
    },
    "6306": {
      "op": "JUMPDEST"
    },
    "6307": {
      "op": "JUMPDEST"
    },
    "6308": {
      "op": "DUP1"
    },
    "6309": {
      "op": "DUP3"
    },
    "6310": {
      "op": "GT"
    },
    "6311": {
      "op": "ISZERO"
    },
    "6312": {
      "op": "PUSH2",
      "value": "0x189E"
    },
    "6315": {
      "op": "JUMPI"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6318": {
      "op": "DUP2"
    },
    "6319": {
      "op": "SSTORE"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6322": {
      "op": "ADD"
    },
    "6323": {
      "op": "PUSH2",
      "value": "0x18A3"
    },
    "6326": {
      "op": "JUMP"
    },
    "6327": {
      "op": "JUMPDEST"
    },
    "6328": {
      "op": "DUP1"
    },
    "6329": {
      "op": "CALLDATALOAD"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6336": {
      "op": "SHL"
    },
    "6337": {
      "op": "SUB"
    },
    "6338": {
      "op": "DUP2"
    },
    "6339": {
      "op": "AND"
    },
    "6340": {
      "op": "DUP2"
    },
    "6341": {
      "op": "EQ"
    },
    "6342": {
      "op": "PUSH2",
      "value": "0x18CE"
    },
    "6345": {
      "op": "JUMPI"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6348": {
      "op": "DUP1"
    },
    "6349": {
      "op": "REVERT"
    },
    "6350": {
      "op": "JUMPDEST"
    },
    "6351": {
      "op": "SWAP2"
    },
    "6352": {
      "op": "SWAP1"
    },
    "6353": {
      "op": "POP"
    },
    "6354": {
      "jump": "o",
      "op": "JUMP"
    },
    "6355": {
      "op": "JUMPDEST"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6360": {
      "op": "DUP3"
    },
    "6361": {
      "op": "DUP5"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "op": "SLT"
    },
    "6364": {
      "op": "ISZERO"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0x18E5"
    },
    "6368": {
      "op": "JUMPI"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6371": {
      "op": "DUP1"
    },
    "6372": {
      "op": "REVERT"
    },
    "6373": {
      "op": "JUMPDEST"
    },
    "6374": {
      "op": "PUSH2",
      "value": "0xC06"
    },
    "6377": {
      "op": "DUP3"
    },
    "6378": {
      "op": "PUSH2",
      "value": "0x18B7"
    },
    "6381": {
      "jump": "i",
      "op": "JUMP"
    },
    "6382": {
      "op": "JUMPDEST"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "DUP5"
    },
    "6389": {
      "op": "SUB"
    },
    "6390": {
      "op": "SLT"
    },
    "6391": {
      "op": "ISZERO"
    },
    "6392": {
      "op": "PUSH2",
      "value": "0x1900"
    },
    "6395": {
      "op": "JUMPI"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6398": {
      "op": "DUP1"
    },
    "6399": {
      "op": "REVERT"
    },
    "6400": {
      "op": "JUMPDEST"
    },
    "6401": {
      "op": "POP"
    },
    "6402": {
      "op": "CALLDATALOAD"
    },
    "6403": {
      "op": "SWAP2"
    },
    "6404": {
      "op": "SWAP1"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "jump": "o",
      "op": "JUMP"
    },
    "6407": {
      "op": "JUMPDEST"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6410": {
      "op": "JUMPDEST"
    },
    "6411": {
      "op": "DUP4"
    },
    "6412": {
      "op": "DUP2"
    },
    "6413": {
      "op": "LT"
    },
    "6414": {
      "op": "ISZERO"
    },
    "6415": {
      "op": "PUSH2",
      "value": "0x1922"
    },
    "6418": {
      "op": "JUMPI"
    },
    "6419": {
      "op": "DUP2"
    },
    "6420": {
      "op": "DUP2"
    },
    "6421": {
      "op": "ADD"
    },
    "6422": {
      "op": "MLOAD"
    },
    "6423": {
      "op": "DUP4"
    },
    "6424": {
      "op": "DUP3"
    },
    "6425": {
      "op": "ADD"
    },
    "6426": {
      "op": "MSTORE"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6429": {
      "op": "ADD"
    },
    "6430": {
      "op": "PUSH2",
      "value": "0x190A"
    },
    "6433": {
      "op": "JUMP"
    },
    "6434": {
      "op": "JUMPDEST"
    },
    "6435": {
      "op": "DUP4"
    },
    "6436": {
      "op": "DUP2"
    },
    "6437": {
      "op": "GT"
    },
    "6438": {
      "op": "ISZERO"
    },
    "6439": {
      "op": "PUSH2",
      "value": "0x753"
    },
    "6442": {
      "op": "JUMPI"
    },
    "6443": {
      "op": "POP"
    },
    "6444": {
      "op": "POP"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6447": {
      "op": "SWAP2"
    },
    "6448": {
      "op": "ADD"
    },
    "6449": {
      "op": "MSTORE"
    },
    "6450": {
      "jump": "o",
      "op": "JUMP"
    },
    "6451": {
      "op": "JUMPDEST"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6454": {
      "op": "DUP2"
    },
    "6455": {
      "op": "MLOAD"
    },
    "6456": {
      "op": "DUP1"
    },
    "6457": {
      "op": "DUP5"
    },
    "6458": {
      "op": "MSTORE"
    },
    "6459": {
      "op": "PUSH2",
      "value": "0x194B"
    },
    "6462": {
      "op": "DUP2"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6465": {
      "op": "DUP7"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6469": {
      "op": "DUP7"
    },
    "6470": {
      "op": "ADD"
    },
    "6471": {
      "op": "PUSH2",
      "value": "0x1907"
    },
    "6474": {
      "jump": "i",
      "op": "JUMP"
    },
    "6475": {
      "op": "JUMPDEST"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6478": {
      "op": "ADD"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6481": {
      "op": "NOT"
    },
    "6482": {
      "op": "AND"
    },
    "6483": {
      "op": "SWAP3"
    },
    "6484": {
      "op": "SWAP1"
    },
    "6485": {
      "op": "SWAP3"
    },
    "6486": {
      "op": "ADD"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "op": "SWAP3"
    },
    "6491": {
      "op": "SWAP2"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "op": "POP"
    },
    "6494": {
      "jump": "o",
      "op": "JUMP"
    },
    "6495": {
      "op": "JUMPDEST"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6498": {
      "op": "DUP2"
    },
    "6499": {
      "op": "MSTORE"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6502": {
      "op": "PUSH2",
      "value": "0xC06"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6507": {
      "op": "DUP4"
    },
    "6508": {
      "op": "ADD"
    },
    "6509": {
      "op": "DUP5"
    },
    "6510": {
      "op": "PUSH2",
      "value": "0x1933"
    },
    "6513": {
      "jump": "i",
      "op": "JUMP"
    },
    "6514": {
      "op": "JUMPDEST"
    },
    "6515": {
      "op": "DUP1"
    },
    "6516": {
      "op": "CALLDATALOAD"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6523": {
      "op": "SHL"
    },
    "6524": {
      "op": "SUB"
    },
    "6525": {
      "op": "DUP2"
    },
    "6526": {
      "op": "AND"
    },
    "6527": {
      "op": "DUP2"
    },
    "6528": {
      "op": "EQ"
    },
    "6529": {
      "op": "PUSH2",
      "value": "0x18CE"
    },
    "6532": {
      "op": "JUMPI"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6535": {
      "op": "DUP1"
    },
    "6536": {
      "op": "REVERT"
    },
    "6537": {
      "op": "JUMPDEST"
    },
    "6538": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6545": {
      "op": "SHL"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6548": {
      "op": "MSTORE"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6553": {
      "op": "MSTORE"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6558": {
      "op": "REVERT"
    },
    "6559": {
      "op": "JUMPDEST"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6562": {
      "op": "DUP3"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6565": {
      "op": "DUP4"
    },
    "6566": {
      "op": "ADD"
    },
    "6567": {
      "op": "SLT"
    },
    "6568": {
      "op": "PUSH2",
      "value": "0x19B0"
    },
    "6571": {
      "op": "JUMPI"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6574": {
      "op": "DUP1"
    },
    "6575": {
      "op": "REVERT"
    },
    "6576": {
      "op": "JUMPDEST"
    },
    "6577": {
      "op": "DUP2"
    },
    "6578": {
      "op": "CALLDATALOAD"
    },
    "6579": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6588": {
      "op": "DUP1"
    },
    "6589": {
      "op": "DUP3"
    },
    "6590": {
      "op": "GT"
    },
    "6591": {
      "op": "ISZERO"
    },
    "6592": {
      "op": "PUSH2",
      "value": "0x19CB"
    },
    "6595": {
      "op": "JUMPI"
    },
    "6596": {
      "op": "PUSH2",
      "value": "0x19CB"
    },
    "6599": {
      "op": "PUSH2",
      "value": "0x1989"
    },
    "6602": {
      "jump": "i",
      "op": "JUMP"
    },
    "6603": {
      "op": "JUMPDEST"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6606": {
      "op": "MLOAD"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6609": {
      "op": "DUP4"
    },
    "6610": {
      "op": "ADD"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6613": {
      "op": "NOT"
    },
    "6614": {
      "op": "SWAP1"
    },
    "6615": {
      "op": "DUP2"
    },
    "6616": {
      "op": "AND"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6619": {
      "op": "ADD"
    },
    "6620": {
      "op": "AND"
    },
    "6621": {
      "op": "DUP2"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "SWAP1"
    },
    "6624": {
      "op": "DUP3"
    },
    "6625": {
      "op": "DUP3"
    },
    "6626": {
      "op": "GT"
    },
    "6627": {
      "op": "DUP2"
    },
    "6628": {
      "op": "DUP4"
    },
    "6629": {
      "op": "LT"
    },
    "6630": {
      "op": "OR"
    },
    "6631": {
      "op": "ISZERO"
    },
    "6632": {
      "op": "PUSH2",
      "value": "0x19F3"
    },
    "6635": {
      "op": "JUMPI"
    },
    "6636": {
      "op": "PUSH2",
      "value": "0x19F3"
    },
    "6639": {
      "op": "PUSH2",
      "value": "0x1989"
    },
    "6642": {
      "jump": "i",
      "op": "JUMP"
    },
    "6643": {
      "op": "JUMPDEST"
    },
    "6644": {
      "op": "DUP2"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "DUP4"
    },
    "6649": {
      "op": "DUP2"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "DUP7"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6654": {
      "op": "DUP6"
    },
    "6655": {
      "op": "DUP9"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "op": "ADD"
    },
    "6658": {
      "op": "GT"
    },
    "6659": {
      "op": "ISZERO"
    },
    "6660": {
      "op": "PUSH2",
      "value": "0x1A0C"
    },
    "6663": {
      "op": "JUMPI"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6666": {
      "op": "DUP1"
    },
    "6667": {
      "op": "REVERT"
    },
    "6668": {
      "op": "JUMPDEST"
    },
    "6669": {
      "op": "DUP4"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6672": {
      "op": "DUP8"
    },
    "6673": {
      "op": "ADD"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6676": {
      "op": "DUP4"
    },
    "6677": {
      "op": "ADD"
    },
    "6678": {
      "op": "CALLDATACOPY"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6683": {
      "op": "DUP6"
    },
    "6684": {
      "op": "DUP4"
    },
    "6685": {
      "op": "ADD"
    },
    "6686": {
      "op": "ADD"
    },
    "6687": {
      "op": "MSTORE"
    },
    "6688": {
      "op": "DUP1"
    },
    "6689": {
      "op": "SWAP5"
    },
    "6690": {
      "op": "POP"
    },
    "6691": {
      "op": "POP"
    },
    "6692": {
      "op": "POP"
    },
    "6693": {
      "op": "POP"
    },
    "6694": {
      "op": "POP"
    },
    "6695": {
      "op": "SWAP3"
    },
    "6696": {
      "op": "SWAP2"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "op": "POP"
    },
    "6699": {
      "jump": "o",
      "op": "JUMP"
    },
    "6700": {
      "op": "JUMPDEST"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6703": {
      "op": "DUP1"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6706": {
      "op": "DUP4"
    },
    "6707": {
      "op": "DUP6"
    },
    "6708": {
      "op": "SUB"
    },
    "6709": {
      "op": "SLT"
    },
    "6710": {
      "op": "ISZERO"
    },
    "6711": {
      "op": "PUSH2",
      "value": "0x1A3F"
    },
    "6714": {
      "op": "JUMPI"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6717": {
      "op": "DUP1"
    },
    "6718": {
      "op": "REVERT"
    },
    "6719": {
      "op": "JUMPDEST"
    },
    "6720": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "6723": {
      "op": "DUP4"
    },
    "6724": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "6727": {
      "jump": "i",
      "op": "JUMP"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "SWAP2"
    },
    "6730": {
      "op": "POP"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6733": {
      "op": "DUP4"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "CALLDATALOAD"
    },
    "6736": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6745": {
      "op": "DUP2"
    },
    "6746": {
      "op": "GT"
    },
    "6747": {
      "op": "ISZERO"
    },
    "6748": {
      "op": "PUSH2",
      "value": "0x1A64"
    },
    "6751": {
      "op": "JUMPI"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6754": {
      "op": "DUP1"
    },
    "6755": {
      "op": "REVERT"
    },
    "6756": {
      "op": "JUMPDEST"
    },
    "6757": {
      "op": "PUSH2",
      "value": "0x1A70"
    },
    "6760": {
      "op": "DUP6"
    },
    "6761": {
      "op": "DUP3"
    },
    "6762": {
      "op": "DUP7"
    },
    "6763": {
      "op": "ADD"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "6767": {
      "jump": "i",
      "op": "JUMP"
    },
    "6768": {
      "op": "JUMPDEST"
    },
    "6769": {
      "op": "SWAP2"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "op": "POP"
    },
    "6772": {
      "op": "SWAP3"
    },
    "6773": {
      "op": "POP"
    },
    "6774": {
      "op": "SWAP3"
    },
    "6775": {
      "op": "SWAP1"
    },
    "6776": {
      "op": "POP"
    },
    "6777": {
      "jump": "o",
      "op": "JUMP"
    },
    "6778": {
      "op": "JUMPDEST"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6781": {
      "op": "DUP1"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6784": {
      "op": "DUP4"
    },
    "6785": {
      "op": "DUP6"
    },
    "6786": {
      "op": "SUB"
    },
    "6787": {
      "op": "SLT"
    },
    "6788": {
      "op": "ISZERO"
    },
    "6789": {
      "op": "PUSH2",
      "value": "0x1A8D"
    },
    "6792": {
      "op": "JUMPI"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6795": {
      "op": "DUP1"
    },
    "6796": {
      "op": "REVERT"
    },
    "6797": {
      "op": "JUMPDEST"
    },
    "6798": {
      "op": "DUP3"
    },
    "6799": {
      "op": "CALLDATALOAD"
    },
    "6800": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6809": {
      "op": "DUP1"
    },
    "6810": {
      "op": "DUP3"
    },
    "6811": {
      "op": "GT"
    },
    "6812": {
      "op": "ISZERO"
    },
    "6813": {
      "op": "PUSH2",
      "value": "0x1AA5"
    },
    "6816": {
      "op": "JUMPI"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6819": {
      "op": "DUP1"
    },
    "6820": {
      "op": "REVERT"
    },
    "6821": {
      "op": "JUMPDEST"
    },
    "6822": {
      "op": "DUP2"
    },
    "6823": {
      "op": "DUP6"
    },
    "6824": {
      "op": "ADD"
    },
    "6825": {
      "op": "SWAP2"
    },
    "6826": {
      "op": "POP"
    },
    "6827": {
      "op": "DUP6"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6830": {
      "op": "DUP4"
    },
    "6831": {
      "op": "ADD"
    },
    "6832": {
      "op": "SLT"
    },
    "6833": {
      "op": "PUSH2",
      "value": "0x1AB9"
    },
    "6836": {
      "op": "JUMPI"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6839": {
      "op": "DUP1"
    },
    "6840": {
      "op": "REVERT"
    },
    "6841": {
      "op": "JUMPDEST"
    },
    "6842": {
      "op": "DUP2"
    },
    "6843": {
      "op": "CALLDATALOAD"
    },
    "6844": {
      "op": "DUP2"
    },
    "6845": {
      "op": "DUP2"
    },
    "6846": {
      "op": "GT"
    },
    "6847": {
      "op": "ISZERO"
    },
    "6848": {
      "op": "PUSH2",
      "value": "0x1AC8"
    },
    "6851": {
      "op": "JUMPI"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6854": {
      "op": "DUP1"
    },
    "6855": {
      "op": "REVERT"
    },
    "6856": {
      "op": "JUMPDEST"
    },
    "6857": {
      "op": "DUP7"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6860": {
      "op": "DUP3"
    },
    "6861": {
      "op": "DUP6"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "GT"
    },
    "6865": {
      "op": "ISZERO"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0x1ADA"
    },
    "6869": {
      "op": "JUMPI"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6872": {
      "op": "DUP1"
    },
    "6873": {
      "op": "REVERT"
    },
    "6874": {
      "op": "JUMPDEST"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6877": {
      "op": "SWAP3"
    },
    "6878": {
      "op": "SWAP1"
    },
    "6879": {
      "op": "SWAP3"
    },
    "6880": {
      "op": "ADD"
    },
    "6881": {
      "op": "SWAP7"
    },
    "6882": {
      "op": "SWAP2"
    },
    "6883": {
      "op": "SWAP6"
    },
    "6884": {
      "op": "POP"
    },
    "6885": {
      "op": "SWAP1"
    },
    "6886": {
      "op": "SWAP4"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "POP"
    },
    "6890": {
      "op": "POP"
    },
    "6891": {
      "jump": "o",
      "op": "JUMP"
    },
    "6892": {
      "op": "JUMPDEST"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6895": {
      "op": "DUP1"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6900": {
      "op": "DUP5"
    },
    "6901": {
      "op": "DUP7"
    },
    "6902": {
      "op": "SUB"
    },
    "6903": {
      "op": "SLT"
    },
    "6904": {
      "op": "ISZERO"
    },
    "6905": {
      "op": "PUSH2",
      "value": "0x1B01"
    },
    "6908": {
      "op": "JUMPI"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6911": {
      "op": "DUP1"
    },
    "6912": {
      "op": "REVERT"
    },
    "6913": {
      "op": "JUMPDEST"
    },
    "6914": {
      "op": "PUSH2",
      "value": "0x1B0A"
    },
    "6917": {
      "op": "DUP5"
    },
    "6918": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "6921": {
      "jump": "i",
      "op": "JUMP"
    },
    "6922": {
      "op": "JUMPDEST"
    },
    "6923": {
      "op": "SWAP3"
    },
    "6924": {
      "op": "POP"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6927": {
      "op": "DUP5"
    },
    "6928": {
      "op": "ADD"
    },
    "6929": {
      "op": "CALLDATALOAD"
    },
    "6930": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6939": {
      "op": "DUP2"
    },
    "6940": {
      "op": "GT"
    },
    "6941": {
      "op": "ISZERO"
    },
    "6942": {
      "op": "PUSH2",
      "value": "0x1B26"
    },
    "6945": {
      "op": "JUMPI"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6948": {
      "op": "DUP1"
    },
    "6949": {
      "op": "REVERT"
    },
    "6950": {
      "op": "JUMPDEST"
    },
    "6951": {
      "op": "PUSH2",
      "value": "0x1B32"
    },
    "6954": {
      "op": "DUP7"
    },
    "6955": {
      "op": "DUP3"
    },
    "6956": {
      "op": "DUP8"
    },
    "6957": {
      "op": "ADD"
    },
    "6958": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "6961": {
      "jump": "i",
      "op": "JUMP"
    },
    "6962": {
      "op": "JUMPDEST"
    },
    "6963": {
      "op": "SWAP3"
    },
    "6964": {
      "op": "POP"
    },
    "6965": {
      "op": "POP"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6968": {
      "op": "DUP5"
    },
    "6969": {
      "op": "ADD"
    },
    "6970": {
      "op": "CALLDATALOAD"
    },
    "6971": {
      "op": "SWAP1"
    },
    "6972": {
      "op": "POP"
    },
    "6973": {
      "op": "SWAP3"
    },
    "6974": {
      "op": "POP"
    },
    "6975": {
      "op": "SWAP3"
    },
    "6976": {
      "op": "POP"
    },
    "6977": {
      "op": "SWAP3"
    },
    "6978": {
      "jump": "o",
      "op": "JUMP"
    },
    "6979": {
      "op": "JUMPDEST"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6982": {
      "op": "DUP1"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6987": {
      "op": "DUP5"
    },
    "6988": {
      "op": "DUP7"
    },
    "6989": {
      "op": "SUB"
    },
    "6990": {
      "op": "SLT"
    },
    "6991": {
      "op": "ISZERO"
    },
    "6992": {
      "op": "PUSH2",
      "value": "0x1B58"
    },
    "6995": {
      "op": "JUMPI"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6998": {
      "op": "DUP1"
    },
    "6999": {
      "op": "REVERT"
    },
    "7000": {
      "op": "JUMPDEST"
    },
    "7001": {
      "op": "DUP4"
    },
    "7002": {
      "op": "CALLDATALOAD"
    },
    "7003": {
      "op": "SWAP3"
    },
    "7004": {
      "op": "POP"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7007": {
      "op": "DUP5"
    },
    "7008": {
      "op": "ADD"
    },
    "7009": {
      "op": "CALLDATALOAD"
    },
    "7010": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7019": {
      "op": "DUP2"
    },
    "7020": {
      "op": "GT"
    },
    "7021": {
      "op": "ISZERO"
    },
    "7022": {
      "op": "PUSH2",
      "value": "0x1B26"
    },
    "7025": {
      "op": "JUMPI"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7028": {
      "op": "DUP1"
    },
    "7029": {
      "op": "REVERT"
    },
    "7030": {
      "op": "JUMPDEST"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7033": {
      "op": "DUP1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7036": {
      "op": "DUP4"
    },
    "7037": {
      "op": "DUP6"
    },
    "7038": {
      "op": "SUB"
    },
    "7039": {
      "op": "SLT"
    },
    "7040": {
      "op": "ISZERO"
    },
    "7041": {
      "op": "PUSH2",
      "value": "0x1B89"
    },
    "7044": {
      "op": "JUMPI"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7047": {
      "op": "DUP1"
    },
    "7048": {
      "op": "REVERT"
    },
    "7049": {
      "op": "JUMPDEST"
    },
    "7050": {
      "op": "DUP3"
    },
    "7051": {
      "op": "CALLDATALOAD"
    },
    "7052": {
      "op": "SWAP2"
    },
    "7053": {
      "op": "POP"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7056": {
      "op": "DUP4"
    },
    "7057": {
      "op": "ADD"
    },
    "7058": {
      "op": "CALLDATALOAD"
    },
    "7059": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7068": {
      "op": "DUP2"
    },
    "7069": {
      "op": "GT"
    },
    "7070": {
      "op": "ISZERO"
    },
    "7071": {
      "op": "PUSH2",
      "value": "0x1A64"
    },
    "7074": {
      "op": "JUMPI"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7077": {
      "op": "DUP1"
    },
    "7078": {
      "op": "REVERT"
    },
    "7079": {
      "op": "JUMPDEST"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "ISZERO"
    },
    "7082": {
      "op": "ISZERO"
    },
    "7083": {
      "op": "DUP2"
    },
    "7084": {
      "op": "MSTORE"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7089": {
      "op": "DUP3"
    },
    "7090": {
      "op": "ADD"
    },
    "7091": {
      "op": "MSTORE"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7094": {
      "op": "PUSH2",
      "value": "0x1BC2"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7099": {
      "op": "DUP4"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "DUP5"
    },
    "7102": {
      "op": "PUSH2",
      "value": "0x1933"
    },
    "7105": {
      "jump": "i",
      "op": "JUMP"
    },
    "7106": {
      "op": "JUMPDEST"
    },
    "7107": {
      "op": "SWAP5"
    },
    "7108": {
      "op": "SWAP4"
    },
    "7109": {
      "op": "POP"
    },
    "7110": {
      "op": "POP"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "op": "POP"
    },
    "7113": {
      "jump": "o",
      "op": "JUMP"
    },
    "7114": {
      "op": "JUMPDEST"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7117": {
      "op": "DUP1"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7120": {
      "op": "DUP4"
    },
    "7121": {
      "op": "DUP6"
    },
    "7122": {
      "op": "SUB"
    },
    "7123": {
      "op": "SLT"
    },
    "7124": {
      "op": "ISZERO"
    },
    "7125": {
      "op": "PUSH2",
      "value": "0x1BDD"
    },
    "7128": {
      "op": "JUMPI"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7131": {
      "op": "DUP1"
    },
    "7132": {
      "op": "REVERT"
    },
    "7133": {
      "op": "JUMPDEST"
    },
    "7134": {
      "op": "DUP3"
    },
    "7135": {
      "op": "CALLDATALOAD"
    },
    "7136": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7145": {
      "op": "DUP2"
    },
    "7146": {
      "op": "GT"
    },
    "7147": {
      "op": "ISZERO"
    },
    "7148": {
      "op": "PUSH2",
      "value": "0x1BF4"
    },
    "7151": {
      "op": "JUMPI"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7154": {
      "op": "DUP1"
    },
    "7155": {
      "op": "REVERT"
    },
    "7156": {
      "op": "JUMPDEST"
    },
    "7157": {
      "op": "PUSH2",
      "value": "0x1C00"
    },
    "7160": {
      "op": "DUP6"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "DUP7"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "7167": {
      "jump": "i",
      "op": "JUMP"
    },
    "7168": {
      "op": "JUMPDEST"
    },
    "7169": {
      "op": "SWAP3"
    },
    "7170": {
      "op": "POP"
    },
    "7171": {
      "op": "POP"
    },
    "7172": {
      "op": "PUSH2",
      "value": "0x1C0F"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7177": {
      "op": "DUP5"
    },
    "7178": {
      "op": "ADD"
    },
    "7179": {
      "op": "PUSH2",
      "value": "0x18B7"
    },
    "7182": {
      "jump": "i",
      "op": "JUMP"
    },
    "7183": {
      "op": "JUMPDEST"
    },
    "7184": {
      "op": "SWAP1"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "op": "SWAP3"
    },
    "7187": {
      "op": "POP"
    },
    "7188": {
      "op": "SWAP3"
    },
    "7189": {
      "op": "SWAP1"
    },
    "7190": {
      "op": "POP"
    },
    "7191": {
      "jump": "o",
      "op": "JUMP"
    },
    "7192": {
      "op": "JUMPDEST"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7195": {
      "op": "DUP1"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7200": {
      "op": "DUP5"
    },
    "7201": {
      "op": "DUP7"
    },
    "7202": {
      "op": "SUB"
    },
    "7203": {
      "op": "SLT"
    },
    "7204": {
      "op": "ISZERO"
    },
    "7205": {
      "op": "PUSH2",
      "value": "0x1C2D"
    },
    "7208": {
      "op": "JUMPI"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7211": {
      "op": "DUP1"
    },
    "7212": {
      "op": "REVERT"
    },
    "7213": {
      "op": "JUMPDEST"
    },
    "7214": {
      "op": "PUSH2",
      "value": "0x1C36"
    },
    "7217": {
      "op": "DUP5"
    },
    "7218": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "7221": {
      "jump": "i",
      "op": "JUMP"
    },
    "7222": {
      "op": "JUMPDEST"
    },
    "7223": {
      "op": "SWAP3"
    },
    "7224": {
      "op": "POP"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7227": {
      "op": "DUP5"
    },
    "7228": {
      "op": "ADD"
    },
    "7229": {
      "op": "CALLDATALOAD"
    },
    "7230": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7239": {
      "op": "DUP2"
    },
    "7240": {
      "op": "GT"
    },
    "7241": {
      "op": "ISZERO"
    },
    "7242": {
      "op": "PUSH2",
      "value": "0x1C52"
    },
    "7245": {
      "op": "JUMPI"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7248": {
      "op": "DUP1"
    },
    "7249": {
      "op": "REVERT"
    },
    "7250": {
      "op": "JUMPDEST"
    },
    "7251": {
      "op": "PUSH2",
      "value": "0x1C5E"
    },
    "7254": {
      "op": "DUP7"
    },
    "7255": {
      "op": "DUP3"
    },
    "7256": {
      "op": "DUP8"
    },
    "7257": {
      "op": "ADD"
    },
    "7258": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "7261": {
      "jump": "i",
      "op": "JUMP"
    },
    "7262": {
      "op": "JUMPDEST"
    },
    "7263": {
      "op": "SWAP3"
    },
    "7264": {
      "op": "POP"
    },
    "7265": {
      "op": "POP"
    },
    "7266": {
      "op": "PUSH2",
      "value": "0x1C6D"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7271": {
      "op": "DUP6"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "op": "PUSH2",
      "value": "0x18B7"
    },
    "7276": {
      "jump": "i",
      "op": "JUMP"
    },
    "7277": {
      "op": "JUMPDEST"
    },
    "7278": {
      "op": "SWAP1"
    },
    "7279": {
      "op": "POP"
    },
    "7280": {
      "op": "SWAP3"
    },
    "7281": {
      "op": "POP"
    },
    "7282": {
      "op": "SWAP3"
    },
    "7283": {
      "op": "POP"
    },
    "7284": {
      "op": "SWAP3"
    },
    "7285": {
      "jump": "o",
      "op": "JUMP"
    },
    "7286": {
      "op": "JUMPDEST"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7289": {
      "op": "DUP1"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7292": {
      "op": "DUP4"
    },
    "7293": {
      "op": "DUP6"
    },
    "7294": {
      "op": "SUB"
    },
    "7295": {
      "op": "SLT"
    },
    "7296": {
      "op": "ISZERO"
    },
    "7297": {
      "op": "PUSH2",
      "value": "0x1C89"
    },
    "7300": {
      "op": "JUMPI"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7303": {
      "op": "DUP1"
    },
    "7304": {
      "op": "REVERT"
    },
    "7305": {
      "op": "JUMPDEST"
    },
    "7306": {
      "op": "DUP3"
    },
    "7307": {
      "op": "CALLDATALOAD"
    },
    "7308": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7317": {
      "op": "DUP2"
    },
    "7318": {
      "op": "GT"
    },
    "7319": {
      "op": "ISZERO"
    },
    "7320": {
      "op": "PUSH2",
      "value": "0x1CA0"
    },
    "7323": {
      "op": "JUMPI"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7326": {
      "op": "DUP1"
    },
    "7327": {
      "op": "REVERT"
    },
    "7328": {
      "op": "JUMPDEST"
    },
    "7329": {
      "op": "PUSH2",
      "value": "0x1CAC"
    },
    "7332": {
      "op": "DUP6"
    },
    "7333": {
      "op": "DUP3"
    },
    "7334": {
      "op": "DUP7"
    },
    "7335": {
      "op": "ADD"
    },
    "7336": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "7339": {
      "jump": "i",
      "op": "JUMP"
    },
    "7340": {
      "op": "JUMPDEST"
    },
    "7341": {
      "op": "SWAP6"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7344": {
      "op": "SWAP5"
    },
    "7345": {
      "op": "SWAP1"
    },
    "7346": {
      "op": "SWAP5"
    },
    "7347": {
      "op": "ADD"
    },
    "7348": {
      "op": "CALLDATALOAD"
    },
    "7349": {
      "op": "SWAP5"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "op": "POP"
    },
    "7352": {
      "op": "POP"
    },
    "7353": {
      "op": "POP"
    },
    "7354": {
      "jump": "o",
      "op": "JUMP"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7360": {
      "op": "DUP3"
    },
    "7361": {
      "op": "DUP5"
    },
    "7362": {
      "op": "SUB"
    },
    "7363": {
      "op": "SLT"
    },
    "7364": {
      "op": "ISZERO"
    },
    "7365": {
      "op": "PUSH2",
      "value": "0x1CCD"
    },
    "7368": {
      "op": "JUMPI"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7371": {
      "op": "DUP1"
    },
    "7372": {
      "op": "REVERT"
    },
    "7373": {
      "op": "JUMPDEST"
    },
    "7374": {
      "op": "DUP2"
    },
    "7375": {
      "op": "CALLDATALOAD"
    },
    "7376": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7385": {
      "op": "DUP2"
    },
    "7386": {
      "op": "GT"
    },
    "7387": {
      "op": "ISZERO"
    },
    "7388": {
      "op": "PUSH2",
      "value": "0x1CE4"
    },
    "7391": {
      "op": "JUMPI"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7394": {
      "op": "DUP1"
    },
    "7395": {
      "op": "REVERT"
    },
    "7396": {
      "op": "JUMPDEST"
    },
    "7397": {
      "op": "PUSH2",
      "value": "0x1BC2"
    },
    "7400": {
      "op": "DUP5"
    },
    "7401": {
      "op": "DUP3"
    },
    "7402": {
      "op": "DUP6"
    },
    "7403": {
      "op": "ADD"
    },
    "7404": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "7407": {
      "jump": "i",
      "op": "JUMP"
    },
    "7408": {
      "op": "JUMPDEST"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7411": {
      "op": "DUP2"
    },
    "7412": {
      "op": "DUP2"
    },
    "7413": {
      "op": "SHR"
    },
    "7414": {
      "op": "SWAP1"
    },
    "7415": {
      "op": "DUP3"
    },
    "7416": {
      "op": "AND"
    },
    "7417": {
      "op": "DUP1"
    },
    "7418": {
      "op": "PUSH2",
      "value": "0x1D04"
    },
    "7421": {
      "op": "JUMPI"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7424": {
      "op": "DUP3"
    },
    "7425": {
      "op": "AND"
    },
    "7426": {
      "op": "SWAP2"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "op": "JUMPDEST"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7431": {
      "op": "DUP3"
    },
    "7432": {
      "op": "LT"
    },
    "7433": {
      "op": "DUP2"
    },
    "7434": {
      "op": "EQ"
    },
    "7435": {
      "op": "ISZERO"
    },
    "7436": {
      "op": "PUSH2",
      "value": "0x1D25"
    },
    "7439": {
      "op": "JUMPI"
    },
    "7440": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7455": {
      "op": "MSTORE"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7460": {
      "op": "REVERT"
    },
    "7461": {
      "op": "JUMPDEST"
    },
    "7462": {
      "op": "POP"
    },
    "7463": {
      "op": "SWAP2"
    },
    "7464": {
      "op": "SWAP1"
    },
    "7465": {
      "op": "POP"
    },
    "7466": {
      "jump": "o",
      "op": "JUMP"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7470": {
      "op": "DUP3"
    },
    "7471": {
      "op": "MLOAD"
    },
    "7472": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7475": {
      "op": "DUP2"
    },
    "7476": {
      "op": "DUP5"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7479": {
      "op": "DUP8"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1907"
    },
    "7484": {
      "jump": "i",
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "SWAP2"
    },
    "7487": {
      "op": "SWAP1"
    },
    "7488": {
      "op": "SWAP2"
    },
    "7489": {
      "op": "ADD"
    },
    "7490": {
      "op": "SWAP3"
    },
    "7491": {
      "op": "SWAP2"
    },
    "7492": {
      "op": "POP"
    },
    "7493": {
      "op": "POP"
    },
    "7494": {
      "jump": "o",
      "op": "JUMP"
    },
    "7495": {
      "op": "JUMPDEST"
    },
    "7496": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7503": {
      "op": "SHL"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7506": {
      "op": "MSTORE"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7511": {
      "op": "MSTORE"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7516": {
      "op": "REVERT"
    },
    "7517": {
      "op": "JUMPDEST"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7520": {
      "op": "DUP2"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7523": {
      "op": "NOT"
    },
    "7524": {
      "op": "DIV"
    },
    "7525": {
      "op": "DUP4"
    },
    "7526": {
      "op": "GT"
    },
    "7527": {
      "op": "DUP3"
    },
    "7528": {
      "op": "ISZERO"
    },
    "7529": {
      "op": "ISZERO"
    },
    "7530": {
      "op": "AND"
    },
    "7531": {
      "op": "ISZERO"
    },
    "7532": {
      "op": "PUSH2",
      "value": "0x1D77"
    },
    "7535": {
      "op": "JUMPI"
    },
    "7536": {
      "op": "PUSH2",
      "value": "0x1D77"
    },
    "7539": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7542": {
      "jump": "i",
      "op": "JUMP"
    },
    "7543": {
      "op": "JUMPDEST"
    },
    "7544": {
      "op": "POP"
    },
    "7545": {
      "op": "MUL"
    },
    "7546": {
      "op": "SWAP1"
    },
    "7547": {
      "jump": "o",
      "op": "JUMP"
    },
    "7548": {
      "op": "JUMPDEST"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7551": {
      "op": "DUP3"
    },
    "7552": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7555": {
      "op": "JUMPI"
    },
    "7556": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7563": {
      "op": "SHL"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7566": {
      "op": "MSTORE"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7571": {
      "op": "MSTORE"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7576": {
      "op": "REVERT"
    },
    "7577": {
      "op": "JUMPDEST"
    },
    "7578": {
      "op": "POP"
    },
    "7579": {
      "op": "DIV"
    },
    "7580": {
      "op": "SWAP1"
    },
    "7581": {
      "jump": "o",
      "op": "JUMP"
    },
    "7582": {
      "op": "JUMPDEST"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7587": {
      "op": "DUP3"
    },
    "7588": {
      "op": "DUP5"
    },
    "7589": {
      "op": "SUB"
    },
    "7590": {
      "op": "SLT"
    },
    "7591": {
      "op": "ISZERO"
    },
    "7592": {
      "op": "PUSH2",
      "value": "0x1DB0"
    },
    "7595": {
      "op": "JUMPI"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7598": {
      "op": "DUP1"
    },
    "7599": {
      "op": "REVERT"
    },
    "7600": {
      "op": "JUMPDEST"
    },
    "7601": {
      "op": "DUP2"
    },
    "7602": {
      "op": "MLOAD"
    },
    "7603": {
      "op": "DUP1"
    },
    "7604": {
      "op": "ISZERO"
    },
    "7605": {
      "op": "ISZERO"
    },
    "7606": {
      "op": "DUP2"
    },
    "7607": {
      "op": "EQ"
    },
    "7608": {
      "op": "PUSH2",
      "value": "0xC06"
    },
    "7611": {
      "op": "JUMPI"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7614": {
      "op": "DUP1"
    },
    "7615": {
      "op": "REVERT"
    },
    "7616": {
      "op": "JUMPDEST"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7625": {
      "op": "SHL"
    },
    "7626": {
      "op": "SUB"
    },
    "7627": {
      "op": "DUP1"
    },
    "7628": {
      "op": "DUP4"
    },
    "7629": {
      "op": "AND"
    },
    "7630": {
      "op": "DUP2"
    },
    "7631": {
      "op": "DUP2"
    },
    "7632": {
      "op": "EQ"
    },
    "7633": {
      "op": "ISZERO"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x1DDD"
    },
    "7637": {
      "op": "JUMPI"
    },
    "7638": {
      "op": "PUSH2",
      "value": "0x1DDD"
    },
    "7641": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7644": {
      "jump": "i",
      "op": "JUMP"
    },
    "7645": {
      "op": "JUMPDEST"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "ADD"
    },
    "7649": {
      "op": "SWAP4"
    },
    "7650": {
      "op": "SWAP3"
    },
    "7651": {
      "op": "POP"
    },
    "7652": {
      "op": "POP"
    },
    "7653": {
      "op": "POP"
    },
    "7654": {
      "jump": "o",
      "op": "JUMP"
    },
    "7655": {
      "op": "JUMPDEST"
    },
    "7656": {
      "op": "DUP1"
    },
    "7657": {
      "op": "MLOAD"
    },
    "7658": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7669": {
      "op": "DUP2"
    },
    "7670": {
      "op": "AND"
    },
    "7671": {
      "op": "DUP2"
    },
    "7672": {
      "op": "EQ"
    },
    "7673": {
      "op": "PUSH2",
      "value": "0x18CE"
    },
    "7676": {
      "op": "JUMPI"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7679": {
      "op": "DUP1"
    },
    "7680": {
      "op": "REVERT"
    },
    "7681": {
      "op": "JUMPDEST"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7684": {
      "op": "DUP1"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7687": {
      "op": "DUP1"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7692": {
      "op": "DUP7"
    },
    "7693": {
      "op": "DUP9"
    },
    "7694": {
      "op": "SUB"
    },
    "7695": {
      "op": "SLT"
    },
    "7696": {
      "op": "ISZERO"
    },
    "7697": {
      "op": "PUSH2",
      "value": "0x1E19"
    },
    "7700": {
      "op": "JUMPI"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7703": {
      "op": "DUP1"
    },
    "7704": {
      "op": "REVERT"
    },
    "7705": {
      "op": "JUMPDEST"
    },
    "7706": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "7709": {
      "op": "DUP7"
    },
    "7710": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "7713": {
      "jump": "i",
      "op": "JUMP"
    },
    "7714": {
      "op": "JUMPDEST"
    },
    "7715": {
      "op": "SWAP5"
    },
    "7716": {
      "op": "POP"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7719": {
      "op": "DUP7"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "MLOAD"
    },
    "7722": {
      "op": "SWAP4"
    },
    "7723": {
      "op": "POP"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7726": {
      "op": "DUP7"
    },
    "7727": {
      "op": "ADD"
    },
    "7728": {
      "op": "MLOAD"
    },
    "7729": {
      "op": "SWAP3"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7733": {
      "op": "DUP7"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "MLOAD"
    },
    "7736": {
      "op": "SWAP2"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "op": "PUSH2",
      "value": "0x1E45"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7743": {
      "op": "DUP8"
    },
    "7744": {
      "op": "ADD"
    },
    "7745": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "7748": {
      "jump": "i",
      "op": "JUMP"
    },
    "7749": {
      "op": "JUMPDEST"
    },
    "7750": {
      "op": "SWAP1"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "SWAP3"
    },
    "7753": {
      "op": "SWAP6"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "op": "SWAP3"
    },
    "7756": {
      "op": "SWAP6"
    },
    "7757": {
      "op": "SWAP1"
    },
    "7758": {
      "op": "SWAP4"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "jump": "o",
      "op": "JUMP"
    },
    "7761": {
      "op": "JUMPDEST"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7764": {
      "op": "DUP3"
    },
    "7765": {
      "op": "NOT"
    },
    "7766": {
      "op": "DUP3"
    },
    "7767": {
      "op": "GT"
    },
    "7768": {
      "op": "ISZERO"
    },
    "7769": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7772": {
      "op": "JUMPI"
    },
    "7773": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7776": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7779": {
      "jump": "i",
      "op": "JUMP"
    },
    "7780": {
      "op": "JUMPDEST"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "op": "SWAP1"
    },
    "7784": {
      "jump": "o",
      "op": "JUMP"
    },
    "7785": {
      "op": "JUMPDEST"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7794": {
      "op": "SHL"
    },
    "7795": {
      "op": "SUB"
    },
    "7796": {
      "op": "DUP4"
    },
    "7797": {
      "op": "DUP2"
    },
    "7798": {
      "op": "AND"
    },
    "7799": {
      "op": "SWAP1"
    },
    "7800": {
      "op": "DUP4"
    },
    "7801": {
      "op": "AND"
    },
    "7802": {
      "op": "DUP2"
    },
    "7803": {
      "op": "DUP2"
    },
    "7804": {
      "op": "LT"
    },
    "7805": {
      "op": "ISZERO"
    },
    "7806": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "7809": {
      "op": "JUMPI"
    },
    "7810": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "7813": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7816": {
      "jump": "i",
      "op": "JUMP"
    },
    "7817": {
      "op": "JUMPDEST"
    },
    "7818": {
      "op": "SUB"
    },
    "7819": {
      "op": "SWAP4"
    },
    "7820": {
      "op": "SWAP3"
    },
    "7821": {
      "op": "POP"
    },
    "7822": {
      "op": "POP"
    },
    "7823": {
      "op": "POP"
    },
    "7824": {
      "jump": "o",
      "op": "JUMP"
    },
    "7825": {
      "op": "JUMPDEST"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7828": {
      "op": "DUP1"
    },
    "7829": {
      "op": "DUP3"
    },
    "7830": {
      "op": "MSTORE"
    },
    "7831": {
      "op": "DUP2"
    },
    "7832": {
      "op": "DUP2"
    },
    "7833": {
      "op": "ADD"
    },
    "7834": {
      "op": "MSTORE"
    },
    "7835": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7870": {
      "op": "DUP3"
    },
    "7871": {
      "op": "ADD"
    },
    "7872": {
      "op": "MSTORE"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7875": {
      "op": "ADD"
    },
    "7876": {
      "op": "SWAP1"
    },
    "7877": {
      "jump": "o",
      "op": "JUMP"
    },
    "7878": {
      "op": "JUMPDEST"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7883": {
      "op": "DUP3"
    },
    "7884": {
      "op": "DUP5"
    },
    "7885": {
      "op": "SUB"
    },
    "7886": {
      "op": "SLT"
    },
    "7887": {
      "op": "ISZERO"
    },
    "7888": {
      "op": "PUSH2",
      "value": "0x1ED8"
    },
    "7891": {
      "op": "JUMPI"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7894": {
      "op": "DUP1"
    },
    "7895": {
      "op": "REVERT"
    },
    "7896": {
      "op": "JUMPDEST"
    },
    "7897": {
      "op": "POP"
    },
    "7898": {
      "op": "MLOAD"
    },
    "7899": {
      "op": "SWAP2"
    },
    "7900": {
      "op": "SWAP1"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "jump": "o",
      "op": "JUMP"
    },
    "7903": {
      "op": "JUMPDEST"
    },
    "7904": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7911": {
      "op": "SHL"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7914": {
      "op": "MSTORE"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7919": {
      "op": "MSTORE"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7924": {
      "op": "REVERT"
    },
    "7925": {
      "op": "JUMPDEST"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7928": {
      "op": "DUP1"
    },
    "7929": {
      "op": "DUP4"
    },
    "7930": {
      "op": "SLOAD"
    },
    "7931": {
      "op": "DUP2"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7934": {
      "op": "DUP3"
    },
    "7935": {
      "op": "DUP2"
    },
    "7936": {
      "op": "SHR"
    },
    "7937": {
      "op": "SWAP2"
    },
    "7938": {
      "op": "POP"
    },
    "7939": {
      "op": "DUP1"
    },
    "7940": {
      "op": "DUP4"
    },
    "7941": {
      "op": "AND"
    },
    "7942": {
      "op": "DUP1"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x1F11"
    },
    "7946": {
      "op": "JUMPI"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7949": {
      "op": "DUP4"
    },
    "7950": {
      "op": "AND"
    },
    "7951": {
      "op": "SWAP3"
    },
    "7952": {
      "op": "POP"
    },
    "7953": {
      "op": "JUMPDEST"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7956": {
      "op": "DUP1"
    },
    "7957": {
      "op": "DUP5"
    },
    "7958": {
      "op": "LT"
    },
    "7959": {
      "op": "DUP3"
    },
    "7960": {
      "op": "EQ"
    },
    "7961": {
      "op": "ISZERO"
    },
    "7962": {
      "op": "PUSH2",
      "value": "0x1F31"
    },
    "7965": {
      "op": "JUMPI"
    },
    "7966": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7973": {
      "op": "SHL"
    },
    "7974": {
      "op": "DUP7"
    },
    "7975": {
      "op": "MSTORE"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7980": {
      "op": "MSTORE"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7983": {
      "op": "DUP7"
    },
    "7984": {
      "op": "REVERT"
    },
    "7985": {
      "op": "JUMPDEST"
    },
    "7986": {
      "op": "DUP2"
    },
    "7987": {
      "op": "DUP1"
    },
    "7988": {
      "op": "ISZERO"
    },
    "7989": {
      "op": "PUSH2",
      "value": "0x1F45"
    },
    "7992": {
      "op": "JUMPI"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7995": {
      "op": "DUP2"
    },
    "7996": {
      "op": "EQ"
    },
    "7997": {
      "op": "PUSH2",
      "value": "0x1F56"
    },
    "8000": {
      "op": "JUMPI"
    },
    "8001": {
      "op": "PUSH2",
      "value": "0x1F83"
    },
    "8004": {
      "op": "JUMP"
    },
    "8005": {
      "op": "JUMPDEST"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8008": {
      "op": "NOT"
    },
    "8009": {
      "op": "DUP7"
    },
    "8010": {
      "op": "AND"
    },
    "8011": {
      "op": "DUP10"
    },
    "8012": {
      "op": "MSTORE"
    },
    "8013": {
      "op": "DUP5"
    },
    "8014": {
      "op": "DUP10"
    },
    "8015": {
      "op": "ADD"
    },
    "8016": {
      "op": "SWAP7"
    },
    "8017": {
      "op": "POP"
    },
    "8018": {
      "op": "PUSH2",
      "value": "0x1F83"
    },
    "8021": {
      "op": "JUMP"
    },
    "8022": {
      "op": "JUMPDEST"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8025": {
      "op": "DUP11"
    },
    "8026": {
      "op": "DUP2"
    },
    "8027": {
      "op": "MSTORE"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8030": {
      "op": "SWAP1"
    },
    "8031": {
      "op": "KECCAK256"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8034": {
      "op": "JUMPDEST"
    },
    "8035": {
      "op": "DUP7"
    },
    "8036": {
      "op": "DUP2"
    },
    "8037": {
      "op": "LT"
    },
    "8038": {
      "op": "ISZERO"
    },
    "8039": {
      "op": "PUSH2",
      "value": "0x1F7B"
    },
    "8042": {
      "op": "JUMPI"
    },
    "8043": {
      "op": "DUP2"
    },
    "8044": {
      "op": "SLOAD"
    },
    "8045": {
      "op": "DUP12"
    },
    "8046": {
      "op": "DUP3"
    },
    "8047": {
      "op": "ADD"
    },
    "8048": {
      "op": "MSTORE"
    },
    "8049": {
      "op": "SWAP1"
    },
    "8050": {
      "op": "DUP6"
    },
    "8051": {
      "op": "ADD"
    },
    "8052": {
      "op": "SWAP1"
    },
    "8053": {
      "op": "DUP4"
    },
    "8054": {
      "op": "ADD"
    },
    "8055": {
      "op": "PUSH2",
      "value": "0x1F62"
    },
    "8058": {
      "op": "JUMP"
    },
    "8059": {
      "op": "JUMPDEST"
    },
    "8060": {
      "op": "POP"
    },
    "8061": {
      "op": "POP"
    },
    "8062": {
      "op": "DUP5"
    },
    "8063": {
      "op": "DUP10"
    },
    "8064": {
      "op": "ADD"
    },
    "8065": {
      "op": "SWAP7"
    },
    "8066": {
      "op": "POP"
    },
    "8067": {
      "op": "JUMPDEST"
    },
    "8068": {
      "op": "POP"
    },
    "8069": {
      "op": "SWAP5"
    },
    "8070": {
      "op": "SWAP9"
    },
    "8071": {
      "op": "SWAP8"
    },
    "8072": {
      "op": "POP"
    },
    "8073": {
      "op": "POP"
    },
    "8074": {
      "op": "POP"
    },
    "8075": {
      "op": "POP"
    },
    "8076": {
      "op": "POP"
    },
    "8077": {
      "op": "POP"
    },
    "8078": {
      "op": "POP"
    },
    "8079": {
      "op": "POP"
    },
    "8080": {
      "jump": "o",
      "op": "JUMP"
    },
    "8081": {
      "op": "JUMPDEST"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8086": {
      "op": "NOT"
    },
    "8087": {
      "op": "DUP3"
    },
    "8088": {
      "op": "EQ"
    },
    "8089": {
      "op": "ISZERO"
    },
    "8090": {
      "op": "PUSH2",
      "value": "0x1FA5"
    },
    "8093": {
      "op": "JUMPI"
    },
    "8094": {
      "op": "PUSH2",
      "value": "0x1FA5"
    },
    "8097": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "8100": {
      "jump": "i",
      "op": "JUMP"
    },
    "8101": {
      "op": "JUMPDEST"
    },
    "8102": {
      "op": "POP"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8105": {
      "op": "ADD"
    },
    "8106": {
      "op": "SWAP1"
    },
    "8107": {
      "jump": "o",
      "op": "JUMP"
    },
    "8108": {
      "op": "JUMPDEST"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8113": {
      "op": "DUP3"
    },
    "8114": {
      "op": "AND"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8117": {
      "op": "DUP2"
    },
    "8118": {
      "op": "EQ"
    },
    "8119": {
      "op": "ISZERO"
    },
    "8120": {
      "op": "PUSH2",
      "value": "0x1FC3"
    },
    "8123": {
      "op": "JUMPI"
    },
    "8124": {
      "op": "PUSH2",
      "value": "0x1FC3"
    },
    "8127": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "8130": {
      "jump": "i",
      "op": "JUMP"
    },
    "8131": {
      "op": "JUMPDEST"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8134": {
      "op": "ADD"
    },
    "8135": {
      "op": "SWAP3"
    },
    "8136": {
      "op": "SWAP2"
    },
    "8137": {
      "op": "POP"
    },
    "8138": {
      "op": "POP"
    },
    "8139": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "140ce64967bd1276bc45c862d9aa3c28778f834c",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/DataTypes.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/ILendingPool.sol\";\nimport \"../interfaces/TransferHelper.sol\";\nimport \"../interfaces/IMoonSquares.sol\";\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract DailyRocket is Ownable, KeeperCompatibleInterface {\n\n    ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(\n        address(0x88757f2f99175387aB4C6a4b3067c77A695b0349)\n    );  \n    ILendingPool lendingPool = ILendingPool(provider.getLendingPool());\n    \n    IMoonSquares public moonSquare;\n\n    uint128 public dayCount;//Kepps track of the days\n\n    string[] public predictableAssets;//all assets that a user can predict\n    address[] assetPriceAggregators;\n\n    mapping(string => bool) public activeAsset;\n\n    mapping(uint256 => mapping(string => int256)) public dayAssetClosePrice; //Closing Price per asset \n\n    mapping(uint256 => uint256) dayCloseTime; //Closing Time per asset\n    \n    address Dai = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n\n    uint256 public contractStartTime; //The contract should start at 0000.00 hours\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetTotalAmount;\n\n    mapping(uint256 => mapping(string => uint256)) public dayAssetNoOfWinners;\n    \n    mapping(uint256 => mapping(string => int256[])) public dayAssetPrediction;\n\n    mapping(uint256 => mapping(string => address[])) public dayAssetPredictors;\n\n    event Predicted(address indexed _placer, int256 _prediction);\n    \n    struct Charity {\n        bytes8 name;\n        bytes32 link; //sends people to the charity's official site\n    }\n    struct Prediction {\n        int256 prediction;\n        uint256 time;\n        bool isWinner;\n    }\n    \n    mapping (address => Charity) public presentCharities;\n\n    mapping(uint128 => mapping(string => address[])) public dailyAssetWinners;\n\n    //user and their prediction\n    mapping(uint128 => mapping(string => mapping(address => Prediction))) public dayAssetUserPrediction;\n\n    constructor(\n        //address _dai,\n        IMoonSquares _moonsqr\n        )\n    {\n        //AcceptedTokens.push(_dai);\n        moonSquare = _moonsqr;\n        contractStartTime = block.timestamp;\n        dayCount = 1;\n        dayCloseTime[dayCount] = contractStartTime + 86400 seconds;//adds a day to the start time. to change to an input later.\n    }//instantiate the token addresses upon deployment\n\n\n    function setNewClosingPrice() internal {\n        for (uint256 i = 0; i < assetPriceAggregators.length; i++){\n            dayAssetClosePrice[dayCount][predictableAssets[i]] = getPrice(i);\n        }\n    }\n    \n    function addAssetAndAgg(string memory _asset, address _aggregator) public onlyOwner {\n        predictableAssets.push(_asset);\n        assetPriceAggregators.push(_aggregator);\n        activeAsset[_asset] = true;\n    }\n\n    function predictClosePrice(\n        string memory _asset, \n        int _prediction\n    ) public\n    {   \n        require(activeAsset[_asset] == true);\n        if (dayCount > 1) {\n            require(getTime() <= dayCloseTime[dayCount -1] + 64800 seconds);//After this time, one cannot\n        }\n        uint256 amount = 10000000000000000000;//the amount we set for the daily close\n    \n        require(IERC20(Dai).allowance(msg.sender, address(this)) >= uint(amount));\n        IERC20(Dai).transferFrom(msg.sender, address(this), uint(amount));\n        \n        dayAssetTotalAmount[dayCount][_asset] += amount;\n        //Updates The prediction mapping\n        dayAssetUserPrediction[dayCount][_asset][msg.sender] = Prediction(\n            _prediction,\n            getTime(),\n            false\n        );\n        //adds to the list of predictions\n        dayAssetPrediction[dayCount][_asset].push(_prediction);\n        //add the sender to the predictors array\n        dayAssetPredictors[dayCount][_asset].push(msg.sender);\n\n        emit Predicted(msg.sender, _prediction);\n    }\n\n    function setNumberOfWinners() private {\n        uint128 day = dayCount;\n        for (uint8 i = 0; i < predictableAssets.length; i++) {\n            require(\n                dayAssetPrediction[day][predictableAssets[i]].length\n                ==\n                dayAssetPredictors[day][predictableAssets[i]].length\n            );\n            for (uint8 p = 0; p < dayAssetPrediction[day][predictableAssets[i]].length; p++) {\n                require(dayAssetPrediction[day][predictableAssets[i]][p] == dayAssetClosePrice[day][predictableAssets[i]]);\n                dailyAssetWinners[day][predictableAssets[i]].push(dayAssetPredictors[day][predictableAssets[i]][p]);\n                dayAssetNoOfWinners[day][predictableAssets[i]] +=1;\n\n                moonSquare.addToWinners(dayAssetPredictors[day][predictableAssets[i]][p]);\n            }\n        }\n    }\n\n\n    function getTime() public view returns(uint){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x6135b13325bfC4B00278B4abC5e20bbce2D6580e);\n        (,,,uint answer,) = priceFeed.latestRoundData();\n         return uint(answer);\n    }\n\n    function getPrice(uint256 _aggindex) public view returns(int){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(assetPriceAggregators[_aggindex]);\n        (,int answer,,,) = priceFeed.latestRoundData();\n         return int(answer);\n    }\n\n    function claimWinnings(uint128 _day, string memory _asset) public {\n        //logic to see if the person had a winning prediction\n        require(dayAssetUserPrediction[_day][_asset][msg.sender].prediction == dayAssetClosePrice[_day][_asset]);\n        uint256 winners = dayAssetNoOfWinners[_day][_asset];\n        dayAssetUserPrediction[_day][_asset][msg.sender].isWinner = true;\n        IERC20(Dai).transfer(\n            msg.sender, \n            ((dayAssetTotalAmount[_day][_asset]) * 90/100)/winners\n        );\n        \n    }\n\n    function isAwinner(\n        uint128 _day,\n        string memory _asset,\n        address checked\n    ) public view returns(bool){\n        if(dayAssetClosePrice[_day][_asset] == 0) {\n            return true;\n        }else {\n            require(\n                dayAssetUserPrediction[_day][_asset][checked].prediction\n                ==\n                dayAssetClosePrice[_day][_asset]\n            );\n            return true;\n        }\n    }\n    \n    function checkUpkeep(bytes calldata checkData) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        if (dayCloseTime[dayCount] + 86400 seconds == getTime()){\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint256(0)));\n        }\n        if (getTime() > dayCloseTime[dayCount -1] + 64800 seconds) {\n            upkeepNeeded = true;\n            return (true, abi.encodePacked(uint(1)));\n        }\n        performData = checkData;\n        \n    }\n    \n    function performUpkeep(bytes calldata performData) external override {\n         uint256 decodedValue = abi.decode(performData, (uint256));\n        if (decodedValue == 0) {\n            setNewClosingPrice();\n            setNumberOfWinners();\n            dayCount++;\n        }\n        if (decodedValue == 1) {\n            sendToIba();\n        }\n    }\n    \n    //sends non winnings to an interest bearibg account \n    function sendToIba() private {\n        require(getTime() > dayCloseTime[dayCount -1] + 64800 seconds);\n        for (uint128 i = 0; i < predictableAssets.length; i++) {\n            uint amount = ((dayAssetTotalAmount[dayCount][predictableAssets[i]]) * 10/100);\n            //IERC20(Dai).approve(IBA, amount);\n            IERC20(Dai).approve(address(lendingPool), amount);\n            lendingPool.deposit(\n                Dai,\n                uint(amount),\n                address(moonSquare),\n                0\n            );\n        }\n    }\n\n\n    \n}",
  "sourceMap": "551:7519:4:-:0;;;;;617:137;;;-1:-1:-1;;;;;;617:137:4;705:42;617:137;;;;;;-1:-1:-1;;;802:25:4;;705:42;802:23;;:25;;;;;551:7519;705:42;802:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;762:66;;;-1:-1:-1;;;;;762:66:4;;;;-1:-1:-1;;;;;;762:66:4;;;;;;1274:56;;;;;;1288:42;1274:56;;;2317:351;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:1;867:9:0;:23::i;:::-;2445:10:4;:21;;-1:-1:-1;;;;;;2445:21:4;-1:-1:-1;;;;;2445:21:4;;;;;2496:15;2476:17;:35;;;2521:8;:12;;-1:-1:-1;;;;;;2521:12:4;-1:-1:-1;2521:12:4;;;2568:33;;2588:13;2568:33;:::i;:::-;2556:8;;-1:-1:-1;;;;;2556:8:4;2543:22;;;;:12;:22;;;;;:58;-1:-1:-1;551:7519:4;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:11:o;683:225::-;723:3;754:1;750:6;747:1;744:13;741:136;;;799:10;794:3;790:20;787:1;780:31;834:4;831:1;824:15;862:4;859:1;852:15;741:136;-1:-1:-1;893:9:11;;683:225::o;:::-;551:7519:4;;;;;;",
  "sourcePath": "contracts/DailyRocket.sol",
  "type": "contract"
}